

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 29 11:13:07 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,space=0,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,space=0,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42     0000                     
    43                           ; Generated 12/10/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F883 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0004                     fsr             equ	4
    78     0004                     fsr0            equ	4
    79     0000                     indf            equ	0
    80     0000                     indf0           equ	0
    81     0002                     pc              equ	2
    82     0002                     pcl             equ	2
    83     000A                     pclath          equ	10
    84     0003                     status          equ	3
    85     0000                     INDF            equ	0	;# 
    86     0001                     TMR0            equ	1	;# 
    87     0002                     PCL             equ	2	;# 
    88     0003                     STATUS          equ	3	;# 
    89     0004                     FSR             equ	4	;# 
    90     0005                     PORTA           equ	5	;# 
    91     0006                     PORTB           equ	6	;# 
    92     0007                     PORTC           equ	7	;# 
    93     0009                     PORTE           equ	9	;# 
    94     000A                     PCLATH          equ	10	;# 
    95     000B                     INTCON          equ	11	;# 
    96     000C                     PIR1            equ	12	;# 
    97     000D                     PIR2            equ	13	;# 
    98     000E                     TMR1            equ	14	;# 
    99     000E                     TMR1L           equ	14	;# 
   100     000F                     TMR1H           equ	15	;# 
   101     0010                     T1CON           equ	16	;# 
   102     0011                     TMR2            equ	17	;# 
   103     0012                     T2CON           equ	18	;# 
   104     0013                     SSPBUF          equ	19	;# 
   105     0014                     SSPCON          equ	20	;# 
   106     0015                     CCPR1           equ	21	;# 
   107     0015                     CCPR1L          equ	21	;# 
   108     0016                     CCPR1H          equ	22	;# 
   109     0017                     CCP1CON         equ	23	;# 
   110     0018                     RCSTA           equ	24	;# 
   111     0019                     TXREG           equ	25	;# 
   112     001A                     RCREG           equ	26	;# 
   113     001B                     CCPR2           equ	27	;# 
   114     001B                     CCPR2L          equ	27	;# 
   115     001C                     CCPR2H          equ	28	;# 
   116     001D                     CCP2CON         equ	29	;# 
   117     001E                     ADRESH          equ	30	;# 
   118     001F                     ADCON0          equ	31	;# 
   119     0081                     OPTION_REG      equ	129	;# 
   120     0085                     TRISA           equ	133	;# 
   121     0086                     TRISB           equ	134	;# 
   122     0087                     TRISC           equ	135	;# 
   123     0089                     TRISE           equ	137	;# 
   124     008C                     PIE1            equ	140	;# 
   125     008D                     PIE2            equ	141	;# 
   126     008E                     PCON            equ	142	;# 
   127     008F                     OSCCON          equ	143	;# 
   128     0090                     OSCTUNE         equ	144	;# 
   129     0091                     SSPCON2         equ	145	;# 
   130     0092                     PR2             equ	146	;# 
   131     0093                     SSPADD          equ	147	;# 
   132     0093                     SSPMSK          equ	147	;# 
   133     0093                     MSK             equ	147	;# 
   134     0094                     SSPSTAT         equ	148	;# 
   135     0095                     WPUB            equ	149	;# 
   136     0096                     IOCB            equ	150	;# 
   137     0097                     VRCON           equ	151	;# 
   138     0098                     TXSTA           equ	152	;# 
   139     0099                     SPBRG           equ	153	;# 
   140     009A                     SPBRGH          equ	154	;# 
   141     009B                     PWM1CON         equ	155	;# 
   142     009C                     ECCPAS          equ	156	;# 
   143     009D                     PSTRCON         equ	157	;# 
   144     009E                     ADRESL          equ	158	;# 
   145     009F                     ADCON1          equ	159	;# 
   146     0105                     WDTCON          equ	261	;# 
   147     0107                     CM1CON0         equ	263	;# 
   148     0108                     CM2CON0         equ	264	;# 
   149     0109                     CM2CON1         equ	265	;# 
   150     010C                     EEDATA          equ	268	;# 
   151     010C                     EEDAT           equ	268	;# 
   152     010D                     EEADR           equ	269	;# 
   153     010E                     EEDATH          equ	270	;# 
   154     010F                     EEADRH          equ	271	;# 
   155     0185                     SRCON           equ	389	;# 
   156     0187                     BAUDCTL         equ	391	;# 
   157     0188                     ANSEL           equ	392	;# 
   158     0189                     ANSELH          equ	393	;# 
   159     018C                     EECON1          equ	396	;# 
   160     018D                     EECON2          equ	397	;# 
   161     0000                     INDF            equ	0	;# 
   162     0001                     TMR0            equ	1	;# 
   163     0002                     PCL             equ	2	;# 
   164     0003                     STATUS          equ	3	;# 
   165     0004                     FSR             equ	4	;# 
   166     0005                     PORTA           equ	5	;# 
   167     0006                     PORTB           equ	6	;# 
   168     0007                     PORTC           equ	7	;# 
   169     0009                     PORTE           equ	9	;# 
   170     000A                     PCLATH          equ	10	;# 
   171     000B                     INTCON          equ	11	;# 
   172     000C                     PIR1            equ	12	;# 
   173     000D                     PIR2            equ	13	;# 
   174     000E                     TMR1            equ	14	;# 
   175     000E                     TMR1L           equ	14	;# 
   176     000F                     TMR1H           equ	15	;# 
   177     0010                     T1CON           equ	16	;# 
   178     0011                     TMR2            equ	17	;# 
   179     0012                     T2CON           equ	18	;# 
   180     0013                     SSPBUF          equ	19	;# 
   181     0014                     SSPCON          equ	20	;# 
   182     0015                     CCPR1           equ	21	;# 
   183     0015                     CCPR1L          equ	21	;# 
   184     0016                     CCPR1H          equ	22	;# 
   185     0017                     CCP1CON         equ	23	;# 
   186     0018                     RCSTA           equ	24	;# 
   187     0019                     TXREG           equ	25	;# 
   188     001A                     RCREG           equ	26	;# 
   189     001B                     CCPR2           equ	27	;# 
   190     001B                     CCPR2L          equ	27	;# 
   191     001C                     CCPR2H          equ	28	;# 
   192     001D                     CCP2CON         equ	29	;# 
   193     001E                     ADRESH          equ	30	;# 
   194     001F                     ADCON0          equ	31	;# 
   195     0081                     OPTION_REG      equ	129	;# 
   196     0085                     TRISA           equ	133	;# 
   197     0086                     TRISB           equ	134	;# 
   198     0087                     TRISC           equ	135	;# 
   199     0089                     TRISE           equ	137	;# 
   200     008C                     PIE1            equ	140	;# 
   201     008D                     PIE2            equ	141	;# 
   202     008E                     PCON            equ	142	;# 
   203     008F                     OSCCON          equ	143	;# 
   204     0090                     OSCTUNE         equ	144	;# 
   205     0091                     SSPCON2         equ	145	;# 
   206     0092                     PR2             equ	146	;# 
   207     0093                     SSPADD          equ	147	;# 
   208     0093                     SSPMSK          equ	147	;# 
   209     0093                     MSK             equ	147	;# 
   210     0094                     SSPSTAT         equ	148	;# 
   211     0095                     WPUB            equ	149	;# 
   212     0096                     IOCB            equ	150	;# 
   213     0097                     VRCON           equ	151	;# 
   214     0098                     TXSTA           equ	152	;# 
   215     0099                     SPBRG           equ	153	;# 
   216     009A                     SPBRGH          equ	154	;# 
   217     009B                     PWM1CON         equ	155	;# 
   218     009C                     ECCPAS          equ	156	;# 
   219     009D                     PSTRCON         equ	157	;# 
   220     009E                     ADRESL          equ	158	;# 
   221     009F                     ADCON1          equ	159	;# 
   222     0105                     WDTCON          equ	261	;# 
   223     0107                     CM1CON0         equ	263	;# 
   224     0108                     CM2CON0         equ	264	;# 
   225     0109                     CM2CON1         equ	265	;# 
   226     010C                     EEDATA          equ	268	;# 
   227     010C                     EEDAT           equ	268	;# 
   228     010D                     EEADR           equ	269	;# 
   229     010E                     EEDATH          equ	270	;# 
   230     010F                     EEADRH          equ	271	;# 
   231     0185                     SRCON           equ	389	;# 
   232     0187                     BAUDCTL         equ	391	;# 
   233     0188                     ANSEL           equ	392	;# 
   234     0189                     ANSELH          equ	393	;# 
   235     018C                     EECON1          equ	396	;# 
   236     018D                     EECON2          equ	397	;# 
   237                           
   238                           	psect	idataBANK0
   239     07FE                     __pidataBANK0:
   240                           
   241                           ;initializer for _maxruntimeindex
   242     07FE  3403               	retlw	3
   243                           
   244                           	psect	strings
   245     0800                     __pstrings:
   246     0800                     stringtab:
   247     0800                     __stringtab:
   248     0800                     stringcode:	
   249                           ;	String table - string pointers are 1 byte each
   250                           
   251     0800                     stringdir:
   252     0800  3008               	movlw	high stringdir
   253     0801  008A               	movwf	10
   254     0802  0804               	movf	4,w
   255     0803  0A84               	incf	4,f
   256     0804  0782               	addwf	2,f
   257     0805                     __stringbase:
   258     0805  3400               	retlw	0
   259     0806                     __end_of__stringtab:
   260     0806                     _maxruntime:
   261     0806  341E               	retlw	30
   262     0807  3400               	retlw	0
   263     0808  342D               	retlw	45
   264     0809  3400               	retlw	0
   265     080A  343C               	retlw	60
   266     080B  3400               	retlw	0
   267     080C  3478               	retlw	120
   268     080D  3400               	retlw	0
   269     080E  34FF               	retlw	255
   270     080F  34FF               	retlw	255
   271     0810                     __end_of_maxruntime:
   272     0810                     _sensorbuffer:
   273     0810  3410               	retlw	16
   274     0811  3427               	retlw	39
   275     0812                     __end_of_sensorbuffer:
   276     0812                     _maximumrinningvoltage:
   277     0812  341D               	retlw	29
   278     0813  3401               	retlw	1
   279     0814                     __end_of_maximumrinningvoltage:
   280     0814                     _minimumrunningvoltage:
   281     0814  34A5               	retlw	165
   282     0815  3400               	retlw	0
   283     0816                     __end_of_minimumrunningvoltage:
   284     0816                     _maxvoltagelimit:
   285     0816  3409               	retlw	9
   286     0817  3401               	retlw	1
   287     0818                     __end_of_maxvoltagelimit:
   288     0818                     _minvoltagelimit:
   289     0818  34B9               	retlw	185
   290     0819  3400               	retlw	0
   291     081A                     __end_of_minvoltagelimit:
   292     081A                     _maxvoltageerrortime:
   293     081A  340F               	retlw	15
   294     081B  3400               	retlw	0
   295     081C                     __end_of_maxvoltageerrortime:
   296     081C                     _blinkdelay:
   297     081C  3464               	retlw	100
   298     081D  3400               	retlw	0
   299     081E                     __end_of_blinkdelay:
   300     0010                     _T1CONbits      set	16
   301     0010                     _T1CON          set	16
   302     000E                     _TMR1L          set	14
   303     000F                     _TMR1H          set	15
   304     000C                     _PIR1bits       set	12
   305     000B                     _INTCONbits     set	11
   306     0001                     _TMR0           set	1
   307     001E                     _ADRESH         set	30
   308     001F                     _ADCON0bits     set	31
   309     0006                     _PORTBbits      set	6
   310     0007                     _PORTC          set	7
   311     0006                     _PORTB          set	6
   312     0005                     _PORTA          set	5
   313     001F                     _ADCON0         set	31
   314     0007                     _PORTCbits      set	7
   315     0005                     _PORTAbits      set	5
   316     008C                     _PIE1bits       set	140
   317     0081                     _OPTION_REGbits set	129
   318     009E                     _ADRESL         set	158
   319     009F                     _ADCON1         set	159
   320     0087                     _TRISC          set	135
   321     0086                     _TRISB          set	134
   322     0085                     _TRISA          set	133
   323     008F                     _OSCCONbits     set	143
   324     010C                     _EEDATA         set	268
   325     010D                     _EEADR          set	269
   326     018D                     _EECON2         set	397
   327     018C                     _EECON1bits     set	396
   328     0189                     _ANSELH         set	393
   329     0188                     _ANSEL          set	392
   330                           
   331                           	psect	cinit
   332     000D                     start_initialization:	
   333                           ; #config settings
   334                           
   335     000D                     __initialization:
   336                           
   337                           ; Initialize objects allocated to BANK0
   338     000D  118A  27FE  118A   	fcall	__pidataBANK0	;fetch initializer
   339     0010  00EE               	movwf	__pdataBANK0& (0+127)
   340                           
   341                           ; Clear objects allocated to BANK1
   342     0011  1383               	bcf	3,7	;select IRP bank0
   343     0012  30A0               	movlw	low __pbssBANK1
   344     0013  0084               	movwf	4
   345     0014  30CB               	movlw	low (__pbssBANK1+43)
   346     0015  158A  2264  118A   	fcall	clear_ram0
   347                           
   348                           ; Clear objects allocated to BANK0
   349     0018  304F               	movlw	low __pbssBANK0
   350     0019  0084               	movwf	4
   351     001A  306E               	movlw	low (__pbssBANK0+31)
   352     001B  158A  2264  118A   	fcall	clear_ram0
   353                           
   354                           ; Clear objects allocated to COMMON
   355     001E  01FA               	clrf	__pbssCOMMON& (0+127)
   356     001F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   357     0020                     end_of_initialization:	
   358                           ;End of C runtime variable initialization code
   359                           
   360     0020                     __end_of__initialization:
   361     0020  0183               	clrf	3
   362     0021  118A  2823         	ljmp	_main	;jump to C main() function
   363                           
   364                           	psect	bssCOMMON
   365     007A                     __pbssCOMMON:
   366     007A                     _low_sensor_high_count:
   367     007A                     	ds	1
   368     007B                     _reading_count:
   369     007B                     	ds	1
   370                           
   371                           	psect	bssBANK0
   372     004F                     __pbssBANK0:
   373     004F                     _lastflowcheck:
   374     004F                     	ds	4
   375     0053                     _millis:
   376     0053                     	ds	4
   377     0057                     _seconds_counter:
   378     0057                     	ds	4
   379     005B                     _buzzer_active:
   380     005B                     	ds	1
   381     005C                     _preflowactive:
   382     005C                     	ds	1
   383     005D                     _flowactive:
   384     005D                     	ds	1
   385     005E                     _pretankempty:
   386     005E                     	ds	1
   387     005F                     _tankempty:
   388     005F                     	ds	1
   389     0060                     _motorrunning:
   390     0060                     	ds	1
   391     0061                     _timeouterror:
   392     0061                     	ds	1
   393     0062                     _dryrunerror:
   394     0062                     	ds	1
   395     0063                     _voltageerror:
   396     0063                     	ds	1
   397     0064                     _sensors_reading_in_progress:
   398     0064                     	ds	1
   399     0065                     _sensors_reading_complete:
   400     0065                     	ds	1
   401     0066                     _flow_sensor_high_count:
   402     0066                     	ds	1
   403     0067                     _high_sensor_high_count:
   404     0067                     	ds	1
   405     0068                     _voltage:
   406     0068                     	ds	1
   407     0069                     _settingsmode:
   408     0069                     	ds	1
   409     006A                     _smc:
   410     006A                     	ds	1
   411     006B                     _flow_sensor_active:
   412     006B                     	ds	1
   413     006C                     _high_sensor_active:
   414     006C                     	ds	1
   415     006D                     _low_sensor_active:
   416     006D                     	ds	1
   417                           
   418                           	psect	dataBANK0
   419     006E                     __pdataBANK0:
   420     006E                     _maxruntimeindex:
   421     006E                     	ds	1
   422                           
   423                           	psect	bssBANK1
   424     00A0                     __pbssBANK1:
   425     00A0                     _lastdispupdt:
   426     00A0                     	ds	4
   427     00A4                     _lt:
   428     00A4                     	ds	4
   429     00A8                     _buzzer_start_time:
   430     00A8                     	ds	4
   431     00AC                     _lastsensorcheck:
   432     00AC                     	ds	4
   433     00B0                     _lastvoltageerror:
   434     00B0                     	ds	4
   435     00B4                     _motorstarttime:
   436     00B4                     	ds	4
   437     00B8                     _lastdryruncheck:
   438     00B8                     	ds	4
   439     00BC                     _last_millis:
   440     00BC                     	ds	4
   441     00C0                     _buzzer_duration:
   442     00C0                     	ds	2
   443     00C2                     _voltagesum:
   444     00C2                     	ds	2
   445     00C4                     _dryruntime:
   446     00C4                     	ds	2
   447     00C6                     _voltageraw:
   448     00C6                     	ds	2
   449     00C8                     _potraw:
   450     00C8                     	ds	2
   451     00CA                     _mannualon:
   452     00CA                     	ds	1
   453                           
   454                           	psect	clrtext
   455     0A64                     clear_ram0:	
   456                           ;	Called with FSR containing the base address, and
   457                           ;	W with the last address+1
   458                           
   459     0A64  0064               	clrwdt	;clear the watchdog before getting into this loop
   460     0A65                     clrloop0:
   461     0A65  0180               	clrf	0	;clear RAM location pointed to by FSR
   462     0A66  0A84               	incf	4,f	;increment pointer
   463     0A67  0604               	xorwf	4,w	;XOR with final address
   464     0A68  1903               	btfsc	3,2	;have we reached the end yet?
   465     0A69  3400               	retlw	0	;all done for this memory range, return
   466     0A6A  0604               	xorwf	4,w	;XOR again to restore value
   467     0A6B  2A65               	goto	clrloop0	;do the next byte
   468                           
   469                           	psect	cstackBANK1
   470     00CB                     __pcstackBANK1:
   471     00CB                     main@is_long_press:
   472                           
   473                           ; 1 bytes @ 0x0
   474     00CB                     	ds	1
   475     00CC                     main@is_long_press_458:
   476                           
   477                           ; 1 bytes @ 0x1
   478     00CC                     	ds	1
   479     00CD                     main@i:
   480                           
   481                           ; 1 bytes @ 0x2
   482     00CD                     	ds	1
   483                           
   484                           	psect	cstackCOMMON
   485     0070                     __pcstackCOMMON:
   486     0070                     ?_initSystem:
   487     0070                     ?_buzzer_update:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_init_timer:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_initLCD:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_getsensorreadings:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?_check_button_press:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?_dispinfo:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     ?_lcd_cmd:	
   506                           ; 1 bytes @ 0x0
   507                           
   508     0070                     ?_main:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     ?_setupTimer0:	
   512                           ; 1 bytes @ 0x0
   513                           
   514     0070                     ?_startSensorReading:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_isr:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ?_lcd_data:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ?_lcd_display_bool_binary:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ??_isr:	
   527                           ; 1 bytes @ 0x0
   528                           
   529                           
   530                           ; 1 bytes @ 0x0
   531     0070                     	ds	2
   532     0072                     ?_trigger_buzzer:
   533     0072                     ?_EEPROM_Write:	
   534                           ; 1 bytes @ 0x2
   535                           
   536     0072                     ?_getSensorResults:	
   537                           ; 1 bytes @ 0x2
   538                           
   539     0072                     ?_readADC:	
   540                           ; 1 bytes @ 0x2
   541                           
   542     0072                     ?___awdiv:	
   543                           ; 2 bytes @ 0x2
   544                           
   545     0072                     ?___lmul:	
   546                           ; 2 bytes @ 0x2
   547                           
   548     0072                     getSensorResults@low_active:	
   549                           ; 4 bytes @ 0x2
   550                           
   551     0072                     EEPROM_Write@data:	
   552                           ; 1 bytes @ 0x2
   553                           
   554     0072                     trigger_buzzer@duration_seconds:	
   555                           ; 1 bytes @ 0x2
   556                           
   557     0072                     ___awdiv@divisor:	
   558                           ; 2 bytes @ 0x2
   559                           
   560     0072                     ___lmul@multiplier:	
   561                           ; 2 bytes @ 0x2
   562                           
   563     0072                     ??_initSystem:	
   564                           ; 4 bytes @ 0x2
   565                           
   566     0072                     ??_buzzer_update:	
   567                           ; 1 bytes @ 0x2
   568                           
   569     0072                     ??_init_timer:	
   570                           ; 1 bytes @ 0x2
   571                           
   572     0072                     ??_check_button_press:	
   573                           ; 1 bytes @ 0x2
   574                           
   575     0072                     ??_lcd_cmd:	
   576                           ; 1 bytes @ 0x2
   577                           
   578     0072                     ??_setupTimer0:	
   579                           ; 1 bytes @ 0x2
   580                           
   581     0072                     ??_startSensorReading:	
   582                           ; 1 bytes @ 0x2
   583                           
   584     0072                     ??_lcd_data:	
   585                           ; 1 bytes @ 0x2
   586                           
   587                           
   588                           ; 1 bytes @ 0x2
   589     0072                     	ds	1
   590     0073                     getSensorResults@high_active:
   591     0073                     EEPROM_Write@address:	
   592                           ; 1 bytes @ 0x3
   593                           
   594     0073                     lcd_cmd@cmd:	
   595                           ; 1 bytes @ 0x3
   596                           
   597     0073                     lcd_data@data:	
   598                           ; 1 bytes @ 0x3
   599                           
   600     0073                     ??_EEPROM_Write:	
   601                           ; 1 bytes @ 0x3
   602                           
   603                           
   604                           ; 1 bytes @ 0x3
   605     0073                     	ds	1
   606     0074                     ?_lcd_set_cursor:
   607     0074                     getSensorResults@flow_active:	
   608                           ; 1 bytes @ 0x4
   609                           
   610     0074                     lcd_set_cursor@col:	
   611                           ; 1 bytes @ 0x4
   612                           
   613     0074                     lcd_display_bool_binary@value:	
   614                           ; 1 bytes @ 0x4
   615                           
   616     0074                     check_button_press@long_press_threshold:	
   617                           ; 1 bytes @ 0x4
   618                           
   619     0074                     ___awdiv@dividend:	
   620                           ; 2 bytes @ 0x4
   621                           
   622     0074                     ??_readADC:	
   623                           ; 2 bytes @ 0x4
   624                           
   625     0074                     ??_trigger_buzzer:	
   626                           ; 1 bytes @ 0x4
   627                           
   628     0074                     ??_initLCD:	
   629                           ; 1 bytes @ 0x4
   630                           
   631     0074                     ??_lcd_display_bool_binary:	
   632                           ; 1 bytes @ 0x4
   633                           
   634                           
   635                           ; 1 bytes @ 0x4
   636     0074                     	ds	1
   637     0075                     readADC@channel:
   638     0075                     lcd_set_cursor@row:	
   639                           ; 1 bytes @ 0x5
   640                           
   641     0075                     ??_getSensorResults:	
   642                           ; 1 bytes @ 0x5
   643                           
   644     0075                     ??_lcd_set_cursor:	
   645                           ; 1 bytes @ 0x5
   646                           
   647                           
   648                           ; 1 bytes @ 0x5
   649     0075                     	ds	1
   650     0076                     lcd_set_cursor@address:
   651     0076                     ___awdiv@counter:	
   652                           ; 1 bytes @ 0x6
   653                           
   654     0076                     check_button_press@hold_count:	
   655                           ; 1 bytes @ 0x6
   656                           
   657     0076                     ___lmul@multiplicand:	
   658                           ; 2 bytes @ 0x6
   659                           
   660     0076                     ??___awdiv:	
   661                           ; 4 bytes @ 0x6
   662                           
   663                           
   664                           ; 1 bytes @ 0x6
   665     0076                     	ds	1
   666     0077                     ___awdiv@sign:
   667                           
   668                           ; 1 bytes @ 0x7
   669     0077                     	ds	1
   670     0078                     check_button_press@long_press:
   671     0078                     ___awdiv@quotient:	
   672                           ; 1 bytes @ 0x8
   673                           
   674                           
   675                           ; 2 bytes @ 0x8
   676     0078                     	ds	2
   677     007A                     ??_lcd_display_int:
   678     007A                     ??___awmod:	
   679                           ; 1 bytes @ 0xA
   680                           
   681                           
   682                           	psect	cstackBANK0
   683     0020                     __pcstackBANK0:	
   684                           ; 1 bytes @ 0xA
   685                           
   686     0020                     ?___awmod:
   687     0020                     ___awmod@divisor:	
   688                           ; 2 bytes @ 0x0
   689                           
   690     0020                     ??___lmul:	
   691                           ; 2 bytes @ 0x0
   692                           
   693                           
   694                           ; 1 bytes @ 0x0
   695     0020                     	ds	1
   696     0021                     ___lmul@product:
   697                           
   698                           ; 4 bytes @ 0x1
   699     0021                     	ds	1
   700     0022                     ___awmod@dividend:
   701                           
   702                           ; 2 bytes @ 0x2
   703     0022                     	ds	2
   704     0024                     ___awmod@counter:
   705                           
   706                           ; 1 bytes @ 0x4
   707     0024                     	ds	1
   708     0025                     ?___lldiv:
   709     0025                     ___awmod@sign:	
   710                           ; 4 bytes @ 0x5
   711                           
   712     0025                     ___lldiv@divisor:	
   713                           ; 1 bytes @ 0x5
   714                           
   715                           
   716                           ; 4 bytes @ 0x5
   717     0025                     	ds	4
   718     0029                     ___lldiv@dividend:
   719                           
   720                           ; 4 bytes @ 0x9
   721     0029                     	ds	4
   722     002D                     ??___lldiv:
   723                           
   724                           ; 1 bytes @ 0xD
   725     002D                     	ds	1
   726     002E                     ___lldiv@quotient:
   727                           
   728                           ; 4 bytes @ 0xE
   729     002E                     	ds	4
   730     0032                     ___lldiv@counter:
   731                           
   732                           ; 1 bytes @ 0x12
   733     0032                     	ds	1
   734     0033                     ?_lcd_display_int:
   735     0033                     lcd_display_int@num:	
   736                           ; 1 bytes @ 0x13
   737                           
   738     0033                     ??_getsensorreadings:	
   739                           ; 2 bytes @ 0x13
   740                           
   741                           
   742                           ; 1 bytes @ 0x13
   743     0033                     	ds	2
   744     0035                     lcd_display_int@hundreds:
   745                           
   746                           ; 2 bytes @ 0x15
   747     0035                     	ds	2
   748     0037                     getsensorreadings@i:
   749     0037                     lcd_display_int@tens:	
   750                           ; 1 bytes @ 0x17
   751                           
   752                           
   753                           ; 2 bytes @ 0x17
   754     0037                     	ds	2
   755     0039                     lcd_display_int@ones:
   756                           
   757                           ; 2 bytes @ 0x19
   758     0039                     	ds	2
   759     003B                     ??_dispinfo:
   760                           
   761                           ; 1 bytes @ 0x1B
   762     003B                     	ds	8
   763     0043                     dispinfo@refreshtime:
   764                           
   765                           ; 1 bytes @ 0x23
   766     0043                     	ds	1
   767     0044                     ??_main:
   768                           
   769                           ; 1 bytes @ 0x24
   770     0044                     	ds	11
   771                           
   772                           	psect	maintext
   773     0023                     __pmaintext:	
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 11, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 141 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  is_long_pres    1    1[BANK1 ] _Bool 
   784 ;;  is_long_pres    1    0[BANK1 ] _Bool 
   785 ;;  i               1    2[BANK1 ] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : B00/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   795 ;;      Params:         0       0       0       0
   796 ;;      Locals:         0       0       3       0
   797 ;;      Temps:          0      11       0       0
   798 ;;      Totals:         0      11       3       0
   799 ;;Total ram usage:       14 bytes
   800 ;; Hardware stack levels required when called: 4
   801 ;; This function calls:
   802 ;;		_EEPROM_Write
   803 ;;		___lldiv
   804 ;;		___lmul
   805 ;;		_buzzer_update
   806 ;;		_check_button_press
   807 ;;		_dispinfo
   808 ;;		_getsensorreadings
   809 ;;		_initLCD
   810 ;;		_initSystem
   811 ;;		_init_timer
   812 ;;		_readADC
   813 ;;		_trigger_buzzer
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819     0023                     _main:	
   820                           ;psect for function _main
   821                           
   822     0023                     l2891:	
   823                           ;incstack = 0
   824                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   825                           
   826                           
   827                           ;main.c: 144:   initSystem();
   828     0023  158A  2351  118A   	fcall	_initSystem
   829     0026                     l2893:
   830                           
   831                           ;main.c: 145:   maxruntimeindex = 4;
   832     0026  3004               	movlw	4
   833     0027  1283               	bcf	3,5	;RP0=0, select bank0
   834     0028  1303               	bcf	3,6	;RP1=0, select bank0
   835     0029  00EE               	movwf	_maxruntimeindex
   836                           
   837                           ;main.c: 147:   potraw = readADC(4);
   838     002A  3004               	movlw	4
   839     002B  158A  22DA  118A   	fcall	_readADC
   840     002E  0873               	movf	?_readADC+1,w
   841     002F  1683               	bsf	3,5	;RP0=1, select bank1
   842     0030  1303               	bcf	3,6	;RP1=0, select bank1
   843     0031  00C9               	movwf	(_potraw+1)^(0+128)
   844     0032  0872               	movf	?_readADC,w
   845     0033  00C8               	movwf	_potraw^(0+128)
   846                           
   847                           ;main.c: 148:   dryruntime = (((uint32_t)potraw * 480) / 1023) + 120;
   848     0034  3000               	movlw	0
   849     0035  1283               	bcf	3,5	;RP0=0, select bank0
   850     0036  1303               	bcf	3,6	;RP1=0, select bank0
   851     0037  00A8               	movwf	___lldiv@divisor+3
   852     0038  3000               	movlw	0
   853     0039  00A7               	movwf	___lldiv@divisor+2
   854     003A  3003               	movlw	3
   855     003B  00A6               	movwf	___lldiv@divisor+1
   856     003C  30FF               	movlw	255
   857     003D  00A5               	movwf	___lldiv@divisor
   858     003E  1683               	bsf	3,5	;RP0=1, select bank1
   859     003F  1303               	bcf	3,6	;RP1=0, select bank1
   860     0040  0848               	movf	_potraw^(0+128),w
   861     0041  00F2               	movwf	___lmul@multiplier
   862     0042  0849               	movf	(_potraw+1)^(0+128),w
   863     0043  00F3               	movwf	___lmul@multiplier+1
   864     0044  01F4               	clrf	___lmul@multiplier+2
   865     0045  01F5               	clrf	___lmul@multiplier+3
   866     0046  3000               	movlw	0
   867     0047  00F9               	movwf	___lmul@multiplicand+3
   868     0048  3000               	movlw	0
   869     0049  00F8               	movwf	___lmul@multiplicand+2
   870     004A  3001               	movlw	1
   871     004B  00F7               	movwf	___lmul@multiplicand+1
   872     004C  30E0               	movlw	224
   873     004D  00F6               	movwf	___lmul@multiplicand
   874     004E  158A  2380  118A   	fcall	___lmul
   875     0051  0875               	movf	?___lmul+3,w
   876     0052  1283               	bcf	3,5	;RP0=0, select bank0
   877     0053  1303               	bcf	3,6	;RP1=0, select bank0
   878     0054  00AC               	movwf	___lldiv@dividend+3
   879     0055  0874               	movf	?___lmul+2,w
   880     0056  00AB               	movwf	___lldiv@dividend+2
   881     0057  0873               	movf	?___lmul+1,w
   882     0058  00AA               	movwf	___lldiv@dividend+1
   883     0059  0872               	movf	?___lmul,w
   884     005A  00A9               	movwf	___lldiv@dividend
   885     005B  158A  24CE  118A   	fcall	___lldiv
   886     005E  1283               	bcf	3,5	;RP0=0, select bank0
   887     005F  1303               	bcf	3,6	;RP1=0, select bank0
   888     0060  0825               	movf	?___lldiv,w
   889     0061  3E78               	addlw	120
   890     0062  1683               	bsf	3,5	;RP0=1, select bank1
   891     0063  1303               	bcf	3,6	;RP1=0, select bank1
   892     0064  00C4               	movwf	_dryruntime^(0+128)
   893     0065  1283               	bcf	3,5	;RP0=0, select bank0
   894     0066  1303               	bcf	3,6	;RP1=0, select bank0
   895     0067  0826               	movf	?___lldiv+1,w
   896     0068  1803               	skipnc
   897     0069  3E01               	addlw	1
   898     006A  3E00               	addlw	0
   899     006B  1683               	bsf	3,5	;RP0=1, select bank1
   900     006C  1303               	bcf	3,6	;RP1=0, select bank1
   901     006D  00C5               	movwf	(_dryruntime+1)^(0+128)
   902     006E                     l2895:
   903                           
   904                           ;main.c: 150:   for (uint8_t i = 0; i < 10; i++) {
   905     006E  01CD               	clrf	main@i^(0+128)
   906     006F                     l183:
   907                           
   908                           ;main.c: 151:     PORTAbits.RA0 = 1;
   909     006F  1283               	bcf	3,5	;RP0=0, select bank0
   910     0070  1303               	bcf	3,6	;RP1=0, select bank0
   911     0071  1405               	bsf	5,0	;volatile
   912                           
   913                           ;main.c: 152:     PORTAbits.RA1 = 1;
   914     0072  1485               	bsf	5,1	;volatile
   915                           
   916                           ;main.c: 153:     PORTAbits.RA2 = 1;
   917     0073  1505               	bsf	5,2	;volatile
   918                           
   919                           ;main.c: 154:     PORTAbits.RA4 = 1;
   920     0074  1605               	bsf	5,4	;volatile
   921     0075                     l2901:
   922                           
   923                           ;main.c: 155:     if (i == 0) {
   924     0075  1683               	bsf	3,5	;RP0=1, select bank1
   925     0076  1303               	bcf	3,6	;RP1=0, select bank1
   926     0077  084D               	movf	main@i^(0+128),w
   927     0078  1D03               	btfss	3,2
   928     0079  287B               	goto	u4581
   929     007A  287C               	goto	u4580
   930     007B                     u4581:
   931     007B  2885               	goto	l2907
   932     007C                     u4580:
   933     007C                     l2903:
   934                           
   935                           ;main.c: 156:       if (PORTCbits.RC1 == 0) {
   936     007C  1283               	bcf	3,5	;RP0=0, select bank0
   937     007D  1303               	bcf	3,6	;RP1=0, select bank0
   938     007E  1887               	btfsc	7,1	;volatile
   939     007F  2881               	goto	u4591
   940     0080  2882               	goto	u4590
   941     0081                     u4591:
   942     0081  289C               	goto	l2915
   943     0082                     u4590:
   944     0082                     l2905:
   945                           
   946                           ;main.c: 157:         smc = 1;
   947     0082  3001               	movlw	1
   948     0083  00EA               	movwf	_smc
   949     0084  289C               	goto	l2915
   950     0085                     l2907:
   951     0085  3002               	movlw	2
   952     0086  064D               	xorwf	main@i^(0+128),w
   953     0087  1D03               	btfss	3,2
   954     0088  288A               	goto	u4601
   955     0089  288B               	goto	u4600
   956     008A                     u4601:
   957     008A  289C               	goto	l2915
   958     008B                     u4600:
   959     008B                     l2909:
   960                           
   961                           ;main.c: 160:       if (smc == 1) {
   962     008B  1283               	bcf	3,5	;RP0=0, select bank0
   963     008C  1303               	bcf	3,6	;RP1=0, select bank0
   964     008D  036A               	decf	_smc,w
   965     008E  1D03               	btfss	3,2
   966     008F  2891               	goto	u4611
   967     0090  2892               	goto	u4610
   968     0091                     u4611:
   969     0091  289C               	goto	l2915
   970     0092                     u4610:
   971     0092                     l2911:
   972                           
   973                           ;main.c: 161:         if (PORTCbits.RC1 == 0) {
   974     0092  1887               	btfsc	7,1	;volatile
   975     0093  2895               	goto	u4621
   976     0094  2896               	goto	u4620
   977     0095                     u4621:
   978     0095  289C               	goto	l2915
   979     0096                     u4620:
   980     0096                     l2913:
   981                           
   982                           ;main.c: 162:           settingsmode = 1;
   983     0096  3001               	movlw	1
   984     0097  00E9               	movwf	_settingsmode
   985                           
   986                           ;main.c: 163:           i = 10;
   987     0098  300A               	movlw	10
   988     0099  1683               	bsf	3,5	;RP0=1, select bank1
   989     009A  1303               	bcf	3,6	;RP1=0, select bank1
   990     009B  00CD               	movwf	main@i^(0+128)
   991     009C                     l2915:
   992                           
   993                           ;main.c: 167:     _delay((unsigned long)((blinkdelay)*(8000000/4000.0)));
   994     009C  3002               	movlw	2
   995     009D  1283               	bcf	3,5	;RP0=0, select bank0
   996     009E  1303               	bcf	3,6	;RP1=0, select bank0
   997     009F  00C6               	movwf	??_main+2
   998     00A0  3004               	movlw	4
   999     00A1  00C5               	movwf	??_main+1
  1000     00A2  30BA               	movlw	186
  1001     00A3  00C4               	movwf	??_main
  1002     00A4                     u5037:
  1003     00A4  0BC4               	decfsz	??_main,f
  1004     00A5  28A4               	goto	u5037
  1005     00A6  0BC5               	decfsz	??_main+1,f
  1006     00A7  28A4               	goto	u5037
  1007     00A8  0BC6               	decfsz	??_main+2,f
  1008     00A9  28A4               	goto	u5037
  1009     00AA                     l2917:
  1010                           
  1011                           ;main.c: 168:     PORTAbits.RA0 = 0;
  1012     00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1013     00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1014     00AC  1005               	bcf	5,0	;volatile
  1015     00AD                     l2919:
  1016                           
  1017                           ;main.c: 169:     PORTAbits.RA1 = 0;
  1018     00AD  1085               	bcf	5,1	;volatile
  1019     00AE                     l2921:
  1020                           
  1021                           ;main.c: 170:     PORTAbits.RA2 = 0;
  1022     00AE  1105               	bcf	5,2	;volatile
  1023     00AF                     l2923:
  1024                           
  1025                           ;main.c: 171:     PORTAbits.RA4 = 0;
  1026     00AF  1205               	bcf	5,4	;volatile
  1027                           
  1028                           ;main.c: 172:     _delay((unsigned long)((blinkdelay)*(8000000/4000.0)));
  1029     00B0  3002               	movlw	2
  1030     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1031     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1032     00B3  00C6               	movwf	??_main+2
  1033     00B4  3004               	movlw	4
  1034     00B5  00C5               	movwf	??_main+1
  1035     00B6  30BA               	movlw	186
  1036     00B7  00C4               	movwf	??_main
  1037     00B8                     u5047:
  1038     00B8  0BC4               	decfsz	??_main,f
  1039     00B9  28B8               	goto	u5047
  1040     00BA  0BC5               	decfsz	??_main+1,f
  1041     00BB  28B8               	goto	u5047
  1042     00BC  0BC6               	decfsz	??_main+2,f
  1043     00BD  28B8               	goto	u5047
  1044     00BE                     l2925:
  1045                           
  1046                           ;main.c: 173:   }
  1047     00BE  3001               	movlw	1
  1048     00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1049     00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1050     00C1  07CD               	addwf	main@i^(0+128),f
  1051     00C2                     l2927:
  1052     00C2  300A               	movlw	10
  1053     00C3  024D               	subwf	main@i^(0+128),w
  1054     00C4  1C03               	skipc
  1055     00C5  28C7               	goto	u4631
  1056     00C6  28C8               	goto	u4630
  1057     00C7                     u4631:
  1058     00C7  286F               	goto	l183
  1059     00C8                     u4630:
  1060     00C8                     l2929:
  1061                           
  1062                           ;main.c: 175:   trigger_buzzer(3000);
  1063     00C8  30B8               	movlw	184
  1064     00C9  00F2               	movwf	trigger_buzzer@duration_seconds
  1065     00CA  300B               	movlw	11
  1066     00CB  00F3               	movwf	trigger_buzzer@duration_seconds+1
  1067     00CC  158A  22FC  118A   	fcall	_trigger_buzzer
  1068                           
  1069                           ;main.c: 176:   buzzer_update();
  1070     00CF  118A  27B4  118A   	fcall	_buzzer_update
  1071     00D2                     l2931:
  1072                           
  1073                           ;main.c: 178:   init_timer();
  1074     00D2  158A  2299  118A   	fcall	_init_timer
  1075     00D5                     l2933:
  1076                           
  1077                           ;main.c: 179:   initLCD();
  1078     00D5  158A  2672  118A   	fcall	_initLCD
  1079                           
  1080                           ;main.c: 181:   while (settingsmode) {
  1081     00D8  297D               	goto	l2965
  1082     00D9                     l2935:
  1083                           
  1084                           ;main.c: 182:     buzzer_update();
  1085     00D9  118A  27B4  118A   	fcall	_buzzer_update
  1086     00DC                     l2937:
  1087                           
  1088                           ;main.c: 184:     getsensorreadings();
  1089     00DC  118A  24A0  118A   	fcall	_getsensorreadings
  1090     00DF                     l2939:
  1091                           
  1092                           ;main.c: 185:     potraw = readADC(4);
  1093     00DF  3004               	movlw	4
  1094     00E0  158A  22DA  118A   	fcall	_readADC
  1095     00E3  0873               	movf	?_readADC+1,w
  1096     00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1097     00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1098     00E6  00C9               	movwf	(_potraw+1)^(0+128)
  1099     00E7  0872               	movf	?_readADC,w
  1100     00E8  00C8               	movwf	_potraw^(0+128)
  1101     00E9                     l2941:
  1102                           
  1103                           ;main.c: 186:     dryruntime = (((uint32_t)potraw * 480) / 1023) + 120;
  1104     00E9  3000               	movlw	0
  1105     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1106     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1107     00EC  00A8               	movwf	___lldiv@divisor+3
  1108     00ED  3000               	movlw	0
  1109     00EE  00A7               	movwf	___lldiv@divisor+2
  1110     00EF  3003               	movlw	3
  1111     00F0  00A6               	movwf	___lldiv@divisor+1
  1112     00F1  30FF               	movlw	255
  1113     00F2  00A5               	movwf	___lldiv@divisor
  1114     00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1115     00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1116     00F5  0848               	movf	_potraw^(0+128),w
  1117     00F6  00F2               	movwf	___lmul@multiplier
  1118     00F7  0849               	movf	(_potraw+1)^(0+128),w
  1119     00F8  00F3               	movwf	___lmul@multiplier+1
  1120     00F9  01F4               	clrf	___lmul@multiplier+2
  1121     00FA  01F5               	clrf	___lmul@multiplier+3
  1122     00FB  3000               	movlw	0
  1123     00FC  00F9               	movwf	___lmul@multiplicand+3
  1124     00FD  3000               	movlw	0
  1125     00FE  00F8               	movwf	___lmul@multiplicand+2
  1126     00FF  3001               	movlw	1
  1127     0100  00F7               	movwf	___lmul@multiplicand+1
  1128     0101  30E0               	movlw	224
  1129     0102  00F6               	movwf	___lmul@multiplicand
  1130     0103  158A  2380  118A   	fcall	___lmul
  1131     0106  0875               	movf	?___lmul+3,w
  1132     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1133     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1134     0109  00AC               	movwf	___lldiv@dividend+3
  1135     010A  0874               	movf	?___lmul+2,w
  1136     010B  00AB               	movwf	___lldiv@dividend+2
  1137     010C  0873               	movf	?___lmul+1,w
  1138     010D  00AA               	movwf	___lldiv@dividend+1
  1139     010E  0872               	movf	?___lmul,w
  1140     010F  00A9               	movwf	___lldiv@dividend
  1141     0110  158A  24CE  118A   	fcall	___lldiv
  1142     0113  1283               	bcf	3,5	;RP0=0, select bank0
  1143     0114  1303               	bcf	3,6	;RP1=0, select bank0
  1144     0115  0825               	movf	?___lldiv,w
  1145     0116  3E78               	addlw	120
  1146     0117  1683               	bsf	3,5	;RP0=1, select bank1
  1147     0118  1303               	bcf	3,6	;RP1=0, select bank1
  1148     0119  00C4               	movwf	_dryruntime^(0+128)
  1149     011A  1283               	bcf	3,5	;RP0=0, select bank0
  1150     011B  1303               	bcf	3,6	;RP1=0, select bank0
  1151     011C  0826               	movf	?___lldiv+1,w
  1152     011D  1803               	skipnc
  1153     011E  3E01               	addlw	1
  1154     011F  3E00               	addlw	0
  1155     0120  1683               	bsf	3,5	;RP0=1, select bank1
  1156     0121  1303               	bcf	3,6	;RP1=0, select bank1
  1157     0122  00C5               	movwf	(_dryruntime+1)^(0+128)
  1158     0123                     l2943:
  1159                           
  1160                           ;main.c: 188:     if (PORTCbits.RC1 == 0) {
  1161     0123  1283               	bcf	3,5	;RP0=0, select bank0
  1162     0124  1303               	bcf	3,6	;RP1=0, select bank0
  1163     0125  1887               	btfsc	7,1	;volatile
  1164     0126  2928               	goto	u4641
  1165     0127  2929               	goto	u4640
  1166     0128                     u4641:
  1167     0128  2966               	goto	l2961
  1168     0129                     u4640:
  1169     0129                     l2945:
  1170                           
  1171                           ;main.c: 189:       _Bool is_long_press = check_button_press();
  1172     0129  158A  2606  118A   	fcall	_check_button_press
  1173     012C  1683               	bsf	3,5	;RP0=1, select bank1
  1174     012D  1303               	bcf	3,6	;RP1=0, select bank1
  1175     012E  00CB               	movwf	main@is_long_press^(0+128)
  1176     012F                     l2947:
  1177                           
  1178                           ;main.c: 191:       if (is_long_press) {
  1179     012F  084B               	movf	main@is_long_press^(0+128),w
  1180     0130  1903               	btfsc	3,2
  1181     0131  2933               	goto	u4651
  1182     0132  2934               	goto	u4650
  1183     0133                     u4651:
  1184     0133  293B               	goto	l2951
  1185     0134                     u4650:
  1186     0134                     l2949:
  1187                           
  1188                           ;main.c: 192:         tankempty = 1;
  1189     0134  3001               	movlw	1
  1190     0135  1283               	bcf	3,5	;RP0=0, select bank0
  1191     0136  1303               	bcf	3,6	;RP1=0, select bank0
  1192     0137  00DF               	movwf	_tankempty
  1193                           
  1194                           ;main.c: 193:         pretankempty = 1;
  1195     0138  3001               	movlw	1
  1196     0139  00DE               	movwf	_pretankempty
  1197                           
  1198                           ;main.c: 195:       } else {
  1199     013A  2966               	goto	l2961
  1200     013B                     l2951:
  1201                           
  1202                           ;main.c: 196:         maxruntimeindex++;
  1203     013B  3001               	movlw	1
  1204     013C  1283               	bcf	3,5	;RP0=0, select bank0
  1205     013D  1303               	bcf	3,6	;RP1=0, select bank0
  1206     013E  07EE               	addwf	_maxruntimeindex,f
  1207     013F                     l2953:
  1208                           
  1209                           ;main.c: 197:         if (maxruntimeindex >= 5) {
  1210     013F  3005               	movlw	5
  1211     0140  026E               	subwf	_maxruntimeindex,w
  1212     0141  1C03               	skipc
  1213     0142  2944               	goto	u4661
  1214     0143  2945               	goto	u4660
  1215     0144                     u4661:
  1216     0144  2946               	goto	l2957
  1217     0145                     u4660:
  1218     0145                     l2955:
  1219                           
  1220                           ;main.c: 198:           maxruntimeindex = 0;
  1221     0145  01EE               	clrf	_maxruntimeindex
  1222     0146                     l2957:
  1223                           
  1224                           ;main.c: 200:         EEPROM_Write(0x01, maxruntimeindex);
  1225     0146  086E               	movf	_maxruntimeindex,w
  1226     0147  00F2               	movwf	EEPROM_Write@data
  1227     0148  3001               	movlw	1
  1228     0149  158A  22BC  118A   	fcall	_EEPROM_Write
  1229     014C  2966               	goto	l2961
  1230     014D                     l198:	
  1231                           ;main.c: 204:     case 0:
  1232                           
  1233                           
  1234                           ;main.c: 205:       PORTAbits.RA0 = 0;
  1235     014D  1005               	bcf	5,0	;volatile
  1236                           
  1237                           ;main.c: 206:       PORTAbits.RA1 = 0;
  1238     014E  1085               	bcf	5,1	;volatile
  1239                           
  1240                           ;main.c: 207:       PORTAbits.RA2 = 0;
  1241     014F  1105               	bcf	5,2	;volatile
  1242                           
  1243                           ;main.c: 208:       PORTAbits.RA4 = 1;
  1244     0150  1605               	bsf	5,4	;volatile
  1245                           
  1246                           ;main.c: 209:       break;
  1247     0151  2979               	goto	l2963
  1248     0152                     l200:	
  1249                           ;main.c: 210:     case 1:
  1250                           
  1251                           
  1252                           ;main.c: 211:       PORTAbits.RA0 = 0;
  1253     0152  1005               	bcf	5,0	;volatile
  1254                           
  1255                           ;main.c: 212:       PORTAbits.RA1 = 0;
  1256     0153  1085               	bcf	5,1	;volatile
  1257                           
  1258                           ;main.c: 213:       PORTAbits.RA2 = 1;
  1259     0154  1505               	bsf	5,2	;volatile
  1260                           
  1261                           ;main.c: 214:       PORTAbits.RA4 = 0;
  1262     0155  1205               	bcf	5,4	;volatile
  1263                           
  1264                           ;main.c: 215:       break;
  1265     0156  2979               	goto	l2963
  1266     0157                     l201:	
  1267                           ;main.c: 216:     case 2:
  1268                           
  1269                           
  1270                           ;main.c: 217:       PORTAbits.RA0 = 0;
  1271     0157  1005               	bcf	5,0	;volatile
  1272                           
  1273                           ;main.c: 218:       PORTAbits.RA1 = 1;
  1274     0158  1485               	bsf	5,1	;volatile
  1275                           
  1276                           ;main.c: 219:       PORTAbits.RA2 = 0;
  1277     0159  1105               	bcf	5,2	;volatile
  1278                           
  1279                           ;main.c: 220:       PORTAbits.RA4 = 0;
  1280     015A  1205               	bcf	5,4	;volatile
  1281                           
  1282                           ;main.c: 221:       break;
  1283     015B  2979               	goto	l2963
  1284     015C                     l202:	
  1285                           ;main.c: 222:     case 3:
  1286                           
  1287                           
  1288                           ;main.c: 223:       PORTAbits.RA0 = 1;
  1289     015C  1405               	bsf	5,0	;volatile
  1290                           
  1291                           ;main.c: 224:       PORTAbits.RA1 = 0;
  1292     015D  1085               	bcf	5,1	;volatile
  1293                           
  1294                           ;main.c: 225:       PORTAbits.RA2 = 0;
  1295     015E  1105               	bcf	5,2	;volatile
  1296                           
  1297                           ;main.c: 226:       PORTAbits.RA4 = 0;
  1298     015F  1205               	bcf	5,4	;volatile
  1299                           
  1300                           ;main.c: 227:       break;
  1301     0160  2979               	goto	l2963
  1302     0161                     l203:	
  1303                           ;main.c: 228:     case 4:
  1304                           
  1305                           
  1306                           ;main.c: 229:       PORTAbits.RA0 = 0;
  1307     0161  1005               	bcf	5,0	;volatile
  1308                           
  1309                           ;main.c: 230:       PORTAbits.RA1 = 1;
  1310     0162  1485               	bsf	5,1	;volatile
  1311                           
  1312                           ;main.c: 231:       PORTAbits.RA2 = 1;
  1313     0163  1505               	bsf	5,2	;volatile
  1314                           
  1315                           ;main.c: 232:       PORTAbits.RA4 = 0;
  1316     0164  1205               	bcf	5,4	;volatile
  1317                           
  1318                           ;main.c: 233:       break;
  1319     0165  2979               	goto	l2963
  1320     0166                     l2961:
  1321     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1322     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1323     0168  086E               	movf	_maxruntimeindex,w
  1324                           
  1325                           ; Switch size 1, requested type "simple"
  1326                           ; Number of cases is 5, Range of values is 0 to 4
  1327                           ; switch strategies available:
  1328                           ; Name         Instructions Cycles
  1329                           ; simple_byte           16     9 (average)
  1330                           ; direct_byte           17     7 (fixed)
  1331                           ; jumptable            260     6 (fixed)
  1332                           ;	Chosen strategy is simple_byte
  1333     0169  3A00               	xorlw	0	; case 0
  1334     016A  1903               	skipnz
  1335     016B  294D               	goto	l198
  1336     016C  3A01               	xorlw	1	; case 1
  1337     016D  1903               	skipnz
  1338     016E  2952               	goto	l200
  1339     016F  3A03               	xorlw	3	; case 2
  1340     0170  1903               	skipnz
  1341     0171  2957               	goto	l201
  1342     0172  3A01               	xorlw	1	; case 3
  1343     0173  1903               	skipnz
  1344     0174  295C               	goto	l202
  1345     0175  3A07               	xorlw	7	; case 4
  1346     0176  1903               	skipnz
  1347     0177  2961               	goto	l203
  1348     0178  2979               	goto	l2963
  1349     0179                     l2963:
  1350                           
  1351                           ;main.c: 236:     dispinfo(100);
  1352     0179  3064               	movlw	100
  1353     017A  158A  26E1  118A   	fcall	_dispinfo
  1354     017D                     l2965:
  1355                           
  1356                           ;main.c: 181:   while (settingsmode) {
  1357     017D  1283               	bcf	3,5	;RP0=0, select bank0
  1358     017E  1303               	bcf	3,6	;RP1=0, select bank0
  1359     017F  0869               	movf	_settingsmode,w
  1360     0180  1D03               	btfss	3,2
  1361     0181  2983               	goto	u4671
  1362     0182  2984               	goto	u4670
  1363     0183                     u4671:
  1364     0183  28D9               	goto	l2935
  1365     0184                     u4670:
  1366     0184                     l205:	
  1367                           ;main.c: 238:   while (1) {
  1368                           
  1369                           
  1370                           ;main.c: 240:     if (PORTCbits.RC1 == 0) {
  1371     0184  1283               	bcf	3,5	;RP0=0, select bank0
  1372     0185  1303               	bcf	3,6	;RP1=0, select bank0
  1373     0186  1887               	btfsc	7,1	;volatile
  1374     0187  2989               	goto	u4681
  1375     0188  298A               	goto	u4680
  1376     0189                     u4681:
  1377     0189  29AB               	goto	l2975
  1378     018A                     u4680:
  1379     018A                     l2967:
  1380                           
  1381                           ;main.c: 241:       _Bool is_long_press = check_button_press();
  1382     018A  158A  2606  118A   	fcall	_check_button_press
  1383     018D  1683               	bsf	3,5	;RP0=1, select bank1
  1384     018E  1303               	bcf	3,6	;RP1=0, select bank1
  1385     018F  00CC               	movwf	main@is_long_press_458^(0+128)
  1386     0190                     l2969:
  1387                           
  1388                           ;main.c: 243:       if (is_long_press) {
  1389     0190  084C               	movf	main@is_long_press_458^(0+128),w
  1390     0191  1903               	btfsc	3,2
  1391     0192  2994               	goto	u4691
  1392     0193  2995               	goto	u4690
  1393     0194                     u4691:
  1394     0194  299C               	goto	l2973
  1395     0195                     u4690:
  1396     0195                     l2971:
  1397                           
  1398                           ;main.c: 244:         tankempty = 1;
  1399     0195  3001               	movlw	1
  1400     0196  1283               	bcf	3,5	;RP0=0, select bank0
  1401     0197  1303               	bcf	3,6	;RP1=0, select bank0
  1402     0198  00DF               	movwf	_tankempty
  1403                           
  1404                           ;main.c: 245:         pretankempty = 1;
  1405     0199  3001               	movlw	1
  1406     019A  00DE               	movwf	_pretankempty
  1407                           
  1408                           ;main.c: 247:       } else {
  1409     019B  29AB               	goto	l2975
  1410     019C                     l2973:
  1411                           
  1412                           ;main.c: 248:         PORTAbits.RA2 = ~PORTAbits.RA2;
  1413     019C  1003               	clrc
  1414     019D  1283               	bcf	3,5	;RP0=0, select bank0
  1415     019E  1303               	bcf	3,6	;RP1=0, select bank0
  1416     019F  1D05               	btfss	5,2	;volatile
  1417     01A0  1403               	setc
  1418     01A1  1803               	btfsc	3,0
  1419     01A2  29A4               	goto	u4701
  1420     01A3  29A8               	goto	u4700
  1421     01A4                     u4701:
  1422     01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1423     01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1424     01A6  1505               	bsf	5,2	;volatile
  1425     01A7  29AB               	goto	u4714
  1426     01A8                     u4700:
  1427     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1428     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1429     01AA  1105               	bcf	5,2	;volatile
  1430     01AB                     u4714:
  1431     01AB                     l2975:
  1432                           
  1433                           ;main.c: 252:     buzzer_update();
  1434     01AB  118A  27B4  118A   	fcall	_buzzer_update
  1435     01AE                     l2977:
  1436                           
  1437                           ;main.c: 254:     getsensorreadings();
  1438     01AE  118A  24A0  118A   	fcall	_getsensorreadings
  1439     01B1                     l2979:
  1440                           
  1441                           ;main.c: 256:     if (tankempty) {
  1442     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1443     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1444     01B3  085F               	movf	_tankempty,w
  1445     01B4  1903               	btfsc	3,2
  1446     01B5  29B7               	goto	u4721
  1447     01B6  29B8               	goto	u4720
  1448     01B7                     u4721:
  1449     01B7  2B2B               	goto	l3027
  1450     01B8                     u4720:
  1451     01B8                     l2981:
  1452                           
  1453                           ;main.c: 257:       if (!timeouterror && !voltageerror && !dryrunerror && !motorrunning)
      +                           {
  1454     01B8  0861               	movf	_timeouterror,w
  1455     01B9  1D03               	btfss	3,2
  1456     01BA  29BC               	goto	u4731
  1457     01BB  29BD               	goto	u4730
  1458     01BC                     u4731:
  1459     01BC  29EF               	goto	l2997
  1460     01BD                     u4730:
  1461     01BD                     l2983:
  1462     01BD  0863               	movf	_voltageerror,w
  1463     01BE  1D03               	btfss	3,2
  1464     01BF  29C1               	goto	u4741
  1465     01C0  29C2               	goto	u4740
  1466     01C1                     u4741:
  1467     01C1  29EF               	goto	l2997
  1468     01C2                     u4740:
  1469     01C2                     l2985:
  1470     01C2  0862               	movf	_dryrunerror,w
  1471     01C3  1D03               	btfss	3,2
  1472     01C4  29C6               	goto	u4751
  1473     01C5  29C7               	goto	u4750
  1474     01C6                     u4751:
  1475     01C6  29EF               	goto	l2997
  1476     01C7                     u4750:
  1477     01C7                     l2987:
  1478     01C7  0860               	movf	_motorrunning,w
  1479     01C8  1D03               	btfss	3,2
  1480     01C9  29CB               	goto	u4761
  1481     01CA  29CC               	goto	u4760
  1482     01CB                     u4761:
  1483     01CB  29EF               	goto	l2997
  1484     01CC                     u4760:
  1485     01CC                     l2989:
  1486                           
  1487                           ;main.c: 259:         PORTCbits.RC3 = 1;
  1488     01CC  1587               	bsf	7,3	;volatile
  1489                           
  1490                           ;main.c: 260:         PORTCbits.RC2 = 1;
  1491     01CD  1507               	bsf	7,2	;volatile
  1492     01CE                     l2991:
  1493                           
  1494                           ;main.c: 261:         motorstarttime = seconds_counter;
  1495     01CE  085A               	movf	_seconds_counter+3,w	;volatile
  1496     01CF  1683               	bsf	3,5	;RP0=1, select bank1
  1497     01D0  1303               	bcf	3,6	;RP1=0, select bank1
  1498     01D1  00B7               	movwf	(_motorstarttime+3)^(0+128)
  1499     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1500     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1501     01D4  0859               	movf	_seconds_counter+2,w	;volatile
  1502     01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1503     01D6  1303               	bcf	3,6	;RP1=0, select bank1
  1504     01D7  00B6               	movwf	(_motorstarttime+2)^(0+128)
  1505     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1506     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1507     01DA  0858               	movf	_seconds_counter+1,w	;volatile
  1508     01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1509     01DC  1303               	bcf	3,6	;RP1=0, select bank1
  1510     01DD  00B5               	movwf	(_motorstarttime+1)^(0+128)
  1511     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1512     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1513     01E0  0857               	movf	_seconds_counter,w	;volatile
  1514     01E1  1683               	bsf	3,5	;RP0=1, select bank1
  1515     01E2  1303               	bcf	3,6	;RP1=0, select bank1
  1516     01E3  00B4               	movwf	_motorstarttime^(0+128)
  1517     01E4                     l2993:
  1518                           
  1519                           ;main.c: 262:         motorrunning = 1;
  1520     01E4  3001               	movlw	1
  1521     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1522     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1523     01E7  00E0               	movwf	_motorrunning
  1524     01E8                     l2995:
  1525                           
  1526                           ;main.c: 263:         trigger_buzzer(1000);
  1527     01E8  30E8               	movlw	232
  1528     01E9  00F2               	movwf	trigger_buzzer@duration_seconds
  1529     01EA  3003               	movlw	3
  1530     01EB  00F3               	movwf	trigger_buzzer@duration_seconds+1
  1531     01EC  158A  22FC  118A   	fcall	_trigger_buzzer
  1532     01EF                     l2997:
  1533                           
  1534                           ;main.c: 265:       if (motorrunning) {
  1535     01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1536     01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1537     01F1  0860               	movf	_motorrunning,w
  1538     01F2  1903               	btfsc	3,2
  1539     01F3  29F5               	goto	u4771
  1540     01F4  29F6               	goto	u4770
  1541     01F5                     u4771:
  1542     01F5  2B37               	goto	l3033
  1543     01F6                     u4770:
  1544     01F6                     l2999:
  1545                           
  1546                           ;main.c: 266:         if (seconds_counter - motorstarttime >= maxruntime[maxruntimeindex
      +                          ]) {
  1547     01F6  086E               	movf	_maxruntimeindex,w
  1548     01F7  00C4               	movwf	??_main
  1549     01F8  0744               	addwf	??_main,w
  1550     01F9  3E01               	addlw	low ((_maxruntime-__stringbase)| (0+32768))
  1551     01FA  0084               	movwf	4
  1552     01FB  158A  2000  118A   	fcall	stringdir
  1553     01FE  00C5               	movwf	??_main+1
  1554     01FF  158A  2000  118A   	fcall	stringdir
  1555     0202  00C6               	movwf	??_main+2
  1556     0203  0845               	movf	??_main+1,w
  1557     0204  00C7               	movwf	??_main+3
  1558     0205  0846               	movf	??_main+2,w
  1559     0206  00C8               	movwf	??_main+4
  1560     0207  01C9               	clrf	??_main+5
  1561     0208  01CA               	clrf	??_main+6
  1562     0209  0857               	movf	_seconds_counter,w	;volatile
  1563     020A  00CB               	movwf	??_main+7
  1564     020B  0858               	movf	_seconds_counter+1,w	;volatile
  1565     020C  00CC               	movwf	??_main+8
  1566     020D  0859               	movf	_seconds_counter+2,w	;volatile
  1567     020E  00CD               	movwf	??_main+9
  1568     020F  085A               	movf	_seconds_counter+3,w	;volatile
  1569     0210  00CE               	movwf	??_main+10
  1570     0211  1683               	bsf	3,5	;RP0=1, select bank1
  1571     0212  1303               	bcf	3,6	;RP1=0, select bank1
  1572     0213  0834               	movf	_motorstarttime^(0+128),w
  1573     0214  1283               	bcf	3,5	;RP0=0, select bank0
  1574     0215  1303               	bcf	3,6	;RP1=0, select bank0
  1575     0216  02CB               	subwf	??_main+7,f
  1576     0217  1683               	bsf	3,5	;RP0=1, select bank1
  1577     0218  1303               	bcf	3,6	;RP1=0, select bank1
  1578     0219  0835               	movf	(_motorstarttime+1)^(0+128),w
  1579     021A  1C03               	skipc
  1580     021B  0F35               	incfsz	(_motorstarttime+1)^(0+128),w
  1581     021C  2A1E               	goto	u4781
  1582     021D  2A21               	goto	u4782
  1583     021E                     u4781:
  1584     021E  1283               	bcf	3,5	;RP0=0, select bank0
  1585     021F  1303               	bcf	3,6	;RP1=0, select bank0
  1586     0220  02CC               	subwf	??_main+8,f
  1587     0221                     u4782:
  1588     0221  1683               	bsf	3,5	;RP0=1, select bank1
  1589     0222  1303               	bcf	3,6	;RP1=0, select bank1
  1590     0223  0836               	movf	(_motorstarttime+2)^(0+128),w
  1591     0224  1C03               	skipc
  1592     0225  0F36               	incfsz	(_motorstarttime+2)^(0+128),w
  1593     0226  2A28               	goto	u4783
  1594     0227  2A2B               	goto	u4784
  1595     0228                     u4783:
  1596     0228  1283               	bcf	3,5	;RP0=0, select bank0
  1597     0229  1303               	bcf	3,6	;RP1=0, select bank0
  1598     022A  02CD               	subwf	??_main+9,f
  1599     022B                     u4784:
  1600     022B  1683               	bsf	3,5	;RP0=1, select bank1
  1601     022C  1303               	bcf	3,6	;RP1=0, select bank1
  1602     022D  0837               	movf	(_motorstarttime+3)^(0+128),w
  1603     022E  1C03               	skipc
  1604     022F  0F37               	incfsz	(_motorstarttime+3)^(0+128),w
  1605     0230  2A32               	goto	u4785
  1606     0231  2A35               	goto	u4786
  1607     0232                     u4785:
  1608     0232  1283               	bcf	3,5	;RP0=0, select bank0
  1609     0233  1303               	bcf	3,6	;RP1=0, select bank0
  1610     0234  02CE               	subwf	??_main+10,f
  1611     0235                     u4786:
  1612     0235  1683               	bsf	3,5	;RP0=1, select bank1
  1613     0236  1303               	bcf	3,6	;RP1=0, select bank1
  1614     0237  1283               	bcf	3,5	;RP0=0, select bank0
  1615     0238  1303               	bcf	3,6	;RP1=0, select bank0
  1616     0239  084A               	movf	??_main+6,w
  1617     023A  024E               	subwf	??_main+10,w
  1618     023B  1D03               	skipz
  1619     023C  2A47               	goto	u4795
  1620     023D  0849               	movf	??_main+5,w
  1621     023E  024D               	subwf	??_main+9,w
  1622     023F  1D03               	skipz
  1623     0240  2A47               	goto	u4795
  1624     0241  0848               	movf	??_main+4,w
  1625     0242  024C               	subwf	??_main+8,w
  1626     0243  1D03               	skipz
  1627     0244  2A47               	goto	u4795
  1628     0245  0847               	movf	??_main+3,w
  1629     0246  024B               	subwf	??_main+7,w
  1630     0247                     u4795:
  1631     0247  1C03               	skipc
  1632     0248  2A4A               	goto	u4791
  1633     0249  2A4B               	goto	u4790
  1634     024A                     u4791:
  1635     024A  2A4D               	goto	l3003
  1636     024B                     u4790:
  1637     024B                     l3001:
  1638                           
  1639                           ;main.c: 267:           timeouterror = 1;
  1640     024B  3001               	movlw	1
  1641     024C  00E1               	movwf	_timeouterror
  1642     024D                     l3003:
  1643                           
  1644                           ;main.c: 270:         if (seconds_counter - motorstarttime >= 3){
  1645     024D  0857               	movf	_seconds_counter,w	;volatile
  1646     024E  00C4               	movwf	??_main
  1647     024F  0858               	movf	_seconds_counter+1,w	;volatile
  1648     0250  00C5               	movwf	??_main+1
  1649     0251  0859               	movf	_seconds_counter+2,w	;volatile
  1650     0252  00C6               	movwf	??_main+2
  1651     0253  085A               	movf	_seconds_counter+3,w	;volatile
  1652     0254  00C7               	movwf	??_main+3
  1653     0255  1683               	bsf	3,5	;RP0=1, select bank1
  1654     0256  1303               	bcf	3,6	;RP1=0, select bank1
  1655     0257  0834               	movf	_motorstarttime^(0+128),w
  1656     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1657     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1658     025A  02C4               	subwf	??_main,f
  1659     025B  1683               	bsf	3,5	;RP0=1, select bank1
  1660     025C  1303               	bcf	3,6	;RP1=0, select bank1
  1661     025D  0835               	movf	(_motorstarttime+1)^(0+128),w
  1662     025E  1C03               	skipc
  1663     025F  0F35               	incfsz	(_motorstarttime+1)^(0+128),w
  1664     0260  2A62               	goto	u4801
  1665     0261  2A65               	goto	u4802
  1666     0262                     u4801:
  1667     0262  1283               	bcf	3,5	;RP0=0, select bank0
  1668     0263  1303               	bcf	3,6	;RP1=0, select bank0
  1669     0264  02C5               	subwf	??_main+1,f
  1670     0265                     u4802:
  1671     0265  1683               	bsf	3,5	;RP0=1, select bank1
  1672     0266  1303               	bcf	3,6	;RP1=0, select bank1
  1673     0267  0836               	movf	(_motorstarttime+2)^(0+128),w
  1674     0268  1C03               	skipc
  1675     0269  0F36               	incfsz	(_motorstarttime+2)^(0+128),w
  1676     026A  2A6C               	goto	u4803
  1677     026B  2A6F               	goto	u4804
  1678     026C                     u4803:
  1679     026C  1283               	bcf	3,5	;RP0=0, select bank0
  1680     026D  1303               	bcf	3,6	;RP1=0, select bank0
  1681     026E  02C6               	subwf	??_main+2,f
  1682     026F                     u4804:
  1683     026F  1683               	bsf	3,5	;RP0=1, select bank1
  1684     0270  1303               	bcf	3,6	;RP1=0, select bank1
  1685     0271  0837               	movf	(_motorstarttime+3)^(0+128),w
  1686     0272  1C03               	skipc
  1687     0273  0F37               	incfsz	(_motorstarttime+3)^(0+128),w
  1688     0274  2A76               	goto	u4805
  1689     0275  2A79               	goto	u4806
  1690     0276                     u4805:
  1691     0276  1283               	bcf	3,5	;RP0=0, select bank0
  1692     0277  1303               	bcf	3,6	;RP1=0, select bank0
  1693     0278  02C7               	subwf	??_main+3,f
  1694     0279                     u4806:
  1695     0279  1683               	bsf	3,5	;RP0=1, select bank1
  1696     027A  1303               	bcf	3,6	;RP1=0, select bank1
  1697     027B  1283               	bcf	3,5	;RP0=0, select bank0
  1698     027C  1303               	bcf	3,6	;RP1=0, select bank0
  1699     027D  0847               	movf	??_main+3,w
  1700     027E  1D03               	btfss	3,2
  1701     027F  2A8E               	goto	u4810
  1702     0280  0846               	movf	??_main+2,w
  1703     0281  1D03               	btfss	3,2
  1704     0282  2A8E               	goto	u4810
  1705     0283  0845               	movf	??_main+1,w
  1706     0284  1D03               	btfss	3,2
  1707     0285  2A8E               	goto	u4810
  1708     0286  3003               	movlw	3
  1709     0287  0244               	subwf	??_main,w
  1710     0288  1D03               	skipz
  1711     0289  2A8A               	goto	u4813
  1712     028A                     u4813:
  1713     028A  1C03               	btfss	3,0
  1714     028B  2A8D               	goto	u4811
  1715     028C  2A8E               	goto	u4810
  1716     028D                     u4811:
  1717     028D  2A91               	goto	l3007
  1718     028E                     u4810:
  1719     028E                     l3005:
  1720                           
  1721                           ;main.c: 271:           PORTCbits.RC2 = 0;
  1722     028E  1283               	bcf	3,5	;RP0=0, select bank0
  1723     028F  1303               	bcf	3,6	;RP1=0, select bank0
  1724     0290  1107               	bcf	7,2	;volatile
  1725     0291                     l3007:
  1726                           
  1727                           ;main.c: 273:         if (!flowactive) {
  1728     0291  1283               	bcf	3,5	;RP0=0, select bank0
  1729     0292  1303               	bcf	3,6	;RP1=0, select bank0
  1730     0293  085D               	movf	_flowactive,w
  1731     0294  1D03               	btfss	3,2
  1732     0295  2A97               	goto	u4821
  1733     0296  2A98               	goto	u4820
  1734     0297                     u4821:
  1735     0297  2B14               	goto	l3021
  1736     0298                     u4820:
  1737     0298                     l3009:
  1738                           
  1739                           ;main.c: 274:           if (seconds_counter % 2 == 0) {
  1740     0298  1857               	btfsc	_seconds_counter,0	;volatile
  1741     0299  2A9B               	goto	u4831
  1742     029A  2A9C               	goto	u4830
  1743     029B                     u4831:
  1744     029B  2A9E               	goto	l215
  1745     029C                     u4830:
  1746     029C                     l3011:
  1747                           
  1748                           ;main.c: 276:             PORTAbits.RA2 = 1;
  1749     029C  1505               	bsf	5,2	;volatile
  1750                           
  1751                           ;main.c: 277:           } else {
  1752     029D  2A9F               	goto	l3013
  1753     029E                     l215:
  1754                           
  1755                           ;main.c: 279:             PORTAbits.RA2 = 0;
  1756     029E  1105               	bcf	5,2	;volatile
  1757     029F                     l3013:
  1758                           
  1759                           ;main.c: 281:           if (lastdryruncheck == 0) {
  1760     029F  1683               	bsf	3,5	;RP0=1, select bank1
  1761     02A0  1303               	bcf	3,6	;RP1=0, select bank1
  1762     02A1  083B               	movf	(_lastdryruncheck+3)^(0+128),w
  1763     02A2  043A               	iorwf	(_lastdryruncheck+2)^(0+128),w
  1764     02A3  0439               	iorwf	(_lastdryruncheck+1)^(0+128),w
  1765     02A4  0438               	iorwf	_lastdryruncheck^(0+128),w
  1766     02A5  1D03               	skipz
  1767     02A6  2AA8               	goto	u4841
  1768     02A7  2AA9               	goto	u4840
  1769     02A8                     u4841:
  1770     02A8  2AC2               	goto	l3017
  1771     02A9                     u4840:
  1772     02A9                     l3015:
  1773                           
  1774                           ;main.c: 282:             lastdryruncheck = seconds_counter;
  1775     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1776     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1777     02AB  085A               	movf	_seconds_counter+3,w	;volatile
  1778     02AC  1683               	bsf	3,5	;RP0=1, select bank1
  1779     02AD  1303               	bcf	3,6	;RP1=0, select bank1
  1780     02AE  00BB               	movwf	(_lastdryruncheck+3)^(0+128)
  1781     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1782     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1783     02B1  0859               	movf	_seconds_counter+2,w	;volatile
  1784     02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1785     02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1786     02B4  00BA               	movwf	(_lastdryruncheck+2)^(0+128)
  1787     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1788     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1789     02B7  0858               	movf	_seconds_counter+1,w	;volatile
  1790     02B8  1683               	bsf	3,5	;RP0=1, select bank1
  1791     02B9  1303               	bcf	3,6	;RP1=0, select bank1
  1792     02BA  00B9               	movwf	(_lastdryruncheck+1)^(0+128)
  1793     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1794     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1795     02BD  0857               	movf	_seconds_counter,w	;volatile
  1796     02BE  1683               	bsf	3,5	;RP0=1, select bank1
  1797     02BF  1303               	bcf	3,6	;RP1=0, select bank1
  1798     02C0  00B8               	movwf	_lastdryruncheck^(0+128)
  1799                           
  1800                           ;main.c: 283:           } else if (seconds_counter - lastdryruncheck >= dryruntime) {
  1801     02C1  2B21               	goto	l220
  1802     02C2                     l3017:
  1803     02C2  0844               	movf	_dryruntime^(0+128),w
  1804     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1805     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1806     02C5  00C4               	movwf	??_main
  1807     02C6  1683               	bsf	3,5	;RP0=1, select bank1
  1808     02C7  1303               	bcf	3,6	;RP1=0, select bank1
  1809     02C8  0845               	movf	(_dryruntime+1)^(0+128),w
  1810     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1811     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1812     02CB  00C5               	movwf	??_main+1
  1813     02CC  01C6               	clrf	??_main+2
  1814     02CD  01C7               	clrf	??_main+3
  1815     02CE  0857               	movf	_seconds_counter,w	;volatile
  1816     02CF  00C8               	movwf	??_main+4
  1817     02D0  0858               	movf	_seconds_counter+1,w	;volatile
  1818     02D1  00C9               	movwf	??_main+5
  1819     02D2  0859               	movf	_seconds_counter+2,w	;volatile
  1820     02D3  00CA               	movwf	??_main+6
  1821     02D4  085A               	movf	_seconds_counter+3,w	;volatile
  1822     02D5  00CB               	movwf	??_main+7
  1823     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  1824     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  1825     02D8  0838               	movf	_lastdryruncheck^(0+128),w
  1826     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1827     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1828     02DB  02C8               	subwf	??_main+4,f
  1829     02DC  1683               	bsf	3,5	;RP0=1, select bank1
  1830     02DD  1303               	bcf	3,6	;RP1=0, select bank1
  1831     02DE  0839               	movf	(_lastdryruncheck+1)^(0+128),w
  1832     02DF  1C03               	skipc
  1833     02E0  0F39               	incfsz	(_lastdryruncheck+1)^(0+128),w
  1834     02E1  2AE3               	goto	u4851
  1835     02E2  2AE6               	goto	u4852
  1836     02E3                     u4851:
  1837     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  1838     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  1839     02E5  02C9               	subwf	??_main+5,f
  1840     02E6                     u4852:
  1841     02E6  1683               	bsf	3,5	;RP0=1, select bank1
  1842     02E7  1303               	bcf	3,6	;RP1=0, select bank1
  1843     02E8  083A               	movf	(_lastdryruncheck+2)^(0+128),w
  1844     02E9  1C03               	skipc
  1845     02EA  0F3A               	incfsz	(_lastdryruncheck+2)^(0+128),w
  1846     02EB  2AED               	goto	u4853
  1847     02EC  2AF0               	goto	u4854
  1848     02ED                     u4853:
  1849     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1850     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1851     02EF  02CA               	subwf	??_main+6,f
  1852     02F0                     u4854:
  1853     02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1854     02F1  1303               	bcf	3,6	;RP1=0, select bank1
  1855     02F2  083B               	movf	(_lastdryruncheck+3)^(0+128),w
  1856     02F3  1C03               	skipc
  1857     02F4  0F3B               	incfsz	(_lastdryruncheck+3)^(0+128),w
  1858     02F5  2AF7               	goto	u4855
  1859     02F6  2AFA               	goto	u4856
  1860     02F7                     u4855:
  1861     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1862     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1863     02F9  02CB               	subwf	??_main+7,f
  1864     02FA                     u4856:
  1865     02FA  1683               	bsf	3,5	;RP0=1, select bank1
  1866     02FB  1303               	bcf	3,6	;RP1=0, select bank1
  1867     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1868     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1869     02FE  0847               	movf	??_main+3,w
  1870     02FF  024B               	subwf	??_main+7,w
  1871     0300  1D03               	skipz
  1872     0301  2B0C               	goto	u4865
  1873     0302  0846               	movf	??_main+2,w
  1874     0303  024A               	subwf	??_main+6,w
  1875     0304  1D03               	skipz
  1876     0305  2B0C               	goto	u4865
  1877     0306  0845               	movf	??_main+1,w
  1878     0307  0249               	subwf	??_main+5,w
  1879     0308  1D03               	skipz
  1880     0309  2B0C               	goto	u4865
  1881     030A  0844               	movf	??_main,w
  1882     030B  0248               	subwf	??_main+4,w
  1883     030C                     u4865:
  1884     030C  1C03               	skipc
  1885     030D  2B0F               	goto	u4861
  1886     030E  2B10               	goto	u4860
  1887     030F                     u4861:
  1888     030F  2B21               	goto	l220
  1889     0310                     u4860:
  1890     0310                     l3019:
  1891                           
  1892                           ;main.c: 284:             dryrunerror = 1;
  1893     0310  3001               	movlw	1
  1894     0311  00E2               	movwf	_dryrunerror
  1895                           
  1896                           ;main.c: 285:             PORTAbits.RA2 = 1;
  1897     0312  1505               	bsf	5,2	;volatile
  1898     0313  2B21               	goto	l220
  1899     0314                     l3021:
  1900                           
  1901                           ;main.c: 288:           lastdryruncheck = 0;
  1902     0314  3000               	movlw	0
  1903     0315  1683               	bsf	3,5	;RP0=1, select bank1
  1904     0316  1303               	bcf	3,6	;RP1=0, select bank1
  1905     0317  00BB               	movwf	(_lastdryruncheck+3)^(0+128)
  1906     0318  3000               	movlw	0
  1907     0319  00BA               	movwf	(_lastdryruncheck+2)^(0+128)
  1908     031A  3000               	movlw	0
  1909     031B  00B9               	movwf	(_lastdryruncheck+1)^(0+128)
  1910     031C  3000               	movlw	0
  1911     031D  00B8               	movwf	_lastdryruncheck^(0+128)
  1912     031E                     l3023:
  1913                           
  1914                           ;main.c: 289:           PORTAbits.RA2 = 0;
  1915     031E  1283               	bcf	3,5	;RP0=0, select bank0
  1916     031F  1303               	bcf	3,6	;RP1=0, select bank0
  1917     0320  1105               	bcf	5,2	;volatile
  1918     0321                     l220:	
  1919                           ;main.c: 290:         }
  1920                           
  1921                           
  1922                           ;main.c: 292:         if (voltage > maximumrinningvoltage ||
  1923     0321  30A5               	movlw	165
  1924     0322  1283               	bcf	3,5	;RP0=0, select bank0
  1925     0323  0268               	subwf	_voltage,w
  1926     0324  1803               	skipnc
  1927     0325  2B27               	goto	u4871
  1928     0326  2B28               	goto	u4870
  1929     0327                     u4871:
  1930     0327  2B37               	goto	l3033
  1931     0328                     u4870:
  1932     0328                     l3025:
  1933                           
  1934                           ;main.c: 293:             voltage < minimumrunningvoltage) {;main.c: 294:           volt
      +                          ageerror = 1;
  1935     0328  3001               	movlw	1
  1936     0329  00E3               	movwf	_voltageerror
  1937     032A  2B37               	goto	l3033
  1938     032B                     l3027:
  1939                           
  1940                           ;main.c: 298:       if (motorrunning) {
  1941     032B  0860               	movf	_motorrunning,w
  1942     032C  1903               	btfsc	3,2
  1943     032D  2B2F               	goto	u4881
  1944     032E  2B30               	goto	u4880
  1945     032F                     u4881:
  1946     032F  2B37               	goto	l3033
  1947     0330                     u4880:
  1948     0330                     l3029:
  1949                           
  1950                           ;main.c: 299:         motorrunning = 0;
  1951     0330  01E0               	clrf	_motorrunning
  1952                           
  1953                           ;main.c: 300:         mannualon = 0;
  1954     0331  1683               	bsf	3,5	;RP0=1, select bank1
  1955     0332  1303               	bcf	3,6	;RP1=0, select bank1
  1956     0333  01CA               	clrf	_mannualon^(0+128)
  1957     0334                     l3031:
  1958                           
  1959                           ;main.c: 301:         PORTCbits.RC3 = 0;
  1960     0334  1283               	bcf	3,5	;RP0=0, select bank0
  1961     0335  1303               	bcf	3,6	;RP1=0, select bank0
  1962     0336  1187               	bcf	7,3	;volatile
  1963     0337                     l3033:
  1964                           
  1965                           ;main.c: 304:     if (timeouterror) {
  1966     0337  0861               	movf	_timeouterror,w
  1967     0338  1903               	btfsc	3,2
  1968     0339  2B3B               	goto	u4891
  1969     033A  2B3C               	goto	u4890
  1970     033B                     u4891:
  1971     033B  2B3D               	goto	l3037
  1972     033C                     u4890:
  1973     033C                     l3035:
  1974                           
  1975                           ;main.c: 305:       motorrunning = 0;
  1976     033C  01E0               	clrf	_motorrunning
  1977     033D                     l3037:
  1978                           
  1979                           ;main.c: 307:     if (dryrunerror) {
  1980     033D  0862               	movf	_dryrunerror,w
  1981     033E  1903               	btfsc	3,2
  1982     033F  2B41               	goto	u4901
  1983     0340  2B42               	goto	u4900
  1984     0341                     u4901:
  1985     0341  2B43               	goto	l3041
  1986     0342                     u4900:
  1987     0342                     l3039:
  1988                           
  1989                           ;main.c: 308:       motorrunning = 0;
  1990     0342  01E0               	clrf	_motorrunning
  1991     0343                     l3041:
  1992                           
  1993                           ;main.c: 311:     if (!motorrunning) {
  1994     0343  0860               	movf	_motorrunning,w
  1995     0344  1D03               	btfss	3,2
  1996     0345  2B47               	goto	u4911
  1997     0346  2B48               	goto	u4910
  1998     0347                     u4911:
  1999     0347  2B53               	goto	l226
  2000     0348                     u4910:
  2001     0348                     l3043:
  2002                           
  2003                           ;main.c: 312:       if (voltage > maxvoltagelimit || voltage < minvoltagelimit) {
  2004     0348  30B9               	movlw	185
  2005     0349  0268               	subwf	_voltage,w
  2006     034A  1803               	skipnc
  2007     034B  2B4D               	goto	u4921
  2008     034C  2B4E               	goto	u4920
  2009     034D                     u4921:
  2010     034D  2B50               	goto	l227
  2011     034E                     u4920:
  2012     034E                     l3045:
  2013                           
  2014                           ;main.c: 313:         voltageerror = 1;
  2015     034E  3001               	movlw	1
  2016     034F  00E3               	movwf	_voltageerror
  2017     0350                     l227:	
  2018                           ;main.c: 314:       }
  2019                           
  2020                           
  2021                           ;main.c: 315:       PORTCbits.RC3 = 0;
  2022     0350  1187               	bcf	7,3	;volatile
  2023                           
  2024                           ;main.c: 316:       PORTAbits.RA1 = 0;
  2025     0351  1085               	bcf	5,1	;volatile
  2026                           
  2027                           ;main.c: 317:     } else {
  2028     0352  2BB6               	goto	l3053
  2029     0353                     l226:
  2030                           
  2031                           ;main.c: 318:       PORTAbits.RA1 = 1;
  2032     0353  1485               	bsf	5,1	;volatile
  2033                           
  2034                           ;main.c: 319:       PORTCbits.RC3 = 1;
  2035     0354  1587               	bsf	7,3	;volatile
  2036     0355                     l3047:
  2037                           
  2038                           ;main.c: 320:       if (millis - lt >= 20000) {
  2039     0355  0853               	movf	_millis,w	;volatile
  2040     0356  00C4               	movwf	??_main
  2041     0357  0854               	movf	_millis+1,w	;volatile
  2042     0358  00C5               	movwf	??_main+1
  2043     0359  0855               	movf	_millis+2,w	;volatile
  2044     035A  00C6               	movwf	??_main+2
  2045     035B  0856               	movf	_millis+3,w	;volatile
  2046     035C  00C7               	movwf	??_main+3
  2047     035D  1683               	bsf	3,5	;RP0=1, select bank1
  2048     035E  1303               	bcf	3,6	;RP1=0, select bank1
  2049     035F  0824               	movf	_lt^(0+128),w
  2050     0360  1283               	bcf	3,5	;RP0=0, select bank0
  2051     0361  1303               	bcf	3,6	;RP1=0, select bank0
  2052     0362  02C4               	subwf	??_main,f
  2053     0363  1683               	bsf	3,5	;RP0=1, select bank1
  2054     0364  1303               	bcf	3,6	;RP1=0, select bank1
  2055     0365  0825               	movf	(_lt+1)^(0+128),w
  2056     0366  1C03               	skipc
  2057     0367  0F25               	incfsz	(_lt+1)^(0+128),w
  2058     0368  2B6A               	goto	u4931
  2059     0369  2B6D               	goto	u4932
  2060     036A                     u4931:
  2061     036A  1283               	bcf	3,5	;RP0=0, select bank0
  2062     036B  1303               	bcf	3,6	;RP1=0, select bank0
  2063     036C  02C5               	subwf	??_main+1,f
  2064     036D                     u4932:
  2065     036D  1683               	bsf	3,5	;RP0=1, select bank1
  2066     036E  1303               	bcf	3,6	;RP1=0, select bank1
  2067     036F  0826               	movf	(_lt+2)^(0+128),w
  2068     0370  1C03               	skipc
  2069     0371  0F26               	incfsz	(_lt+2)^(0+128),w
  2070     0372  2B74               	goto	u4933
  2071     0373  2B77               	goto	u4934
  2072     0374                     u4933:
  2073     0374  1283               	bcf	3,5	;RP0=0, select bank0
  2074     0375  1303               	bcf	3,6	;RP1=0, select bank0
  2075     0376  02C6               	subwf	??_main+2,f
  2076     0377                     u4934:
  2077     0377  1683               	bsf	3,5	;RP0=1, select bank1
  2078     0378  1303               	bcf	3,6	;RP1=0, select bank1
  2079     0379  0827               	movf	(_lt+3)^(0+128),w
  2080     037A  1C03               	skipc
  2081     037B  0F27               	incfsz	(_lt+3)^(0+128),w
  2082     037C  2B7E               	goto	u4935
  2083     037D  2B81               	goto	u4936
  2084     037E                     u4935:
  2085     037E  1283               	bcf	3,5	;RP0=0, select bank0
  2086     037F  1303               	bcf	3,6	;RP1=0, select bank0
  2087     0380  02C7               	subwf	??_main+3,f
  2088     0381                     u4936:
  2089     0381  1683               	bsf	3,5	;RP0=1, select bank1
  2090     0382  1303               	bcf	3,6	;RP1=0, select bank1
  2091     0383  1283               	bcf	3,5	;RP0=0, select bank0
  2092     0384  1303               	bcf	3,6	;RP1=0, select bank0
  2093     0385  0847               	movf	??_main+3,w
  2094     0386  1D03               	btfss	3,2
  2095     0387  2B97               	goto	u4940
  2096     0388  0846               	movf	??_main+2,w
  2097     0389  1D03               	btfss	3,2
  2098     038A  2B97               	goto	u4940
  2099     038B  304E               	movlw	78
  2100     038C  0245               	subwf	??_main+1,w
  2101     038D  1D03               	skipz
  2102     038E  2B93               	goto	u4943
  2103     038F  3020               	movlw	32
  2104     0390  0244               	subwf	??_main,w
  2105     0391  1D03               	skipz
  2106     0392  2B93               	goto	u4943
  2107     0393                     u4943:
  2108     0393  1C03               	btfss	3,0
  2109     0394  2B96               	goto	u4941
  2110     0395  2B97               	goto	u4940
  2111     0396                     u4941:
  2112     0396  2BB6               	goto	l3053
  2113     0397                     u4940:
  2114     0397                     l3049:
  2115                           
  2116                           ;main.c: 321:         lt = millis;
  2117     0397  1283               	bcf	3,5	;RP0=0, select bank0
  2118     0398  1303               	bcf	3,6	;RP1=0, select bank0
  2119     0399  0856               	movf	_millis+3,w	;volatile
  2120     039A  1683               	bsf	3,5	;RP0=1, select bank1
  2121     039B  1303               	bcf	3,6	;RP1=0, select bank1
  2122     039C  00A7               	movwf	(_lt+3)^(0+128)
  2123     039D  1283               	bcf	3,5	;RP0=0, select bank0
  2124     039E  1303               	bcf	3,6	;RP1=0, select bank0
  2125     039F  0855               	movf	_millis+2,w	;volatile
  2126     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2127     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2128     03A2  00A6               	movwf	(_lt+2)^(0+128)
  2129     03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2130     03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2131     03A5  0854               	movf	_millis+1,w	;volatile
  2132     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2133     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2134     03A8  00A5               	movwf	(_lt+1)^(0+128)
  2135     03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2136     03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2137     03AB  0853               	movf	_millis,w	;volatile
  2138     03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2139     03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2140     03AE  00A4               	movwf	_lt^(0+128)
  2141     03AF                     l3051:
  2142                           
  2143                           ;main.c: 323:         trigger_buzzer(200);
  2144     03AF  30C8               	movlw	200
  2145     03B0  00F2               	movwf	trigger_buzzer@duration_seconds
  2146     03B1  3000               	movlw	0
  2147     03B2  00F3               	movwf	trigger_buzzer@duration_seconds+1
  2148     03B3  158A  22FC  118A   	fcall	_trigger_buzzer
  2149     03B6                     l3053:
  2150                           
  2151                           ;main.c: 327:     if (voltageerror) {
  2152     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2153     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2154     03B8  0863               	movf	_voltageerror,w
  2155     03B9  1903               	btfsc	3,2
  2156     03BA  2BBC               	goto	u4951
  2157     03BB  2BBD               	goto	u4950
  2158     03BC                     u4951:
  2159     03BC  2C3E               	goto	l3073
  2160     03BD                     u4950:
  2161     03BD                     l3055:
  2162                           
  2163                           ;main.c: 328:       if (lastvoltageerror == 0) {
  2164     03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2165     03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2166     03BF  0833               	movf	(_lastvoltageerror+3)^(0+128),w
  2167     03C0  0432               	iorwf	(_lastvoltageerror+2)^(0+128),w
  2168     03C1  0431               	iorwf	(_lastvoltageerror+1)^(0+128),w
  2169     03C2  0430               	iorwf	_lastvoltageerror^(0+128),w
  2170     03C3  1D03               	skipz
  2171     03C4  2BC6               	goto	u4961
  2172     03C5  2BC7               	goto	u4960
  2173     03C6                     u4961:
  2174     03C6  2BE0               	goto	l3059
  2175     03C7                     u4960:
  2176     03C7                     l3057:
  2177                           
  2178                           ;main.c: 329:         lastvoltageerror = seconds_counter;
  2179     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2180     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2181     03C9  085A               	movf	_seconds_counter+3,w	;volatile
  2182     03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2183     03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2184     03CC  00B3               	movwf	(_lastvoltageerror+3)^(0+128)
  2185     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2186     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2187     03CF  0859               	movf	_seconds_counter+2,w	;volatile
  2188     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2189     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2190     03D2  00B2               	movwf	(_lastvoltageerror+2)^(0+128)
  2191     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2192     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2193     03D5  0858               	movf	_seconds_counter+1,w	;volatile
  2194     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  2195     03D7  1303               	bcf	3,6	;RP1=0, select bank1
  2196     03D8  00B1               	movwf	(_lastvoltageerror+1)^(0+128)
  2197     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2198     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2199     03DB  0857               	movf	_seconds_counter,w	;volatile
  2200     03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2201     03DD  1303               	bcf	3,6	;RP1=0, select bank1
  2202     03DE  00B0               	movwf	_lastvoltageerror^(0+128)
  2203                           
  2204                           ;main.c: 330:       } else if (seconds_counter - lastvoltageerror >= maxvoltageerrortime
      +                          ) {
  2205     03DF  2C39               	goto	l3069
  2206     03E0                     l3059:
  2207     03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2208     03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2209     03E2  0857               	movf	_seconds_counter,w	;volatile
  2210     03E3  00C4               	movwf	??_main
  2211     03E4  0858               	movf	_seconds_counter+1,w	;volatile
  2212     03E5  00C5               	movwf	??_main+1
  2213     03E6  0859               	movf	_seconds_counter+2,w	;volatile
  2214     03E7  00C6               	movwf	??_main+2
  2215     03E8  085A               	movf	_seconds_counter+3,w	;volatile
  2216     03E9  00C7               	movwf	??_main+3
  2217     03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2218     03EB  1303               	bcf	3,6	;RP1=0, select bank1
  2219     03EC  0830               	movf	_lastvoltageerror^(0+128),w
  2220     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2221     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2222     03EF  02C4               	subwf	??_main,f
  2223     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2224     03F1  1303               	bcf	3,6	;RP1=0, select bank1
  2225     03F2  0831               	movf	(_lastvoltageerror+1)^(0+128),w
  2226     03F3  1C03               	skipc
  2227     03F4  0F31               	incfsz	(_lastvoltageerror+1)^(0+128),w
  2228     03F5  2BF7               	goto	u4971
  2229     03F6  2BFA               	goto	u4972
  2230     03F7                     u4971:
  2231     03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2232     03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2233     03F9  02C5               	subwf	??_main+1,f
  2234     03FA                     u4972:
  2235     03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2236     03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2237     03FC  0832               	movf	(_lastvoltageerror+2)^(0+128),w
  2238     03FD  1C03               	skipc
  2239     03FE  0F32               	incfsz	(_lastvoltageerror+2)^(0+128),w
  2240     03FF  2C01               	goto	u4973
  2241     0400  2C04               	goto	u4974
  2242     0401                     u4973:
  2243     0401  1283               	bcf	3,5	;RP0=0, select bank0
  2244     0402  1303               	bcf	3,6	;RP1=0, select bank0
  2245     0403  02C6               	subwf	??_main+2,f
  2246     0404                     u4974:
  2247     0404  1683               	bsf	3,5	;RP0=1, select bank1
  2248     0405  1303               	bcf	3,6	;RP1=0, select bank1
  2249     0406  0833               	movf	(_lastvoltageerror+3)^(0+128),w
  2250     0407  1C03               	skipc
  2251     0408  0F33               	incfsz	(_lastvoltageerror+3)^(0+128),w
  2252     0409  2C0B               	goto	u4975
  2253     040A  2C0E               	goto	u4976
  2254     040B                     u4975:
  2255     040B  1283               	bcf	3,5	;RP0=0, select bank0
  2256     040C  1303               	bcf	3,6	;RP1=0, select bank0
  2257     040D  02C7               	subwf	??_main+3,f
  2258     040E                     u4976:
  2259     040E  1683               	bsf	3,5	;RP0=1, select bank1
  2260     040F  1303               	bcf	3,6	;RP1=0, select bank1
  2261     0410  1283               	bcf	3,5	;RP0=0, select bank0
  2262     0411  1303               	bcf	3,6	;RP1=0, select bank0
  2263     0412  0847               	movf	??_main+3,w
  2264     0413  1D03               	btfss	3,2
  2265     0414  2C23               	goto	u4980
  2266     0415  0846               	movf	??_main+2,w
  2267     0416  1D03               	btfss	3,2
  2268     0417  2C23               	goto	u4980
  2269     0418  0845               	movf	??_main+1,w
  2270     0419  1D03               	btfss	3,2
  2271     041A  2C23               	goto	u4980
  2272     041B  300F               	movlw	15
  2273     041C  0244               	subwf	??_main,w
  2274     041D  1D03               	skipz
  2275     041E  2C1F               	goto	u4983
  2276     041F                     u4983:
  2277     041F  1C03               	btfss	3,0
  2278     0420  2C22               	goto	u4981
  2279     0421  2C23               	goto	u4980
  2280     0422                     u4981:
  2281     0422  2C39               	goto	l3069
  2282     0423                     u4980:
  2283     0423                     l3061:
  2284                           
  2285                           ;main.c: 331:         if (voltage > maxvoltagelimit || voltage < minvoltagelimit) {
  2286     0423  30B9               	movlw	185
  2287     0424  1283               	bcf	3,5	;RP0=0, select bank0
  2288     0425  1303               	bcf	3,6	;RP1=0, select bank0
  2289     0426  0268               	subwf	_voltage,w
  2290     0427  1803               	skipnc
  2291     0428  2C2A               	goto	u4991
  2292     0429  2C2B               	goto	u4990
  2293     042A                     u4991:
  2294     042A  2C2E               	goto	l3065
  2295     042B                     u4990:
  2296     042B                     l3063:
  2297                           
  2298                           ;main.c: 332:           voltageerror = 1;
  2299     042B  3001               	movlw	1
  2300     042C  00E3               	movwf	_voltageerror
  2301                           
  2302                           ;main.c: 333:         } else {
  2303     042D  2C2F               	goto	l3067
  2304     042E                     l3065:
  2305                           
  2306                           ;main.c: 334:           voltageerror = 0;
  2307     042E  01E3               	clrf	_voltageerror
  2308     042F                     l3067:
  2309                           
  2310                           ;main.c: 336:         lastvoltageerror = 0;
  2311     042F  3000               	movlw	0
  2312     0430  1683               	bsf	3,5	;RP0=1, select bank1
  2313     0431  1303               	bcf	3,6	;RP1=0, select bank1
  2314     0432  00B3               	movwf	(_lastvoltageerror+3)^(0+128)
  2315     0433  3000               	movlw	0
  2316     0434  00B2               	movwf	(_lastvoltageerror+2)^(0+128)
  2317     0435  3000               	movlw	0
  2318     0436  00B1               	movwf	(_lastvoltageerror+1)^(0+128)
  2319     0437  3000               	movlw	0
  2320     0438  00B0               	movwf	_lastvoltageerror^(0+128)
  2321     0439                     l3069:
  2322                           
  2323                           ;main.c: 339:       motorrunning = 0;
  2324     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2325     043A  1303               	bcf	3,6	;RP1=0, select bank0
  2326     043B  01E0               	clrf	_motorrunning
  2327     043C                     l3071:
  2328                           
  2329                           ;main.c: 340:       PORTAbits.RA0 = 0;
  2330     043C  1005               	bcf	5,0	;volatile
  2331                           
  2332                           ;main.c: 341:     } else if (lastvoltageerror != 0 &&
  2333     043D  2C99               	goto	l3079
  2334     043E                     l3073:
  2335     043E  1683               	bsf	3,5	;RP0=1, select bank1
  2336     043F  1303               	bcf	3,6	;RP1=0, select bank1
  2337     0440  0833               	movf	(_lastvoltageerror+3)^(0+128),w
  2338     0441  0432               	iorwf	(_lastvoltageerror+2)^(0+128),w
  2339     0442  0431               	iorwf	(_lastvoltageerror+1)^(0+128),w
  2340     0443  0430               	iorwf	_lastvoltageerror^(0+128),w
  2341     0444  1903               	skipnz
  2342     0445  2C47               	goto	u5001
  2343     0446  2C48               	goto	u5000
  2344     0447                     u5001:
  2345     0447  2C96               	goto	l237
  2346     0448                     u5000:
  2347     0448                     l3075:
  2348     0448  1283               	bcf	3,5	;RP0=0, select bank0
  2349     0449  1303               	bcf	3,6	;RP1=0, select bank0
  2350     044A  0857               	movf	_seconds_counter,w	;volatile
  2351     044B  00C4               	movwf	??_main
  2352     044C  0858               	movf	_seconds_counter+1,w	;volatile
  2353     044D  00C5               	movwf	??_main+1
  2354     044E  0859               	movf	_seconds_counter+2,w	;volatile
  2355     044F  00C6               	movwf	??_main+2
  2356     0450  085A               	movf	_seconds_counter+3,w	;volatile
  2357     0451  00C7               	movwf	??_main+3
  2358     0452  1683               	bsf	3,5	;RP0=1, select bank1
  2359     0453  1303               	bcf	3,6	;RP1=0, select bank1
  2360     0454  0830               	movf	_lastvoltageerror^(0+128),w
  2361     0455  1283               	bcf	3,5	;RP0=0, select bank0
  2362     0456  1303               	bcf	3,6	;RP1=0, select bank0
  2363     0457  02C4               	subwf	??_main,f
  2364     0458  1683               	bsf	3,5	;RP0=1, select bank1
  2365     0459  1303               	bcf	3,6	;RP1=0, select bank1
  2366     045A  0831               	movf	(_lastvoltageerror+1)^(0+128),w
  2367     045B  1C03               	skipc
  2368     045C  0F31               	incfsz	(_lastvoltageerror+1)^(0+128),w
  2369     045D  2C5F               	goto	u5011
  2370     045E  2C62               	goto	u5012
  2371     045F                     u5011:
  2372     045F  1283               	bcf	3,5	;RP0=0, select bank0
  2373     0460  1303               	bcf	3,6	;RP1=0, select bank0
  2374     0461  02C5               	subwf	??_main+1,f
  2375     0462                     u5012:
  2376     0462  1683               	bsf	3,5	;RP0=1, select bank1
  2377     0463  1303               	bcf	3,6	;RP1=0, select bank1
  2378     0464  0832               	movf	(_lastvoltageerror+2)^(0+128),w
  2379     0465  1C03               	skipc
  2380     0466  0F32               	incfsz	(_lastvoltageerror+2)^(0+128),w
  2381     0467  2C69               	goto	u5013
  2382     0468  2C6C               	goto	u5014
  2383     0469                     u5013:
  2384     0469  1283               	bcf	3,5	;RP0=0, select bank0
  2385     046A  1303               	bcf	3,6	;RP1=0, select bank0
  2386     046B  02C6               	subwf	??_main+2,f
  2387     046C                     u5014:
  2388     046C  1683               	bsf	3,5	;RP0=1, select bank1
  2389     046D  1303               	bcf	3,6	;RP1=0, select bank1
  2390     046E  0833               	movf	(_lastvoltageerror+3)^(0+128),w
  2391     046F  1C03               	skipc
  2392     0470  0F33               	incfsz	(_lastvoltageerror+3)^(0+128),w
  2393     0471  2C73               	goto	u5015
  2394     0472  2C76               	goto	u5016
  2395     0473                     u5015:
  2396     0473  1283               	bcf	3,5	;RP0=0, select bank0
  2397     0474  1303               	bcf	3,6	;RP1=0, select bank0
  2398     0475  02C7               	subwf	??_main+3,f
  2399     0476                     u5016:
  2400     0476  1683               	bsf	3,5	;RP0=1, select bank1
  2401     0477  1303               	bcf	3,6	;RP1=0, select bank1
  2402     0478  1283               	bcf	3,5	;RP0=0, select bank0
  2403     0479  1303               	bcf	3,6	;RP1=0, select bank0
  2404     047A  0847               	movf	??_main+3,w
  2405     047B  1D03               	btfss	3,2
  2406     047C  2C8B               	goto	u5020
  2407     047D  0846               	movf	??_main+2,w
  2408     047E  1D03               	btfss	3,2
  2409     047F  2C8B               	goto	u5020
  2410     0480  0845               	movf	??_main+1,w
  2411     0481  1D03               	btfss	3,2
  2412     0482  2C8B               	goto	u5020
  2413     0483  300F               	movlw	15
  2414     0484  0244               	subwf	??_main,w
  2415     0485  1D03               	skipz
  2416     0486  2C87               	goto	u5023
  2417     0487                     u5023:
  2418     0487  1C03               	btfss	3,0
  2419     0488  2C8A               	goto	u5021
  2420     0489  2C8B               	goto	u5020
  2421     048A                     u5021:
  2422     048A  2C96               	goto	l237
  2423     048B                     u5020:
  2424     048B                     l3077:
  2425                           
  2426                           ;main.c: 342:                (seconds_counter - lastvoltageerror >= maxvoltageerrortime)
      +                          ) {;main.c: 343:       lastvoltageerror = 0;
  2427     048B  3000               	movlw	0
  2428     048C  1683               	bsf	3,5	;RP0=1, select bank1
  2429     048D  1303               	bcf	3,6	;RP1=0, select bank1
  2430     048E  00B3               	movwf	(_lastvoltageerror+3)^(0+128)
  2431     048F  3000               	movlw	0
  2432     0490  00B2               	movwf	(_lastvoltageerror+2)^(0+128)
  2433     0491  3000               	movlw	0
  2434     0492  00B1               	movwf	(_lastvoltageerror+1)^(0+128)
  2435     0493  3000               	movlw	0
  2436     0494  00B0               	movwf	_lastvoltageerror^(0+128)
  2437                           
  2438                           ;main.c: 344:     } else {
  2439     0495  2C99               	goto	l3079
  2440     0496                     l237:
  2441                           
  2442                           ;main.c: 345:       PORTAbits.RA0 = 1;
  2443     0496  1283               	bcf	3,5	;RP0=0, select bank0
  2444     0497  1303               	bcf	3,6	;RP1=0, select bank0
  2445     0498  1405               	bsf	5,0	;volatile
  2446     0499                     l3079:
  2447                           
  2448                           ;main.c: 348:     dispinfo(100);
  2449     0499  3064               	movlw	100
  2450     049A  158A  26E1  118A   	fcall	_dispinfo
  2451     049D  2984               	goto	l205
  2452     049E  118A  280B         	ljmp	start
  2453     04A0                     __end_of_main:
  2454                           
  2455                           	psect	text1
  2456     0AFC                     __ptext1:	
  2457 ;; *************** function _trigger_buzzer *****************
  2458 ;; Defined at:
  2459 ;;		line 548 in file "main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  duration_sec    2    2[COMMON] unsigned int 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2473 ;;      Params:         2       0       0       0
  2474 ;;      Locals:         0       0       0       0
  2475 ;;      Temps:          0       0       0       0
  2476 ;;      Totals:         2       0       0       0
  2477 ;;Total ram usage:        2 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487     0AFC                     _trigger_buzzer:	
  2488                           ;psect for function _trigger_buzzer
  2489                           
  2490     0AFC                     l2671:	
  2491                           ;incstack = 0
  2492                           ; Regs used in _trigger_buzzer: [wreg+status,2+status,0]
  2493                           
  2494                           
  2495                           ;main.c: 549:   if (!buzzer_active) {
  2496     0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  2497     0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  2498     0AFE  085B               	movf	_buzzer_active,w
  2499     0AFF  1D03               	btfss	3,2
  2500     0B00  2B02               	goto	u4201
  2501     0B01  2B03               	goto	u4200
  2502     0B02                     u4201:
  2503     0B02  2B22               	goto	l308
  2504     0B03                     u4200:
  2505     0B03                     l2673:
  2506                           
  2507                           ;main.c: 550:     PORTCbits.RC4 = 1;
  2508     0B03  1607               	bsf	7,4	;volatile
  2509     0B04                     l2675:
  2510                           
  2511                           ;main.c: 551:     buzzer_start_time = millis;
  2512     0B04  0856               	movf	_millis+3,w	;volatile
  2513     0B05  1683               	bsf	3,5	;RP0=1, select bank1
  2514     0B06  1303               	bcf	3,6	;RP1=0, select bank1
  2515     0B07  00AB               	movwf	(_buzzer_start_time+3)^(0+128)
  2516     0B08  1283               	bcf	3,5	;RP0=0, select bank0
  2517     0B09  1303               	bcf	3,6	;RP1=0, select bank0
  2518     0B0A  0855               	movf	_millis+2,w	;volatile
  2519     0B0B  1683               	bsf	3,5	;RP0=1, select bank1
  2520     0B0C  1303               	bcf	3,6	;RP1=0, select bank1
  2521     0B0D  00AA               	movwf	(_buzzer_start_time+2)^(0+128)
  2522     0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  2523     0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  2524     0B10  0854               	movf	_millis+1,w	;volatile
  2525     0B11  1683               	bsf	3,5	;RP0=1, select bank1
  2526     0B12  1303               	bcf	3,6	;RP1=0, select bank1
  2527     0B13  00A9               	movwf	(_buzzer_start_time+1)^(0+128)
  2528     0B14  1283               	bcf	3,5	;RP0=0, select bank0
  2529     0B15  1303               	bcf	3,6	;RP1=0, select bank0
  2530     0B16  0853               	movf	_millis,w	;volatile
  2531     0B17  1683               	bsf	3,5	;RP0=1, select bank1
  2532     0B18  1303               	bcf	3,6	;RP1=0, select bank1
  2533     0B19  00A8               	movwf	_buzzer_start_time^(0+128)
  2534                           
  2535                           ;main.c: 552:     buzzer_duration = duration_seconds;
  2536     0B1A  0873               	movf	trigger_buzzer@duration_seconds+1,w
  2537     0B1B  00C1               	movwf	(_buzzer_duration+1)^(0+128)
  2538     0B1C  0872               	movf	trigger_buzzer@duration_seconds,w
  2539     0B1D  00C0               	movwf	_buzzer_duration^(0+128)
  2540     0B1E                     l2677:
  2541                           
  2542                           ;main.c: 553:     buzzer_active = 1;
  2543     0B1E  3001               	movlw	1
  2544     0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  2545     0B20  1303               	bcf	3,6	;RP1=0, select bank0
  2546     0B21  00DB               	movwf	_buzzer_active
  2547     0B22                     l308:
  2548     0B22  0008               	return
  2549     0B23                     __end_of_trigger_buzzer:
  2550                           
  2551                           	psect	text2
  2552     0A99                     __ptext2:	
  2553 ;; *************** function _init_timer *****************
  2554 ;; Defined at:
  2555 ;;		line 466 in file "main.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;		None
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;		None
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		None
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2569 ;;      Params:         0       0       0       0
  2570 ;;      Locals:         0       0       0       0
  2571 ;;      Temps:          0       0       0       0
  2572 ;;      Totals:         0       0       0       0
  2573 ;;Total ram usage:        0 bytes
  2574 ;; Hardware stack levels used: 1
  2575 ;; Hardware stack levels required when called: 1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583     0A99                     _init_timer:	
  2584                           ;psect for function _init_timer
  2585                           
  2586     0A99                     l2687:	
  2587                           ;incstack = 0
  2588                           ; Regs used in _init_timer: []
  2589                           
  2590                           
  2591                           ;main.c: 467:   T1CON = 0b00110000;
  2592     0A99  3030               	movlw	48
  2593     0A9A  1283               	bcf	3,5	;RP0=0, select bank0
  2594     0A9B  1303               	bcf	3,6	;RP1=0, select bank0
  2595     0A9C  0090               	movwf	16	;volatile
  2596                           
  2597                           ;main.c: 469:   TMR1H = 255;
  2598     0A9D  30FF               	movlw	255
  2599     0A9E  008F               	movwf	15	;volatile
  2600                           
  2601                           ;main.c: 470:   TMR1L = 14;
  2602     0A9F  300E               	movlw	14
  2603     0AA0  008E               	movwf	14	;volatile
  2604                           
  2605                           ;main.c: 472:   PIE1bits.TMR1IE = 1;
  2606     0AA1  1683               	bsf	3,5	;RP0=1, select bank1
  2607     0AA2  1303               	bcf	3,6	;RP1=0, select bank1
  2608     0AA3  140C               	bsf	12,0	;volatile
  2609                           
  2610                           ;main.c: 473:   INTCONbits.PEIE = 1;
  2611     0AA4  170B               	bsf	11,6	;volatile
  2612                           
  2613                           ;main.c: 474:   INTCONbits.GIE = 1;
  2614     0AA5  178B               	bsf	11,7	;volatile
  2615                           
  2616                           ;main.c: 476:   T1CONbits.TMR1ON = 1;
  2617     0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  2618     0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  2619     0AA8  1410               	bsf	16,0	;volatile
  2620     0AA9                     l276:
  2621     0AA9  0008               	return
  2622     0AAA                     __end_of_init_timer:
  2623                           
  2624                           	psect	text3
  2625     0B51                     __ptext3:	
  2626 ;; *************** function _initSystem *****************
  2627 ;; Defined at:
  2628 ;;		line 352 in file "main.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;		None
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2642 ;;      Params:         0       0       0       0
  2643 ;;      Locals:         0       0       0       0
  2644 ;;      Temps:          2       0       0       0
  2645 ;;      Totals:         2       0       0       0
  2646 ;;Total ram usage:        2 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_main
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656     0B51                     _initSystem:	
  2657                           ;psect for function _initSystem
  2658                           
  2659     0B51                     l2633:	
  2660                           ;incstack = 0
  2661                           ; Regs used in _initSystem: [wreg+status,2+status,0]
  2662                           
  2663                           
  2664                           ;main.c: 354:   OSCCONbits.IRCF = 0b111;
  2665     0B51  3070               	movlw	112
  2666     0B52  1683               	bsf	3,5	;RP0=1, select bank1
  2667     0B53  1303               	bcf	3,6	;RP1=0, select bank1
  2668     0B54  048F               	iorwf	15,f	;volatile
  2669     0B55                     l2635:
  2670                           
  2671                           ;main.c: 355:   ANSEL = 0b00011000;
  2672     0B55  3018               	movlw	24
  2673     0B56  1683               	bsf	3,5	;RP0=1, select bank3
  2674     0B57  1703               	bsf	3,6	;RP1=1, select bank3
  2675     0B58  0088               	movwf	8	;volatile
  2676     0B59                     l2637:
  2677                           
  2678                           ;main.c: 356:   ANSELH = 0x00;
  2679     0B59  0189               	clrf	9	;volatile
  2680     0B5A                     l2639:
  2681                           
  2682                           ;main.c: 357:   TRISA = 0b11101000;
  2683     0B5A  30E8               	movlw	232
  2684     0B5B  1683               	bsf	3,5	;RP0=1, select bank1
  2685     0B5C  1303               	bcf	3,6	;RP1=0, select bank1
  2686     0B5D  0085               	movwf	5	;volatile
  2687     0B5E                     l2641:
  2688                           
  2689                           ;main.c: 358:   TRISB = 0b00111000;
  2690     0B5E  3038               	movlw	56
  2691     0B5F  0086               	movwf	6	;volatile
  2692     0B60                     l2643:
  2693                           
  2694                           ;main.c: 359:   TRISC = 0b00000011;
  2695     0B60  3003               	movlw	3
  2696     0B61  0087               	movwf	7	;volatile
  2697     0B62                     l2645:
  2698                           
  2699                           ;main.c: 361:   ADCON0 = 0b00001101;
  2700     0B62  300D               	movlw	13
  2701     0B63  1283               	bcf	3,5	;RP0=0, select bank0
  2702     0B64  1303               	bcf	3,6	;RP1=0, select bank0
  2703     0B65  009F               	movwf	31	;volatile
  2704     0B66                     l2647:
  2705                           
  2706                           ;main.c: 362:   ADCON1 = 0b10000000;
  2707     0B66  3080               	movlw	128
  2708     0B67  1683               	bsf	3,5	;RP0=1, select bank1
  2709     0B68  1303               	bcf	3,6	;RP1=0, select bank1
  2710     0B69  009F               	movwf	31	;volatile
  2711     0B6A                     l2649:
  2712                           
  2713                           ;main.c: 364:   _delay((unsigned long)((10)*(8000000/4000.0)));
  2714     0B6A  301A               	movlw	26
  2715     0B6B  00F3               	movwf	??_initSystem+1
  2716     0B6C  30F8               	movlw	248
  2717     0B6D  00F2               	movwf	??_initSystem
  2718     0B6E                     u5057:
  2719     0B6E  0BF2               	decfsz	??_initSystem,f
  2720     0B6F  2B6E               	goto	u5057
  2721     0B70  0BF3               	decfsz	??_initSystem+1,f
  2722     0B71  2B6E               	goto	u5057
  2723     0B72  0000               	nop
  2724     0B73                     l2651:
  2725                           
  2726                           ;main.c: 365:   PORTA = 0x00;
  2727     0B73  1283               	bcf	3,5	;RP0=0, select bank0
  2728     0B74  1303               	bcf	3,6	;RP1=0, select bank0
  2729     0B75  0185               	clrf	5	;volatile
  2730     0B76                     l2653:
  2731                           
  2732                           ;main.c: 366:   PORTB = 0x00;
  2733     0B76  0186               	clrf	6	;volatile
  2734     0B77                     l2655:
  2735                           
  2736                           ;main.c: 367:   PORTC = 0x00;
  2737     0B77  0187               	clrf	7	;volatile
  2738     0B78                     l2657:
  2739                           
  2740                           ;main.c: 369:   PORTCbits.RC5 = 0;
  2741     0B78  1287               	bcf	7,5	;volatile
  2742     0B79                     l2659:
  2743                           
  2744                           ;main.c: 370:   PORTCbits.RC6 = 0;
  2745     0B79  1307               	bcf	7,6	;volatile
  2746     0B7A                     l2661:
  2747                           
  2748                           ;main.c: 371:   PORTBbits.RB0 = 0;
  2749     0B7A  1006               	bcf	6,0	;volatile
  2750     0B7B                     l2663:
  2751                           
  2752                           ;main.c: 372:   PORTBbits.RB1 = 0;
  2753     0B7B  1086               	bcf	6,1	;volatile
  2754     0B7C                     l2665:
  2755                           
  2756                           ;main.c: 373:   PORTBbits.RB2 = 0;
  2757     0B7C  1106               	bcf	6,2	;volatile
  2758     0B7D                     l2667:
  2759                           
  2760                           ;main.c: 374:   PORTCbits.RC7 = 0;
  2761     0B7D  1387               	bcf	7,7	;volatile
  2762     0B7E                     l2669:
  2763                           
  2764                           ;main.c: 376:   PORTCbits.RC4 = 0;
  2765     0B7E  1207               	bcf	7,4	;volatile
  2766     0B7F                     l244:
  2767     0B7F  0008               	return
  2768     0B80                     __end_of_initSystem:
  2769                           
  2770                           	psect	text4
  2771     0E72                     __ptext4:	
  2772 ;; *************** function _initLCD *****************
  2773 ;; Defined at:
  2774 ;;		line 615 in file "main.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2788 ;;      Params:         0       0       0       0
  2789 ;;      Locals:         0       0       0       0
  2790 ;;      Temps:          2       0       0       0
  2791 ;;      Totals:         2       0       0       0
  2792 ;;Total ram usage:        2 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 2
  2795 ;; This function calls:
  2796 ;;		_lcd_cmd
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     0E72                     _initLCD:	
  2803                           ;psect for function _initLCD
  2804                           
  2805     0E72                     l2689:	
  2806                           ;incstack = 0
  2807                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  2808                           
  2809                           
  2810                           ;main.c: 617:   _delay((unsigned long)((15)*(8000000/4000.0)));
  2811     0E72  3027               	movlw	39
  2812     0E73  00F5               	movwf	??_initLCD+1
  2813     0E74  30F5               	movlw	245
  2814     0E75  00F4               	movwf	??_initLCD
  2815     0E76                     u5067:
  2816     0E76  0BF4               	decfsz	??_initLCD,f
  2817     0E77  2E76               	goto	u5067
  2818     0E78  0BF5               	decfsz	??_initLCD+1,f
  2819     0E79  2E76               	goto	u5067
  2820     0E7A                     l2691:
  2821                           
  2822                           ;main.c: 621:   PORTCbits.RC5 = 0;
  2823     0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  2824     0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  2825     0E7C  1287               	bcf	7,5	;volatile
  2826     0E7D                     l2693:
  2827                           
  2828                           ;main.c: 622:   PORTCbits.RC7 = 0;
  2829     0E7D  1387               	bcf	7,7	;volatile
  2830     0E7E                     l2695:
  2831                           
  2832                           ;main.c: 623:   PORTBbits.RB2 = 0;
  2833     0E7E  1106               	bcf	6,2	;volatile
  2834     0E7F                     l2697:
  2835                           
  2836                           ;main.c: 624:   PORTBbits.RB1 = 1;
  2837     0E7F  1486               	bsf	6,1	;volatile
  2838     0E80                     l2699:
  2839                           
  2840                           ;main.c: 625:   PORTBbits.RB0 = 1;
  2841     0E80  1406               	bsf	6,0	;volatile
  2842     0E81                     l2701:
  2843                           
  2844                           ;main.c: 626:   PORTCbits.RC6 = 1;
  2845     0E81  1707               	bsf	7,6	;volatile
  2846     0E82                     l2703:
  2847                           
  2848                           ;main.c: 627:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2849     0E82  2E83               	nop2	;2 cycle nop
  2850     0E83                     l2705:
  2851                           
  2852                           ;main.c: 628:   PORTCbits.RC6 = 0;
  2853     0E83  1283               	bcf	3,5	;RP0=0, select bank0
  2854     0E84  1303               	bcf	3,6	;RP1=0, select bank0
  2855     0E85  1307               	bcf	7,6	;volatile
  2856                           
  2857                           ;main.c: 629:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2858     0E86  300D               	movlw	13
  2859     0E87  00F5               	movwf	??_initLCD+1
  2860     0E88  30FB               	movlw	251
  2861     0E89  00F4               	movwf	??_initLCD
  2862     0E8A                     u5077:
  2863     0E8A  0BF4               	decfsz	??_initLCD,f
  2864     0E8B  2E8A               	goto	u5077
  2865     0E8C  0BF5               	decfsz	??_initLCD+1,f
  2866     0E8D  2E8A               	goto	u5077
  2867     0E8E  2E8F               	nop2
  2868     0E8F                     l2707:
  2869                           
  2870                           ;main.c: 632:   PORTCbits.RC6 = 1;
  2871     0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  2872     0E90  1303               	bcf	3,6	;RP1=0, select bank0
  2873     0E91  1707               	bsf	7,6	;volatile
  2874     0E92                     l2709:
  2875                           
  2876                           ;main.c: 633:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2877     0E92  2E93               	nop2	;2 cycle nop
  2878     0E93                     l2711:
  2879                           
  2880                           ;main.c: 634:   PORTCbits.RC6 = 0;
  2881     0E93  1283               	bcf	3,5	;RP0=0, select bank0
  2882     0E94  1303               	bcf	3,6	;RP1=0, select bank0
  2883     0E95  1307               	bcf	7,6	;volatile
  2884                           
  2885                           ;main.c: 635:   _delay((unsigned long)((1)*(8000000/4000.0)));
  2886     0E96  3003               	movlw	3
  2887     0E97  00F5               	movwf	??_initLCD+1
  2888     0E98  3097               	movlw	151
  2889     0E99  00F4               	movwf	??_initLCD
  2890     0E9A                     u5087:
  2891     0E9A  0BF4               	decfsz	??_initLCD,f
  2892     0E9B  2E9A               	goto	u5087
  2893     0E9C  0BF5               	decfsz	??_initLCD+1,f
  2894     0E9D  2E9A               	goto	u5087
  2895     0E9E  2E9F               	nop2
  2896     0E9F                     l2713:
  2897                           
  2898                           ;main.c: 638:   PORTCbits.RC6 = 1;
  2899     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  2900     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  2901     0EA1  1707               	bsf	7,6	;volatile
  2902     0EA2                     l2715:
  2903                           
  2904                           ;main.c: 639:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2905     0EA2  2EA3               	nop2	;2 cycle nop
  2906     0EA3                     l2717:
  2907                           
  2908                           ;main.c: 640:   PORTCbits.RC6 = 0;
  2909     0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  2910     0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  2911     0EA5  1307               	bcf	7,6	;volatile
  2912                           
  2913                           ;main.c: 641:   _delay((unsigned long)((1)*(8000000/4000.0)));
  2914     0EA6  3003               	movlw	3
  2915     0EA7  00F5               	movwf	??_initLCD+1
  2916     0EA8  3097               	movlw	151
  2917     0EA9  00F4               	movwf	??_initLCD
  2918     0EAA                     u5097:
  2919     0EAA  0BF4               	decfsz	??_initLCD,f
  2920     0EAB  2EAA               	goto	u5097
  2921     0EAC  0BF5               	decfsz	??_initLCD+1,f
  2922     0EAD  2EAA               	goto	u5097
  2923     0EAE  2EAF               	nop2
  2924     0EAF                     l2719:
  2925                           
  2926                           ;main.c: 644:   PORTCbits.RC7 = 0;
  2927     0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  2928     0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  2929     0EB1  1387               	bcf	7,7	;volatile
  2930     0EB2                     l2721:
  2931                           
  2932                           ;main.c: 645:   PORTBbits.RB2 = 0;
  2933     0EB2  1106               	bcf	6,2	;volatile
  2934     0EB3                     l2723:
  2935                           
  2936                           ;main.c: 646:   PORTBbits.RB1 = 1;
  2937     0EB3  1486               	bsf	6,1	;volatile
  2938     0EB4                     l2725:
  2939                           
  2940                           ;main.c: 647:   PORTBbits.RB0 = 0;
  2941     0EB4  1006               	bcf	6,0	;volatile
  2942     0EB5                     l2727:
  2943                           
  2944                           ;main.c: 648:   PORTCbits.RC6 = 1;
  2945     0EB5  1707               	bsf	7,6	;volatile
  2946     0EB6                     l2729:
  2947                           
  2948                           ;main.c: 649:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2949     0EB6  2EB7               	nop2	;2 cycle nop
  2950     0EB7                     l2731:
  2951                           
  2952                           ;main.c: 650:   PORTCbits.RC6 = 0;
  2953     0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  2954     0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  2955     0EB9  1307               	bcf	7,6	;volatile
  2956                           
  2957                           ;main.c: 651:   _delay((unsigned long)((1)*(8000000/4000.0)));
  2958     0EBA  3003               	movlw	3
  2959     0EBB  00F5               	movwf	??_initLCD+1
  2960     0EBC  3097               	movlw	151
  2961     0EBD  00F4               	movwf	??_initLCD
  2962     0EBE                     u5107:
  2963     0EBE  0BF4               	decfsz	??_initLCD,f
  2964     0EBF  2EBE               	goto	u5107
  2965     0EC0  0BF5               	decfsz	??_initLCD+1,f
  2966     0EC1  2EBE               	goto	u5107
  2967     0EC2  2EC3               	nop2
  2968     0EC3                     l2733:
  2969                           
  2970                           ;main.c: 655:   lcd_cmd(0x28);
  2971     0EC3  3028               	movlw	40
  2972     0EC4  158A  259D  158A   	fcall	_lcd_cmd
  2973     0EC7                     l2735:
  2974                           
  2975                           ;main.c: 658:   lcd_cmd(0x08);
  2976     0EC7  3008               	movlw	8
  2977     0EC8  158A  259D  158A   	fcall	_lcd_cmd
  2978     0ECB                     l2737:
  2979                           
  2980                           ;main.c: 661:   lcd_cmd(0x01);
  2981     0ECB  3001               	movlw	1
  2982     0ECC  158A  259D  158A   	fcall	_lcd_cmd
  2983     0ECF                     l2739:
  2984                           
  2985                           ;main.c: 662:   _delay((unsigned long)((2)*(8000000/4000.0)));
  2986     0ECF  3006               	movlw	6
  2987     0ED0  00F5               	movwf	??_initLCD+1
  2988     0ED1  3030               	movlw	48
  2989     0ED2  00F4               	movwf	??_initLCD
  2990     0ED3                     u5117:
  2991     0ED3  0BF4               	decfsz	??_initLCD,f
  2992     0ED4  2ED3               	goto	u5117
  2993     0ED5  0BF5               	decfsz	??_initLCD+1,f
  2994     0ED6  2ED3               	goto	u5117
  2995     0ED7  0000               	nop
  2996                           
  2997                           ;main.c: 665:   lcd_cmd(0x06);
  2998     0ED8  3006               	movlw	6
  2999     0ED9  158A  259D  158A   	fcall	_lcd_cmd
  3000                           
  3001                           ;main.c: 668:   lcd_cmd(0x0C);
  3002     0EDC  300C               	movlw	12
  3003     0EDD  158A  259D  158A   	fcall	_lcd_cmd
  3004     0EE0                     l328:
  3005     0EE0  0008               	return
  3006     0EE1                     __end_of_initLCD:
  3007                           
  3008                           	psect	text5
  3009     04A0                     __ptext5:	
  3010 ;; *************** function _getsensorreadings *****************
  3011 ;; Defined at:
  3012 ;;		line 768 in file "main.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  i               1   23[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3026 ;;      Params:         0       0       0       0
  3027 ;;      Locals:         0       1       0       0
  3028 ;;      Temps:          0       4       0       0
  3029 ;;      Totals:         0       5       0       0
  3030 ;;Total ram usage:        5 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 2
  3033 ;; This function calls:
  3034 ;;		___lldiv
  3035 ;;		___lmul
  3036 ;;		_getSensorResults
  3037 ;;		_readADC
  3038 ;;		_setupTimer0
  3039 ;;		_startSensorReading
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045     04A0                     _getsensorreadings:	
  3046                           ;psect for function _getsensorreadings
  3047                           
  3048     04A0                     l2741:	
  3049                           ;incstack = 0
  3050                           ; Regs used in _getsensorreadings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3051                           
  3052                           
  3053                           ;main.c: 769:   for (uint8_t i = 0; i < 16; i++) {
  3054     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3055     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  3056     04A2  01B7               	clrf	getsensorreadings@i
  3057     04A3                     l2747:
  3058                           
  3059                           ;main.c: 770:     voltagesum += readADC(3);
  3060     04A3  3003               	movlw	3
  3061     04A4  158A  22DA  118A   	fcall	_readADC
  3062     04A7  0872               	movf	?_readADC,w
  3063     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3064     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  3065     04AA  07C2               	addwf	_voltagesum^(0+128),f
  3066     04AB  1803               	skipnc
  3067     04AC  0AC3               	incf	(_voltagesum+1)^(0+128),f
  3068     04AD  0873               	movf	?_readADC+1,w
  3069     04AE  07C3               	addwf	(_voltagesum+1)^(0+128),f
  3070     04AF                     l2749:
  3071                           
  3072                           ;main.c: 771:   }
  3073     04AF  3001               	movlw	1
  3074     04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3075     04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3076     04B2  07B7               	addwf	getsensorreadings@i,f
  3077     04B3                     l2751:
  3078     04B3  3010               	movlw	16
  3079     04B4  0237               	subwf	getsensorreadings@i,w
  3080     04B5  1C03               	skipc
  3081     04B6  2CB8               	goto	u4241
  3082     04B7  2CB9               	goto	u4240
  3083     04B8                     u4241:
  3084     04B8  2CA3               	goto	l2747
  3085     04B9                     u4240:
  3086     04B9                     l2753:
  3087                           
  3088                           ;main.c: 772:   voltageraw = voltagesum >> 4;
  3089     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3090     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3091     04BB  0E42               	swapf	_voltagesum^(0+128),w
  3092     04BC  390F               	andlw	15
  3093     04BD  00C6               	movwf	_voltageraw^(0+128)
  3094     04BE  0E43               	swapf	(_voltagesum+1)^(0+128),w
  3095     04BF  39F0               	andlw	240
  3096     04C0  04C6               	iorwf	_voltageraw^(0+128),f
  3097     04C1  0E43               	swapf	(_voltagesum+1)^(0+128),w
  3098     04C2  390F               	andlw	15
  3099     04C3  00C7               	movwf	(_voltageraw^(0+128)+1)
  3100     04C4                     l2755:
  3101                           
  3102                           ;main.c: 773:   voltagesum = 0;
  3103     04C4  01C2               	clrf	_voltagesum^(0+128)
  3104     04C5  01C3               	clrf	(_voltagesum+1)^(0+128)
  3105     04C6                     l2757:
  3106                           
  3107                           ;main.c: 776:   if (seconds_counter % 1 == 0 && !sensors_reading_in_progress &&
  3108     04C6  3000               	movlw	0
  3109     04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3110     04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3111     04C9  00A8               	movwf	___lldiv@divisor+3
  3112     04CA  3000               	movlw	0
  3113     04CB  00A7               	movwf	___lldiv@divisor+2
  3114     04CC  3003               	movlw	3
  3115     04CD  00A6               	movwf	___lldiv@divisor+1
  3116     04CE  30FF               	movlw	255
  3117     04CF  00A5               	movwf	___lldiv@divisor
  3118     04D0  1683               	bsf	3,5	;RP0=1, select bank1
  3119     04D1  1303               	bcf	3,6	;RP1=0, select bank1
  3120     04D2  0846               	movf	_voltageraw^(0+128),w
  3121     04D3  00F2               	movwf	___lmul@multiplier
  3122     04D4  0847               	movf	(_voltageraw+1)^(0+128),w
  3123     04D5  00F3               	movwf	___lmul@multiplier+1
  3124     04D6  01F4               	clrf	___lmul@multiplier+2
  3125     04D7  01F5               	clrf	___lmul@multiplier+3
  3126     04D8  3000               	movlw	0
  3127     04D9  00F9               	movwf	___lmul@multiplicand+3
  3128     04DA  3000               	movlw	0
  3129     04DB  00F8               	movwf	___lmul@multiplicand+2
  3130     04DC  3000               	movlw	0
  3131     04DD  00F7               	movwf	___lmul@multiplicand+1
  3132     04DE  30EB               	movlw	235
  3133     04DF  00F6               	movwf	___lmul@multiplicand
  3134     04E0  158A  2380  118A   	fcall	___lmul
  3135     04E3  0875               	movf	?___lmul+3,w
  3136     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3137     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3138     04E6  00AC               	movwf	___lldiv@dividend+3
  3139     04E7  0874               	movf	?___lmul+2,w
  3140     04E8  00AB               	movwf	___lldiv@dividend+2
  3141     04E9  0873               	movf	?___lmul+1,w
  3142     04EA  00AA               	movwf	___lldiv@dividend+1
  3143     04EB  0872               	movf	?___lmul,w
  3144     04EC  00A9               	movwf	___lldiv@dividend
  3145     04ED  158A  24CE  118A   	fcall	___lldiv
  3146     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  3147     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  3148     04F2  0825               	movf	?___lldiv,w
  3149     04F3  3E55               	addlw	85
  3150     04F4  00E8               	movwf	_voltage
  3151     04F5                     l2759:
  3152     04F5  0864               	movf	_sensors_reading_in_progress,w	;volatile
  3153     04F6  1D03               	btfss	3,2
  3154     04F7  2CF9               	goto	u4251
  3155     04F8  2CFA               	goto	u4250
  3156     04F9                     u4251:
  3157     04F9  2D05               	goto	l2765
  3158     04FA                     u4250:
  3159     04FA                     l2761:
  3160     04FA  0865               	movf	_sensors_reading_complete,w	;volatile
  3161     04FB  1D03               	btfss	3,2
  3162     04FC  2CFE               	goto	u4261
  3163     04FD  2CFF               	goto	u4260
  3164     04FE                     u4261:
  3165     04FE  2D05               	goto	l2765
  3166     04FF                     u4260:
  3167     04FF                     l2763:
  3168                           
  3169                           ;main.c: 777:       !sensors_reading_complete) {;main.c: 778:     setupTimer0();
  3170     04FF  158A  226C  118A   	fcall	_setupTimer0
  3171                           
  3172                           ;main.c: 779:     startSensorReading();
  3173     0502  158A  227A  118A   	fcall	_startSensorReading
  3174     0505                     l2765:
  3175                           
  3176                           ;main.c: 782:   if (getSensorResults(&low_sensor_active, &high_sensor_active,
  3177     0505  306D               	movlw	(low (_low_sensor_active| 0))& (0+255)
  3178     0506  00F2               	movwf	getSensorResults@low_active
  3179     0507  306C               	movlw	(low (_high_sensor_active| 0))& (0+255)
  3180     0508  00F3               	movwf	getSensorResults@high_active
  3181     0509  306B               	movlw	(low (_flow_sensor_active| 0))& (0+255)
  3182     050A  00F4               	movwf	getSensorResults@flow_active
  3183     050B  158A  2323  118A   	fcall	_getSensorResults
  3184     050E  3A00               	xorlw	0
  3185     050F  1903               	skipnz
  3186     0510  2D12               	goto	u4271
  3187     0511  2D13               	goto	u4270
  3188     0512                     u4271:
  3189     0512  2D30               	goto	l2783
  3190     0513                     u4270:
  3191     0513                     l2767:
  3192                           
  3193                           ;main.c: 783:                        &flow_sensor_active)) {;main.c: 785:     if (high_s
      +                          ensor_active) {
  3194     0513  1283               	bcf	3,5	;RP0=0, select bank0
  3195     0514  1303               	bcf	3,6	;RP1=0, select bank0
  3196     0515  086C               	movf	_high_sensor_active,w
  3197     0516  1903               	btfsc	3,2
  3198     0517  2D19               	goto	u4281
  3199     0518  2D1A               	goto	u4280
  3200     0519                     u4281:
  3201     0519  2D1B               	goto	l2771
  3202     051A                     u4280:
  3203     051A                     l2769:
  3204                           
  3205                           ;main.c: 787:       pretankempty = 0;
  3206     051A  01DE               	clrf	_pretankempty
  3207     051B                     l2771:
  3208                           
  3209                           ;main.c: 789:     if (!low_sensor_active && !high_sensor_active) {
  3210     051B  086D               	movf	_low_sensor_active,w
  3211     051C  1D03               	btfss	3,2
  3212     051D  2D1F               	goto	u4291
  3213     051E  2D20               	goto	u4290
  3214     051F                     u4291:
  3215     051F  2D27               	goto	l2777
  3216     0520                     u4290:
  3217     0520                     l2773:
  3218     0520  086C               	movf	_high_sensor_active,w
  3219     0521  1D03               	btfss	3,2
  3220     0522  2D24               	goto	u4301
  3221     0523  2D25               	goto	u4300
  3222     0524                     u4301:
  3223     0524  2D27               	goto	l2777
  3224     0525                     u4300:
  3225     0525                     l2775:
  3226                           
  3227                           ;main.c: 791:       pretankempty = 1;
  3228     0525  3001               	movlw	1
  3229     0526  00DE               	movwf	_pretankempty
  3230     0527                     l2777:
  3231                           
  3232                           ;main.c: 793:     if(flow_sensor_active){
  3233     0527  086B               	movf	_flow_sensor_active,w
  3234     0528  1903               	btfsc	3,2
  3235     0529  2D2B               	goto	u4311
  3236     052A  2D2C               	goto	u4310
  3237     052B                     u4311:
  3238     052B  2D2F               	goto	l2781
  3239     052C                     u4310:
  3240     052C                     l2779:
  3241                           
  3242                           ;main.c: 794:       preflowactive = 1;
  3243     052C  3001               	movlw	1
  3244     052D  00DC               	movwf	_preflowactive
  3245                           
  3246                           ;main.c: 795:     }else{
  3247     052E  2D30               	goto	l2783
  3248     052F                     l2781:
  3249                           
  3250                           ;main.c: 796:       preflowactive = 0;
  3251     052F  01DC               	clrf	_preflowactive
  3252     0530                     l2783:
  3253                           
  3254                           ;main.c: 800:   if (pretankempty != tankempty) {
  3255     0530  1283               	bcf	3,5	;RP0=0, select bank0
  3256     0531  1303               	bcf	3,6	;RP1=0, select bank0
  3257     0532  085E               	movf	_pretankempty,w
  3258     0533  065F               	xorwf	_tankempty,w
  3259     0534  1903               	skipnz
  3260     0535  2D37               	goto	u4321
  3261     0536  2D38               	goto	u4320
  3262     0537                     u4321:
  3263     0537  2DAE               	goto	l2793
  3264     0538                     u4320:
  3265     0538                     l2785:
  3266                           
  3267                           ;main.c: 801:     if (lastsensorcheck == 0) {
  3268     0538  1683               	bsf	3,5	;RP0=1, select bank1
  3269     0539  1303               	bcf	3,6	;RP1=0, select bank1
  3270     053A  082F               	movf	(_lastsensorcheck+3)^(0+128),w
  3271     053B  042E               	iorwf	(_lastsensorcheck+2)^(0+128),w
  3272     053C  042D               	iorwf	(_lastsensorcheck+1)^(0+128),w
  3273     053D  042C               	iorwf	_lastsensorcheck^(0+128),w
  3274     053E  1D03               	skipz
  3275     053F  2D41               	goto	u4331
  3276     0540  2D42               	goto	u4330
  3277     0541                     u4331:
  3278     0541  2D5B               	goto	l2789
  3279     0542                     u4330:
  3280     0542                     l2787:
  3281                           
  3282                           ;main.c: 802:       lastsensorcheck = millis;
  3283     0542  1283               	bcf	3,5	;RP0=0, select bank0
  3284     0543  1303               	bcf	3,6	;RP1=0, select bank0
  3285     0544  0856               	movf	_millis+3,w	;volatile
  3286     0545  1683               	bsf	3,5	;RP0=1, select bank1
  3287     0546  1303               	bcf	3,6	;RP1=0, select bank1
  3288     0547  00AF               	movwf	(_lastsensorcheck+3)^(0+128)
  3289     0548  1283               	bcf	3,5	;RP0=0, select bank0
  3290     0549  1303               	bcf	3,6	;RP1=0, select bank0
  3291     054A  0855               	movf	_millis+2,w	;volatile
  3292     054B  1683               	bsf	3,5	;RP0=1, select bank1
  3293     054C  1303               	bcf	3,6	;RP1=0, select bank1
  3294     054D  00AE               	movwf	(_lastsensorcheck+2)^(0+128)
  3295     054E  1283               	bcf	3,5	;RP0=0, select bank0
  3296     054F  1303               	bcf	3,6	;RP1=0, select bank0
  3297     0550  0854               	movf	_millis+1,w	;volatile
  3298     0551  1683               	bsf	3,5	;RP0=1, select bank1
  3299     0552  1303               	bcf	3,6	;RP1=0, select bank1
  3300     0553  00AD               	movwf	(_lastsensorcheck+1)^(0+128)
  3301     0554  1283               	bcf	3,5	;RP0=0, select bank0
  3302     0555  1303               	bcf	3,6	;RP1=0, select bank0
  3303     0556  0853               	movf	_millis,w	;volatile
  3304     0557  1683               	bsf	3,5	;RP0=1, select bank1
  3305     0558  1303               	bcf	3,6	;RP1=0, select bank1
  3306     0559  00AC               	movwf	_lastsensorcheck^(0+128)
  3307                           
  3308                           ;main.c: 803:     } else if (millis - lastsensorcheck >= sensorbuffer) {
  3309     055A  2E06               	goto	l363
  3310     055B                     l2789:
  3311     055B  1283               	bcf	3,5	;RP0=0, select bank0
  3312     055C  1303               	bcf	3,6	;RP1=0, select bank0
  3313     055D  0853               	movf	_millis,w	;volatile
  3314     055E  00B3               	movwf	??_getsensorreadings
  3315     055F  0854               	movf	_millis+1,w	;volatile
  3316     0560  00B4               	movwf	??_getsensorreadings+1
  3317     0561  0855               	movf	_millis+2,w	;volatile
  3318     0562  00B5               	movwf	??_getsensorreadings+2
  3319     0563  0856               	movf	_millis+3,w	;volatile
  3320     0564  00B6               	movwf	??_getsensorreadings+3
  3321     0565  1683               	bsf	3,5	;RP0=1, select bank1
  3322     0566  1303               	bcf	3,6	;RP1=0, select bank1
  3323     0567  082C               	movf	_lastsensorcheck^(0+128),w
  3324     0568  1283               	bcf	3,5	;RP0=0, select bank0
  3325     0569  1303               	bcf	3,6	;RP1=0, select bank0
  3326     056A  02B3               	subwf	??_getsensorreadings,f
  3327     056B  1683               	bsf	3,5	;RP0=1, select bank1
  3328     056C  1303               	bcf	3,6	;RP1=0, select bank1
  3329     056D  082D               	movf	(_lastsensorcheck+1)^(0+128),w
  3330     056E  1C03               	skipc
  3331     056F  0F2D               	incfsz	(_lastsensorcheck+1)^(0+128),w
  3332     0570  2D72               	goto	u4341
  3333     0571  2D75               	goto	u4342
  3334     0572                     u4341:
  3335     0572  1283               	bcf	3,5	;RP0=0, select bank0
  3336     0573  1303               	bcf	3,6	;RP1=0, select bank0
  3337     0574  02B4               	subwf	??_getsensorreadings+1,f
  3338     0575                     u4342:
  3339     0575  1683               	bsf	3,5	;RP0=1, select bank1
  3340     0576  1303               	bcf	3,6	;RP1=0, select bank1
  3341     0577  082E               	movf	(_lastsensorcheck+2)^(0+128),w
  3342     0578  1C03               	skipc
  3343     0579  0F2E               	incfsz	(_lastsensorcheck+2)^(0+128),w
  3344     057A  2D7C               	goto	u4343
  3345     057B  2D7F               	goto	u4344
  3346     057C                     u4343:
  3347     057C  1283               	bcf	3,5	;RP0=0, select bank0
  3348     057D  1303               	bcf	3,6	;RP1=0, select bank0
  3349     057E  02B5               	subwf	??_getsensorreadings+2,f
  3350     057F                     u4344:
  3351     057F  1683               	bsf	3,5	;RP0=1, select bank1
  3352     0580  1303               	bcf	3,6	;RP1=0, select bank1
  3353     0581  082F               	movf	(_lastsensorcheck+3)^(0+128),w
  3354     0582  1C03               	skipc
  3355     0583  0F2F               	incfsz	(_lastsensorcheck+3)^(0+128),w
  3356     0584  2D86               	goto	u4345
  3357     0585  2D89               	goto	u4346
  3358     0586                     u4345:
  3359     0586  1283               	bcf	3,5	;RP0=0, select bank0
  3360     0587  1303               	bcf	3,6	;RP1=0, select bank0
  3361     0588  02B6               	subwf	??_getsensorreadings+3,f
  3362     0589                     u4346:
  3363     0589  1683               	bsf	3,5	;RP0=1, select bank1
  3364     058A  1303               	bcf	3,6	;RP1=0, select bank1
  3365     058B  1283               	bcf	3,5	;RP0=0, select bank0
  3366     058C  1303               	bcf	3,6	;RP1=0, select bank0
  3367     058D  0836               	movf	??_getsensorreadings+3,w
  3368     058E  1D03               	btfss	3,2
  3369     058F  2D9F               	goto	u4350
  3370     0590  0835               	movf	??_getsensorreadings+2,w
  3371     0591  1D03               	btfss	3,2
  3372     0592  2D9F               	goto	u4350
  3373     0593  3027               	movlw	39
  3374     0594  0234               	subwf	??_getsensorreadings+1,w
  3375     0595  1D03               	skipz
  3376     0596  2D9B               	goto	u4353
  3377     0597  3010               	movlw	16
  3378     0598  0233               	subwf	??_getsensorreadings,w
  3379     0599  1D03               	skipz
  3380     059A  2D9B               	goto	u4353
  3381     059B                     u4353:
  3382     059B  1C03               	btfss	3,0
  3383     059C  2D9E               	goto	u4351
  3384     059D  2D9F               	goto	u4350
  3385     059E                     u4351:
  3386     059E  2E06               	goto	l363
  3387     059F                     u4350:
  3388     059F                     l2791:
  3389                           
  3390                           ;main.c: 804:       lastsensorcheck = 0;
  3391     059F  3000               	movlw	0
  3392     05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3393     05A1  1303               	bcf	3,6	;RP1=0, select bank1
  3394     05A2  00AF               	movwf	(_lastsensorcheck+3)^(0+128)
  3395     05A3  3000               	movlw	0
  3396     05A4  00AE               	movwf	(_lastsensorcheck+2)^(0+128)
  3397     05A5  3000               	movlw	0
  3398     05A6  00AD               	movwf	(_lastsensorcheck+1)^(0+128)
  3399     05A7  3000               	movlw	0
  3400     05A8  00AC               	movwf	_lastsensorcheck^(0+128)
  3401                           
  3402                           ;main.c: 805:       tankempty = pretankempty;
  3403     05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3404     05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3405     05AB  085E               	movf	_pretankempty,w
  3406     05AC  00DF               	movwf	_tankempty
  3407     05AD  2E06               	goto	l363
  3408     05AE                     l2793:
  3409     05AE  1683               	bsf	3,5	;RP0=1, select bank1
  3410     05AF  1303               	bcf	3,6	;RP1=0, select bank1
  3411     05B0  082F               	movf	(_lastsensorcheck+3)^(0+128),w
  3412     05B1  042E               	iorwf	(_lastsensorcheck+2)^(0+128),w
  3413     05B2  042D               	iorwf	(_lastsensorcheck+1)^(0+128),w
  3414     05B3  042C               	iorwf	_lastsensorcheck^(0+128),w
  3415     05B4  1903               	skipnz
  3416     05B5  2DB7               	goto	u4361
  3417     05B6  2DB8               	goto	u4360
  3418     05B7                     u4361:
  3419     05B7  2E06               	goto	l363
  3420     05B8                     u4360:
  3421     05B8                     l2795:
  3422     05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3423     05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3424     05BA  0853               	movf	_millis,w	;volatile
  3425     05BB  00B3               	movwf	??_getsensorreadings
  3426     05BC  0854               	movf	_millis+1,w	;volatile
  3427     05BD  00B4               	movwf	??_getsensorreadings+1
  3428     05BE  0855               	movf	_millis+2,w	;volatile
  3429     05BF  00B5               	movwf	??_getsensorreadings+2
  3430     05C0  0856               	movf	_millis+3,w	;volatile
  3431     05C1  00B6               	movwf	??_getsensorreadings+3
  3432     05C2  1683               	bsf	3,5	;RP0=1, select bank1
  3433     05C3  1303               	bcf	3,6	;RP1=0, select bank1
  3434     05C4  082C               	movf	_lastsensorcheck^(0+128),w
  3435     05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3436     05C6  1303               	bcf	3,6	;RP1=0, select bank0
  3437     05C7  02B3               	subwf	??_getsensorreadings,f
  3438     05C8  1683               	bsf	3,5	;RP0=1, select bank1
  3439     05C9  1303               	bcf	3,6	;RP1=0, select bank1
  3440     05CA  082D               	movf	(_lastsensorcheck+1)^(0+128),w
  3441     05CB  1C03               	skipc
  3442     05CC  0F2D               	incfsz	(_lastsensorcheck+1)^(0+128),w
  3443     05CD  2DCF               	goto	u4371
  3444     05CE  2DD2               	goto	u4372
  3445     05CF                     u4371:
  3446     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3447     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3448     05D1  02B4               	subwf	??_getsensorreadings+1,f
  3449     05D2                     u4372:
  3450     05D2  1683               	bsf	3,5	;RP0=1, select bank1
  3451     05D3  1303               	bcf	3,6	;RP1=0, select bank1
  3452     05D4  082E               	movf	(_lastsensorcheck+2)^(0+128),w
  3453     05D5  1C03               	skipc
  3454     05D6  0F2E               	incfsz	(_lastsensorcheck+2)^(0+128),w
  3455     05D7  2DD9               	goto	u4373
  3456     05D8  2DDC               	goto	u4374
  3457     05D9                     u4373:
  3458     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3459     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  3460     05DB  02B5               	subwf	??_getsensorreadings+2,f
  3461     05DC                     u4374:
  3462     05DC  1683               	bsf	3,5	;RP0=1, select bank1
  3463     05DD  1303               	bcf	3,6	;RP1=0, select bank1
  3464     05DE  082F               	movf	(_lastsensorcheck+3)^(0+128),w
  3465     05DF  1C03               	skipc
  3466     05E0  0F2F               	incfsz	(_lastsensorcheck+3)^(0+128),w
  3467     05E1  2DE3               	goto	u4375
  3468     05E2  2DE6               	goto	u4376
  3469     05E3                     u4375:
  3470     05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3471     05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3472     05E5  02B6               	subwf	??_getsensorreadings+3,f
  3473     05E6                     u4376:
  3474     05E6  1683               	bsf	3,5	;RP0=1, select bank1
  3475     05E7  1303               	bcf	3,6	;RP1=0, select bank1
  3476     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3477     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  3478     05EA  0836               	movf	??_getsensorreadings+3,w
  3479     05EB  1D03               	btfss	3,2
  3480     05EC  2DFC               	goto	u4380
  3481     05ED  0835               	movf	??_getsensorreadings+2,w
  3482     05EE  1D03               	btfss	3,2
  3483     05EF  2DFC               	goto	u4380
  3484     05F0  3027               	movlw	39
  3485     05F1  0234               	subwf	??_getsensorreadings+1,w
  3486     05F2  1D03               	skipz
  3487     05F3  2DF8               	goto	u4383
  3488     05F4  3010               	movlw	16
  3489     05F5  0233               	subwf	??_getsensorreadings,w
  3490     05F6  1D03               	skipz
  3491     05F7  2DF8               	goto	u4383
  3492     05F8                     u4383:
  3493     05F8  1C03               	btfss	3,0
  3494     05F9  2DFB               	goto	u4381
  3495     05FA  2DFC               	goto	u4380
  3496     05FB                     u4381:
  3497     05FB  2E06               	goto	l363
  3498     05FC                     u4380:
  3499     05FC                     l2797:
  3500                           
  3501                           ;main.c: 808:     lastsensorcheck = 0;
  3502     05FC  3000               	movlw	0
  3503     05FD  1683               	bsf	3,5	;RP0=1, select bank1
  3504     05FE  1303               	bcf	3,6	;RP1=0, select bank1
  3505     05FF  00AF               	movwf	(_lastsensorcheck+3)^(0+128)
  3506     0600  3000               	movlw	0
  3507     0601  00AE               	movwf	(_lastsensorcheck+2)^(0+128)
  3508     0602  3000               	movlw	0
  3509     0603  00AD               	movwf	(_lastsensorcheck+1)^(0+128)
  3510     0604  3000               	movlw	0
  3511     0605  00AC               	movwf	_lastsensorcheck^(0+128)
  3512     0606                     l363:
  3513                           
  3514                           ;main.c: 811:   if (preflowactive != flowactive) {
  3515     0606  1283               	bcf	3,5	;RP0=0, select bank0
  3516     0607  1303               	bcf	3,6	;RP1=0, select bank0
  3517     0608  085C               	movf	_preflowactive,w
  3518     0609  065D               	xorwf	_flowactive,w
  3519     060A  1903               	skipnz
  3520     060B  2E0D               	goto	u4391
  3521     060C  2E0E               	goto	u4390
  3522     060D                     u4391:
  3523     060D  2E5A               	goto	l2807
  3524     060E                     u4390:
  3525     060E                     l2799:
  3526                           
  3527                           ;main.c: 812:     if (lastflowcheck == 0) {
  3528     060E  0852               	movf	_lastflowcheck+3,w
  3529     060F  0451               	iorwf	_lastflowcheck+2,w
  3530     0610  0450               	iorwf	_lastflowcheck+1,w
  3531     0611  044F               	iorwf	_lastflowcheck,w
  3532     0612  1D03               	skipz
  3533     0613  2E15               	goto	u4401
  3534     0614  2E16               	goto	u4400
  3535     0615                     u4401:
  3536     0615  2E1F               	goto	l2803
  3537     0616                     u4400:
  3538     0616                     l2801:
  3539                           
  3540                           ;main.c: 813:       lastflowcheck = millis;
  3541     0616  0856               	movf	_millis+3,w	;volatile
  3542     0617  00D2               	movwf	_lastflowcheck+3
  3543     0618  0855               	movf	_millis+2,w	;volatile
  3544     0619  00D1               	movwf	_lastflowcheck+2
  3545     061A  0854               	movf	_millis+1,w	;volatile
  3546     061B  00D0               	movwf	_lastflowcheck+1
  3547     061C  0853               	movf	_millis,w	;volatile
  3548     061D  00CF               	movwf	_lastflowcheck
  3549                           
  3550                           ;main.c: 814:     } else if (millis - lastflowcheck >= sensorbuffer) {
  3551     061E  2E9A               	goto	l2813
  3552     061F                     l2803:
  3553     061F  0853               	movf	_millis,w	;volatile
  3554     0620  00B3               	movwf	??_getsensorreadings
  3555     0621  0854               	movf	_millis+1,w	;volatile
  3556     0622  00B4               	movwf	??_getsensorreadings+1
  3557     0623  0855               	movf	_millis+2,w	;volatile
  3558     0624  00B5               	movwf	??_getsensorreadings+2
  3559     0625  0856               	movf	_millis+3,w	;volatile
  3560     0626  00B6               	movwf	??_getsensorreadings+3
  3561     0627  084F               	movf	_lastflowcheck,w
  3562     0628  02B3               	subwf	??_getsensorreadings,f
  3563     0629  0850               	movf	_lastflowcheck+1,w
  3564     062A  1C03               	skipc
  3565     062B  0F50               	incfsz	_lastflowcheck+1,w
  3566     062C  2E2E               	goto	u4411
  3567     062D  2E2F               	goto	u4412
  3568     062E                     u4411:
  3569     062E  02B4               	subwf	??_getsensorreadings+1,f
  3570     062F                     u4412:
  3571     062F  0851               	movf	_lastflowcheck+2,w
  3572     0630  1C03               	skipc
  3573     0631  0F51               	incfsz	_lastflowcheck+2,w
  3574     0632  2E34               	goto	u4413
  3575     0633  2E35               	goto	u4414
  3576     0634                     u4413:
  3577     0634  02B5               	subwf	??_getsensorreadings+2,f
  3578     0635                     u4414:
  3579     0635  0852               	movf	_lastflowcheck+3,w
  3580     0636  1C03               	skipc
  3581     0637  0F52               	incfsz	_lastflowcheck+3,w
  3582     0638  2E3A               	goto	u4415
  3583     0639  2E3B               	goto	u4416
  3584     063A                     u4415:
  3585     063A  02B6               	subwf	??_getsensorreadings+3,f
  3586     063B                     u4416:
  3587     063B  0836               	movf	??_getsensorreadings+3,w
  3588     063C  1D03               	btfss	3,2
  3589     063D  2E4D               	goto	u4420
  3590     063E  0835               	movf	??_getsensorreadings+2,w
  3591     063F  1D03               	btfss	3,2
  3592     0640  2E4D               	goto	u4420
  3593     0641  3027               	movlw	39
  3594     0642  0234               	subwf	??_getsensorreadings+1,w
  3595     0643  1D03               	skipz
  3596     0644  2E49               	goto	u4423
  3597     0645  3010               	movlw	16
  3598     0646  0233               	subwf	??_getsensorreadings,w
  3599     0647  1D03               	skipz
  3600     0648  2E49               	goto	u4423
  3601     0649                     u4423:
  3602     0649  1C03               	btfss	3,0
  3603     064A  2E4C               	goto	u4421
  3604     064B  2E4D               	goto	u4420
  3605     064C                     u4421:
  3606     064C  2E9A               	goto	l2813
  3607     064D                     u4420:
  3608     064D                     l2805:
  3609                           
  3610                           ;main.c: 815:       lastflowcheck = 0;
  3611     064D  3000               	movlw	0
  3612     064E  1283               	bcf	3,5	;RP0=0, select bank0
  3613     064F  1303               	bcf	3,6	;RP1=0, select bank0
  3614     0650  00D2               	movwf	_lastflowcheck+3
  3615     0651  3000               	movlw	0
  3616     0652  00D1               	movwf	_lastflowcheck+2
  3617     0653  3000               	movlw	0
  3618     0654  00D0               	movwf	_lastflowcheck+1
  3619     0655  3000               	movlw	0
  3620     0656  00CF               	movwf	_lastflowcheck
  3621                           
  3622                           ;main.c: 816:       flowactive = preflowactive;
  3623     0657  085C               	movf	_preflowactive,w
  3624     0658  00DD               	movwf	_flowactive
  3625     0659  2E9A               	goto	l2813
  3626     065A                     l2807:
  3627     065A  0852               	movf	_lastflowcheck+3,w
  3628     065B  0451               	iorwf	_lastflowcheck+2,w
  3629     065C  0450               	iorwf	_lastflowcheck+1,w
  3630     065D  044F               	iorwf	_lastflowcheck,w
  3631     065E  1903               	skipnz
  3632     065F  2E61               	goto	u4431
  3633     0660  2E62               	goto	u4430
  3634     0661                     u4431:
  3635     0661  2E9A               	goto	l2813
  3636     0662                     u4430:
  3637     0662                     l2809:
  3638     0662  0853               	movf	_millis,w	;volatile
  3639     0663  00B3               	movwf	??_getsensorreadings
  3640     0664  0854               	movf	_millis+1,w	;volatile
  3641     0665  00B4               	movwf	??_getsensorreadings+1
  3642     0666  0855               	movf	_millis+2,w	;volatile
  3643     0667  00B5               	movwf	??_getsensorreadings+2
  3644     0668  0856               	movf	_millis+3,w	;volatile
  3645     0669  00B6               	movwf	??_getsensorreadings+3
  3646     066A  084F               	movf	_lastflowcheck,w
  3647     066B  02B3               	subwf	??_getsensorreadings,f
  3648     066C  0850               	movf	_lastflowcheck+1,w
  3649     066D  1C03               	skipc
  3650     066E  0F50               	incfsz	_lastflowcheck+1,w
  3651     066F  2E71               	goto	u4441
  3652     0670  2E72               	goto	u4442
  3653     0671                     u4441:
  3654     0671  02B4               	subwf	??_getsensorreadings+1,f
  3655     0672                     u4442:
  3656     0672  0851               	movf	_lastflowcheck+2,w
  3657     0673  1C03               	skipc
  3658     0674  0F51               	incfsz	_lastflowcheck+2,w
  3659     0675  2E77               	goto	u4443
  3660     0676  2E78               	goto	u4444
  3661     0677                     u4443:
  3662     0677  02B5               	subwf	??_getsensorreadings+2,f
  3663     0678                     u4444:
  3664     0678  0852               	movf	_lastflowcheck+3,w
  3665     0679  1C03               	skipc
  3666     067A  0F52               	incfsz	_lastflowcheck+3,w
  3667     067B  2E7D               	goto	u4445
  3668     067C  2E7E               	goto	u4446
  3669     067D                     u4445:
  3670     067D  02B6               	subwf	??_getsensorreadings+3,f
  3671     067E                     u4446:
  3672     067E  0836               	movf	??_getsensorreadings+3,w
  3673     067F  1D03               	btfss	3,2
  3674     0680  2E90               	goto	u4450
  3675     0681  0835               	movf	??_getsensorreadings+2,w
  3676     0682  1D03               	btfss	3,2
  3677     0683  2E90               	goto	u4450
  3678     0684  3027               	movlw	39
  3679     0685  0234               	subwf	??_getsensorreadings+1,w
  3680     0686  1D03               	skipz
  3681     0687  2E8C               	goto	u4453
  3682     0688  3010               	movlw	16
  3683     0689  0233               	subwf	??_getsensorreadings,w
  3684     068A  1D03               	skipz
  3685     068B  2E8C               	goto	u4453
  3686     068C                     u4453:
  3687     068C  1C03               	btfss	3,0
  3688     068D  2E8F               	goto	u4451
  3689     068E  2E90               	goto	u4450
  3690     068F                     u4451:
  3691     068F  2E9A               	goto	l2813
  3692     0690                     u4450:
  3693     0690                     l2811:
  3694                           
  3695                           ;main.c: 819:     lastflowcheck = 0;
  3696     0690  3000               	movlw	0
  3697     0691  1283               	bcf	3,5	;RP0=0, select bank0
  3698     0692  1303               	bcf	3,6	;RP1=0, select bank0
  3699     0693  00D2               	movwf	_lastflowcheck+3
  3700     0694  3000               	movlw	0
  3701     0695  00D1               	movwf	_lastflowcheck+2
  3702     0696  3000               	movlw	0
  3703     0697  00D0               	movwf	_lastflowcheck+1
  3704     0698  3000               	movlw	0
  3705     0699  00CF               	movwf	_lastflowcheck
  3706     069A                     l2813:
  3707                           
  3708                           ;main.c: 823:   if ((millis - last_millis) >= 1000) {
  3709     069A  1283               	bcf	3,5	;RP0=0, select bank0
  3710     069B  1303               	bcf	3,6	;RP1=0, select bank0
  3711     069C  0853               	movf	_millis,w	;volatile
  3712     069D  00B3               	movwf	??_getsensorreadings
  3713     069E  0854               	movf	_millis+1,w	;volatile
  3714     069F  00B4               	movwf	??_getsensorreadings+1
  3715     06A0  0855               	movf	_millis+2,w	;volatile
  3716     06A1  00B5               	movwf	??_getsensorreadings+2
  3717     06A2  0856               	movf	_millis+3,w	;volatile
  3718     06A3  00B6               	movwf	??_getsensorreadings+3
  3719     06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3720     06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3721     06A6  083C               	movf	_last_millis^(0+128),w
  3722     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3723     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3724     06A9  02B3               	subwf	??_getsensorreadings,f
  3725     06AA  1683               	bsf	3,5	;RP0=1, select bank1
  3726     06AB  1303               	bcf	3,6	;RP1=0, select bank1
  3727     06AC  083D               	movf	(_last_millis+1)^(0+128),w
  3728     06AD  1C03               	skipc
  3729     06AE  0F3D               	incfsz	(_last_millis+1)^(0+128),w
  3730     06AF  2EB1               	goto	u4461
  3731     06B0  2EB4               	goto	u4462
  3732     06B1                     u4461:
  3733     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  3734     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  3735     06B3  02B4               	subwf	??_getsensorreadings+1,f
  3736     06B4                     u4462:
  3737     06B4  1683               	bsf	3,5	;RP0=1, select bank1
  3738     06B5  1303               	bcf	3,6	;RP1=0, select bank1
  3739     06B6  083E               	movf	(_last_millis+2)^(0+128),w
  3740     06B7  1C03               	skipc
  3741     06B8  0F3E               	incfsz	(_last_millis+2)^(0+128),w
  3742     06B9  2EBB               	goto	u4463
  3743     06BA  2EBE               	goto	u4464
  3744     06BB                     u4463:
  3745     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3746     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3747     06BD  02B5               	subwf	??_getsensorreadings+2,f
  3748     06BE                     u4464:
  3749     06BE  1683               	bsf	3,5	;RP0=1, select bank1
  3750     06BF  1303               	bcf	3,6	;RP1=0, select bank1
  3751     06C0  083F               	movf	(_last_millis+3)^(0+128),w
  3752     06C1  1C03               	skipc
  3753     06C2  0F3F               	incfsz	(_last_millis+3)^(0+128),w
  3754     06C3  2EC5               	goto	u4465
  3755     06C4  2EC8               	goto	u4466
  3756     06C5                     u4465:
  3757     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  3758     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  3759     06C7  02B6               	subwf	??_getsensorreadings+3,f
  3760     06C8                     u4466:
  3761     06C8  1683               	bsf	3,5	;RP0=1, select bank1
  3762     06C9  1303               	bcf	3,6	;RP1=0, select bank1
  3763     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  3764     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  3765     06CC  0836               	movf	??_getsensorreadings+3,w
  3766     06CD  1D03               	btfss	3,2
  3767     06CE  2EDE               	goto	u4470
  3768     06CF  0835               	movf	??_getsensorreadings+2,w
  3769     06D0  1D03               	btfss	3,2
  3770     06D1  2EDE               	goto	u4470
  3771     06D2  3003               	movlw	3
  3772     06D3  0234               	subwf	??_getsensorreadings+1,w
  3773     06D4  1D03               	skipz
  3774     06D5  2EDA               	goto	u4473
  3775     06D6  30E8               	movlw	232
  3776     06D7  0233               	subwf	??_getsensorreadings,w
  3777     06D8  1D03               	skipz
  3778     06D9  2EDA               	goto	u4473
  3779     06DA                     u4473:
  3780     06DA  1C03               	btfss	3,0
  3781     06DB  2EDD               	goto	u4471
  3782     06DC  2EDE               	goto	u4470
  3783     06DD                     u4471:
  3784     06DD  2F04               	goto	l372
  3785     06DE                     u4470:
  3786     06DE                     l2815:
  3787                           
  3788                           ;main.c: 824:     seconds_counter++;
  3789     06DE  3001               	movlw	1
  3790     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3791     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3792     06E1  07D7               	addwf	_seconds_counter,f	;volatile
  3793     06E2  3000               	movlw	0
  3794     06E3  1803               	skipnc
  3795     06E4  3001               	movlw	1
  3796     06E5  07D8               	addwf	_seconds_counter+1,f	;volatile
  3797     06E6  3000               	movlw	0
  3798     06E7  1803               	skipnc
  3799     06E8  3001               	movlw	1
  3800     06E9  07D9               	addwf	_seconds_counter+2,f	;volatile
  3801     06EA  3000               	movlw	0
  3802     06EB  1803               	skipnc
  3803     06EC  3001               	movlw	1
  3804     06ED  07DA               	addwf	_seconds_counter+3,f	;volatile
  3805                           
  3806                           ;main.c: 825:     last_millis = millis;
  3807     06EE  0856               	movf	_millis+3,w	;volatile
  3808     06EF  1683               	bsf	3,5	;RP0=1, select bank1
  3809     06F0  1303               	bcf	3,6	;RP1=0, select bank1
  3810     06F1  00BF               	movwf	(_last_millis+3)^(0+128)
  3811     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3812     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3813     06F4  0855               	movf	_millis+2,w	;volatile
  3814     06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3815     06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3816     06F7  00BE               	movwf	(_last_millis+2)^(0+128)
  3817     06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3818     06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3819     06FA  0854               	movf	_millis+1,w	;volatile
  3820     06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3821     06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3822     06FD  00BD               	movwf	(_last_millis+1)^(0+128)
  3823     06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3824     06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3825     0700  0853               	movf	_millis,w	;volatile
  3826     0701  1683               	bsf	3,5	;RP0=1, select bank1
  3827     0702  1303               	bcf	3,6	;RP1=0, select bank1
  3828     0703  00BC               	movwf	_last_millis^(0+128)
  3829     0704                     l372:
  3830     0704  0008               	return
  3831     0705                     __end_of_getsensorreadings:
  3832                           
  3833                           	psect	text6
  3834     0A7A                     __ptext6:	
  3835 ;; *************** function _startSensorReading *****************
  3836 ;; Defined at:
  3837 ;;		line 407 in file "main.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;		None
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3851 ;;      Params:         0       0       0       0
  3852 ;;      Locals:         0       0       0       0
  3853 ;;      Temps:          0       0       0       0
  3854 ;;      Totals:         0       0       0       0
  3855 ;;Total ram usage:        0 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 1
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_getsensorreadings
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865     0A7A                     _startSensorReading:	
  3866                           ;psect for function _startSensorReading
  3867                           
  3868     0A7A                     l2535:	
  3869                           ;incstack = 0
  3870                           ; Regs used in _startSensorReading: [wreg+status,2+status,0]
  3871                           
  3872                           
  3873                           ;main.c: 408:   if (!sensors_reading_in_progress) {
  3874     0A7A  1283               	bcf	3,5	;RP0=0, select bank0
  3875     0A7B  1303               	bcf	3,6	;RP1=0, select bank0
  3876     0A7C  0864               	movf	_sensors_reading_in_progress,w	;volatile
  3877     0A7D  1D03               	btfss	3,2
  3878     0A7E  2A80               	goto	u3941
  3879     0A7F  2A81               	goto	u3940
  3880     0A80                     u3941:
  3881     0A80  2A88               	goto	l257
  3882     0A81                     u3940:
  3883     0A81                     l2537:
  3884                           
  3885                           ;main.c: 409:     reading_count = 0;
  3886     0A81  01FB               	clrf	_reading_count	;volatile
  3887                           
  3888                           ;main.c: 410:     low_sensor_high_count = 0;
  3889     0A82  01FA               	clrf	_low_sensor_high_count	;volatile
  3890                           
  3891                           ;main.c: 411:     high_sensor_high_count = 0;
  3892     0A83  01E7               	clrf	_high_sensor_high_count	;volatile
  3893                           
  3894                           ;main.c: 412:     flow_sensor_high_count = 0;
  3895     0A84  01E6               	clrf	_flow_sensor_high_count	;volatile
  3896                           
  3897                           ;main.c: 413:     sensors_reading_complete = 0;
  3898     0A85  01E5               	clrf	_sensors_reading_complete	;volatile
  3899     0A86                     l2539:
  3900                           
  3901                           ;main.c: 414:     sensors_reading_in_progress = 1;
  3902     0A86  3001               	movlw	1
  3903     0A87  00E4               	movwf	_sensors_reading_in_progress	;volatile
  3904     0A88                     l257:
  3905     0A88  0008               	return
  3906     0A89                     __end_of_startSensorReading:
  3907                           
  3908                           	psect	text7
  3909     0A6C                     __ptext7:	
  3910 ;; *************** function _setupTimer0 *****************
  3911 ;; Defined at:
  3912 ;;		line 393 in file "main.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3926 ;;      Params:         0       0       0       0
  3927 ;;      Locals:         0       0       0       0
  3928 ;;      Temps:          0       0       0       0
  3929 ;;      Totals:         0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_getsensorreadings
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940     0A6C                     _setupTimer0:	
  3941                           ;psect for function _setupTimer0
  3942                           
  3943     0A6C                     l2527:	
  3944                           ;incstack = 0
  3945                           ; Regs used in _setupTimer0: [wreg+status,2+status,0]
  3946                           
  3947                           
  3948                           ;main.c: 394:   OPTION_REGbits.T0CS = 0;
  3949     0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  3950     0A6D  1303               	bcf	3,6	;RP1=0, select bank1
  3951     0A6E  1281               	bcf	1,5	;volatile
  3952                           
  3953                           ;main.c: 395:   OPTION_REGbits.PSA = 0;
  3954     0A6F  1181               	bcf	1,3	;volatile
  3955     0A70                     l2529:
  3956                           
  3957                           ;main.c: 396:   OPTION_REGbits.PS = 0b011;
  3958     0A70  0801               	movf	1,w	;volatile
  3959     0A71  39F8               	andlw	-8
  3960     0A72  3803               	iorlw	3
  3961     0A73  0081               	movwf	1	;volatile
  3962     0A74                     l2531:
  3963                           
  3964                           ;main.c: 403:   TMR0 = 6;
  3965     0A74  3006               	movlw	6
  3966     0A75  1283               	bcf	3,5	;RP0=0, select bank0
  3967     0A76  1303               	bcf	3,6	;RP1=0, select bank0
  3968     0A77  0081               	movwf	1	;volatile
  3969     0A78                     l2533:
  3970                           
  3971                           ;main.c: 404:   INTCONbits.TMR0IE = 1;
  3972     0A78  168B               	bsf	11,5	;volatile
  3973     0A79                     l253:
  3974     0A79  0008               	return
  3975     0A7A                     __end_of_setupTimer0:
  3976                           
  3977                           	psect	text8
  3978     0ADA                     __ptext8:	
  3979 ;; *************** function _readADC *****************
  3980 ;; Defined at:
  3981 ;;		line 379 in file "main.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  channel         1    wreg     unsigned char 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  channel         1    5[COMMON] unsigned char 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  2    2[COMMON] unsigned int 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3995 ;;      Params:         2       0       0       0
  3996 ;;      Locals:         1       0       0       0
  3997 ;;      Temps:          1       0       0       0
  3998 ;;      Totals:         4       0       0       0
  3999 ;;Total ram usage:        4 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;;		_getsensorreadings
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010     0ADA                     _readADC:	
  4011                           ;psect for function _readADC
  4012                           
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in _readADC: [wreg+status,2+status,0]
  4016                           ;readADC@channel stored from wreg
  4017     0ADA  00F5               	movwf	readADC@channel
  4018     0ADB                     l2517:
  4019                           
  4020                           ;main.c: 381:   ADCON0 = (ADCON0 & 0b11000011) | ((uint8_t)(channel << 2));
  4021     0ADB  0875               	movf	readADC@channel,w
  4022     0ADC  00F4               	movwf	??_readADC
  4023     0ADD  3002               	movlw	2
  4024     0ADE                     u3925:
  4025     0ADE  1003               	clrc
  4026     0ADF  0DF4               	rlf	??_readADC,f
  4027     0AE0  3EFF               	addlw	-1
  4028     0AE1  1D03               	skipz
  4029     0AE2  2ADE               	goto	u3925
  4030     0AE3  1283               	bcf	3,5	;RP0=0, select bank0
  4031     0AE4  1303               	bcf	3,6	;RP1=0, select bank0
  4032     0AE5  081F               	movf	31,w	;volatile
  4033     0AE6  39C3               	andlw	195
  4034     0AE7  0474               	iorwf	??_readADC,w
  4035     0AE8  009F               	movwf	31	;volatile
  4036     0AE9                     l2519:
  4037                           
  4038                           ;main.c: 382:   _delay((unsigned long)((10)*(8000000/4000000.0)));
  4039     0AE9  3006               	movlw	6
  4040     0AEA  00F4               	movwf	??_readADC
  4041     0AEB                     u5127:
  4042     0AEB  0BF4               	decfsz	??_readADC,f
  4043     0AEC  2AEB               	goto	u5127
  4044     0AED  0000               	nop
  4045     0AEE                     l2521:
  4046                           
  4047                           ;main.c: 383:   ADCON0bits.GO = 1;
  4048     0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  4049     0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  4050     0AF0  149F               	bsf	31,1	;volatile
  4051     0AF1                     l247:	
  4052                           ;main.c: 387:     ;
  4053                           
  4054                           
  4055                           ;main.c: 386:   while (ADCON0bits.GO)
  4056     0AF1  189F               	btfsc	31,1	;volatile
  4057     0AF2  2AF4               	goto	u3931
  4058     0AF3  2AF5               	goto	u3930
  4059     0AF4                     u3931:
  4060     0AF4  2AF1               	goto	l247
  4061     0AF5                     u3930:
  4062     0AF5                     l2523:
  4063                           
  4064                           ;main.c: 390:   return ((unsigned int)ADRESH << 8) | ADRESL;
  4065     0AF5  081E               	movf	30,w	;volatile
  4066     0AF6  00F3               	movwf	?_readADC+1
  4067     0AF7  1683               	bsf	3,5	;RP0=1, select bank1
  4068     0AF8  1303               	bcf	3,6	;RP1=0, select bank1
  4069     0AF9  081E               	movf	30,w	;volatile
  4070     0AFA  00F2               	movwf	?_readADC
  4071     0AFB                     l250:
  4072     0AFB  0008               	return
  4073     0AFC                     __end_of_readADC:
  4074                           
  4075                           	psect	text9
  4076     0B23                     __ptext9:	
  4077 ;; *************** function _getSensorResults *****************
  4078 ;; Defined at:
  4079 ;;		line 418 in file "main.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  low_active      1    2[COMMON] PTR _Bool 
  4082 ;;		 -> low_sensor_active(1), 
  4083 ;;  high_active     1    3[COMMON] PTR _Bool 
  4084 ;;		 -> high_sensor_active(1), 
  4085 ;;  flow_active     1    4[COMMON] PTR _Bool 
  4086 ;;		 -> flow_sensor_active(1), 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;		None
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      _Bool 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4098 ;;      Params:         3       0       0       0
  4099 ;;      Locals:         0       0       0       0
  4100 ;;      Temps:          0       0       0       0
  4101 ;;      Totals:         3       0       0       0
  4102 ;;Total ram usage:        3 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 1
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_getsensorreadings
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112     0B23                     _getSensorResults:	
  4113                           ;psect for function _getSensorResults
  4114                           
  4115     0B23                     l2541:	
  4116                           ;incstack = 0
  4117                           ; Regs used in _getSensorResults: [wreg-fsr0h+status,2+status,0]
  4118                           
  4119                           
  4120                           ;main.c: 419:   if (sensors_reading_complete) {
  4121     0B23  1283               	bcf	3,5	;RP0=0, select bank0
  4122     0B24  1303               	bcf	3,6	;RP1=0, select bank0
  4123     0B25  0865               	movf	_sensors_reading_complete,w	;volatile
  4124     0B26  1903               	btfsc	3,2
  4125     0B27  2B29               	goto	u3951
  4126     0B28  2B2A               	goto	u3950
  4127     0B29                     u3951:
  4128     0B29  2B4F               	goto	l2551
  4129     0B2A                     u3950:
  4130     0B2A                     l2543:
  4131                           
  4132                           ;main.c: 420:     *low_active = (low_sensor_high_count < 45);
  4133     0B2A  0872               	movf	getSensorResults@low_active,w
  4134     0B2B  0084               	movwf	4
  4135     0B2C  302D               	movlw	45
  4136     0B2D  027A               	subwf	_low_sensor_high_count,w	;volatile
  4137     0B2E  1C03               	skipc
  4138     0B2F  2B31               	goto	u3961
  4139     0B30  2B33               	goto	u3960
  4140     0B31                     u3961:
  4141     0B31  3001               	movlw	1
  4142     0B32  2B34               	goto	u3970
  4143     0B33                     u3960:
  4144     0B33  3000               	movlw	0
  4145     0B34                     u3970:
  4146     0B34  1383               	bcf	3,7	;select IRP bank0
  4147     0B35  0080               	movwf	0
  4148                           
  4149                           ;main.c: 421:     *high_active = (high_sensor_high_count < 45);
  4150     0B36  0873               	movf	getSensorResults@high_active,w
  4151     0B37  0084               	movwf	4
  4152     0B38  302D               	movlw	45
  4153     0B39  0267               	subwf	_high_sensor_high_count,w	;volatile
  4154     0B3A  1C03               	skipc
  4155     0B3B  2B3D               	goto	u3981
  4156     0B3C  2B3F               	goto	u3980
  4157     0B3D                     u3981:
  4158     0B3D  3001               	movlw	1
  4159     0B3E  2B40               	goto	u3990
  4160     0B3F                     u3980:
  4161     0B3F  3000               	movlw	0
  4162     0B40                     u3990:
  4163     0B40  0080               	movwf	0
  4164                           
  4165                           ;main.c: 422:     *flow_active = (flow_sensor_high_count < 45);
  4166     0B41  0874               	movf	getSensorResults@flow_active,w
  4167     0B42  0084               	movwf	4
  4168     0B43  302D               	movlw	45
  4169     0B44  0266               	subwf	_flow_sensor_high_count,w	;volatile
  4170     0B45  1C03               	skipc
  4171     0B46  2B48               	goto	u4001
  4172     0B47  2B4A               	goto	u4000
  4173     0B48                     u4001:
  4174     0B48  3001               	movlw	1
  4175     0B49  2B4B               	goto	u4010
  4176     0B4A                     u4000:
  4177     0B4A  3000               	movlw	0
  4178     0B4B                     u4010:
  4179     0B4B  0080               	movwf	0
  4180     0B4C                     l2545:
  4181                           
  4182                           ;main.c: 423:     sensors_reading_complete = 0;
  4183     0B4C  01E5               	clrf	_sensors_reading_complete	;volatile
  4184     0B4D                     l2547:
  4185                           
  4186                           ;main.c: 424:     return 1;
  4187     0B4D  3001               	movlw	1
  4188     0B4E  2B50               	goto	l261
  4189     0B4F                     l2551:
  4190                           
  4191                           ;main.c: 426:   return 0;
  4192     0B4F  3000               	movlw	0
  4193     0B50                     l261:
  4194     0B50  0008               	return
  4195     0B51                     __end_of_getSensorResults:
  4196                           
  4197                           	psect	text10
  4198     0B80                     __ptext10:	
  4199 ;; *************** function ___lmul *****************
  4200 ;; Defined at:
  4201 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul32.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  multiplier      4    2[COMMON] unsigned long 
  4204 ;;  multiplicand    4    6[COMMON] unsigned long 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  product         4    1[BANK0 ] unsigned long 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  4    2[COMMON] unsigned long 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4216 ;;      Params:         8       0       0       0
  4217 ;;      Locals:         0       4       0       0
  4218 ;;      Temps:          0       1       0       0
  4219 ;;      Totals:         8       5       0       0
  4220 ;;Total ram usage:       13 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 1
  4223 ;; This function calls:
  4224 ;;		Nothing
  4225 ;; This function is called by:
  4226 ;;		_main
  4227 ;;		_getsensorreadings
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231     0B80                     ___lmul:	
  4232                           ;psect for function ___lmul
  4233                           
  4234     0B80                     l2595:	
  4235                           ;incstack = 0
  4236                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4237                           
  4238     0B80  3000               	movlw	0
  4239     0B81  1283               	bcf	3,5	;RP0=0, select bank0
  4240     0B82  1303               	bcf	3,6	;RP1=0, select bank0
  4241     0B83  00A4               	movwf	___lmul@product+3
  4242     0B84  3000               	movlw	0
  4243     0B85  00A3               	movwf	___lmul@product+2
  4244     0B86  3000               	movlw	0
  4245     0B87  00A2               	movwf	___lmul@product+1
  4246     0B88  3000               	movlw	0
  4247     0B89  00A1               	movwf	___lmul@product
  4248     0B8A                     l2597:
  4249     0B8A  1C72               	btfss	___lmul@multiplier,0
  4250     0B8B  2B8D               	goto	u4081
  4251     0B8C  2B8E               	goto	u4080
  4252     0B8D                     u4081:
  4253     0B8D  2BA5               	goto	l2601
  4254     0B8E                     u4080:
  4255     0B8E                     l2599:
  4256     0B8E  0876               	movf	___lmul@multiplicand,w
  4257     0B8F  07A1               	addwf	___lmul@product,f
  4258     0B90  0877               	movf	___lmul@multiplicand+1,w
  4259     0B91  1103               	clrz
  4260     0B92  1803               	skipnc
  4261     0B93  3E01               	addlw	1
  4262     0B94  1903               	skipnz
  4263     0B95  2B97               	goto	u4091
  4264     0B96  07A2               	addwf	___lmul@product+1,f
  4265     0B97                     u4091:
  4266     0B97  0878               	movf	___lmul@multiplicand+2,w
  4267     0B98  1103               	clrz
  4268     0B99  1803               	skipnc
  4269     0B9A  3E01               	addlw	1
  4270     0B9B  1903               	skipnz
  4271     0B9C  2B9E               	goto	u4092
  4272     0B9D  07A3               	addwf	___lmul@product+2,f
  4273     0B9E                     u4092:
  4274     0B9E  0879               	movf	___lmul@multiplicand+3,w
  4275     0B9F  1103               	clrz
  4276     0BA0  1803               	skipnc
  4277     0BA1  3E01               	addlw	1
  4278     0BA2  1903               	skipnz
  4279     0BA3  2BA5               	goto	u4093
  4280     0BA4  07A4               	addwf	___lmul@product+3,f
  4281     0BA5                     u4093:
  4282     0BA5                     l2601:
  4283     0BA5  3001               	movlw	1
  4284     0BA6  00A0               	movwf	??___lmul
  4285     0BA7                     u4105:
  4286     0BA7  1003               	clrc
  4287     0BA8  0DF6               	rlf	___lmul@multiplicand,f
  4288     0BA9  0DF7               	rlf	___lmul@multiplicand+1,f
  4289     0BAA  0DF8               	rlf	___lmul@multiplicand+2,f
  4290     0BAB  0DF9               	rlf	___lmul@multiplicand+3,f
  4291     0BAC  0BA0               	decfsz	??___lmul,f
  4292     0BAD  2BA7               	goto	u4105
  4293     0BAE                     l2603:
  4294     0BAE  3001               	movlw	1
  4295     0BAF                     u4115:
  4296     0BAF  1003               	clrc
  4297     0BB0  0CF5               	rrf	___lmul@multiplier+3,f
  4298     0BB1  0CF4               	rrf	___lmul@multiplier+2,f
  4299     0BB2  0CF3               	rrf	___lmul@multiplier+1,f
  4300     0BB3  0CF2               	rrf	___lmul@multiplier,f
  4301     0BB4  3EFF               	addlw	-1
  4302     0BB5  1D03               	skipz
  4303     0BB6  2BAF               	goto	u4115
  4304     0BB7  0875               	movf	___lmul@multiplier+3,w
  4305     0BB8  0474               	iorwf	___lmul@multiplier+2,w
  4306     0BB9  0473               	iorwf	___lmul@multiplier+1,w
  4307     0BBA  0472               	iorwf	___lmul@multiplier,w
  4308     0BBB  1D03               	skipz
  4309     0BBC  2BBE               	goto	u4121
  4310     0BBD  2BBF               	goto	u4120
  4311     0BBE                     u4121:
  4312     0BBE  2B8A               	goto	l2597
  4313     0BBF                     u4120:
  4314     0BBF                     l2605:
  4315     0BBF  0824               	movf	___lmul@product+3,w
  4316     0BC0  00F5               	movwf	?___lmul+3
  4317     0BC1  0823               	movf	___lmul@product+2,w
  4318     0BC2  00F4               	movwf	?___lmul+2
  4319     0BC3  0822               	movf	___lmul@product+1,w
  4320     0BC4  00F3               	movwf	?___lmul+1
  4321     0BC5  0821               	movf	___lmul@product,w
  4322     0BC6  00F2               	movwf	?___lmul
  4323     0BC7                     l481:
  4324     0BC7  0008               	return
  4325     0BC8                     __end_of___lmul:
  4326                           
  4327                           	psect	text11
  4328     0EE1                     __ptext11:	
  4329 ;; *************** function _dispinfo *****************
  4330 ;; Defined at:
  4331 ;;		line 838 in file "main.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  refreshtime     1    wreg     unsigned char 
  4334 ;; Auto vars:     Size  Location     Type
  4335 ;;  refreshtime     1   35[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4345 ;;      Params:         0       0       0       0
  4346 ;;      Locals:         0       1       0       0
  4347 ;;      Temps:          0       8       0       0
  4348 ;;      Totals:         0       9       0       0
  4349 ;;Total ram usage:        9 bytes
  4350 ;; Hardware stack levels used: 1
  4351 ;; Hardware stack levels required when called: 3
  4352 ;; This function calls:
  4353 ;;		___lldiv
  4354 ;;		_lcd_cmd
  4355 ;;		_lcd_display_bool_binary
  4356 ;;		_lcd_display_int
  4357 ;;		_lcd_set_cursor
  4358 ;; This function is called by:
  4359 ;;		_main
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363     0EE1                     _dispinfo:	
  4364                           ;psect for function _dispinfo
  4365                           
  4366                           
  4367                           ;incstack = 0
  4368                           ; Regs used in _dispinfo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4369                           ;dispinfo@refreshtime stored from wreg
  4370     0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  4371     0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  4372     0EE3  00C3               	movwf	dispinfo@refreshtime
  4373     0EE4                     l2869:
  4374                           
  4375                           ;main.c: 871:   if (millis - lastdispupdt >= refreshtime) {
  4376     0EE4  0843               	movf	dispinfo@refreshtime,w
  4377     0EE5  00BB               	movwf	??_dispinfo
  4378     0EE6  01BC               	clrf	??_dispinfo+1
  4379     0EE7  01BD               	clrf	??_dispinfo+2
  4380     0EE8  01BE               	clrf	??_dispinfo+3
  4381     0EE9  0853               	movf	_millis,w	;volatile
  4382     0EEA  00BF               	movwf	??_dispinfo+4
  4383     0EEB  0854               	movf	_millis+1,w	;volatile
  4384     0EEC  00C0               	movwf	??_dispinfo+5
  4385     0EED  0855               	movf	_millis+2,w	;volatile
  4386     0EEE  00C1               	movwf	??_dispinfo+6
  4387     0EEF  0856               	movf	_millis+3,w	;volatile
  4388     0EF0  00C2               	movwf	??_dispinfo+7
  4389     0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  4390     0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  4391     0EF3  0820               	movf	_lastdispupdt^(0+128),w
  4392     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  4393     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  4394     0EF6  02BF               	subwf	??_dispinfo+4,f
  4395     0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  4396     0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  4397     0EF9  0821               	movf	(_lastdispupdt+1)^(0+128),w
  4398     0EFA  1C03               	skipc
  4399     0EFB  0F21               	incfsz	(_lastdispupdt+1)^(0+128),w
  4400     0EFC  2EFE               	goto	u4561
  4401     0EFD  2F01               	goto	u4562
  4402     0EFE                     u4561:
  4403     0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  4404     0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  4405     0F00  02C0               	subwf	??_dispinfo+5,f
  4406     0F01                     u4562:
  4407     0F01  1683               	bsf	3,5	;RP0=1, select bank1
  4408     0F02  1303               	bcf	3,6	;RP1=0, select bank1
  4409     0F03  0822               	movf	(_lastdispupdt+2)^(0+128),w
  4410     0F04  1C03               	skipc
  4411     0F05  0F22               	incfsz	(_lastdispupdt+2)^(0+128),w
  4412     0F06  2F08               	goto	u4563
  4413     0F07  2F0B               	goto	u4564
  4414     0F08                     u4563:
  4415     0F08  1283               	bcf	3,5	;RP0=0, select bank0
  4416     0F09  1303               	bcf	3,6	;RP1=0, select bank0
  4417     0F0A  02C1               	subwf	??_dispinfo+6,f
  4418     0F0B                     u4564:
  4419     0F0B  1683               	bsf	3,5	;RP0=1, select bank1
  4420     0F0C  1303               	bcf	3,6	;RP1=0, select bank1
  4421     0F0D  0823               	movf	(_lastdispupdt+3)^(0+128),w
  4422     0F0E  1C03               	skipc
  4423     0F0F  0F23               	incfsz	(_lastdispupdt+3)^(0+128),w
  4424     0F10  2F12               	goto	u4565
  4425     0F11  2F15               	goto	u4566
  4426     0F12                     u4565:
  4427     0F12  1283               	bcf	3,5	;RP0=0, select bank0
  4428     0F13  1303               	bcf	3,6	;RP1=0, select bank0
  4429     0F14  02C2               	subwf	??_dispinfo+7,f
  4430     0F15                     u4566:
  4431     0F15  1683               	bsf	3,5	;RP0=1, select bank1
  4432     0F16  1303               	bcf	3,6	;RP1=0, select bank1
  4433     0F17  1283               	bcf	3,5	;RP0=0, select bank0
  4434     0F18  1303               	bcf	3,6	;RP1=0, select bank0
  4435     0F19  083E               	movf	??_dispinfo+3,w
  4436     0F1A  0242               	subwf	??_dispinfo+7,w
  4437     0F1B  1D03               	skipz
  4438     0F1C  2F27               	goto	u4575
  4439     0F1D  083D               	movf	??_dispinfo+2,w
  4440     0F1E  0241               	subwf	??_dispinfo+6,w
  4441     0F1F  1D03               	skipz
  4442     0F20  2F27               	goto	u4575
  4443     0F21  083C               	movf	??_dispinfo+1,w
  4444     0F22  0240               	subwf	??_dispinfo+5,w
  4445     0F23  1D03               	skipz
  4446     0F24  2F27               	goto	u4575
  4447     0F25  083B               	movf	??_dispinfo,w
  4448     0F26  023F               	subwf	??_dispinfo+4,w
  4449     0F27                     u4575:
  4450     0F27  1C03               	skipc
  4451     0F28  2F2A               	goto	u4571
  4452     0F29  2F2B               	goto	u4570
  4453     0F2A                     u4571:
  4454     0F2A  2FFF               	goto	l381
  4455     0F2B                     u4570:
  4456     0F2B                     l2871:
  4457                           
  4458                           ;main.c: 872:     lastdispupdt = millis;
  4459     0F2B  0856               	movf	_millis+3,w	;volatile
  4460     0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  4461     0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  4462     0F2E  00A3               	movwf	(_lastdispupdt+3)^(0+128)
  4463     0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  4464     0F30  1303               	bcf	3,6	;RP1=0, select bank0
  4465     0F31  0855               	movf	_millis+2,w	;volatile
  4466     0F32  1683               	bsf	3,5	;RP0=1, select bank1
  4467     0F33  1303               	bcf	3,6	;RP1=0, select bank1
  4468     0F34  00A2               	movwf	(_lastdispupdt+2)^(0+128)
  4469     0F35  1283               	bcf	3,5	;RP0=0, select bank0
  4470     0F36  1303               	bcf	3,6	;RP1=0, select bank0
  4471     0F37  0854               	movf	_millis+1,w	;volatile
  4472     0F38  1683               	bsf	3,5	;RP0=1, select bank1
  4473     0F39  1303               	bcf	3,6	;RP1=0, select bank1
  4474     0F3A  00A1               	movwf	(_lastdispupdt+1)^(0+128)
  4475     0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4476     0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4477     0F3D  0853               	movf	_millis,w	;volatile
  4478     0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  4479     0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  4480     0F40  00A0               	movwf	_lastdispupdt^(0+128)
  4481     0F41                     l2873:
  4482                           
  4483                           ;main.c: 873:     lcd_cmd(0x01);
  4484     0F41  3001               	movlw	1
  4485     0F42  158A  259D  158A   	fcall	_lcd_cmd
  4486     0F45                     l2875:
  4487                           
  4488                           ;main.c: 874:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4489     0F45  3006               	movlw	6
  4490     0F46  1283               	bcf	3,5	;RP0=0, select bank0
  4491     0F47  1303               	bcf	3,6	;RP1=0, select bank0
  4492     0F48  00BC               	movwf	??_dispinfo+1
  4493     0F49  3030               	movlw	48
  4494     0F4A  00BB               	movwf	??_dispinfo
  4495     0F4B                     u5137:
  4496     0F4B  0BBB               	decfsz	??_dispinfo,f
  4497     0F4C  2F4B               	goto	u5137
  4498     0F4D  0BBC               	decfsz	??_dispinfo+1,f
  4499     0F4E  2F4B               	goto	u5137
  4500                           
  4501                           ;main.c: 875:     lcd_set_cursor(1, 0);
  4502     0F4F  01F4               	clrf	lcd_set_cursor@col
  4503     0F50  3001               	movlw	1
  4504     0F51  158A  22AA  158A   	fcall	_lcd_set_cursor
  4505     0F54                     l2877:
  4506                           
  4507                           ;main.c: 876:     lcd_display_int(voltage);
  4508     0F54  1283               	bcf	3,5	;RP0=0, select bank0
  4509     0F55  1303               	bcf	3,6	;RP1=0, select bank0
  4510     0F56  0868               	movf	_voltage,w
  4511     0F57  00BB               	movwf	??_dispinfo
  4512     0F58  01BC               	clrf	??_dispinfo+1
  4513     0F59  083B               	movf	??_dispinfo,w
  4514     0F5A  00B3               	movwf	lcd_display_int@num
  4515     0F5B  083C               	movf	??_dispinfo+1,w
  4516     0F5C  00B4               	movwf	lcd_display_int@num+1
  4517     0F5D  118A  2705  158A   	fcall	_lcd_display_int
  4518     0F60                     l2879:
  4519                           
  4520                           ;main.c: 877:     lcd_set_cursor(1, 4);
  4521     0F60  3004               	movlw	4
  4522     0F61  00F4               	movwf	lcd_set_cursor@col
  4523     0F62  3001               	movlw	1
  4524     0F63  158A  22AA  158A   	fcall	_lcd_set_cursor
  4525                           
  4526                           ;main.c: 878:     lcd_display_int(maxruntimeindex + 1);
  4527     0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4528     0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4529     0F68  086E               	movf	_maxruntimeindex,w
  4530     0F69  3E01               	addlw	1
  4531     0F6A  00B3               	movwf	lcd_display_int@num
  4532     0F6B  3000               	movlw	0
  4533     0F6C  1803               	skipnc
  4534     0F6D  3001               	movlw	1
  4535     0F6E  00B4               	movwf	lcd_display_int@num+1
  4536     0F6F  118A  2705  158A   	fcall	_lcd_display_int
  4537     0F72                     l2881:
  4538                           
  4539                           ;main.c: 879:     lcd_set_cursor(1, 7);
  4540     0F72  3007               	movlw	7
  4541     0F73  00F4               	movwf	lcd_set_cursor@col
  4542     0F74  3001               	movlw	1
  4543     0F75  158A  22AA  158A   	fcall	_lcd_set_cursor
  4544     0F78                     l2883:
  4545                           
  4546                           ;main.c: 880:     lcd_display_int(seconds_counter - motorstarttime);
  4547     0F78  1683               	bsf	3,5	;RP0=1, select bank1
  4548     0F79  1303               	bcf	3,6	;RP1=0, select bank1
  4549     0F7A  0834               	movf	_motorstarttime^(0+128),w
  4550     0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  4551     0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  4552     0F7D  0257               	subwf	_seconds_counter,w	;volatile
  4553     0F7E  00B3               	movwf	lcd_display_int@num
  4554     0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  4555     0F80  1303               	bcf	3,6	;RP1=0, select bank1
  4556     0F81  0835               	movf	(_motorstarttime+1)^(0+128),w
  4557     0F82  1C03               	skipc
  4558     0F83  0A35               	incf	(_motorstarttime+1)^(0+128),w
  4559     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  4560     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  4561     0F86  0258               	subwf	_seconds_counter+1,w	;volatile
  4562     0F87  00B4               	movwf	lcd_display_int@num+1
  4563     0F88  118A  2705  158A   	fcall	_lcd_display_int
  4564                           
  4565                           ;main.c: 881:     lcd_set_cursor(1, 11);
  4566     0F8B  300B               	movlw	11
  4567     0F8C  00F4               	movwf	lcd_set_cursor@col
  4568     0F8D  3001               	movlw	1
  4569     0F8E  158A  22AA  158A   	fcall	_lcd_set_cursor
  4570                           
  4571                           ;main.c: 882:     lcd_display_bool_binary(voltageerror);
  4572     0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4573     0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4574     0F93  0863               	movf	_voltageerror,w
  4575     0F94  158A  2289  158A   	fcall	_lcd_display_bool_binary
  4576                           
  4577                           ;main.c: 885:     lcd_set_cursor(0, 0);
  4578     0F97  01F4               	clrf	lcd_set_cursor@col
  4579     0F98  3000               	movlw	0
  4580     0F99  158A  22AA  158A   	fcall	_lcd_set_cursor
  4581                           
  4582                           ;main.c: 886:     lcd_display_bool_binary(low_sensor_active);
  4583     0F9C  1283               	bcf	3,5	;RP0=0, select bank0
  4584     0F9D  1303               	bcf	3,6	;RP1=0, select bank0
  4585     0F9E  086D               	movf	_low_sensor_active,w
  4586     0F9F  158A  2289  158A   	fcall	_lcd_display_bool_binary
  4587                           
  4588                           ;main.c: 887:     lcd_set_cursor(0, 2);
  4589     0FA2  3002               	movlw	2
  4590     0FA3  00F4               	movwf	lcd_set_cursor@col
  4591     0FA4  3000               	movlw	0
  4592     0FA5  158A  22AA  158A   	fcall	_lcd_set_cursor
  4593                           
  4594                           ;main.c: 888:     lcd_display_bool_binary(high_sensor_active);
  4595     0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  4596     0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  4597     0FAA  086C               	movf	_high_sensor_active,w
  4598     0FAB  158A  2289  158A   	fcall	_lcd_display_bool_binary
  4599                           
  4600                           ;main.c: 889:     lcd_set_cursor(0, 4);
  4601     0FAE  3004               	movlw	4
  4602     0FAF  00F4               	movwf	lcd_set_cursor@col
  4603     0FB0  3000               	movlw	0
  4604     0FB1  158A  22AA  158A   	fcall	_lcd_set_cursor
  4605                           
  4606                           ;main.c: 890:     lcd_display_bool_binary(flow_sensor_active);
  4607     0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  4608     0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  4609     0FB6  086B               	movf	_flow_sensor_active,w
  4610     0FB7  158A  2289  158A   	fcall	_lcd_display_bool_binary
  4611                           
  4612                           ;main.c: 891:     lcd_set_cursor(0, 6);
  4613     0FBA  3006               	movlw	6
  4614     0FBB  00F4               	movwf	lcd_set_cursor@col
  4615     0FBC  3000               	movlw	0
  4616     0FBD  158A  22AA  158A   	fcall	_lcd_set_cursor
  4617                           
  4618                           ;main.c: 892:     lcd_display_bool_binary(dryrunerror);
  4619     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  4620     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  4621     0FC2  0862               	movf	_dryrunerror,w
  4622     0FC3  158A  2289  158A   	fcall	_lcd_display_bool_binary
  4623                           
  4624                           ;main.c: 893:     lcd_set_cursor(0, 8);
  4625     0FC6  3008               	movlw	8
  4626     0FC7  00F4               	movwf	lcd_set_cursor@col
  4627     0FC8  3000               	movlw	0
  4628     0FC9  158A  22AA  158A   	fcall	_lcd_set_cursor
  4629     0FCC                     l2885:
  4630                           
  4631                           ;main.c: 894:     lcd_display_int(dryruntime);
  4632     0FCC  1683               	bsf	3,5	;RP0=1, select bank1
  4633     0FCD  1303               	bcf	3,6	;RP1=0, select bank1
  4634     0FCE  0845               	movf	(_dryruntime+1)^(0+128),w
  4635     0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  4636     0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  4637     0FD1  00B4               	movwf	lcd_display_int@num+1
  4638     0FD2  1683               	bsf	3,5	;RP0=1, select bank1
  4639     0FD3  1303               	bcf	3,6	;RP1=0, select bank1
  4640     0FD4  0844               	movf	_dryruntime^(0+128),w
  4641     0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  4642     0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  4643     0FD7  00B3               	movwf	lcd_display_int@num
  4644     0FD8  118A  2705  158A   	fcall	_lcd_display_int
  4645     0FDB                     l2887:
  4646                           
  4647                           ;main.c: 895:     lcd_set_cursor(0, 13);
  4648     0FDB  300D               	movlw	13
  4649     0FDC  00F4               	movwf	lcd_set_cursor@col
  4650     0FDD  3000               	movlw	0
  4651     0FDE  158A  22AA  158A   	fcall	_lcd_set_cursor
  4652                           
  4653                           ;main.c: 896:     lcd_display_int(lastflowcheck/1000);
  4654     0FE1  3000               	movlw	0
  4655     0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  4656     0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  4657     0FE4  00A8               	movwf	___lldiv@divisor+3
  4658     0FE5  3000               	movlw	0
  4659     0FE6  00A7               	movwf	___lldiv@divisor+2
  4660     0FE7  3003               	movlw	3
  4661     0FE8  00A6               	movwf	___lldiv@divisor+1
  4662     0FE9  30E8               	movlw	232
  4663     0FEA  00A5               	movwf	___lldiv@divisor
  4664     0FEB  0852               	movf	_lastflowcheck+3,w
  4665     0FEC  00AC               	movwf	___lldiv@dividend+3
  4666     0FED  0851               	movf	_lastflowcheck+2,w
  4667     0FEE  00AB               	movwf	___lldiv@dividend+2
  4668     0FEF  0850               	movf	_lastflowcheck+1,w
  4669     0FF0  00AA               	movwf	___lldiv@dividend+1
  4670     0FF1  084F               	movf	_lastflowcheck,w
  4671     0FF2  00A9               	movwf	___lldiv@dividend
  4672     0FF3  158A  24CE  158A   	fcall	___lldiv
  4673     0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  4674     0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  4675     0FF8  0826               	movf	?___lldiv+1,w
  4676     0FF9  00B4               	movwf	lcd_display_int@num+1
  4677     0FFA  0825               	movf	?___lldiv,w
  4678     0FFB  00B3               	movwf	lcd_display_int@num
  4679     0FFC  118A  2705  158A   	fcall	_lcd_display_int
  4680     0FFF                     l381:
  4681     0FFF  0008               	return
  4682     1000                     __end_of_dispinfo:
  4683                           
  4684                           	psect	text12
  4685     0AAA                     __ptext12:	
  4686 ;; *************** function _lcd_set_cursor *****************
  4687 ;; Defined at:
  4688 ;;		line 697 in file "main.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  row             1    wreg     unsigned char 
  4691 ;;  col             1    4[COMMON] unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  row             1    5[COMMON] unsigned char 
  4694 ;;  address         1    6[COMMON] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0, pclath, cstack
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4704 ;;      Params:         1       0       0       0
  4705 ;;      Locals:         2       0       0       0
  4706 ;;      Temps:          0       0       0       0
  4707 ;;      Totals:         3       0       0       0
  4708 ;;Total ram usage:        3 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 2
  4711 ;; This function calls:
  4712 ;;		_lcd_cmd
  4713 ;; This function is called by:
  4714 ;;		_dispinfo
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718     0AAA                     _lcd_set_cursor:	
  4719                           ;psect for function _lcd_set_cursor
  4720                           
  4721                           
  4722                           ;incstack = 0
  4723                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4724                           ;lcd_set_cursor@row stored from wreg
  4725     0AAA  00F5               	movwf	lcd_set_cursor@row
  4726     0AAB                     l2555:
  4727                           
  4728                           ;main.c: 698:   unsigned char address;;main.c: 701:   if (row == 0) {
  4729     0AAB  0875               	movf	lcd_set_cursor@row,w
  4730     0AAC  1D03               	btfss	3,2
  4731     0AAD  2AAF               	goto	u4021
  4732     0AAE  2AB0               	goto	u4020
  4733     0AAF                     u4021:
  4734     0AAF  2AB4               	goto	l2559
  4735     0AB0                     u4020:
  4736     0AB0                     l2557:
  4737                           
  4738                           ;main.c: 702:     address = 0x80 + col;
  4739     0AB0  0874               	movf	lcd_set_cursor@col,w
  4740     0AB1  3E80               	addlw	128
  4741     0AB2  00F6               	movwf	lcd_set_cursor@address
  4742                           
  4743                           ;main.c: 703:   } else {
  4744     0AB3  2AB7               	goto	l2561
  4745     0AB4                     l2559:
  4746                           
  4747                           ;main.c: 704:     address = 0xC0 + col;
  4748     0AB4  0874               	movf	lcd_set_cursor@col,w
  4749     0AB5  3EC0               	addlw	192
  4750     0AB6  00F6               	movwf	lcd_set_cursor@address
  4751     0AB7                     l2561:
  4752                           
  4753                           ;main.c: 707:   lcd_cmd(address);
  4754     0AB7  0876               	movf	lcd_set_cursor@address,w
  4755     0AB8  158A  259D  158A   	fcall	_lcd_cmd
  4756     0ABB                     l336:
  4757     0ABB  0008               	return
  4758     0ABC                     __end_of_lcd_set_cursor:
  4759                           
  4760                           	psect	text13
  4761     0D9D                     __ptext13:	
  4762 ;; *************** function _lcd_cmd *****************
  4763 ;; Defined at:
  4764 ;;		line 671 in file "main.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  cmd             1    wreg     unsigned char 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  cmd             1    3[COMMON] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4778 ;;      Params:         0       0       0       0
  4779 ;;      Locals:         1       0       0       0
  4780 ;;      Temps:          1       0       0       0
  4781 ;;      Totals:         2       0       0       0
  4782 ;;Total ram usage:        2 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 1
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_initLCD
  4789 ;;		_lcd_set_cursor
  4790 ;;		_dispinfo
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794     0D9D                     _lcd_cmd:	
  4795                           ;psect for function _lcd_cmd
  4796                           
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _lcd_cmd: [wreg]
  4800                           ;lcd_cmd@cmd stored from wreg
  4801     0D9D  00F3               	movwf	lcd_cmd@cmd
  4802     0D9E                     l2399:
  4803                           
  4804                           ;main.c: 672:   PORTCbits.RC5 = 0;
  4805     0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  4806     0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  4807     0DA0  1287               	bcf	7,5	;volatile
  4808                           
  4809                           ;main.c: 675:   PORTCbits.RC7 = (cmd & 0x80) ? 1 : 0;
  4810     0DA1  1BF3               	btfsc	lcd_cmd@cmd,7
  4811     0DA2  2DA4               	goto	u3411
  4812     0DA3  2DA8               	goto	u3410
  4813     0DA4                     u3411:
  4814     0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  4815     0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  4816     0DA6  1787               	bsf	7,7	;volatile
  4817     0DA7  2DAB               	goto	u3424
  4818     0DA8                     u3410:
  4819     0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  4820     0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  4821     0DAA  1387               	bcf	7,7	;volatile
  4822     0DAB                     u3424:
  4823                           
  4824                           ;main.c: 676:   PORTBbits.RB2 = (cmd & 0x40) ? 1 : 0;
  4825     0DAB  1B73               	btfsc	lcd_cmd@cmd,6
  4826     0DAC  2DAE               	goto	u3431
  4827     0DAD  2DB2               	goto	u3430
  4828     0DAE                     u3431:
  4829     0DAE  1283               	bcf	3,5	;RP0=0, select bank0
  4830     0DAF  1303               	bcf	3,6	;RP1=0, select bank0
  4831     0DB0  1506               	bsf	6,2	;volatile
  4832     0DB1  2DB5               	goto	u3444
  4833     0DB2                     u3430:
  4834     0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  4835     0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  4836     0DB4  1106               	bcf	6,2	;volatile
  4837     0DB5                     u3444:
  4838                           
  4839                           ;main.c: 677:   PORTBbits.RB1 = (cmd & 0x20) ? 1 : 0;
  4840     0DB5  1AF3               	btfsc	lcd_cmd@cmd,5
  4841     0DB6  2DB8               	goto	u3451
  4842     0DB7  2DBC               	goto	u3450
  4843     0DB8                     u3451:
  4844     0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  4845     0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  4846     0DBA  1486               	bsf	6,1	;volatile
  4847     0DBB  2DBF               	goto	u3464
  4848     0DBC                     u3450:
  4849     0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  4850     0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  4851     0DBE  1086               	bcf	6,1	;volatile
  4852     0DBF                     u3464:
  4853                           
  4854                           ;main.c: 678:   PORTBbits.RB0 = (cmd & 0x10) ? 1 : 0;
  4855     0DBF  1A73               	btfsc	lcd_cmd@cmd,4
  4856     0DC0  2DC2               	goto	u3471
  4857     0DC1  2DC6               	goto	u3470
  4858     0DC2                     u3471:
  4859     0DC2  1283               	bcf	3,5	;RP0=0, select bank0
  4860     0DC3  1303               	bcf	3,6	;RP1=0, select bank0
  4861     0DC4  1406               	bsf	6,0	;volatile
  4862     0DC5  2DC9               	goto	u3484
  4863     0DC6                     u3470:
  4864     0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  4865     0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  4866     0DC8  1006               	bcf	6,0	;volatile
  4867     0DC9                     u3484:
  4868                           
  4869                           ;main.c: 680:   PORTCbits.RC6 = 1;
  4870     0DC9  1707               	bsf	7,6	;volatile
  4871                           
  4872                           ;main.c: 681:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  4873     0DCA  2DCB               	nop2	;2 cycle nop
  4874                           
  4875                           ;main.c: 682:   PORTCbits.RC6 = 0;
  4876     0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4877     0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4878     0DCD  1307               	bcf	7,6	;volatile
  4879     0DCE                     l2401:
  4880                           
  4881                           ;main.c: 683:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  4882     0DCE  3042               	movlw	66
  4883     0DCF  00F2               	movwf	??_lcd_cmd
  4884     0DD0                     u5147:
  4885     0DD0  0BF2               	decfsz	??_lcd_cmd,f
  4886     0DD1  2DD0               	goto	u5147
  4887     0DD2  0000               	nop
  4888     0DD3                     l2403:
  4889                           
  4890                           ;main.c: 686:   PORTCbits.RC7 = (cmd & 0x08) ? 1 : 0;
  4891     0DD3  19F3               	btfsc	lcd_cmd@cmd,3
  4892     0DD4  2DD6               	goto	u3491
  4893     0DD5  2DDA               	goto	u3490
  4894     0DD6                     u3491:
  4895     0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  4896     0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  4897     0DD8  1787               	bsf	7,7	;volatile
  4898     0DD9  2DDD               	goto	u3504
  4899     0DDA                     u3490:
  4900     0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  4901     0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  4902     0DDC  1387               	bcf	7,7	;volatile
  4903     0DDD                     u3504:
  4904     0DDD                     l2405:
  4905                           
  4906                           ;main.c: 687:   PORTBbits.RB2 = (cmd & 0x04) ? 1 : 0;
  4907     0DDD  1973               	btfsc	lcd_cmd@cmd,2
  4908     0DDE  2DE0               	goto	u3511
  4909     0DDF  2DE4               	goto	u3510
  4910     0DE0                     u3511:
  4911     0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  4912     0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  4913     0DE2  1506               	bsf	6,2	;volatile
  4914     0DE3  2DE7               	goto	u3524
  4915     0DE4                     u3510:
  4916     0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  4917     0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  4918     0DE6  1106               	bcf	6,2	;volatile
  4919     0DE7                     u3524:
  4920     0DE7                     l2407:
  4921                           
  4922                           ;main.c: 688:   PORTBbits.RB1 = (cmd & 0x02) ? 1 : 0;
  4923     0DE7  18F3               	btfsc	lcd_cmd@cmd,1
  4924     0DE8  2DEA               	goto	u3531
  4925     0DE9  2DEE               	goto	u3530
  4926     0DEA                     u3531:
  4927     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  4928     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  4929     0DEC  1486               	bsf	6,1	;volatile
  4930     0DED  2DF1               	goto	u3544
  4931     0DEE                     u3530:
  4932     0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  4933     0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  4934     0DF0  1086               	bcf	6,1	;volatile
  4935     0DF1                     u3544:
  4936     0DF1                     l2409:
  4937                           
  4938                           ;main.c: 689:   PORTBbits.RB0 = (cmd & 0x01) ? 1 : 0;
  4939     0DF1  1873               	btfsc	lcd_cmd@cmd,0
  4940     0DF2  2DF4               	goto	u3551
  4941     0DF3  2DF8               	goto	u3550
  4942     0DF4                     u3551:
  4943     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  4944     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  4945     0DF6  1406               	bsf	6,0	;volatile
  4946     0DF7  2DFB               	goto	u3564
  4947     0DF8                     u3550:
  4948     0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  4949     0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  4950     0DFA  1006               	bcf	6,0	;volatile
  4951     0DFB                     u3564:
  4952     0DFB                     l2411:
  4953                           
  4954                           ;main.c: 691:   PORTCbits.RC6 = 1;
  4955     0DFB  1707               	bsf	7,6	;volatile
  4956     0DFC                     l2413:
  4957                           
  4958                           ;main.c: 692:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  4959     0DFC  2DFD               	nop2	;2 cycle nop
  4960     0DFD                     l2415:
  4961                           
  4962                           ;main.c: 693:   PORTCbits.RC6 = 0;
  4963     0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  4964     0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  4965     0DFF  1307               	bcf	7,6	;volatile
  4966                           
  4967                           ;main.c: 694:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  4968     0E00  3042               	movlw	66
  4969     0E01  00F2               	movwf	??_lcd_cmd
  4970     0E02                     u5157:
  4971     0E02  0BF2               	decfsz	??_lcd_cmd,f
  4972     0E03  2E02               	goto	u5157
  4973     0E04  0000               	nop
  4974     0E05                     l331:
  4975     0E05  0008               	return
  4976     0E06                     __end_of_lcd_cmd:
  4977                           
  4978                           	psect	text14
  4979     0705                     __ptext14:	
  4980 ;; *************** function _lcd_display_int *****************
  4981 ;; Defined at:
  4982 ;;		line 736 in file "main.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  num             2   19[BANK0 ] int 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  ones            2   25[BANK0 ] int 
  4987 ;;  tens            2   23[BANK0 ] int 
  4988 ;;  hundreds        2   21[BANK0 ] int 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4998 ;;      Params:         0       2       0       0
  4999 ;;      Locals:         0       6       0       0
  5000 ;;      Temps:          0       0       0       0
  5001 ;;      Totals:         0       8       0       0
  5002 ;;Total ram usage:        8 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 2
  5005 ;; This function calls:
  5006 ;;		___awdiv
  5007 ;;		___awmod
  5008 ;;		_lcd_data
  5009 ;; This function is called by:
  5010 ;;		_dispinfo
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014     0705                     _lcd_display_int:	
  5015                           ;psect for function _lcd_display_int
  5016                           
  5017     0705                     l2563:	
  5018                           ;incstack = 0
  5019                           ; Regs used in _lcd_display_int: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5020                           
  5021                           
  5022                           ;main.c: 738:   if (num < 0) {
  5023     0705  1283               	bcf	3,5	;RP0=0, select bank0
  5024     0706  1303               	bcf	3,6	;RP1=0, select bank0
  5025     0707  1FB4               	btfss	lcd_display_int@num+1,7
  5026     0708  2F0A               	goto	u4031
  5027     0709  2F0B               	goto	u4030
  5028     070A                     u4031:
  5029     070A  2F16               	goto	l2569
  5030     070B                     u4030:
  5031     070B                     l2565:
  5032                           
  5033                           ;main.c: 739:     lcd_data('-');
  5034     070B  302D               	movlw	45
  5035     070C  158A  2534  118A   	fcall	_lcd_data
  5036     070F                     l2567:
  5037                           
  5038                           ;main.c: 740:     num = -num;
  5039     070F  1283               	bcf	3,5	;RP0=0, select bank0
  5040     0710  1303               	bcf	3,6	;RP1=0, select bank0
  5041     0711  09B3               	comf	lcd_display_int@num,f
  5042     0712  09B4               	comf	lcd_display_int@num+1,f
  5043     0713  0AB3               	incf	lcd_display_int@num,f
  5044     0714  1903               	skipnz
  5045     0715  0AB4               	incf	lcd_display_int@num+1,f
  5046     0716                     l2569:
  5047                           
  5048                           ;main.c: 744:   if (num > 999)
  5049     0716  0834               	movf	lcd_display_int@num+1,w
  5050     0717  3A80               	xorlw	128
  5051     0718  00FF               	movwf	btemp+1
  5052     0719  3083               	movlw	131
  5053     071A  027F               	subwf	btemp+1,w
  5054     071B  1D03               	skipz
  5055     071C  2F1F               	goto	u4045
  5056     071D  30E8               	movlw	232
  5057     071E  0233               	subwf	lcd_display_int@num,w
  5058     071F                     u4045:
  5059     071F  1C03               	skipc
  5060     0720  2F22               	goto	u4041
  5061     0721  2F23               	goto	u4040
  5062     0722                     u4041:
  5063     0722  2F29               	goto	l2573
  5064     0723                     u4040:
  5065     0723                     l2571:
  5066                           
  5067                           ;main.c: 745:     num = 999;
  5068     0723  30E7               	movlw	231
  5069     0724  1283               	bcf	3,5	;RP0=0, select bank0
  5070     0725  1303               	bcf	3,6	;RP1=0, select bank0
  5071     0726  00B3               	movwf	lcd_display_int@num
  5072     0727  3003               	movlw	3
  5073     0728  00B4               	movwf	lcd_display_int@num+1
  5074     0729                     l2573:
  5075                           
  5076                           ;main.c: 748:   int hundreds = num / 100;
  5077     0729  3064               	movlw	100
  5078     072A  00F2               	movwf	___awdiv@divisor
  5079     072B  3000               	movlw	0
  5080     072C  00F3               	movwf	___awdiv@divisor+1
  5081     072D  1283               	bcf	3,5	;RP0=0, select bank0
  5082     072E  1303               	bcf	3,6	;RP1=0, select bank0
  5083     072F  0834               	movf	lcd_display_int@num+1,w
  5084     0730  00F5               	movwf	___awdiv@dividend+1
  5085     0731  0833               	movf	lcd_display_int@num,w
  5086     0732  00F4               	movwf	___awdiv@dividend
  5087     0733  158A  246B  118A   	fcall	___awdiv
  5088     0736  0873               	movf	?___awdiv+1,w
  5089     0737  1283               	bcf	3,5	;RP0=0, select bank0
  5090     0738  1303               	bcf	3,6	;RP1=0, select bank0
  5091     0739  00B6               	movwf	lcd_display_int@hundreds+1
  5092     073A  0872               	movf	?___awdiv,w
  5093     073B  00B5               	movwf	lcd_display_int@hundreds
  5094     073C                     l2575:
  5095                           
  5096                           ;main.c: 749:   int tens = (num / 10) % 10;
  5097     073C  300A               	movlw	10
  5098     073D  00A0               	movwf	___awmod@divisor
  5099     073E  3000               	movlw	0
  5100     073F  00A1               	movwf	___awmod@divisor+1
  5101     0740  300A               	movlw	10
  5102     0741  00F2               	movwf	___awdiv@divisor
  5103     0742  3000               	movlw	0
  5104     0743  00F3               	movwf	___awdiv@divisor+1
  5105     0744  0834               	movf	lcd_display_int@num+1,w
  5106     0745  00F5               	movwf	___awdiv@dividend+1
  5107     0746  0833               	movf	lcd_display_int@num,w
  5108     0747  00F4               	movwf	___awdiv@dividend
  5109     0748  158A  246B  118A   	fcall	___awdiv
  5110     074B  0873               	movf	?___awdiv+1,w
  5111     074C  1283               	bcf	3,5	;RP0=0, select bank0
  5112     074D  1303               	bcf	3,6	;RP1=0, select bank0
  5113     074E  00A3               	movwf	___awmod@dividend+1
  5114     074F  0872               	movf	?___awdiv,w
  5115     0750  00A2               	movwf	___awmod@dividend
  5116     0751  158A  2412  118A   	fcall	___awmod
  5117     0754  1283               	bcf	3,5	;RP0=0, select bank0
  5118     0755  1303               	bcf	3,6	;RP1=0, select bank0
  5119     0756  0821               	movf	?___awmod+1,w
  5120     0757  00B8               	movwf	lcd_display_int@tens+1
  5121     0758  0820               	movf	?___awmod,w
  5122     0759  00B7               	movwf	lcd_display_int@tens
  5123     075A                     l2577:
  5124                           
  5125                           ;main.c: 750:   int ones = num % 10;
  5126     075A  300A               	movlw	10
  5127     075B  00A0               	movwf	___awmod@divisor
  5128     075C  3000               	movlw	0
  5129     075D  00A1               	movwf	___awmod@divisor+1
  5130     075E  0834               	movf	lcd_display_int@num+1,w
  5131     075F  00A3               	movwf	___awmod@dividend+1
  5132     0760  0833               	movf	lcd_display_int@num,w
  5133     0761  00A2               	movwf	___awmod@dividend
  5134     0762  158A  2412  118A   	fcall	___awmod
  5135     0765  1283               	bcf	3,5	;RP0=0, select bank0
  5136     0766  1303               	bcf	3,6	;RP1=0, select bank0
  5137     0767  0821               	movf	?___awmod+1,w
  5138     0768  00BA               	movwf	lcd_display_int@ones+1
  5139     0769  0820               	movf	?___awmod,w
  5140     076A  00B9               	movwf	lcd_display_int@ones
  5141     076B                     l2579:
  5142                           
  5143                           ;main.c: 753:   if (hundreds > 0) {
  5144     076B  0836               	movf	lcd_display_int@hundreds+1,w
  5145     076C  3A80               	xorlw	128
  5146     076D  00FF               	movwf	btemp+1
  5147     076E  3080               	movlw	128
  5148     076F  027F               	subwf	btemp+1,w
  5149     0770  1D03               	skipz
  5150     0771  2F74               	goto	u4055
  5151     0772  3001               	movlw	1
  5152     0773  0235               	subwf	lcd_display_int@hundreds,w
  5153     0774                     u4055:
  5154     0774  1C03               	skipc
  5155     0775  2F77               	goto	u4051
  5156     0776  2F78               	goto	u4050
  5157     0777                     u4051:
  5158     0777  2F8E               	goto	l2583
  5159     0778                     u4050:
  5160     0778                     l2581:
  5161                           
  5162                           ;main.c: 755:     lcd_data('0' + hundreds);
  5163     0778  1283               	bcf	3,5	;RP0=0, select bank0
  5164     0779  1303               	bcf	3,6	;RP1=0, select bank0
  5165     077A  0835               	movf	lcd_display_int@hundreds,w
  5166     077B  3E30               	addlw	48
  5167     077C  158A  2534  118A   	fcall	_lcd_data
  5168                           
  5169                           ;main.c: 756:     lcd_data('0' + tens);
  5170     077F  1283               	bcf	3,5	;RP0=0, select bank0
  5171     0780  1303               	bcf	3,6	;RP1=0, select bank0
  5172     0781  0837               	movf	lcd_display_int@tens,w
  5173     0782  3E30               	addlw	48
  5174     0783  158A  2534  118A   	fcall	_lcd_data
  5175                           
  5176                           ;main.c: 757:     lcd_data('0' + ones);
  5177     0786  1283               	bcf	3,5	;RP0=0, select bank0
  5178     0787  1303               	bcf	3,6	;RP1=0, select bank0
  5179     0788  0839               	movf	lcd_display_int@ones,w
  5180     0789  3E30               	addlw	48
  5181     078A  158A  2534  118A   	fcall	_lcd_data
  5182                           
  5183                           ;main.c: 758:   } else if (tens > 0) {
  5184     078D  2FB3               	goto	l348
  5185     078E                     l2583:
  5186     078E  1283               	bcf	3,5	;RP0=0, select bank0
  5187     078F  1303               	bcf	3,6	;RP1=0, select bank0
  5188     0790  0838               	movf	lcd_display_int@tens+1,w
  5189     0791  3A80               	xorlw	128
  5190     0792  00FF               	movwf	btemp+1
  5191     0793  3080               	movlw	128
  5192     0794  027F               	subwf	btemp+1,w
  5193     0795  1D03               	skipz
  5194     0796  2F99               	goto	u4065
  5195     0797  3001               	movlw	1
  5196     0798  0237               	subwf	lcd_display_int@tens,w
  5197     0799                     u4065:
  5198     0799  1C03               	skipc
  5199     079A  2F9C               	goto	u4061
  5200     079B  2F9D               	goto	u4060
  5201     079C                     u4061:
  5202     079C  2FAC               	goto	l2587
  5203     079D                     u4060:
  5204     079D                     l2585:
  5205                           
  5206                           ;main.c: 760:     lcd_data('0' + tens);
  5207     079D  1283               	bcf	3,5	;RP0=0, select bank0
  5208     079E  1303               	bcf	3,6	;RP1=0, select bank0
  5209     079F  0837               	movf	lcd_display_int@tens,w
  5210     07A0  3E30               	addlw	48
  5211     07A1  158A  2534  118A   	fcall	_lcd_data
  5212                           
  5213                           ;main.c: 761:     lcd_data('0' + ones);
  5214     07A4  1283               	bcf	3,5	;RP0=0, select bank0
  5215     07A5  1303               	bcf	3,6	;RP1=0, select bank0
  5216     07A6  0839               	movf	lcd_display_int@ones,w
  5217     07A7  3E30               	addlw	48
  5218     07A8  158A  2534  118A   	fcall	_lcd_data
  5219                           
  5220                           ;main.c: 762:   } else {
  5221     07AB  2FB3               	goto	l348
  5222     07AC                     l2587:
  5223                           
  5224                           ;main.c: 764:     lcd_data('0' + ones);
  5225     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  5226     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  5227     07AE  0839               	movf	lcd_display_int@ones,w
  5228     07AF  3E30               	addlw	48
  5229     07B0  158A  2534  118A   	fcall	_lcd_data
  5230     07B3                     l348:
  5231     07B3  0008               	return
  5232     07B4                     __end_of_lcd_display_int:
  5233                           
  5234                           	psect	text15
  5235     0C12                     __ptext15:	
  5236 ;; *************** function ___awmod *****************
  5237 ;; Defined at:
  5238 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awmod.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  divisor         2    0[BANK0 ] int 
  5241 ;;  dividend        2    2[BANK0 ] int 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  sign            1    5[BANK0 ] unsigned char 
  5244 ;;  counter         1    4[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  2    0[BANK0 ] int 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5254 ;;      Params:         0       4       0       0
  5255 ;;      Locals:         0       2       0       0
  5256 ;;      Temps:          0       0       0       0
  5257 ;;      Totals:         0       6       0       0
  5258 ;;Total ram usage:        6 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 1
  5261 ;; This function calls:
  5262 ;;		Nothing
  5263 ;; This function is called by:
  5264 ;;		_lcd_display_int
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268     0C12                     ___awmod:	
  5269                           ;psect for function ___awmod
  5270                           
  5271     0C12                     l2479:	
  5272                           ;incstack = 0
  5273                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5274                           
  5275     0C12  1283               	bcf	3,5	;RP0=0, select bank0
  5276     0C13  1303               	bcf	3,6	;RP1=0, select bank0
  5277     0C14  01A5               	clrf	___awmod@sign
  5278     0C15                     l2481:
  5279     0C15  1FA3               	btfss	___awmod@dividend+1,7
  5280     0C16  2C18               	goto	u3831
  5281     0C17  2C19               	goto	u3830
  5282     0C18                     u3831:
  5283     0C18  2C20               	goto	l2487
  5284     0C19                     u3830:
  5285     0C19                     l2483:
  5286     0C19  09A2               	comf	___awmod@dividend,f
  5287     0C1A  09A3               	comf	___awmod@dividend+1,f
  5288     0C1B  0AA2               	incf	___awmod@dividend,f
  5289     0C1C  1903               	skipnz
  5290     0C1D  0AA3               	incf	___awmod@dividend+1,f
  5291     0C1E                     l2485:
  5292     0C1E  3001               	movlw	1
  5293     0C1F  00A5               	movwf	___awmod@sign
  5294     0C20                     l2487:
  5295     0C20  1FA1               	btfss	___awmod@divisor+1,7
  5296     0C21  2C23               	goto	u3841
  5297     0C22  2C24               	goto	u3840
  5298     0C23                     u3841:
  5299     0C23  2C29               	goto	l2491
  5300     0C24                     u3840:
  5301     0C24                     l2489:
  5302     0C24  09A0               	comf	___awmod@divisor,f
  5303     0C25  09A1               	comf	___awmod@divisor+1,f
  5304     0C26  0AA0               	incf	___awmod@divisor,f
  5305     0C27  1903               	skipnz
  5306     0C28  0AA1               	incf	___awmod@divisor+1,f
  5307     0C29                     l2491:
  5308     0C29  0820               	movf	___awmod@divisor,w
  5309     0C2A  0421               	iorwf	___awmod@divisor+1,w
  5310     0C2B  1903               	btfsc	3,2
  5311     0C2C  2C2E               	goto	u3851
  5312     0C2D  2C2F               	goto	u3850
  5313     0C2E                     u3851:
  5314     0C2E  2C5C               	goto	l2509
  5315     0C2F                     u3850:
  5316     0C2F                     l2493:
  5317     0C2F  3001               	movlw	1
  5318     0C30  00A4               	movwf	___awmod@counter
  5319     0C31  2C3B               	goto	l2499
  5320     0C32                     l2495:
  5321     0C32  3001               	movlw	1
  5322     0C33                     u3865:
  5323     0C33  1003               	clrc
  5324     0C34  0DA0               	rlf	___awmod@divisor,f
  5325     0C35  0DA1               	rlf	___awmod@divisor+1,f
  5326     0C36  3EFF               	addlw	-1
  5327     0C37  1D03               	skipz
  5328     0C38  2C33               	goto	u3865
  5329     0C39                     l2497:
  5330     0C39  3001               	movlw	1
  5331     0C3A  07A4               	addwf	___awmod@counter,f
  5332     0C3B                     l2499:
  5333     0C3B  1FA1               	btfss	___awmod@divisor+1,7
  5334     0C3C  2C3E               	goto	u3871
  5335     0C3D  2C3F               	goto	u3870
  5336     0C3E                     u3871:
  5337     0C3E  2C32               	goto	l2495
  5338     0C3F                     u3870:
  5339     0C3F                     l2501:
  5340     0C3F  0821               	movf	___awmod@divisor+1,w
  5341     0C40  0223               	subwf	___awmod@dividend+1,w
  5342     0C41  1D03               	skipz
  5343     0C42  2C45               	goto	u3885
  5344     0C43  0820               	movf	___awmod@divisor,w
  5345     0C44  0222               	subwf	___awmod@dividend,w
  5346     0C45                     u3885:
  5347     0C45  1C03               	skipc
  5348     0C46  2C48               	goto	u3881
  5349     0C47  2C49               	goto	u3880
  5350     0C48                     u3881:
  5351     0C48  2C4F               	goto	l2505
  5352     0C49                     u3880:
  5353     0C49                     l2503:
  5354     0C49  0820               	movf	___awmod@divisor,w
  5355     0C4A  02A2               	subwf	___awmod@dividend,f
  5356     0C4B  0821               	movf	___awmod@divisor+1,w
  5357     0C4C  1C03               	skipc
  5358     0C4D  03A3               	decf	___awmod@dividend+1,f
  5359     0C4E  02A3               	subwf	___awmod@dividend+1,f
  5360     0C4F                     l2505:
  5361     0C4F  3001               	movlw	1
  5362     0C50                     u3895:
  5363     0C50  1003               	clrc
  5364     0C51  0CA1               	rrf	___awmod@divisor+1,f
  5365     0C52  0CA0               	rrf	___awmod@divisor,f
  5366     0C53  3EFF               	addlw	-1
  5367     0C54  1D03               	skipz
  5368     0C55  2C50               	goto	u3895
  5369     0C56                     l2507:
  5370     0C56  3001               	movlw	1
  5371     0C57  02A4               	subwf	___awmod@counter,f
  5372     0C58  1D03               	btfss	3,2
  5373     0C59  2C5B               	goto	u3901
  5374     0C5A  2C5C               	goto	u3900
  5375     0C5B                     u3901:
  5376     0C5B  2C3F               	goto	l2501
  5377     0C5C                     u3900:
  5378     0C5C                     l2509:
  5379     0C5C  0825               	movf	___awmod@sign,w
  5380     0C5D  1903               	btfsc	3,2
  5381     0C5E  2C60               	goto	u3911
  5382     0C5F  2C61               	goto	u3910
  5383     0C60                     u3911:
  5384     0C60  2C66               	goto	l2513
  5385     0C61                     u3910:
  5386     0C61                     l2511:
  5387     0C61  09A2               	comf	___awmod@dividend,f
  5388     0C62  09A3               	comf	___awmod@dividend+1,f
  5389     0C63  0AA2               	incf	___awmod@dividend,f
  5390     0C64  1903               	skipnz
  5391     0C65  0AA3               	incf	___awmod@dividend+1,f
  5392     0C66                     l2513:
  5393     0C66  0823               	movf	___awmod@dividend+1,w
  5394     0C67  00A1               	movwf	?___awmod+1
  5395     0C68  0822               	movf	___awmod@dividend,w
  5396     0C69  00A0               	movwf	?___awmod
  5397     0C6A                     l633:
  5398     0C6A  0008               	return
  5399     0C6B                     __end_of___awmod:
  5400                           
  5401                           	psect	text16
  5402     0C6B                     __ptext16:	
  5403 ;; *************** function ___awdiv *****************
  5404 ;; Defined at:
  5405 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awdiv.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  divisor         2    2[COMMON] int 
  5408 ;;  dividend        2    4[COMMON] int 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  quotient        2    8[COMMON] int 
  5411 ;;  sign            1    7[COMMON] unsigned char 
  5412 ;;  counter         1    6[COMMON] unsigned char 
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  2    2[COMMON] int 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2, status,0
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5422 ;;      Params:         4       0       0       0
  5423 ;;      Locals:         4       0       0       0
  5424 ;;      Temps:          0       0       0       0
  5425 ;;      Totals:         8       0       0       0
  5426 ;;Total ram usage:        8 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; Hardware stack levels required when called: 1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_lcd_display_int
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436     0C6B                     ___awdiv:	
  5437                           ;psect for function ___awdiv
  5438                           
  5439     0C6B                     l2435:	
  5440                           ;incstack = 0
  5441                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5442                           
  5443     0C6B  01F7               	clrf	___awdiv@sign
  5444     0C6C                     l2437:
  5445     0C6C  1FF3               	btfss	___awdiv@divisor+1,7
  5446     0C6D  2C6F               	goto	u3731
  5447     0C6E  2C70               	goto	u3730
  5448     0C6F                     u3731:
  5449     0C6F  2C77               	goto	l2443
  5450     0C70                     u3730:
  5451     0C70                     l2439:
  5452     0C70  09F2               	comf	___awdiv@divisor,f
  5453     0C71  09F3               	comf	___awdiv@divisor+1,f
  5454     0C72  0AF2               	incf	___awdiv@divisor,f
  5455     0C73  1903               	skipnz
  5456     0C74  0AF3               	incf	___awdiv@divisor+1,f
  5457     0C75                     l2441:
  5458     0C75  3001               	movlw	1
  5459     0C76  00F7               	movwf	___awdiv@sign
  5460     0C77                     l2443:
  5461     0C77  1FF5               	btfss	___awdiv@dividend+1,7
  5462     0C78  2C7A               	goto	u3741
  5463     0C79  2C7B               	goto	u3740
  5464     0C7A                     u3741:
  5465     0C7A  2C82               	goto	l2449
  5466     0C7B                     u3740:
  5467     0C7B                     l2445:
  5468     0C7B  09F4               	comf	___awdiv@dividend,f
  5469     0C7C  09F5               	comf	___awdiv@dividend+1,f
  5470     0C7D  0AF4               	incf	___awdiv@dividend,f
  5471     0C7E  1903               	skipnz
  5472     0C7F  0AF5               	incf	___awdiv@dividend+1,f
  5473     0C80                     l2447:
  5474     0C80  3001               	movlw	1
  5475     0C81  06F7               	xorwf	___awdiv@sign,f
  5476     0C82                     l2449:
  5477     0C82  01F8               	clrf	___awdiv@quotient
  5478     0C83  01F9               	clrf	___awdiv@quotient+1
  5479     0C84                     l2451:
  5480     0C84  0872               	movf	___awdiv@divisor,w
  5481     0C85  0473               	iorwf	___awdiv@divisor+1,w
  5482     0C86  1903               	btfsc	3,2
  5483     0C87  2C89               	goto	u3751
  5484     0C88  2C8A               	goto	u3750
  5485     0C89                     u3751:
  5486     0C89  2CBF               	goto	l2471
  5487     0C8A                     u3750:
  5488     0C8A                     l2453:
  5489     0C8A  3001               	movlw	1
  5490     0C8B  00F6               	movwf	___awdiv@counter
  5491     0C8C  2C96               	goto	l2459
  5492     0C8D                     l2455:
  5493     0C8D  3001               	movlw	1
  5494     0C8E                     u3765:
  5495     0C8E  1003               	clrc
  5496     0C8F  0DF2               	rlf	___awdiv@divisor,f
  5497     0C90  0DF3               	rlf	___awdiv@divisor+1,f
  5498     0C91  3EFF               	addlw	-1
  5499     0C92  1D03               	skipz
  5500     0C93  2C8E               	goto	u3765
  5501     0C94                     l2457:
  5502     0C94  3001               	movlw	1
  5503     0C95  07F6               	addwf	___awdiv@counter,f
  5504     0C96                     l2459:
  5505     0C96  1FF3               	btfss	___awdiv@divisor+1,7
  5506     0C97  2C99               	goto	u3771
  5507     0C98  2C9A               	goto	u3770
  5508     0C99                     u3771:
  5509     0C99  2C8D               	goto	l2455
  5510     0C9A                     u3770:
  5511     0C9A                     l2461:
  5512     0C9A  3001               	movlw	1
  5513     0C9B                     u3785:
  5514     0C9B  1003               	clrc
  5515     0C9C  0DF8               	rlf	___awdiv@quotient,f
  5516     0C9D  0DF9               	rlf	___awdiv@quotient+1,f
  5517     0C9E  3EFF               	addlw	-1
  5518     0C9F  1D03               	skipz
  5519     0CA0  2C9B               	goto	u3785
  5520     0CA1  0873               	movf	___awdiv@divisor+1,w
  5521     0CA2  0275               	subwf	___awdiv@dividend+1,w
  5522     0CA3  1D03               	skipz
  5523     0CA4  2CA7               	goto	u3795
  5524     0CA5  0872               	movf	___awdiv@divisor,w
  5525     0CA6  0274               	subwf	___awdiv@dividend,w
  5526     0CA7                     u3795:
  5527     0CA7  1C03               	skipc
  5528     0CA8  2CAA               	goto	u3791
  5529     0CA9  2CAB               	goto	u3790
  5530     0CAA                     u3791:
  5531     0CAA  2CB2               	goto	l2467
  5532     0CAB                     u3790:
  5533     0CAB                     l2463:
  5534     0CAB  0872               	movf	___awdiv@divisor,w
  5535     0CAC  02F4               	subwf	___awdiv@dividend,f
  5536     0CAD  0873               	movf	___awdiv@divisor+1,w
  5537     0CAE  1C03               	skipc
  5538     0CAF  03F5               	decf	___awdiv@dividend+1,f
  5539     0CB0  02F5               	subwf	___awdiv@dividend+1,f
  5540     0CB1                     l2465:
  5541     0CB1  1478               	bsf	___awdiv@quotient,0
  5542     0CB2                     l2467:
  5543     0CB2  3001               	movlw	1
  5544     0CB3                     u3805:
  5545     0CB3  1003               	clrc
  5546     0CB4  0CF3               	rrf	___awdiv@divisor+1,f
  5547     0CB5  0CF2               	rrf	___awdiv@divisor,f
  5548     0CB6  3EFF               	addlw	-1
  5549     0CB7  1D03               	skipz
  5550     0CB8  2CB3               	goto	u3805
  5551     0CB9                     l2469:
  5552     0CB9  3001               	movlw	1
  5553     0CBA  02F6               	subwf	___awdiv@counter,f
  5554     0CBB  1D03               	btfss	3,2
  5555     0CBC  2CBE               	goto	u3811
  5556     0CBD  2CBF               	goto	u3810
  5557     0CBE                     u3811:
  5558     0CBE  2C9A               	goto	l2461
  5559     0CBF                     u3810:
  5560     0CBF                     l2471:
  5561     0CBF  0877               	movf	___awdiv@sign,w
  5562     0CC0  1903               	btfsc	3,2
  5563     0CC1  2CC3               	goto	u3821
  5564     0CC2  2CC4               	goto	u3820
  5565     0CC3                     u3821:
  5566     0CC3  2CC9               	goto	l2475
  5567     0CC4                     u3820:
  5568     0CC4                     l2473:
  5569     0CC4  09F8               	comf	___awdiv@quotient,f
  5570     0CC5  09F9               	comf	___awdiv@quotient+1,f
  5571     0CC6  0AF8               	incf	___awdiv@quotient,f
  5572     0CC7  1903               	skipnz
  5573     0CC8  0AF9               	incf	___awdiv@quotient+1,f
  5574     0CC9                     l2475:
  5575     0CC9  0879               	movf	___awdiv@quotient+1,w
  5576     0CCA  00F3               	movwf	?___awdiv+1
  5577     0CCB  0878               	movf	___awdiv@quotient,w
  5578     0CCC  00F2               	movwf	?___awdiv
  5579     0CCD                     l620:
  5580     0CCD  0008               	return
  5581     0CCE                     __end_of___awdiv:
  5582                           
  5583                           	psect	text17
  5584     0A89                     __ptext17:	
  5585 ;; *************** function _lcd_display_bool_binary *****************
  5586 ;; Defined at:
  5587 ;;		line 829 in file "main.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  value           1    wreg     _Bool 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  value           1    4[COMMON] _Bool 
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  1    wreg      void 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0, pclath, cstack
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5601 ;;      Params:         0       0       0       0
  5602 ;;      Locals:         1       0       0       0
  5603 ;;      Temps:          0       0       0       0
  5604 ;;      Totals:         1       0       0       0
  5605 ;;Total ram usage:        1 bytes
  5606 ;; Hardware stack levels used: 1
  5607 ;; Hardware stack levels required when called: 2
  5608 ;; This function calls:
  5609 ;;		_lcd_data
  5610 ;; This function is called by:
  5611 ;;		_dispinfo
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615     0A89                     _lcd_display_bool_binary:	
  5616                           ;psect for function _lcd_display_bool_binary
  5617                           
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in _lcd_display_bool_binary: [wreg+status,2+status,0+pclath+cstack]
  5621                           ;lcd_display_bool_binary@value stored from wreg
  5622     0A89  00F4               	movwf	lcd_display_bool_binary@value
  5623     0A8A                     l2589:
  5624                           
  5625                           ;main.c: 830:   if (value) {
  5626     0A8A  0874               	movf	lcd_display_bool_binary@value,w
  5627     0A8B  1903               	btfsc	3,2
  5628     0A8C  2A8E               	goto	u4071
  5629     0A8D  2A8F               	goto	u4070
  5630     0A8E                     u4071:
  5631     0A8E  2A94               	goto	l2593
  5632     0A8F                     u4070:
  5633     0A8F                     l2591:
  5634                           
  5635                           ;main.c: 831:     lcd_data('1');
  5636     0A8F  3031               	movlw	49
  5637     0A90  158A  2534  158A   	fcall	_lcd_data
  5638                           
  5639                           ;main.c: 832:   } else {
  5640     0A93  2A98               	goto	l377
  5641     0A94                     l2593:
  5642                           
  5643                           ;main.c: 833:     lcd_data('0');
  5644     0A94  3030               	movlw	48
  5645     0A95  158A  2534  158A   	fcall	_lcd_data
  5646     0A98                     l377:
  5647     0A98  0008               	return
  5648     0A99                     __end_of_lcd_display_bool_binary:
  5649                           
  5650                           	psect	text18
  5651     0D34                     __ptext18:	
  5652 ;; *************** function _lcd_data *****************
  5653 ;; Defined at:
  5654 ;;		line 710 in file "main.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  data            1    wreg     unsigned char 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  data            1    3[COMMON] unsigned char 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5668 ;;      Params:         0       0       0       0
  5669 ;;      Locals:         1       0       0       0
  5670 ;;      Temps:          1       0       0       0
  5671 ;;      Totals:         2       0       0       0
  5672 ;;Total ram usage:        2 bytes
  5673 ;; Hardware stack levels used: 1
  5674 ;; Hardware stack levels required when called: 1
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_lcd_display_int
  5679 ;;		_lcd_display_bool_binary
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683     0D34                     _lcd_data:	
  5684                           ;psect for function _lcd_data
  5685                           
  5686                           
  5687                           ;incstack = 0
  5688                           ; Regs used in _lcd_data: [wreg]
  5689                           ;lcd_data@data stored from wreg
  5690     0D34  00F3               	movwf	lcd_data@data
  5691     0D35                     l2417:
  5692                           
  5693                           ;main.c: 711:   PORTCbits.RC5 = 1;
  5694     0D35  1283               	bcf	3,5	;RP0=0, select bank0
  5695     0D36  1303               	bcf	3,6	;RP1=0, select bank0
  5696     0D37  1687               	bsf	7,5	;volatile
  5697                           
  5698                           ;main.c: 714:   PORTCbits.RC7 = (data & 0x80) ? 1 : 0;
  5699     0D38  1BF3               	btfsc	lcd_data@data,7
  5700     0D39  2D3B               	goto	u3571
  5701     0D3A  2D3F               	goto	u3570
  5702     0D3B                     u3571:
  5703     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  5704     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  5705     0D3D  1787               	bsf	7,7	;volatile
  5706     0D3E  2D42               	goto	u3584
  5707     0D3F                     u3570:
  5708     0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  5709     0D40  1303               	bcf	3,6	;RP1=0, select bank0
  5710     0D41  1387               	bcf	7,7	;volatile
  5711     0D42                     u3584:
  5712                           
  5713                           ;main.c: 715:   PORTBbits.RB2 = (data & 0x40) ? 1 : 0;
  5714     0D42  1B73               	btfsc	lcd_data@data,6
  5715     0D43  2D45               	goto	u3591
  5716     0D44  2D49               	goto	u3590
  5717     0D45                     u3591:
  5718     0D45  1283               	bcf	3,5	;RP0=0, select bank0
  5719     0D46  1303               	bcf	3,6	;RP1=0, select bank0
  5720     0D47  1506               	bsf	6,2	;volatile
  5721     0D48  2D4C               	goto	u3604
  5722     0D49                     u3590:
  5723     0D49  1283               	bcf	3,5	;RP0=0, select bank0
  5724     0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  5725     0D4B  1106               	bcf	6,2	;volatile
  5726     0D4C                     u3604:
  5727                           
  5728                           ;main.c: 716:   PORTBbits.RB1 = (data & 0x20) ? 1 : 0;
  5729     0D4C  1AF3               	btfsc	lcd_data@data,5
  5730     0D4D  2D4F               	goto	u3611
  5731     0D4E  2D53               	goto	u3610
  5732     0D4F                     u3611:
  5733     0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  5734     0D50  1303               	bcf	3,6	;RP1=0, select bank0
  5735     0D51  1486               	bsf	6,1	;volatile
  5736     0D52  2D56               	goto	u3624
  5737     0D53                     u3610:
  5738     0D53  1283               	bcf	3,5	;RP0=0, select bank0
  5739     0D54  1303               	bcf	3,6	;RP1=0, select bank0
  5740     0D55  1086               	bcf	6,1	;volatile
  5741     0D56                     u3624:
  5742                           
  5743                           ;main.c: 717:   PORTBbits.RB0 = (data & 0x10) ? 1 : 0;
  5744     0D56  1A73               	btfsc	lcd_data@data,4
  5745     0D57  2D59               	goto	u3631
  5746     0D58  2D5D               	goto	u3630
  5747     0D59                     u3631:
  5748     0D59  1283               	bcf	3,5	;RP0=0, select bank0
  5749     0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  5750     0D5B  1406               	bsf	6,0	;volatile
  5751     0D5C  2D60               	goto	u3644
  5752     0D5D                     u3630:
  5753     0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  5754     0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  5755     0D5F  1006               	bcf	6,0	;volatile
  5756     0D60                     u3644:
  5757                           
  5758                           ;main.c: 719:   PORTCbits.RC6 = 1;
  5759     0D60  1707               	bsf	7,6	;volatile
  5760                           
  5761                           ;main.c: 720:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  5762     0D61  2D62               	nop2	;2 cycle nop
  5763                           
  5764                           ;main.c: 721:   PORTCbits.RC6 = 0;
  5765     0D62  1283               	bcf	3,5	;RP0=0, select bank0
  5766     0D63  1303               	bcf	3,6	;RP1=0, select bank0
  5767     0D64  1307               	bcf	7,6	;volatile
  5768     0D65                     l2419:
  5769                           
  5770                           ;main.c: 722:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  5771     0D65  3042               	movlw	66
  5772     0D66  00F2               	movwf	??_lcd_data
  5773     0D67                     u5167:
  5774     0D67  0BF2               	decfsz	??_lcd_data,f
  5775     0D68  2D67               	goto	u5167
  5776     0D69  0000               	nop
  5777     0D6A                     l2421:
  5778                           
  5779                           ;main.c: 725:   PORTCbits.RC7 = (data & 0x08) ? 1 : 0;
  5780     0D6A  19F3               	btfsc	lcd_data@data,3
  5781     0D6B  2D6D               	goto	u3651
  5782     0D6C  2D71               	goto	u3650
  5783     0D6D                     u3651:
  5784     0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  5785     0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  5786     0D6F  1787               	bsf	7,7	;volatile
  5787     0D70  2D74               	goto	u3664
  5788     0D71                     u3650:
  5789     0D71  1283               	bcf	3,5	;RP0=0, select bank0
  5790     0D72  1303               	bcf	3,6	;RP1=0, select bank0
  5791     0D73  1387               	bcf	7,7	;volatile
  5792     0D74                     u3664:
  5793     0D74                     l2423:
  5794                           
  5795                           ;main.c: 726:   PORTBbits.RB2 = (data & 0x04) ? 1 : 0;
  5796     0D74  1973               	btfsc	lcd_data@data,2
  5797     0D75  2D77               	goto	u3671
  5798     0D76  2D7B               	goto	u3670
  5799     0D77                     u3671:
  5800     0D77  1283               	bcf	3,5	;RP0=0, select bank0
  5801     0D78  1303               	bcf	3,6	;RP1=0, select bank0
  5802     0D79  1506               	bsf	6,2	;volatile
  5803     0D7A  2D7E               	goto	u3684
  5804     0D7B                     u3670:
  5805     0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  5806     0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  5807     0D7D  1106               	bcf	6,2	;volatile
  5808     0D7E                     u3684:
  5809     0D7E                     l2425:
  5810                           
  5811                           ;main.c: 727:   PORTBbits.RB1 = (data & 0x02) ? 1 : 0;
  5812     0D7E  18F3               	btfsc	lcd_data@data,1
  5813     0D7F  2D81               	goto	u3691
  5814     0D80  2D85               	goto	u3690
  5815     0D81                     u3691:
  5816     0D81  1283               	bcf	3,5	;RP0=0, select bank0
  5817     0D82  1303               	bcf	3,6	;RP1=0, select bank0
  5818     0D83  1486               	bsf	6,1	;volatile
  5819     0D84  2D88               	goto	u3704
  5820     0D85                     u3690:
  5821     0D85  1283               	bcf	3,5	;RP0=0, select bank0
  5822     0D86  1303               	bcf	3,6	;RP1=0, select bank0
  5823     0D87  1086               	bcf	6,1	;volatile
  5824     0D88                     u3704:
  5825     0D88                     l2427:
  5826                           
  5827                           ;main.c: 728:   PORTBbits.RB0 = (data & 0x01) ? 1 : 0;
  5828     0D88  1873               	btfsc	lcd_data@data,0
  5829     0D89  2D8B               	goto	u3711
  5830     0D8A  2D8F               	goto	u3710
  5831     0D8B                     u3711:
  5832     0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  5833     0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  5834     0D8D  1406               	bsf	6,0	;volatile
  5835     0D8E  2D92               	goto	u3724
  5836     0D8F                     u3710:
  5837     0D8F  1283               	bcf	3,5	;RP0=0, select bank0
  5838     0D90  1303               	bcf	3,6	;RP1=0, select bank0
  5839     0D91  1006               	bcf	6,0	;volatile
  5840     0D92                     u3724:
  5841     0D92                     l2429:
  5842                           
  5843                           ;main.c: 730:   PORTCbits.RC6 = 1;
  5844     0D92  1707               	bsf	7,6	;volatile
  5845     0D93                     l2431:
  5846                           
  5847                           ;main.c: 731:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  5848     0D93  2D94               	nop2	;2 cycle nop
  5849     0D94                     l2433:
  5850                           
  5851                           ;main.c: 732:   PORTCbits.RC6 = 0;
  5852     0D94  1283               	bcf	3,5	;RP0=0, select bank0
  5853     0D95  1303               	bcf	3,6	;RP1=0, select bank0
  5854     0D96  1307               	bcf	7,6	;volatile
  5855                           
  5856                           ;main.c: 733:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  5857     0D97  3042               	movlw	66
  5858     0D98  00F2               	movwf	??_lcd_data
  5859     0D99                     u5177:
  5860     0D99  0BF2               	decfsz	??_lcd_data,f
  5861     0D9A  2D99               	goto	u5177
  5862     0D9B  0000               	nop
  5863     0D9C                     l339:
  5864     0D9C  0008               	return
  5865     0D9D                     __end_of_lcd_data:
  5866                           
  5867                           	psect	text19
  5868     0CCE                     __ptext19:	
  5869 ;; *************** function ___lldiv *****************
  5870 ;; Defined at:
  5871 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  divisor         4    5[BANK0 ] unsigned long 
  5874 ;;  dividend        4    9[BANK0 ] unsigned long 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  quotient        4   14[BANK0 ] unsigned long 
  5877 ;;  counter         1   18[BANK0 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  4    5[BANK0 ] unsigned long 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5887 ;;      Params:         0       8       0       0
  5888 ;;      Locals:         0       5       0       0
  5889 ;;      Temps:          0       1       0       0
  5890 ;;      Totals:         0      14       0       0
  5891 ;;Total ram usage:       14 bytes
  5892 ;; Hardware stack levels used: 1
  5893 ;; Hardware stack levels required when called: 1
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_main
  5898 ;;		_getsensorreadings
  5899 ;;		_dispinfo
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903     0CCE                     ___lldiv:	
  5904                           ;psect for function ___lldiv
  5905                           
  5906     0CCE                     l2609:	
  5907                           ;incstack = 0
  5908                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5909                           
  5910     0CCE  3000               	movlw	0
  5911     0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  5912     0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  5913     0CD1  00B1               	movwf	___lldiv@quotient+3
  5914     0CD2  3000               	movlw	0
  5915     0CD3  00B0               	movwf	___lldiv@quotient+2
  5916     0CD4  3000               	movlw	0
  5917     0CD5  00AF               	movwf	___lldiv@quotient+1
  5918     0CD6  3000               	movlw	0
  5919     0CD7  00AE               	movwf	___lldiv@quotient
  5920     0CD8  0828               	movf	___lldiv@divisor+3,w
  5921     0CD9  0427               	iorwf	___lldiv@divisor+2,w
  5922     0CDA  0426               	iorwf	___lldiv@divisor+1,w
  5923     0CDB  0425               	iorwf	___lldiv@divisor,w
  5924     0CDC  1903               	skipnz
  5925     0CDD  2CDF               	goto	u4131
  5926     0CDE  2CE0               	goto	u4130
  5927     0CDF                     u4131:
  5928     0CDF  2D2B               	goto	l2629
  5929     0CE0                     u4130:
  5930     0CE0                     l2611:
  5931     0CE0  3001               	movlw	1
  5932     0CE1  00B2               	movwf	___lldiv@counter
  5933     0CE2  2CEE               	goto	l2615
  5934     0CE3                     l2613:
  5935     0CE3  3001               	movlw	1
  5936     0CE4  00AD               	movwf	??___lldiv
  5937     0CE5                     u4145:
  5938     0CE5  1003               	clrc
  5939     0CE6  0DA5               	rlf	___lldiv@divisor,f
  5940     0CE7  0DA6               	rlf	___lldiv@divisor+1,f
  5941     0CE8  0DA7               	rlf	___lldiv@divisor+2,f
  5942     0CE9  0DA8               	rlf	___lldiv@divisor+3,f
  5943     0CEA  0BAD               	decfsz	??___lldiv,f
  5944     0CEB  2CE5               	goto	u4145
  5945     0CEC  3001               	movlw	1
  5946     0CED  07B2               	addwf	___lldiv@counter,f
  5947     0CEE                     l2615:
  5948     0CEE  1FA8               	btfss	___lldiv@divisor+3,7
  5949     0CEF  2CF1               	goto	u4151
  5950     0CF0  2CF2               	goto	u4150
  5951     0CF1                     u4151:
  5952     0CF1  2CE3               	goto	l2613
  5953     0CF2                     u4150:
  5954     0CF2                     l2617:
  5955     0CF2  3001               	movlw	1
  5956     0CF3  00AD               	movwf	??___lldiv
  5957     0CF4                     u4165:
  5958     0CF4  1003               	clrc
  5959     0CF5  0DAE               	rlf	___lldiv@quotient,f
  5960     0CF6  0DAF               	rlf	___lldiv@quotient+1,f
  5961     0CF7  0DB0               	rlf	___lldiv@quotient+2,f
  5962     0CF8  0DB1               	rlf	___lldiv@quotient+3,f
  5963     0CF9  0BAD               	decfsz	??___lldiv,f
  5964     0CFA  2CF4               	goto	u4165
  5965     0CFB                     l2619:
  5966     0CFB  0828               	movf	___lldiv@divisor+3,w
  5967     0CFC  022C               	subwf	___lldiv@dividend+3,w
  5968     0CFD  1D03               	skipz
  5969     0CFE  2D09               	goto	u4175
  5970     0CFF  0827               	movf	___lldiv@divisor+2,w
  5971     0D00  022B               	subwf	___lldiv@dividend+2,w
  5972     0D01  1D03               	skipz
  5973     0D02  2D09               	goto	u4175
  5974     0D03  0826               	movf	___lldiv@divisor+1,w
  5975     0D04  022A               	subwf	___lldiv@dividend+1,w
  5976     0D05  1D03               	skipz
  5977     0D06  2D09               	goto	u4175
  5978     0D07  0825               	movf	___lldiv@divisor,w
  5979     0D08  0229               	subwf	___lldiv@dividend,w
  5980     0D09                     u4175:
  5981     0D09  1C03               	skipc
  5982     0D0A  2D0C               	goto	u4171
  5983     0D0B  2D0D               	goto	u4170
  5984     0D0C                     u4171:
  5985     0D0C  2D1C               	goto	l2625
  5986     0D0D                     u4170:
  5987     0D0D                     l2621:
  5988     0D0D  0825               	movf	___lldiv@divisor,w
  5989     0D0E  02A9               	subwf	___lldiv@dividend,f
  5990     0D0F  0826               	movf	___lldiv@divisor+1,w
  5991     0D10  1C03               	skipc
  5992     0D11  0F26               	incfsz	___lldiv@divisor+1,w
  5993     0D12  02AA               	subwf	___lldiv@dividend+1,f
  5994     0D13  0827               	movf	___lldiv@divisor+2,w
  5995     0D14  1C03               	skipc
  5996     0D15  0F27               	incfsz	___lldiv@divisor+2,w
  5997     0D16  02AB               	subwf	___lldiv@dividend+2,f
  5998     0D17  0828               	movf	___lldiv@divisor+3,w
  5999     0D18  1C03               	skipc
  6000     0D19  0F28               	incfsz	___lldiv@divisor+3,w
  6001     0D1A  02AC               	subwf	___lldiv@dividend+3,f
  6002     0D1B                     l2623:
  6003     0D1B  142E               	bsf	___lldiv@quotient,0
  6004     0D1C                     l2625:
  6005     0D1C  3001               	movlw	1
  6006     0D1D                     u4185:
  6007     0D1D  1003               	clrc
  6008     0D1E  0CA8               	rrf	___lldiv@divisor+3,f
  6009     0D1F  0CA7               	rrf	___lldiv@divisor+2,f
  6010     0D20  0CA6               	rrf	___lldiv@divisor+1,f
  6011     0D21  0CA5               	rrf	___lldiv@divisor,f
  6012     0D22  3EFF               	addlw	-1
  6013     0D23  1D03               	skipz
  6014     0D24  2D1D               	goto	u4185
  6015     0D25                     l2627:
  6016     0D25  3001               	movlw	1
  6017     0D26  02B2               	subwf	___lldiv@counter,f
  6018     0D27  1D03               	btfss	3,2
  6019     0D28  2D2A               	goto	u4191
  6020     0D29  2D2B               	goto	u4190
  6021     0D2A                     u4191:
  6022     0D2A  2CF2               	goto	l2617
  6023     0D2B                     u4190:
  6024     0D2B                     l2629:
  6025     0D2B  0831               	movf	___lldiv@quotient+3,w
  6026     0D2C  00A8               	movwf	?___lldiv+3
  6027     0D2D  0830               	movf	___lldiv@quotient+2,w
  6028     0D2E  00A7               	movwf	?___lldiv+2
  6029     0D2F  082F               	movf	___lldiv@quotient+1,w
  6030     0D30  00A6               	movwf	?___lldiv+1
  6031     0D31  082E               	movf	___lldiv@quotient,w
  6032     0D32  00A5               	movwf	?___lldiv
  6033     0D33                     l503:
  6034     0D33  0008               	return
  6035     0D34                     __end_of___lldiv:
  6036                           
  6037                           	psect	text20
  6038     0E06                     __ptext20:	
  6039 ;; *************** function _check_button_press *****************
  6040 ;; Defined at:
  6041 ;;		line 565 in file "main.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  hold_count      2    6[COMMON] unsigned int 
  6046 ;;  long_press_t    2    4[COMMON] unsigned int 
  6047 ;;  long_press      1    8[COMMON] _Bool 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      _Bool 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2, status,0
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6057 ;;      Params:         0       0       0       0
  6058 ;;      Locals:         5       0       0       0
  6059 ;;      Temps:          2       0       0       0
  6060 ;;      Totals:         7       0       0       0
  6061 ;;Total ram usage:        7 bytes
  6062 ;; Hardware stack levels used: 1
  6063 ;; Hardware stack levels required when called: 1
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_main
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071     0E06                     _check_button_press:	
  6072                           ;psect for function _check_button_press
  6073                           
  6074     0E06                     l2817:	
  6075                           ;incstack = 0
  6076                           ; Regs used in _check_button_press: [wreg+status,2+status,0]
  6077                           
  6078                           
  6079                           ;main.c: 566:   _Bool long_press = 0;
  6080     0E06  01F8               	clrf	check_button_press@long_press
  6081     0E07                     l2819:
  6082                           
  6083                           ;main.c: 569:   if (PORTCbits.RC1 == 0) {
  6084     0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6085     0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6086     0E09  1887               	btfsc	7,1	;volatile
  6087     0E0A  2E0C               	goto	u4481
  6088     0E0B  2E0D               	goto	u4480
  6089     0E0C                     u4481:
  6090     0E0C  2E70               	goto	l2849
  6091     0E0D                     u4480:
  6092     0E0D                     l2821:
  6093                           
  6094                           ;main.c: 571:     _delay((unsigned long)((50)*(8000000/4000.0)));
  6095     0E0D  3082               	movlw	130
  6096     0E0E  00F3               	movwf	??_check_button_press+1
  6097     0E0F  30DD               	movlw	221
  6098     0E10  00F2               	movwf	??_check_button_press
  6099     0E11                     u5187:
  6100     0E11  0BF2               	decfsz	??_check_button_press,f
  6101     0E12  2E11               	goto	u5187
  6102     0E13  0BF3               	decfsz	??_check_button_press+1,f
  6103     0E14  2E11               	goto	u5187
  6104     0E15  2E16               	nop2
  6105     0E16                     l2823:
  6106                           
  6107                           ;main.c: 574:     if (PORTCbits.RC1 == 0) {
  6108     0E16  1283               	bcf	3,5	;RP0=0, select bank0
  6109     0E17  1303               	bcf	3,6	;RP1=0, select bank0
  6110     0E18  1887               	btfsc	7,1	;volatile
  6111     0E19  2E1B               	goto	u4491
  6112     0E1A  2E1C               	goto	u4490
  6113     0E1B                     u4491:
  6114     0E1B  2E70               	goto	l2849
  6115     0E1C                     u4490:
  6116     0E1C                     l2825:
  6117                           
  6118                           ;main.c: 576:       unsigned int hold_count = 0;
  6119     0E1C  01F6               	clrf	check_button_press@hold_count
  6120     0E1D  01F7               	clrf	check_button_press@hold_count+1
  6121     0E1E                     l2827:
  6122                           
  6123                           ;main.c: 577:       unsigned int long_press_threshold = 20;
  6124     0E1E  3014               	movlw	20
  6125     0E1F  00F4               	movwf	check_button_press@long_press_threshold
  6126     0E20  3000               	movlw	0
  6127     0E21  00F5               	movwf	check_button_press@long_press_threshold+1
  6128                           
  6129                           ;main.c: 580:       while (PORTCbits.RC1 == 0) {
  6130     0E22  2E58               	goto	l317
  6131     0E23                     l2829:
  6132                           
  6133                           ;main.c: 581:         _delay((unsigned long)((10)*(8000000/4000.0)));
  6134     0E23  301A               	movlw	26
  6135     0E24  00F3               	movwf	??_check_button_press+1
  6136     0E25  30F8               	movlw	248
  6137     0E26  00F2               	movwf	??_check_button_press
  6138     0E27                     u5197:
  6139     0E27  0BF2               	decfsz	??_check_button_press,f
  6140     0E28  2E27               	goto	u5197
  6141     0E29  0BF3               	decfsz	??_check_button_press+1,f
  6142     0E2A  2E27               	goto	u5197
  6143     0E2B  0000               	nop
  6144                           
  6145                           ;main.c: 582:         hold_count++;
  6146     0E2C  3001               	movlw	1
  6147     0E2D  07F6               	addwf	check_button_press@hold_count,f
  6148     0E2E  1803               	skipnc
  6149     0E2F  0AF7               	incf	check_button_press@hold_count+1,f
  6150     0E30  3000               	movlw	0
  6151     0E31  07F7               	addwf	check_button_press@hold_count+1,f
  6152                           
  6153                           ;main.c: 585:         if (hold_count >= long_press_threshold) {
  6154     0E32  0875               	movf	check_button_press@long_press_threshold+1,w
  6155     0E33  0277               	subwf	check_button_press@hold_count+1,w
  6156     0E34  1D03               	skipz
  6157     0E35  2E38               	goto	u4505
  6158     0E36  0874               	movf	check_button_press@long_press_threshold,w
  6159     0E37  0276               	subwf	check_button_press@hold_count,w
  6160     0E38                     u4505:
  6161     0E38  1C03               	skipc
  6162     0E39  2E3B               	goto	u4501
  6163     0E3A  2E3C               	goto	u4500
  6164     0E3B                     u4501:
  6165     0E3B  2E58               	goto	l317
  6166     0E3C                     u4500:
  6167     0E3C                     l2831:
  6168                           
  6169                           ;main.c: 586:           long_press = 1;
  6170     0E3C  3001               	movlw	1
  6171     0E3D  00F8               	movwf	check_button_press@long_press
  6172                           
  6173                           ;main.c: 591:           while (PORTCbits.RC1 == 0) {
  6174     0E3E  2E48               	goto	l2835
  6175     0E3F                     l2833:
  6176                           
  6177                           ;main.c: 592:             _delay((unsigned long)((10)*(8000000/4000.0)));
  6178     0E3F  301A               	movlw	26
  6179     0E40  00F3               	movwf	??_check_button_press+1
  6180     0E41  30F8               	movlw	248
  6181     0E42  00F2               	movwf	??_check_button_press
  6182     0E43                     u5207:
  6183     0E43  0BF2               	decfsz	??_check_button_press,f
  6184     0E44  2E43               	goto	u5207
  6185     0E45  0BF3               	decfsz	??_check_button_press+1,f
  6186     0E46  2E43               	goto	u5207
  6187     0E47  0000               	nop
  6188     0E48                     l2835:
  6189                           
  6190                           ;main.c: 591:           while (PORTCbits.RC1 == 0) {
  6191     0E48  1283               	bcf	3,5	;RP0=0, select bank0
  6192     0E49  1303               	bcf	3,6	;RP1=0, select bank0
  6193     0E4A  1C87               	btfss	7,1	;volatile
  6194     0E4B  2E4D               	goto	u4511
  6195     0E4C  2E4E               	goto	u4510
  6196     0E4D                     u4511:
  6197     0E4D  2E3F               	goto	l2833
  6198     0E4E                     u4510:
  6199     0E4E                     l2837:
  6200                           
  6201                           ;main.c: 596:           _delay((unsigned long)((50)*(8000000/4000.0)));
  6202     0E4E  3082               	movlw	130
  6203     0E4F  00F3               	movwf	??_check_button_press+1
  6204     0E50  30DD               	movlw	221
  6205     0E51  00F2               	movwf	??_check_button_press
  6206     0E52                     u5217:
  6207     0E52  0BF2               	decfsz	??_check_button_press,f
  6208     0E53  2E52               	goto	u5217
  6209     0E54  0BF3               	decfsz	??_check_button_press+1,f
  6210     0E55  2E52               	goto	u5217
  6211     0E56  2E57               	nop2
  6212                           
  6213                           ;main.c: 597:           break;
  6214     0E57  2E5E               	goto	l2839
  6215     0E58                     l317:	
  6216                           ;main.c: 599:       }
  6217                           
  6218                           
  6219                           ;main.c: 580:       while (PORTCbits.RC1 == 0) {
  6220     0E58  1283               	bcf	3,5	;RP0=0, select bank0
  6221     0E59  1303               	bcf	3,6	;RP1=0, select bank0
  6222     0E5A  1C87               	btfss	7,1	;volatile
  6223     0E5B  2E5D               	goto	u4521
  6224     0E5C  2E5E               	goto	u4520
  6225     0E5D                     u4521:
  6226     0E5D  2E23               	goto	l2829
  6227     0E5E                     u4520:
  6228     0E5E                     l2839:
  6229                           
  6230                           ;main.c: 602:       if (!long_press) {
  6231     0E5E  0878               	movf	check_button_press@long_press,w
  6232     0E5F  1D03               	btfss	3,2
  6233     0E60  2E62               	goto	u4531
  6234     0E61  2E63               	goto	u4530
  6235     0E62                     u4531:
  6236     0E62  2E6E               	goto	l2845
  6237     0E63                     u4530:
  6238     0E63                     l2841:
  6239                           
  6240                           ;main.c: 604:         _delay((unsigned long)((50)*(8000000/4000.0)));
  6241     0E63  3082               	movlw	130
  6242     0E64  00F3               	movwf	??_check_button_press+1
  6243     0E65  30DD               	movlw	221
  6244     0E66  00F2               	movwf	??_check_button_press
  6245     0E67                     u5227:
  6246     0E67  0BF2               	decfsz	??_check_button_press,f
  6247     0E68  2E67               	goto	u5227
  6248     0E69  0BF3               	decfsz	??_check_button_press+1,f
  6249     0E6A  2E67               	goto	u5227
  6250     0E6B  2E6C               	nop2
  6251                           
  6252                           ;main.c: 605:         return 0;
  6253     0E6C  3000               	movlw	0
  6254     0E6D  2E71               	goto	l325
  6255     0E6E                     l2845:
  6256                           
  6257                           ;main.c: 608:       return 1;
  6258     0E6E  3001               	movlw	1
  6259     0E6F  2E71               	goto	l325
  6260     0E70                     l2849:
  6261                           
  6262                           ;main.c: 612:   return 0;
  6263     0E70  3000               	movlw	0
  6264     0E71                     l325:
  6265     0E71  0008               	return
  6266     0E72                     __end_of_check_button_press:
  6267                           
  6268                           	psect	text21
  6269     07B4                     __ptext21:	
  6270 ;; *************** function _buzzer_update *****************
  6271 ;; Defined at:
  6272 ;;		line 557 in file "main.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6286 ;;      Params:         0       0       0       0
  6287 ;;      Locals:         0       0       0       0
  6288 ;;      Temps:          8       0       0       0
  6289 ;;      Totals:         8       0       0       0
  6290 ;;Total ram usage:        8 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 1
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_main
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300     07B4                     _buzzer_update:	
  6301                           ;psect for function _buzzer_update
  6302                           
  6303     07B4                     l2679:	
  6304                           ;incstack = 0
  6305                           ; Regs used in _buzzer_update: [wreg+status,2+status,0]
  6306                           
  6307                           
  6308                           ;main.c: 558:   if (buzzer_active && (millis - buzzer_start_time >= buzzer_duration)) {
  6309     07B4  1283               	bcf	3,5	;RP0=0, select bank0
  6310     07B5  1303               	bcf	3,6	;RP1=0, select bank0
  6311     07B6  085B               	movf	_buzzer_active,w
  6312     07B7  1903               	btfsc	3,2
  6313     07B8  2FBA               	goto	u4211
  6314     07B9  2FBB               	goto	u4210
  6315     07BA                     u4211:
  6316     07BA  2FFD               	goto	l312
  6317     07BB                     u4210:
  6318     07BB                     l2681:
  6319     07BB  1683               	bsf	3,5	;RP0=1, select bank1
  6320     07BC  1303               	bcf	3,6	;RP1=0, select bank1
  6321     07BD  0840               	movf	_buzzer_duration^(0+128),w
  6322     07BE  00F2               	movwf	??_buzzer_update
  6323     07BF  0841               	movf	(_buzzer_duration+1)^(0+128),w
  6324     07C0  00F3               	movwf	??_buzzer_update+1
  6325     07C1  01F4               	clrf	??_buzzer_update+2
  6326     07C2  01F5               	clrf	??_buzzer_update+3
  6327     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  6328     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  6329     07C5  0853               	movf	_millis,w	;volatile
  6330     07C6  00F6               	movwf	??_buzzer_update+4
  6331     07C7  0854               	movf	_millis+1,w	;volatile
  6332     07C8  00F7               	movwf	??_buzzer_update+5
  6333     07C9  0855               	movf	_millis+2,w	;volatile
  6334     07CA  00F8               	movwf	??_buzzer_update+6
  6335     07CB  0856               	movf	_millis+3,w	;volatile
  6336     07CC  00F9               	movwf	??_buzzer_update+7
  6337     07CD  1683               	bsf	3,5	;RP0=1, select bank1
  6338     07CE  1303               	bcf	3,6	;RP1=0, select bank1
  6339     07CF  0828               	movf	_buzzer_start_time^(0+128),w
  6340     07D0  02F6               	subwf	??_buzzer_update+4,f
  6341     07D1  0829               	movf	(_buzzer_start_time+1)^(0+128),w
  6342     07D2  1C03               	skipc
  6343     07D3  0F29               	incfsz	(_buzzer_start_time+1)^(0+128),w
  6344     07D4  2FD6               	goto	u4221
  6345     07D5  2FD7               	goto	u4222
  6346     07D6                     u4221:
  6347     07D6  02F7               	subwf	??_buzzer_update+5,f
  6348     07D7                     u4222:
  6349     07D7  082A               	movf	(_buzzer_start_time+2)^(0+128),w
  6350     07D8  1C03               	skipc
  6351     07D9  0F2A               	incfsz	(_buzzer_start_time+2)^(0+128),w
  6352     07DA  2FDC               	goto	u4223
  6353     07DB  2FDD               	goto	u4224
  6354     07DC                     u4223:
  6355     07DC  02F8               	subwf	??_buzzer_update+6,f
  6356     07DD                     u4224:
  6357     07DD  082B               	movf	(_buzzer_start_time+3)^(0+128),w
  6358     07DE  1C03               	skipc
  6359     07DF  0F2B               	incfsz	(_buzzer_start_time+3)^(0+128),w
  6360     07E0  2FE2               	goto	u4225
  6361     07E1  2FE3               	goto	u4226
  6362     07E2                     u4225:
  6363     07E2  02F9               	subwf	??_buzzer_update+7,f
  6364     07E3                     u4226:
  6365     07E3  0875               	movf	??_buzzer_update+3,w
  6366     07E4  0279               	subwf	??_buzzer_update+7,w
  6367     07E5  1D03               	skipz
  6368     07E6  2FF1               	goto	u4235
  6369     07E7  0874               	movf	??_buzzer_update+2,w
  6370     07E8  0278               	subwf	??_buzzer_update+6,w
  6371     07E9  1D03               	skipz
  6372     07EA  2FF1               	goto	u4235
  6373     07EB  0873               	movf	??_buzzer_update+1,w
  6374     07EC  0277               	subwf	??_buzzer_update+5,w
  6375     07ED  1D03               	skipz
  6376     07EE  2FF1               	goto	u4235
  6377     07EF  0872               	movf	??_buzzer_update,w
  6378     07F0  0276               	subwf	??_buzzer_update+4,w
  6379     07F1                     u4235:
  6380     07F1  1C03               	skipc
  6381     07F2  2FF4               	goto	u4231
  6382     07F3  2FF5               	goto	u4230
  6383     07F4                     u4231:
  6384     07F4  2FFD               	goto	l312
  6385     07F5                     u4230:
  6386     07F5                     l2683:
  6387                           
  6388                           ;main.c: 559:     PORTCbits.RC4 = 0;
  6389     07F5  1283               	bcf	3,5	;RP0=0, select bank0
  6390     07F6  1303               	bcf	3,6	;RP1=0, select bank0
  6391     07F7  1207               	bcf	7,4	;volatile
  6392     07F8                     l2685:
  6393                           
  6394                           ;main.c: 560:     buzzer_active = 0;
  6395     07F8  01DB               	clrf	_buzzer_active
  6396                           
  6397                           ;main.c: 561:     buzzer_duration = 0;
  6398     07F9  1683               	bsf	3,5	;RP0=1, select bank1
  6399     07FA  1303               	bcf	3,6	;RP1=0, select bank1
  6400     07FB  01C0               	clrf	_buzzer_duration^(0+128)
  6401     07FC  01C1               	clrf	(_buzzer_duration+1)^(0+128)
  6402     07FD                     l312:
  6403     07FD  0008               	return
  6404     07FE                     __end_of_buzzer_update:
  6405                           
  6406                           	psect	text22
  6407     0ABC                     __ptext22:	
  6408 ;; *************** function _EEPROM_Write *****************
  6409 ;; Defined at:
  6410 ;;		line 479 in file "main.c"
  6411 ;; Parameters:    Size  Location     Type
  6412 ;;  address         1    wreg     unsigned char 
  6413 ;;  data            1    2[COMMON] unsigned char 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  address         1    3[COMMON] unsigned char 
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6425 ;;      Params:         1       0       0       0
  6426 ;;      Locals:         1       0       0       0
  6427 ;;      Temps:          0       0       0       0
  6428 ;;      Totals:         2       0       0       0
  6429 ;;Total ram usage:        2 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; Hardware stack levels required when called: 1
  6432 ;; This function calls:
  6433 ;;		Nothing
  6434 ;; This function is called by:
  6435 ;;		_main
  6436 ;;		_EEPROM_Write16
  6437 ;;		_saveSettings
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441     0ABC                     _EEPROM_Write:	
  6442                           ;psect for function _EEPROM_Write
  6443                           
  6444                           
  6445                           ;incstack = 0
  6446                           ; Regs used in _EEPROM_Write: [wreg]
  6447                           ;EEPROM_Write@address stored from wreg
  6448     0ABC  00F3               	movwf	EEPROM_Write@address
  6449     0ABD                     l2853:
  6450     0ABD                     l279:	
  6451                           ;main.c: 481:     ;
  6452                           
  6453                           
  6454                           ;main.c: 480:   while (EECON1bits.WR)
  6455     0ABD  1683               	bsf	3,5	;RP0=1, select bank3
  6456     0ABE  1703               	bsf	3,6	;RP1=1, select bank3
  6457     0ABF  188C               	btfsc	12,1	;volsfr
  6458     0AC0  2AC2               	goto	u4541
  6459     0AC1  2AC3               	goto	u4540
  6460     0AC2                     u4541:
  6461     0AC2  2ABD               	goto	l279
  6462     0AC3                     u4540:
  6463     0AC3                     l2855:
  6464                           
  6465                           ;main.c: 483:   EEADR = address;
  6466     0AC3  0873               	movf	EEPROM_Write@address,w
  6467     0AC4  1283               	bcf	3,5	;RP0=0, select bank2
  6468     0AC5  1703               	bsf	3,6	;RP1=1, select bank2
  6469     0AC6  008D               	movwf	13	;volatile
  6470                           
  6471                           ;main.c: 484:   EEDATA = data;
  6472     0AC7  0872               	movf	EEPROM_Write@data,w
  6473     0AC8  008C               	movwf	12	;volatile
  6474     0AC9                     l2857:
  6475                           
  6476                           ;main.c: 486:   EECON1bits.EEPGD = 0;
  6477     0AC9  1683               	bsf	3,5	;RP0=1, select bank3
  6478     0ACA  1703               	bsf	3,6	;RP1=1, select bank3
  6479     0ACB  138C               	bcf	12,7	;volsfr
  6480     0ACC                     l2859:
  6481                           
  6482                           ;main.c: 487:   EECON1bits.WREN = 1;
  6483     0ACC  150C               	bsf	12,2	;volsfr
  6484     0ACD                     l2861:
  6485                           
  6486                           ;main.c: 489:   INTCONbits.GIE = 0;
  6487     0ACD  138B               	bcf	11,7	;volatile
  6488     0ACE                     l2863:
  6489                           
  6490                           ;main.c: 490:   EECON2 = 0x55;
  6491     0ACE  3055               	movlw	85
  6492     0ACF  008D               	movwf	13	;volsfr
  6493     0AD0                     l2865:
  6494                           
  6495                           ;main.c: 491:   EECON2 = 0xAA;
  6496     0AD0  30AA               	movlw	170
  6497     0AD1  008D               	movwf	13	;volsfr
  6498     0AD2                     l2867:
  6499                           
  6500                           ;main.c: 492:   EECON1bits.WR = 1;
  6501     0AD2  148C               	bsf	12,1	;volsfr
  6502     0AD3                     l282:	
  6503                           ;main.c: 495:     ;
  6504                           
  6505                           
  6506                           ;main.c: 494:   while (EECON1bits.WR)
  6507     0AD3  188C               	btfsc	12,1	;volsfr
  6508     0AD4  2AD6               	goto	u4551
  6509     0AD5  2AD7               	goto	u4550
  6510     0AD6                     u4551:
  6511     0AD6  2AD3               	goto	l282
  6512     0AD7                     u4550:
  6513     0AD7                     l284:
  6514                           
  6515                           ;main.c: 497:   EECON1bits.WREN = 0;
  6516     0AD7  110C               	bcf	12,2	;volsfr
  6517                           
  6518                           ;main.c: 498:   INTCONbits.GIE = 1;
  6519     0AD8  178B               	bsf	11,7	;volatile
  6520     0AD9                     l285:
  6521     0AD9  0008               	return
  6522     0ADA                     __end_of_EEPROM_Write:
  6523                           
  6524                           	psect	text23
  6525     0BC8                     __ptext23:	
  6526 ;; *************** function _isr *****************
  6527 ;; Defined at:
  6528 ;;		line 429 in file "main.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;		None
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;		None
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      void 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6542 ;;      Params:         0       0       0       0
  6543 ;;      Locals:         0       0       0       0
  6544 ;;      Temps:          2       0       0       0
  6545 ;;      Totals:         2       0       0       0
  6546 ;;Total ram usage:        2 bytes
  6547 ;; Hardware stack levels used: 1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		Interrupt level 1
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555     0BC8                     _isr:	
  6556                           ;psect for function _isr
  6557                           
  6558     0BC8                     i1l2361:
  6559                           
  6560                           ;main.c: 431:   if (PIR1bits.TMR1IF) {
  6561     0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  6562     0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  6563     0BCA  1C0C               	btfss	12,0	;volatile
  6564     0BCB  2BCD               	goto	u334_21
  6565     0BCC  2BCE               	goto	u334_20
  6566     0BCD                     u334_21:
  6567     0BCD  2BE1               	goto	i1l2371
  6568     0BCE                     u334_20:
  6569     0BCE                     i1l2363:
  6570                           
  6571                           ;main.c: 432:     millis++;
  6572     0BCE  3001               	movlw	1
  6573     0BCF  07D3               	addwf	_millis,f	;volatile
  6574     0BD0  3000               	movlw	0
  6575     0BD1  1803               	skipnc
  6576     0BD2  3001               	movlw	1
  6577     0BD3  07D4               	addwf	_millis+1,f	;volatile
  6578     0BD4  3000               	movlw	0
  6579     0BD5  1803               	skipnc
  6580     0BD6  3001               	movlw	1
  6581     0BD7  07D5               	addwf	_millis+2,f	;volatile
  6582     0BD8  3000               	movlw	0
  6583     0BD9  1803               	skipnc
  6584     0BDA  3001               	movlw	1
  6585     0BDB  07D6               	addwf	_millis+3,f	;volatile
  6586     0BDC                     i1l2365:
  6587                           
  6588                           ;main.c: 433:     PIR1bits.TMR1IF = 0;
  6589     0BDC  100C               	bcf	12,0	;volatile
  6590     0BDD                     i1l2367:
  6591                           
  6592                           ;main.c: 434:     TMR1H = 255;
  6593     0BDD  30FF               	movlw	255
  6594     0BDE  008F               	movwf	15	;volatile
  6595     0BDF                     i1l2369:
  6596                           
  6597                           ;main.c: 435:     TMR1L = 14;
  6598     0BDF  300E               	movlw	14
  6599     0BE0  008E               	movwf	14	;volatile
  6600     0BE1                     i1l2371:
  6601                           
  6602                           ;main.c: 438:   if (INTCONbits.TMR0IF) {
  6603     0BE1  1D0B               	btfss	11,2	;volatile
  6604     0BE2  2BE4               	goto	u335_21
  6605     0BE3  2BE5               	goto	u335_20
  6606     0BE4                     u335_21:
  6607     0BE4  2C0B               	goto	i1l273
  6608     0BE5                     u335_20:
  6609     0BE5                     i1l2373:
  6610                           
  6611                           ;main.c: 440:     TMR0 = 6;
  6612     0BE5  3006               	movlw	6
  6613     0BE6  0081               	movwf	1	;volatile
  6614                           
  6615                           ;main.c: 441:     INTCONbits.TMR0IF = 0;
  6616     0BE7  110B               	bcf	11,2	;volatile
  6617     0BE8                     i1l2375:
  6618                           
  6619                           ;main.c: 444:     if (sensors_reading_in_progress) {
  6620     0BE8  0864               	movf	_sensors_reading_in_progress,w	;volatile
  6621     0BE9  1903               	btfsc	3,2
  6622     0BEA  2BEC               	goto	u336_21
  6623     0BEB  2BED               	goto	u336_20
  6624     0BEC                     u336_21:
  6625     0BEC  2C0B               	goto	i1l273
  6626     0BED                     u336_20:
  6627     0BED                     i1l2377:
  6628                           
  6629                           ;main.c: 446:       if (PORTBbits.RB5)
  6630     0BED  1E86               	btfss	6,5	;volatile
  6631     0BEE  2BF0               	goto	u337_21
  6632     0BEF  2BF1               	goto	u337_20
  6633     0BF0                     u337_21:
  6634     0BF0  2BF3               	goto	i1l2381
  6635     0BF1                     u337_20:
  6636     0BF1                     i1l2379:
  6637                           
  6638                           ;main.c: 447:         low_sensor_high_count++;
  6639     0BF1  3001               	movlw	1
  6640     0BF2  07FA               	addwf	_low_sensor_high_count,f	;volatile
  6641     0BF3                     i1l2381:
  6642                           
  6643                           ;main.c: 448:       if (PORTBbits.RB4)
  6644     0BF3  1E06               	btfss	6,4	;volatile
  6645     0BF4  2BF6               	goto	u338_21
  6646     0BF5  2BF7               	goto	u338_20
  6647     0BF6                     u338_21:
  6648     0BF6  2BF9               	goto	i1l2385
  6649     0BF7                     u338_20:
  6650     0BF7                     i1l2383:
  6651                           
  6652                           ;main.c: 449:         high_sensor_high_count++;
  6653     0BF7  3001               	movlw	1
  6654     0BF8  07E7               	addwf	_high_sensor_high_count,f	;volatile
  6655     0BF9                     i1l2385:
  6656                           
  6657                           ;main.c: 450:       if (PORTBbits.RB3)
  6658     0BF9  1D86               	btfss	6,3	;volatile
  6659     0BFA  2BFC               	goto	u339_21
  6660     0BFB  2BFD               	goto	u339_20
  6661     0BFC                     u339_21:
  6662     0BFC  2BFF               	goto	i1l271
  6663     0BFD                     u339_20:
  6664     0BFD                     i1l2387:
  6665                           
  6666                           ;main.c: 451:         flow_sensor_high_count++;
  6667     0BFD  3001               	movlw	1
  6668     0BFE  07E6               	addwf	_flow_sensor_high_count,f	;volatile
  6669     0BFF                     i1l271:
  6670                           
  6671                           ;main.c: 453:       reading_count++;
  6672     0BFF  3001               	movlw	1
  6673     0C00  07FB               	addwf	_reading_count,f	;volatile
  6674     0C01                     i1l2389:
  6675                           
  6676                           ;main.c: 456:       if (reading_count >= 50) {
  6677     0C01  3032               	movlw	50
  6678     0C02  027B               	subwf	_reading_count,w	;volatile
  6679     0C03  1C03               	skipc
  6680     0C04  2C06               	goto	u340_21
  6681     0C05  2C07               	goto	u340_20
  6682     0C06                     u340_21:
  6683     0C06  2C0B               	goto	i1l273
  6684     0C07                     u340_20:
  6685     0C07                     i1l2391:
  6686                           
  6687                           ;main.c: 457:         sensors_reading_in_progress = 0;
  6688     0C07  01E4               	clrf	_sensors_reading_in_progress	;volatile
  6689     0C08                     i1l2393:
  6690                           
  6691                           ;main.c: 458:         sensors_reading_complete = 1;
  6692     0C08  3001               	movlw	1
  6693     0C09  00E5               	movwf	_sensors_reading_complete	;volatile
  6694     0C0A                     i1l2395:
  6695                           
  6696                           ;main.c: 459:         INTCONbits.TMR0IE =
  6697     0C0A  128B               	bcf	11,5	;volatile
  6698     0C0B                     i1l273:
  6699     0C0B  0871               	movf	??_isr+1,w
  6700     0C0C  008A               	movwf	10
  6701     0C0D  0E70               	swapf	??_isr,w
  6702     0C0E  0083               	movwf	3
  6703     0C0F  0EFE               	swapf	btemp,f
  6704     0C10  0E7E               	swapf	btemp,w
  6705     0C11  0009               	retfie
  6706     0C12                     __end_of_isr:
  6707     0001                     ___latbits      equ	1
  6708     007E                     btemp           set	126	;btemp
  6709     007E                     wtemp0          set	126
  6710                           
  6711                           	psect	intentry
  6712     0004                     __pintentry:	
  6713                           ;incstack = 0
  6714                           ; Regs used in _isr: [wreg+status,2+status,0]
  6715                           
  6716     0004                     interrupt_function:
  6717     007E                     saved_w         set	btemp
  6718     0004  00FE               	movwf	btemp
  6719     0005  0E03               	swapf	3,w
  6720     0006  00F0               	movwf	??_isr
  6721     0007  080A               	movf	10,w
  6722     0008  00F1               	movwf	??_isr+1
  6723     0009  158A  2BC8         	ljmp	_isr
  6724                           
  6725                           	psect	config
  6726                           
  6727                           ;Config register CONFIG1 @ 0x2007
  6728                           ;	Oscillator Selection bits
  6729                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6730                           ;	Watchdog Timer Enable bit
  6731                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6732                           ;	Power-up Timer Enable bit
  6733                           ;	PWRTE = ON, PWRT enabled
  6734                           ;	RE3/MCLR pin function select bit
  6735                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6736                           ;	Code Protection bit
  6737                           ;	CP = OFF, Program memory code protection is disabled
  6738                           ;	Data Code Protection bit
  6739                           ;	CPD = OFF, Data memory code protection is disabled
  6740                           ;	Brown Out Reset Selection bits
  6741                           ;	BOREN = ON, BOR enabled
  6742                           ;	Internal External Switchover bit
  6743                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6744                           ;	Fail-Safe Clock Monitor Enabled bit
  6745                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6746                           ;	Low Voltage Programming Enable bit
  6747                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6748                           ;	In-Circuit Debugger Mode bit
  6749                           ;	DEBUG = 0x1, unprogrammed default
  6750     2007                     	org	8199
  6751     2007  23E4               	dw	9188

Data Sizes:
    Strings     0
    Constant    24
    Data        1
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     47      79
    BANK1            80      3      46
    BANK2            80      0       0

Pointer List with Targets:

    getSensorResults@flow_active	PTR _Bool  size(1) Largest target is 1
		 -> flow_sensor_active(BANK0[1]), 

    getSensorResults@high_active	PTR _Bool  size(1) Largest target is 1
		 -> high_sensor_active(BANK0[1]), 

    getSensorResults@low_active	PTR _Bool  size(1) Largest target is 1
		 -> low_sensor_active(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___lmul
    _main->_buzzer_update
    _initLCD->_lcd_cmd
    _getsensorreadings->___lmul
    _lcd_set_cursor->_lcd_cmd
    _lcd_display_int->___awdiv
    ___awmod->___awdiv
    _lcd_display_bool_binary->_lcd_data
    ___lldiv->___lmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_dispinfo
    _getsensorreadings->___lldiv
    _dispinfo->_lcd_display_int
    _lcd_display_int->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    5325
                                             36 BANK0     11    11      0
                                              0 BANK1      3     3      0
                       _EEPROM_Write
                            ___lldiv
                             ___lmul
                      _buzzer_update
                 _check_button_press
                           _dispinfo
                  _getsensorreadings
                            _initLCD
                         _initSystem
                         _init_timer
                            _readADC
                     _trigger_buzzer
 ---------------------------------------------------------------------------------
 (1) _trigger_buzzer                                       2     0      2      40
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0     376
                                              4 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _getsensorreadings                                    5     5      0     636
                                             19 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                   _getSensorResults
                            _readADC
                        _setupTimer0
                 _startSensorReading
 ---------------------------------------------------------------------------------
 (2) _startSensorReading                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      47
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getSensorResults                                     3     0      3     102
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     154
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _dispinfo                                             9     9      0    3405
                                             27 BANK0      9     9      0
                            ___lldiv
                            _lcd_cmd
            _lcd_display_bool_binary
                    _lcd_display_int
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     552
                                              4 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     376
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_display_int                                      8     6      2    1742
                                             19 BANK0      8     6      2
                            ___awdiv
                            ___awmod
                            ___lldiv (ARG)
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     445
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     457
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_display_bool_binary                              1     1      0     423
                                              4 COMMON     1     1      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             2     2      0     376
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     265
                                              5 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _check_button_press                                   7     7      0     108
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_update                                        8     8      0       0
                                              2 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1      93
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Write
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _buzzer_update
   _check_button_press
   _dispinfo
     ___lldiv
     _lcd_cmd
     _lcd_display_bool_binary
       _lcd_data
     _lcd_display_int
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       ___lldiv (ARG)
       _lcd_data (ARG)
     _lcd_set_cursor
       _lcd_cmd
   _getsensorreadings
     ___lldiv
     ___lmul
     _getSensorResults
     _readADC
     _setupTimer0
     _startSensorReading
   _initLCD
     _lcd_cmd
   _initSystem
   _init_timer
   _readADC
   _trigger_buzzer

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BANK1               80      3      46     57.5%
BITBANK1            80      0       0      0.0%
BANK0               80     47      79     98.8%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     137      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 29 11:13:07 2025

                                     pc 0002                            lcd_data@data 0073  
                          ___awdiv@sign 0077                                      _lt 00A4  
                                    fsr 0004                                     l200 0152  
                                   l201 0157                                     l202 015C  
                                   l203 0161                                     l220 0321  
                                   l205 0184                                     l215 029E  
                                   l312 07FD                                     l250 0AFB  
                                   l226 0353                                     l331 0E05  
                                   l227 0350                                     l244 0B7F  
                                   l308 0B22                                     l325 0E71  
                                   l317 0E58                                     l261 0B50  
                                   l253 0A79                                     l237 0496  
                                   l503 0D33                                     l247 0AF1  
                                   l183 006F                                     l336 0ABB  
                                   l328 0EE0                                     l257 0A88  
                                   l282 0AD3                                     l339 0D9C  
                                   l363 0606                                     l284 0AD7  
                                   l620 0CCD                                     l348 07B3  
                                   l372 0704                                     l276 0AA9  
                                   l285 0AD9                                     l381 0FFF  
                                   l198 014D                                     l279 0ABD  
                                   l377 0A98                                     l633 0C6A  
                                   l481 0BC7                       _low_sensor_active 006D  
                                   _isr 0BC8                                     _smc 006A  
                                   fsr0 0004                                     indf 0000  
                          ___awmod@sign 0025                         ?_lcd_set_cursor 0074  
                     main@is_long_press 00CB                                    l3001 024B  
                                  l3011 029C                                    l3003 024D  
                                  l3013 029F                                    l3021 0314  
                                  l3005 028E                                    l3031 0334  
                                  l3023 031E                                    l3015 02A9  
                                  l3007 0291                                    l2401 0DCE  
                                  l3041 0343                                    l3025 0328  
                                  l3017 02C2                                    l3009 0298  
                                  l3033 0337                                    l2411 0DFB  
                                  l2403 0DD3                                    l3051 03AF  
                                  l3043 0348                                    l3035 033C  
                                  l3019 0310                                    l3027 032B  
                                  l2421 0D6A                                    l2501 0C3F  
                                  l2413 0DFC                                    l2405 0DDD  
                                  l3061 0423                                    l3053 03B6  
                                  l3045 034E                                    l3037 033D  
                                  l3029 0330                                    l2431 0D93  
                                  l2423 0D74                                    l2511 0C61  
                                  l2503 0C49                                    l2415 0DFD  
                                  l2407 0DE7                                    l3071 043C  
                                  l3063 042B                                    l3055 03BD  
                                  l3047 0355                                    l3039 0342  
                                  l2433 0D94                                    l2425 0D7E  
                                  l2417 0D35                                    l2441 0C75  
                                  l2513 0C66                                    l2505 0C4F  
                                  l2409 0DF1                                    l2601 0BA5  
                                  l2521 0AEE                                    l3065 042E  
                                  l3057 03C7                                    l3073 043E  
                                  l3049 0397                                    l2611 0CE0  
                                  l2427 0D88                                    l2419 0D65  
                                  l2451 0C84                                    l2443 0C77  
                                  l2435 0C6B                                    l2507 0C56  
                                  l2603 0BAE                                    l2523 0AF5  
                                  l2531 0A74                                    l3075 0448  
                                  l3067 042F                                    l3059 03E0  
                                  l2621 0D0D                                    l2613 0CE3  
                                  l2429 0D92                                    l2461 0C9A  
                                  l2453 0C8A                                    l2445 0C7B  
                                  l2437 0C6C                                    l2509 0C5C  
                                  l2605 0BBF                                    l2541 0B23  
                                  l2517 0ADB                                    l2533 0A78  
                                  l2701 0E81                                    l3077 048B  
                                  l3069 0439                                    l2623 0D1B  
                                  l2615 0CEE                                    l2463 0CAB  
                                  l2455 0C8D                                    l2471 0CBF  
                                  l2447 0C80                                    l2439 0C70  
                                  l2543 0B2A                                    l2551 0B4F  
                                  l2519 0AE9                                    l2527 0A6C  
                                  l2535 0A7A                                    l2711 0E93  
                                  l2703 0E82                                    l3079 0499  
                                  l2625 0D1C                                    l2617 0CF2  
                                  l2609 0CCE                                    l2473 0CC4  
                                  l2465 0CB1                                    l2457 0C94  
                                  l2449 0C82                                    l2481 0C15  
                                  l2561 0AB7                                    l2545 0B4C  
                                  l2529 0A70                                    l2537 0A81  
                                  l2801 0616                                    l2721 0EB2  
                                  l2713 0E9F                                    l2705 0E83  
                                  l2641 0B5E                                    l2633 0B51  
                                  l2627 0D25                                    l2619 0CFB  
                                  l2475 0CC9                                    l2467 0CB2  
                                  l2459 0C96                                    l2491 0C29  
                                  l2483 0C19                                    l2571 0723  
                                  l2563 0705                                    l2555 0AAB  
                                  l2547 0B4D                                    l2539 0A86  
                                  l2811 0690                                    l2803 061F  
                                  l2731 0EB7                                    l2723 0EB3  
                                  l2715 0EA2                                    l2707 0E8F  
                                  l2651 0B73                                    l2643 0B60  
                                  l2635 0B55                                    l2821 0E0D  
                                  l2629 0D2B                                    l2469 0CB9  
                                  l2493 0C2F                                    l2485 0C1E  
                                  l2581 0778                                    l2573 0729  
                                  l2565 070B                                    l2557 0AB0  
                                  l2805 064D                                    l2813 069A  
                                  l2741 04A0                                    l2733 0EC3  
                                  l2725 0EB4                                    l2717 0EA3  
                                  l2709 0E92                                    l2661 0B7A  
                                  l2653 0B76                                    l2645 0B62  
                                  l2637 0B59                                    l2901 0075  
                                  l2831 0E3C                                    l2823 0E16  
                                  l2591 0A8F                                    l2495 0C32  
                                  l2487 0C20                                    l2479 0C12  
                                  l2583 078E                                    l2575 073C  
                                  l2567 070F                                    l2399 0D9E  
                                  l2559 0AB4                                    l2815 06DE  
                                  l2807 065A                                    l2751 04B3  
                                  l2735 0EC7                                    l2727 0EB5  
                                  l2719 0EAF                                    l2663 0B7B  
                                  l2655 0B77                                    l2647 0B66  
                                  l2639 0B5A                                    l2671 0AFC  
                                  l2911 0092                                    l2903 007C  
                                  l2681 07BB                                    l2841 0E63  
                                  l2833 0E3F                                    l2825 0E1C  
                                  l2817 0E06                                    l2593 0A94  
                                  l2497 0C39                                    l2489 0C24  
                                  l2585 079D                                    l2577 075A  
                                  l2569 0716                                    l2809 0662  
                                  l2761 04FA                                    l2753 04B9  
                                  l2737 0ECB                                    l2729 0EB6  
                                  l2665 0B7C                                    l2657 0B78  
                                  l2649 0B6A                                    l2673 0B03  
                                  l2921 00AE                                    l2913 0096  
                                  l2905 0082                                    l2683 07F5  
                                  l2835 0E48                                    l2827 0E1E  
                                  l2819 0E07                                    l2499 0C3B  
                                  l2587 07AC                                    l2579 076B  
                                  l2595 0B80                                    l2771 051B  
                                  l2763 04FF                                    l2755 04C4  
                                  l2747 04A3                                    l2739 0ECF  
                                  l2691 0E7A                                    l2667 0B7D  
                                  l2659 0B79                                    l2675 0B04  
                                  l2931 00D2                                    l2923 00AF  
                                  l2915 009C                                    l2907 0085  
                                  l2861 0ACD                                    l2853 0ABD  
                                  l2685 07F8                                    l2845 0E6E  
                                  l2837 0E4E                                    l2829 0E23  
                                  l2589 0A8A                                    l2597 0B8A  
                                  l2781 052F                                    l2773 0520  
                                  l2765 0505                                    l2757 04C6  
                                  l2749 04AF                                    l2693 0E7D  
                                  l2669 0B7E                                    l2677 0B1E  
                                  l2941 00E9                                    l2933 00D5  
                                  l2925 00BE                                    l2917 00AA  
                                  l2909 008B                                    l2863 0ACE  
                                  l2855 0AC3                                    l2679 07B4  
                                  l2839 0E5E                                    l2871 0F2B  
                                  l2599 0B8E                                    l2791 059F  
                                  l2775 0525                                    l2767 0513  
                                  l2783 0530                                    l2759 04F5  
                                  l2695 0E7E                                    l2687 0A99  
                                  l2951 013B                                    l2943 0123  
                                  l2935 00D9                                    l2927 00C2  
                                  l2919 00AD                                    l2865 0AD0  
                                  l2857 0AC9                                    l2849 0E70  
                                  l2881 0F72                                    l2873 0F41  
                                  l2785 0538                                    l2793 05AE  
                                  l2777 0527                                    l2769 051A  
                                  l2697 0E7F                                    l2689 0E72  
                                  l2953 013F                                    l2945 0129  
                                  l2961 0166                                    l2937 00DC  
                                  l2929 00C8                                    l2867 0AD2  
                                  l2859 0ACC                                    l2883 0F78  
                                  l2875 0F45                                    l2795 05B8  
                                  l2787 0542                                    l2779 052C  
                                  l2699 0E80                                    l2971 0195  
                                  l2963 0179                                    l2955 0145  
                                  l2947 012F                                    l2939 00DF  
                                  l2891 0023                                    l2885 0FCC  
                                  l2877 0F54                                    l2869 0EE4  
                                  l2797 05FC                                    l2789 055B  
                                  l2981 01B8                                    l2973 019C  
                                  l2957 0146                                    l2949 0134  
                                  l2965 017D                                    l2893 0026  
                                  l2887 0FDB                                    l2879 0F60  
                                  l2799 060E                                    l2991 01CE  
                                  l2983 01BD                                    l2967 018A  
                                  l2975 01AB                                    l2895 006E  
                                  l2993 01E4                                    l2985 01C2  
                                  l2977 01AE                                    l2969 0190  
                                  l2995 01E8                                    l2987 01C7  
                                  l2979 01B1                                    l2989 01CC  
                                  l2997 01EF                                    l2999 01F6  
                                  ?_isr 0070                                    u4000 0B4A  
                                  u4001 0B48                                    u4010 0B4B  
                                  u4020 0AB0                                    u4021 0AAF  
                                  u4030 070B                                    u4031 070A  
                                  u4040 0723                                    u4120 0BBF  
                                  u4200 0B03                                    u5000 0448  
                                  u4041 0722                                    u4121 0BBE  
                                  u4105 0BA7                                    u4201 0B02  
                                  u5001 0447                                    u4210 07BB  
                                  u4130 0CE0                                    u4050 0778  
                                  u3410 0DA8                                    u4211 07BA  
                                  u4131 0CDF                                    u4051 0777  
                                  u3411 0DA4                                    u4115 0BAF  
                                  u5011 045F                                    u4060 079D  
                                  u4300 0525                                    u5020 048B  
                                  u5012 0462                                    u4221 07D6  
                                  u4061 079C                                    u4045 071F  
                                  u4301 0524                                    u5021 048A  
                                  u5013 0469                                    u4230 07F5  
                                  u4222 07D7                                    u4150 0CF2  
                                  u4070 0A8F                                    u3510 0DE4  
                                  u3430 0DB2                                    u4310 052C  
                                  u5014 046C                                    u4231 07F4  
                                  u4223 07DC                                    u4151 0CF1  
                                  u4071 0A8E                                    u4055 0774  
                                  u3511 0DE0                                    u3431 0DAE  
                                  u4311 052B                                    u5023 0487  
                                  u5015 0473                                    u4224 07DD  
                                  u3504 0DDD                                    u3424 0DAB  
                                  u4080 0B8E                                    u4400 0616  
                                  u4320 0538                                    u4240 04B9  
                                  u5016 0476                                    u4225 07E2  
                                  u4145 0CE5                                    u4065 0799  
                                  u4081 0B8D                                    u4401 0615  
                                  u4321 0537                                    u4241 04B8  
                                  u4226 07E3                                    u4170 0D0D  
                                  u3610 0D53                                    u3530 0DEE  
                                  u3450 0DBC                                    u4330 0542  
                                  u4250 04FA                                    u4235 07F1  
                                  u4171 0D0C                                    u3611 0D4F  
                                  u3531 0DEA                                    u3451 0DB8  
                                  u4091 0B97                                    u4411 062E  
                                  u4331 0541                                    u4251 04F9  
                                  u5107 0EBE                                    u4500 0E3C  
                                  u3604 0D4C                                    u3524 0DE7  
                                  u3444 0DB5                                    u4092 0B9E  
                                  u4420 064D                                    u4412 062F  
                                  u4260 04FF                                    u4501 0E3B  
                                  u4165 0CF4                                    u4093 0BA5  
                                  u4421 064C                                    u4413 0634  
                                  u4341 0572                                    u4261 04FE  
                                  u5117 0ED3                                    u5037 00A4  
                                  u4510 0E4E                                    u4190 0D2B  
                                  u3710 0D8F                                    u3630 0D5D  
                                  u3550 0DF8                                    u3470 0DC6  
                                  u4430 0662                                    u4414 0635  
                                  u4350 059F                                    u4342 0575  
                                  u4270 0513                                    u4511 0E4D  
                                  u5207 0E43                                    u4191 0D2A  
                                  u4175 0D09                                    u3711 0D8B  
                                  u3631 0D59                                    u3551 0DF4  
                                  u3471 0DC2                                    u5127 0AEB  
                                  u4431 0661                                    u4423 0649  
                                  u4415 063A                                    u4351 059E  
                                  u4343 057C                                    u4271 0512  
                                  u5047 00B8                                    u4520 0E5E  
                                  u3704 0D88                                    u3624 0D56  
                                  u3544 0DF1                                    u3464 0DBF  
                                  u4416 063B                                    u4360 05B8  
                                  u4344 057F                                    u4280 051A  
                                  u4600 008B                                    u4521 0E5D  
                                  u5217 0E52                                    u4505 0E38  
                                  u4185 0D1D                                    u5137 0F4B  
                                  u4441 0671                                    u4361 05B7  
                                  u4353 059B                                    u4345 0586  
                                  u4281 0519                                    u5057 0B6E  
                                  u4601 008A                                    u4530 0E63  
                                  u3650 0D71                                    u3570 0D3F  
                                  u3810 0CBF                                    u3730 0C70  
                                  u3490 0DDA                                    u4450 0690  
                                  u4442 0672                                    u4346 0589  
                                  u4290 0520                                    u4610 0092  
                                  u5227 0E67                                    u4531 0E62  
                                  u3651 0D6D                                    u3571 0D3B  
                                  u3811 0CBE                                    u3731 0C6F  
                                  u3491 0DD6                                    u5147 0DD0  
                                  u4451 068F                                    u4443 0677  
                                  u4371 05CF                                    u4291 051F  
                                  u5067 0E76                                    u4611 0091  
                                  u4540 0AC3                                    u3724 0D92  
                                  u3644 0D60                                    u3820 0CC4  
                                  u3740 0C7B                                    u3900 0C5C  
                                  u3564 0DFB                                    u3484 0DC9  
                                  u4444 0678                                    u4380 05FC  
                                  u4372 05D2                                    u4700 01A8  
                                  u4620 0096                                    u4541 0AC2  
                                  u3821 0CC3                                    u3805 0CB3  
                                  u3741 0C7A                                    u3901 0C5B  
                                  u5157 0E02                                    u4461 06B1  
                                  u4453 068C                                    u4445 067D  
                                  u4381 05FB                                    u4373 05D9  
                                  u5077 0E8A                                    u4701 01A4  
                                  u4621 0095                                    u4550 0AD7  
                                  u3670 0D7B                                    u3590 0D49  
                                  u3750 0C8A                                    u3910 0C61  
                                  u3830 0C19                                    u4470 06DE  
                                  u4462 06B4                                    u4446 067E  
                                  u4390 060E                                    u4374 05DC  
                                  u4630 00C8                                    u4551 0AD6  
                                  u3671 0D77                                    u5167 0D67  
                                  u3591 0D45                                    u3751 0C89  
                                  u3911 0C60                                    u3831 0C18  
                                  u4471 06DD                                    u4463 06BB  
                                  u4391 060D                                    u4383 05F8  
                                  u4375 05E3                                    u5087 0E9A  
                                  u4631 00C7                                    u4480 0E0D  
                                  u3664 0D74                                    u3584 0D42  
                                  u3840 0C24                                    u4464 06BE  
                                  u4376 05E6                                    u4720 01B8  
                                  u4640 0129                                    u4481 0E0C  
                                  u5177 0D99                                    u3841 0C23  
                                  u4561 0EFE                                    u4473 06DA  
                                  u4465 06C5                                    u5097 0EAA  
                                  u4801 0262                                    u4721 01B7  
                                  u4641 0128                                    u4490 0E1C  
                                  u3690 0D85                                    u3770 0C9A  
                                  u3850 0C2F                                    u4570 0F2B  
                                  u4562 0F01                                    u3930 0AF5  
                                  u4466 06C8                                    u4810 028E  
                                  u4802 0265                                    u4730 01BD  
                                  u4714 01AB                                    u4650 0134  
                                  u4491 0E1B                                    u5187 0E11  
                                  u3691 0D81                                    u3771 0C99  
                                  u3851 0C2E                                    u4571 0F2A  
                                  u4563 0F08                                    u3931 0AF4  
                                  u4811 028D                                    u4803 026C  
                                  u4731 01BC                                    u4651 0133  
                                  u3684 0D7E                                    u4564 0F0B  
                                  u3940 0A81                                    u4900 0342  
                                  u4820 0298                                    u4804 026F  
                                  u4740 01C2                                    u4660 0145  
                                  u4580 007C                                    u5197 0E27  
                                  u3765 0C8E                                    u4565 0F12  
                                  u3925 0ADE                                    u3941 0A80  
                                  u4901 0341                                    u4821 0297  
                                  u4813 028A                                    u4805 0276  
                                  u4741 01C1                                    u4661 0144  
                                  u4581 007B                                    u3790 0CAB  
                                  u3870 0C3F                                    u4566 0F15  
                                  u3950 0B2A                                    u4910 0348  
                                  u4830 029C                                    u4806 0279  
                                  u4750 01C7                                    u4670 0184  
                                  u4590 0082                                    u3791 0CAA  
                                  u3871 0C3E                                    u4575 0F27  
                                  u3951 0B29                                    u4911 0347  
                                  u4831 029B                                    u4751 01C6  
                                  u4671 0183                                    u4591 0081  
                                  u3880 0C49                                    u3960 0B33  
                                  u4920 034E                                    u4840 02A9  
                                  u4760 01CC                                    u4680 018A  
                                  u3785 0C9B                                    u3881 0C48  
                                  u3865 0C33                                    u3961 0B31  
                                  u4921 034D                                    u4841 02A8  
                                  u4761 01CB                                    u4681 0189  
                                  u3970 0B34                                    u4770 01F6  
                                  u4690 0195                                    u3795 0CA7  
                                  u4931 036A                                    u4851 02E3  
                                  u4771 01F5                                    u4691 0194  
                                  u3980 0B3F                                    u4940 0397  
                                  u4932 036D                                    u4860 0310  
                                  u4852 02E6                                    u3885 0C45  
                                  u3981 0B3D                                    u4941 0396  
                                  u4933 0374                                    u4861 030F  
                                  u4853 02ED                                    u4781 021E  
                                  u3990 0B40                                    u4950 03BD  
                                  u4934 0377                                    u4870 0328  
                                  u4854 02F0                                    u4790 024B  
                                  u4782 0221                                    u3895 0C50  
                                  u4951 03BC                                    u4943 0393  
                                  u4935 037E                                    u4871 0327  
                                  u4855 02F7                                    u4791 024A  
                                  u4783 0228                                    u4960 03C7  
                                  u4936 0381                                    u4880 0330  
                                  u4856 02FA                                    u4784 022B  
                                  u4961 03C6                                    u4881 032F  
                                  u4865 030C                                    u4785 0232  
                                  u4890 033C                                    u4786 0235  
                                  u4971 03F7                                    u4891 033B  
                                  u4795 0247                                    u4980 0423  
                                  u4972 03FA                                    u4981 0422  
                                  u4973 0401                                    u4990 042B  
                                  u4974 0404                                    u4991 042A  
                                  u4983 041F                                    u4975 040B  
                                  u4976 040E                                    _TMR0 0001  
                                  _main 0023                                    btemp 007E  
               lcd_display_int@hundreds 0035                                    start 000B  
                   dispinfo@refreshtime 0043                 __end_of_maxvoltagelimit 0818  
                     ?_getSensorResults 0072             _sensors_reading_in_progress 0064  
                    ??_getSensorResults 0075                    __end_of_EEPROM_Write 0ADA  
                                 ??_isr 0070                                   ?_main 0070  
                       __end_of___awdiv 0CCE                                   _EEADR 010D  
                       __end_of___awmod 0C6B                                   _ANSEL 0188  
                       __end_of___lldiv 0D34                         ___awdiv@divisor 0072  
                                 _T1CON 0010                                   i1l271 0BFF  
                                 i1l273 0C0B                         ___awdiv@counter 0076  
                                 _TMR1H 000F                                   _TMR1L 000E  
                                 _PORTA 0005                                   _PORTB 0006  
                                 _PORTC 0007                                   _TRISA 0085  
                                 _TRISB 0086                                   _TRISC 0087  
                   ___lmul@multiplicand 0076                         __end_of_lcd_cmd 0E06  
                       __end_of_readADC 0AFC                         __end_of_initLCD 0EE1  
                                 main@i 00CD                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                      EEPROM_Write@data 0072                     _maxvoltageerrortime 081A  
                       __initialization 000D                            _voltageerror 0063  
            __end_of_startSensorReading 0A89                            __end_of_main 04A0  
          lcd_display_bool_binary@value 0074                                  ??_main 0044  
                     _buzzer_start_time 00A8                                  _ADCON0 001F  
                                _ADCON1 009F                                  _ADRESH 001E  
                                _ADRESL 009E                                  _EEDATA 010C  
                                _EECON2 018D                        ___awdiv@dividend 0074  
                                _ANSELH 0189                                  i1l2361 0BC8  
                                i1l2363 0BCE                                  i1l2371 0BE1  
                                i1l2381 0BF3                                  i1l2373 0BE5  
                                i1l2365 0BDC                                  i1l2391 0C07  
                                i1l2383 0BF7                                  i1l2375 0BE8  
                                i1l2367 0BDD                                  i1l2393 0C08  
                                i1l2385 0BF9                                  i1l2377 0BED  
                                i1l2369 0BDF                                  i1l2395 0C0A  
                                i1l2387 0BFD                                  i1l2379 0BF1  
                                i1l2389 0C01                                  u340_20 0C07  
                                u340_21 0C06                                  u334_20 0BCE  
                                u334_21 0BCD                                  u335_20 0BE5  
                                u335_21 0BE4                                  u336_20 0BED  
                                u336_21 0BEC                                  u337_20 0BF1  
                                u337_21 0BF0                                  u338_20 0BF7  
                                u338_21 0BF6                                  u339_20 0BFD  
                                u339_21 0BFC                 _lcd_display_bool_binary 0A89  
                      __end_of_lcd_data 0D9D                        __end_of_dispinfo 1000  
                                ___lmul 0B80                         _lastdryruncheck 00B8  
                             ??___awdiv 0076                               ??___awmod 007A  
                             ??___lldiv 002D                          _trigger_buzzer 0AFC  
                                _millis 0053                        ___awdiv@quotient 0078  
                       ___awmod@divisor 0020                         ___awmod@counter 0024  
                                _potraw 00C8                               ??_lcd_cmd 0072  
                             ??_readADC 0074                               ??_initLCD 0074  
                                saved_w 007E              __end_of_check_button_press 0E72  
                          ?_setupTimer0 0070                 __end_of__initialization 0020  
                        __pcstackCOMMON 0070                  __end_of_trigger_buzzer 0B23  
                          __pidataBANK0 07FE                           _lastflowcheck 004F  
                      ??_lcd_set_cursor 0075                          _OPTION_REGbits 0081  
        trigger_buzzer@duration_seconds 0072                         _lastsensorcheck 00AC  
                          _EEPROM_Write 0ABC               ??_lcd_display_bool_binary 0074  
                            __pbssBANK0 004F                              __pbssBANK1 00A0  
                            __pmaintext 0023                         ?_trigger_buzzer 0072  
                               ?___lmul 0072                              __pintentry 0004  
                            _blinkdelay 081C                          ___lmul@product 0021  
                       _minvoltagelimit 0818                         _seconds_counter 0057  
                             ?_lcd_data 0070                               ?_dispinfo 0070  
                            __stringtab 0800                           _reading_count 007B  
                     ??_lcd_display_int 007A                              _flowactive 005D  
                               ___awdiv 0C6B                                 ___awmod 0C12  
                               ___lldiv 0CCE         __end_of_lcd_display_bool_binary 0A99  
                            _initSystem 0B51                              _init_timer 0A99  
                               __ptext1 0AFC                                 __ptext2 0A99  
                               __ptext3 0B51                                 __ptext4 0E72  
                               __ptext5 04A0                                 __ptext6 0A7A  
                               __ptext7 0A6C                                 __ptext8 0ADA  
                               __ptext9 0B23                                 _lcd_cmd 0D9D  
                               _readADC 0ADA                                 _initLCD 0E72  
                             _T1CONbits 0010                        ___awmod@dividend 0022  
                    _startSensorReading 0A7A                              _dryruntime 00C4  
         __end_of_minimumrunningvoltage 0816                           _buzzer_active 005B  
                            _maxruntime 0806                   _low_sensor_high_count 007A  
                            ??_lcd_data 0072                                 clrloop0 0A65  
                               _voltage 0068                              ??_dispinfo 003B  
                  end_of_initialization 0020                     ?_startSensorReading 0070  
                         _buzzer_update 07B4                         ___lldiv@divisor 0025  
                       ___lldiv@counter 0032             getSensorResults@high_active 0073  
               __end_of_minvoltagelimit 081A                    ??_startSensorReading 0072  
                             _PORTAbits 0005                               _PORTBbits 0006  
                             _PORTCbits 0007                              lcd_cmd@cmd 0073  
                        ?_buzzer_update 0070                       _getsensorreadings 04A0  
                    ?_getsensorreadings 0070             getSensorResults@flow_active 0074  
                    _check_button_press 0E06                              _voltageraw 00C6  
                            _voltagesum 00C2                     ??_getsensorreadings 0033  
                        __end_of___lmul 0BC8                             ?_initSystem 0070  
           __end_of_maxvoltageerrortime 081C                     ?_check_button_press 0070  
                           ?_init_timer 0070                      _high_sensor_active 006C  
              _sensors_reading_complete 0065                     start_initialization 000D  
                      _getSensorResults 0B23                     lcd_display_int@ones 0039  
                   lcd_display_int@tens 0037                             __end_of_isr 0C12  
             __end_of_getsensorreadings 0705                    ??_check_button_press 0072  
                      ??_trigger_buzzer 0074                   lcd_set_cursor@address 0076  
                              ??___lmul 0020                             __pdataBANK0 006E  
         __end_of_maximumrinningvoltage 0814                             __pbssCOMMON 007A  
                             ___latbits 0001                           __pcstackBANK0 0020  
                         __pcstackBANK1 00CB                         _lcd_display_int 0705  
                       ??_buzzer_update 0072                            _lastdispupdt 00A0  
                 main@is_long_press_458 00CC                                ?___awdiv 0072  
                              ?___awmod 0020                                ?___lldiv 0025  
                  __end_of_sensorbuffer 0812                               __pstrings 0800  
                              ?_lcd_cmd 0070                                ?_readADC 0072  
                              ?_initLCD 0070                      getsensorreadings@i 0037  
              ?_lcd_display_bool_binary 0070                               _mannualon 00CA  
                     interrupt_function 0004                               clear_ram0 0A64  
                              _PIE1bits 008C                               _tankempty 005F  
                              _PIR1bits 000C                          _motorstarttime 00B4  
               __end_of_lcd_display_int 07B4                              _ADCON0bits 001F  
                           __stringbase 0805                         _buzzer_duration 00C0  
                         ??_setupTimer0 0072                       ___lmul@multiplier 0072  
                 _minimumrunningvoltage 0814                      lcd_display_int@num 0033  
                    __end_of_blinkdelay 081E                              _EECON1bits 018C  
check_button_press@long_press_threshold 0074                __end_of_getSensorResults 0B51  
                         _preflowactive 005C                            ??_initSystem 0072  
                           _last_millis 00BC                            ??_init_timer 0072  
                        readADC@channel 0075                      __end_of__stringtab 0806  
            getSensorResults@low_active 0072                        _lastvoltageerror 00B0  
                              __ptext10 0B80                                __ptext11 0EE1  
                              __ptext20 0E06                                __ptext12 0AAA  
                              __ptext21 07B4                                __ptext13 0D9D  
                              __ptext22 0ABC                                __ptext14 0705  
                              __ptext23 0BC8                                __ptext15 0C12  
                              __ptext16 0C6B                                __ptext17 0A89  
                              __ptext18 0D34                                __ptext19 0CCE  
                              _lcd_data 0D34                           ?_EEPROM_Write 0072  
                              _dispinfo 0EE1                      __end_of_initSystem 0B80  
                   __end_of_setupTimer0 0A7A                      __end_of_init_timer 0AAA  
                           _dryrunerror 0062                      _flow_sensor_active 006B  
                    __end_of_maxruntime 0810                        ?_lcd_display_int 0033  
                            _INTCONbits 000B                          ??_EEPROM_Write 0073  
                              intlevel1 0000                          _lcd_set_cursor 0AAA  
                     lcd_set_cursor@col 0074                       lcd_set_cursor@row 0075  
                          _sensorbuffer 0810                        ___lldiv@dividend 0029  
                             stringcode 0800                              _OSCCONbits 008F  
                          _pretankempty 005E                            _motorrunning 0060  
          check_button_press@hold_count 0076                         _maxvoltagelimit 0816  
                       _maxruntimeindex 006E                            _settingsmode 0069  
                      ___lldiv@quotient 002E                   _maximumrinningvoltage 0812  
                          _timeouterror 0061                                stringdir 0800  
                              stringtab 0800                  _high_sensor_high_count 0067  
                __end_of_lcd_set_cursor 0ABC                  _flow_sensor_high_count 0066  
                           _setupTimer0 0A6C                   __end_of_buzzer_update 07FE  
          check_button_press@long_press 0078                     EEPROM_Write@address 0073  
