

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Apr 27 17:44:08 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,space=0,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 12/10/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F883 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0004                     fsr             equ	4
    81     0004                     fsr0            equ	4
    82     0000                     indf            equ	0
    83     0000                     indf0           equ	0
    84     0002                     pc              equ	2
    85     0002                     pcl             equ	2
    86     000A                     pclath          equ	10
    87     0003                     status          equ	3
    88     0000                     INDF            equ	0	;# 
    89     0001                     TMR0            equ	1	;# 
    90     0002                     PCL             equ	2	;# 
    91     0003                     STATUS          equ	3	;# 
    92     0004                     FSR             equ	4	;# 
    93     0005                     PORTA           equ	5	;# 
    94     0006                     PORTB           equ	6	;# 
    95     0007                     PORTC           equ	7	;# 
    96     0009                     PORTE           equ	9	;# 
    97     000A                     PCLATH          equ	10	;# 
    98     000B                     INTCON          equ	11	;# 
    99     000C                     PIR1            equ	12	;# 
   100     000D                     PIR2            equ	13	;# 
   101     000E                     TMR1            equ	14	;# 
   102     000E                     TMR1L           equ	14	;# 
   103     000F                     TMR1H           equ	15	;# 
   104     0010                     T1CON           equ	16	;# 
   105     0011                     TMR2            equ	17	;# 
   106     0012                     T2CON           equ	18	;# 
   107     0013                     SSPBUF          equ	19	;# 
   108     0014                     SSPCON          equ	20	;# 
   109     0015                     CCPR1           equ	21	;# 
   110     0015                     CCPR1L          equ	21	;# 
   111     0016                     CCPR1H          equ	22	;# 
   112     0017                     CCP1CON         equ	23	;# 
   113     0018                     RCSTA           equ	24	;# 
   114     0019                     TXREG           equ	25	;# 
   115     001A                     RCREG           equ	26	;# 
   116     001B                     CCPR2           equ	27	;# 
   117     001B                     CCPR2L          equ	27	;# 
   118     001C                     CCPR2H          equ	28	;# 
   119     001D                     CCP2CON         equ	29	;# 
   120     001E                     ADRESH          equ	30	;# 
   121     001F                     ADCON0          equ	31	;# 
   122     0081                     OPTION_REG      equ	129	;# 
   123     0085                     TRISA           equ	133	;# 
   124     0086                     TRISB           equ	134	;# 
   125     0087                     TRISC           equ	135	;# 
   126     0089                     TRISE           equ	137	;# 
   127     008C                     PIE1            equ	140	;# 
   128     008D                     PIE2            equ	141	;# 
   129     008E                     PCON            equ	142	;# 
   130     008F                     OSCCON          equ	143	;# 
   131     0090                     OSCTUNE         equ	144	;# 
   132     0091                     SSPCON2         equ	145	;# 
   133     0092                     PR2             equ	146	;# 
   134     0093                     SSPADD          equ	147	;# 
   135     0093                     SSPMSK          equ	147	;# 
   136     0093                     MSK             equ	147	;# 
   137     0094                     SSPSTAT         equ	148	;# 
   138     0095                     WPUB            equ	149	;# 
   139     0096                     IOCB            equ	150	;# 
   140     0097                     VRCON           equ	151	;# 
   141     0098                     TXSTA           equ	152	;# 
   142     0099                     SPBRG           equ	153	;# 
   143     009A                     SPBRGH          equ	154	;# 
   144     009B                     PWM1CON         equ	155	;# 
   145     009C                     ECCPAS          equ	156	;# 
   146     009D                     PSTRCON         equ	157	;# 
   147     009E                     ADRESL          equ	158	;# 
   148     009F                     ADCON1          equ	159	;# 
   149     0105                     WDTCON          equ	261	;# 
   150     0107                     CM1CON0         equ	263	;# 
   151     0108                     CM2CON0         equ	264	;# 
   152     0109                     CM2CON1         equ	265	;# 
   153     010C                     EEDATA          equ	268	;# 
   154     010C                     EEDAT           equ	268	;# 
   155     010D                     EEADR           equ	269	;# 
   156     010E                     EEDATH          equ	270	;# 
   157     010F                     EEADRH          equ	271	;# 
   158     0185                     SRCON           equ	389	;# 
   159     0187                     BAUDCTL         equ	391	;# 
   160     0188                     ANSEL           equ	392	;# 
   161     0189                     ANSELH          equ	393	;# 
   162     018C                     EECON1          equ	396	;# 
   163     018D                     EECON2          equ	397	;# 
   164     0000                     INDF            equ	0	;# 
   165     0001                     TMR0            equ	1	;# 
   166     0002                     PCL             equ	2	;# 
   167     0003                     STATUS          equ	3	;# 
   168     0004                     FSR             equ	4	;# 
   169     0005                     PORTA           equ	5	;# 
   170     0006                     PORTB           equ	6	;# 
   171     0007                     PORTC           equ	7	;# 
   172     0009                     PORTE           equ	9	;# 
   173     000A                     PCLATH          equ	10	;# 
   174     000B                     INTCON          equ	11	;# 
   175     000C                     PIR1            equ	12	;# 
   176     000D                     PIR2            equ	13	;# 
   177     000E                     TMR1            equ	14	;# 
   178     000E                     TMR1L           equ	14	;# 
   179     000F                     TMR1H           equ	15	;# 
   180     0010                     T1CON           equ	16	;# 
   181     0011                     TMR2            equ	17	;# 
   182     0012                     T2CON           equ	18	;# 
   183     0013                     SSPBUF          equ	19	;# 
   184     0014                     SSPCON          equ	20	;# 
   185     0015                     CCPR1           equ	21	;# 
   186     0015                     CCPR1L          equ	21	;# 
   187     0016                     CCPR1H          equ	22	;# 
   188     0017                     CCP1CON         equ	23	;# 
   189     0018                     RCSTA           equ	24	;# 
   190     0019                     TXREG           equ	25	;# 
   191     001A                     RCREG           equ	26	;# 
   192     001B                     CCPR2           equ	27	;# 
   193     001B                     CCPR2L          equ	27	;# 
   194     001C                     CCPR2H          equ	28	;# 
   195     001D                     CCP2CON         equ	29	;# 
   196     001E                     ADRESH          equ	30	;# 
   197     001F                     ADCON0          equ	31	;# 
   198     0081                     OPTION_REG      equ	129	;# 
   199     0085                     TRISA           equ	133	;# 
   200     0086                     TRISB           equ	134	;# 
   201     0087                     TRISC           equ	135	;# 
   202     0089                     TRISE           equ	137	;# 
   203     008C                     PIE1            equ	140	;# 
   204     008D                     PIE2            equ	141	;# 
   205     008E                     PCON            equ	142	;# 
   206     008F                     OSCCON          equ	143	;# 
   207     0090                     OSCTUNE         equ	144	;# 
   208     0091                     SSPCON2         equ	145	;# 
   209     0092                     PR2             equ	146	;# 
   210     0093                     SSPADD          equ	147	;# 
   211     0093                     SSPMSK          equ	147	;# 
   212     0093                     MSK             equ	147	;# 
   213     0094                     SSPSTAT         equ	148	;# 
   214     0095                     WPUB            equ	149	;# 
   215     0096                     IOCB            equ	150	;# 
   216     0097                     VRCON           equ	151	;# 
   217     0098                     TXSTA           equ	152	;# 
   218     0099                     SPBRG           equ	153	;# 
   219     009A                     SPBRGH          equ	154	;# 
   220     009B                     PWM1CON         equ	155	;# 
   221     009C                     ECCPAS          equ	156	;# 
   222     009D                     PSTRCON         equ	157	;# 
   223     009E                     ADRESL          equ	158	;# 
   224     009F                     ADCON1          equ	159	;# 
   225     0105                     WDTCON          equ	261	;# 
   226     0107                     CM1CON0         equ	263	;# 
   227     0108                     CM2CON0         equ	264	;# 
   228     0109                     CM2CON1         equ	265	;# 
   229     010C                     EEDATA          equ	268	;# 
   230     010C                     EEDAT           equ	268	;# 
   231     010D                     EEADR           equ	269	;# 
   232     010E                     EEDATH          equ	270	;# 
   233     010F                     EEADRH          equ	271	;# 
   234     0185                     SRCON           equ	389	;# 
   235     0187                     BAUDCTL         equ	391	;# 
   236     0188                     ANSEL           equ	392	;# 
   237     0189                     ANSELH          equ	393	;# 
   238     018C                     EECON1          equ	396	;# 
   239     018D                     EECON2          equ	397	;# 
   240                           
   241                           	psect	idataBANK0
   242     07FF                     __pidataBANK0:
   243                           
   244                           ;initializer for _maxruntimeindex
   245     07FF  3403               	retlw	3
   246                           
   247                           	psect	idataBANK1
   248     0B59                     __pidataBANK1:
   249                           
   250                           ;initializer for _maxruntime
   251     0B59  341E               	retlw	30
   252     0B5A  3400               	retlw	0
   253     0B5B  342D               	retlw	45
   254     0B5C  3400               	retlw	0
   255     0B5D  343C               	retlw	60
   256     0B5E  3400               	retlw	0
   257     0B5F  3478               	retlw	120
   258     0B60  3400               	retlw	0
   259     0B61  34FF               	retlw	255
   260     0B62  34FF               	retlw	255
   261                           
   262                           ;initializer for _sensorbuffer
   263     0B63  3410               	retlw	16
   264     0B64  3427               	retlw	39
   265                           
   266                           ;initializer for _maximumrinningvoltage
   267     0B65  341D               	retlw	29
   268     0B66  3401               	retlw	1
   269                           
   270                           ;initializer for _minimumrunningvoltage
   271     0B67  34AA               	retlw	170
   272     0B68  3400               	retlw	0
   273                           
   274                           ;initializer for _maxvoltagelimit
   275     0B69  34E6               	retlw	230
   276     0B6A  3400               	retlw	0
   277                           
   278                           ;initializer for _minvoltagelimit
   279     0B6B  34C8               	retlw	200
   280     0B6C  3400               	retlw	0
   281                           
   282                           ;initializer for _maxvoltageerrortime
   283     0B6D  340A               	retlw	10
   284     0B6E  3400               	retlw	0
   285     0010                     _T1CONbits      set	16
   286     0010                     _T1CON          set	16
   287     000E                     _TMR1L          set	14
   288     000F                     _TMR1H          set	15
   289     000C                     _PIR1bits       set	12
   290     000B                     _INTCONbits     set	11
   291     0001                     _TMR0           set	1
   292     001E                     _ADRESH         set	30
   293     001F                     _ADCON0bits     set	31
   294     0006                     _PORTBbits      set	6
   295     0007                     _PORTC          set	7
   296     0006                     _PORTB          set	6
   297     0005                     _PORTA          set	5
   298     001F                     _ADCON0         set	31
   299     0007                     _PORTCbits      set	7
   300     0005                     _PORTAbits      set	5
   301     008C                     _PIE1bits       set	140
   302     0081                     _OPTION_REGbits set	129
   303     009E                     _ADRESL         set	158
   304     009F                     _ADCON1         set	159
   305     0087                     _TRISC          set	135
   306     0086                     _TRISB          set	134
   307     0085                     _TRISA          set	133
   308     008F                     _OSCCONbits     set	143
   309     010C                     _EEDATA         set	268
   310     010D                     _EEADR          set	269
   311     018D                     _EECON2         set	397
   312     018C                     _EECON1bits     set	396
   313     0189                     _ANSELH         set	393
   314     0188                     _ANSEL          set	392
   315                           
   316                           	psect	cinit
   317     000D                     start_initialization:	
   318                           ; #config settings
   319                           
   320     000D                     __initialization:
   321                           
   322                           ; Initialize objects allocated to BANK1
   323     000D  1383               	bcf	3,7	;select IRP bank0
   324     000E  30D8               	movlw	low (__pdataBANK1+22)
   325     000F  00FD               	movwf	btemp+-1
   326     0010  300B               	movlw	high __pidataBANK1
   327     0011  00FE               	movwf	btemp
   328     0012  3059               	movlw	low __pidataBANK1
   329     0013  00FF               	movwf	btemp+1
   330     0014  30C2               	movlw	low __pdataBANK1
   331     0015  0084               	movwf	4
   332     0016  158A  2327  118A   	fcall	init_ram0
   333                           
   334                           ; Initialize objects allocated to BANK0
   335     0019  118A  27FF  118A   	fcall	__pidataBANK0	;fetch initializer
   336     001C  00ED               	movwf	__pdataBANK0& (0+127)
   337                           
   338                           ; Clear objects allocated to BANK1
   339     001D  30A0               	movlw	low __pbssBANK1
   340     001E  0084               	movwf	4
   341     001F  30C2               	movlw	low (__pbssBANK1+34)
   342     0020  118A  27F7  118A   	fcall	clear_ram0
   343                           
   344                           ; Clear objects allocated to BANK0
   345     0023  3020               	movlw	low __pbssBANK0
   346     0024  0084               	movwf	4
   347     0025  3047               	movlw	low (__pbssBANK0+39)
   348     0026  118A  27F7  118A   	fcall	clear_ram0
   349                           
   350                           ; Clear objects allocated to COMMON
   351     0029  01FA               	clrf	__pbssCOMMON& (0+127)
   352     002A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   353     002B                     end_of_initialization:	
   354                           ;End of C runtime variable initialization code
   355                           
   356     002B                     __end_of__initialization:
   357     002B  0183               	clrf	3
   358     002C  118A  282E         	ljmp	_main	;jump to C main() function
   359                           
   360                           	psect	bssCOMMON
   361     007A                     __pbssCOMMON:
   362     007A                     _low_sensor_high_count:
   363     007A                     	ds	1
   364     007B                     _reading_count:
   365     007B                     	ds	1
   366                           
   367                           	psect	bssBANK0
   368     0020                     __pbssBANK0:
   369     0020                     _lastsensorcheck:
   370     0020                     	ds	4
   371     0024                     _lastvoltageerror:
   372     0024                     	ds	4
   373     0028                     _millis:
   374     0028                     	ds	4
   375     002C                     _seconds_counter:
   376     002C                     	ds	4
   377     0030                     _lastflowcheck:
   378     0030                     	ds	2
   379     0032                     _buzzer_active:
   380     0032                     	ds	1
   381     0033                     _preflowactive:
   382     0033                     	ds	1
   383     0034                     _flowactive:
   384     0034                     	ds	1
   385     0035                     _pretankempty:
   386     0035                     	ds	1
   387     0036                     _tankempty:
   388     0036                     	ds	1
   389     0037                     _motorrunning:
   390     0037                     	ds	1
   391     0038                     _timeouterror:
   392     0038                     	ds	1
   393     0039                     _dryrunerror:
   394     0039                     	ds	1
   395     003A                     _voltageerror:
   396     003A                     	ds	1
   397     003B                     _mannualon:
   398     003B                     	ds	1
   399     003C                     _sensors_reading_in_progress:
   400     003C                     	ds	1
   401     003D                     _sensors_reading_complete:
   402     003D                     	ds	1
   403     003E                     _flow_sensor_high_count:
   404     003E                     	ds	1
   405     003F                     _high_sensor_high_count:
   406     003F                     	ds	1
   407     0040                     _voltage:
   408     0040                     	ds	1
   409     0041                     _settingsmode:
   410     0041                     	ds	1
   411     0042                     _smc:
   412     0042                     	ds	1
   413     0043                     _to:
   414     0043                     	ds	1
   415     0044                     _flow_sensor_active:
   416     0044                     	ds	1
   417     0045                     _high_sensor_active:
   418     0045                     	ds	1
   419     0046                     _low_sensor_active:
   420     0046                     	ds	1
   421                           
   422                           	psect	dataBANK0
   423     006D                     __pdataBANK0:
   424     006D                     _maxruntimeindex:
   425     006D                     	ds	1
   426                           
   427                           	psect	bssBANK1
   428     00A0                     __pbssBANK1:
   429     00A0                     _lastdispupdt:
   430     00A0                     	ds	4
   431     00A4                     _lt:
   432     00A4                     	ds	4
   433     00A8                     _buzzer_start_time:
   434     00A8                     	ds	4
   435     00AC                     _motorstarttime:
   436     00AC                     	ds	4
   437     00B0                     _lastdryruncheck:
   438     00B0                     	ds	4
   439     00B4                     _last_millis:
   440     00B4                     	ds	4
   441     00B8                     _buzzer_duration:
   442     00B8                     	ds	2
   443     00BA                     _voltagesum:
   444     00BA                     	ds	2
   445     00BC                     _dryruntime:
   446     00BC                     	ds	2
   447     00BE                     _voltageraw:
   448     00BE                     	ds	2
   449     00C0                     _potraw:
   450     00C0                     	ds	2
   451                           
   452                           	psect	dataBANK1
   453     00C2                     __pdataBANK1:
   454     00C2                     _maxruntime:
   455     00C2                     	ds	10
   456     00CC                     _sensorbuffer:
   457     00CC                     	ds	2
   458     00CE                     _maximumrinningvoltage:
   459     00CE                     	ds	2
   460     00D0                     _minimumrunningvoltage:
   461     00D0                     	ds	2
   462     00D2                     _maxvoltagelimit:
   463     00D2                     	ds	2
   464     00D4                     _minvoltagelimit:
   465     00D4                     	ds	2
   466     00D6                     _maxvoltageerrortime:
   467     00D6                     	ds	2
   468                           
   469                           	psect	inittext
   470     0B23                     init_fetch0:	
   471                           ;	Called with low address in FSR and high address in W
   472                           
   473     0B23  087E               	movf	btemp,w
   474     0B24  008A               	movwf	10
   475     0B25  087F               	movf	btemp+1,w
   476     0B26  0082               	movwf	2
   477     0B27                     init_ram0:	
   478                           ;Called with:
   479                           ;	high address of idata address in btemp 
   480                           ;	low address of idata address in btemp+1 
   481                           ;	low address of data in FSR
   482                           ;	high address + 1 of data in btemp-1
   483                           
   484     0B27  158A  2323  158A   	fcall	init_fetch0
   485     0B2A  0080               	movwf	0
   486     0B2B  0A84               	incf	4,f
   487     0B2C  0804               	movf	4,w
   488     0B2D  067D               	xorwf	btemp+-1,w
   489     0B2E  1903               	btfsc	3,2
   490     0B2F  3400               	retlw	0
   491     0B30  0AFF               	incf	btemp+1,f
   492     0B31  1903               	btfsc	3,2
   493     0B32  0AFE               	incf	btemp,f
   494     0B33  2B27               	goto	init_ram0
   495                           
   496                           	psect	clrtext
   497     07F7                     clear_ram0:	
   498                           ;	Called with FSR containing the base address, and
   499                           ;	W with the last address+1
   500                           
   501     07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   502     07F8                     clrloop0:
   503     07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   504     07F9  0A84               	incf	4,f	;increment pointer
   505     07FA  0604               	xorwf	4,w	;XOR with final address
   506     07FB  1903               	btfsc	3,2	;have we reached the end yet?
   507     07FC  3400               	retlw	0	;all done for this memory range, return
   508     07FD  0604               	xorwf	4,w	;XOR again to restore value
   509     07FE  2FF8               	goto	clrloop0	;do the next byte
   510                           
   511                           	psect	cstackBANK1
   512     00D8                     __pcstackBANK1:
   513     00D8                     main@is_long_press:
   514                           
   515                           ; 1 bytes @ 0x0
   516     00D8                     	ds	1
   517     00D9                     main@is_long_press_463:
   518                           
   519                           ; 1 bytes @ 0x1
   520     00D9                     	ds	1
   521     00DA                     main@i:
   522                           
   523                           ; 1 bytes @ 0x2
   524     00DA                     	ds	1
   525                           
   526                           	psect	cstackCOMMON
   527     0070                     __pcstackCOMMON:
   528     0070                     ?_initSystem:
   529     0070                     ?_EEPROM_Read:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ?_buzzer_update:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_init_timer:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?_initLCD:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_getsensorreadings:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     ?_check_button_press:	
   545                           ; 1 bytes @ 0x0
   546                           
   547     0070                     ?_dispinfo:	
   548                           ; 1 bytes @ 0x0
   549                           
   550     0070                     ?_lcd_cmd:	
   551                           ; 1 bytes @ 0x0
   552                           
   553     0070                     ?_main:	
   554                           ; 1 bytes @ 0x0
   555                           
   556     0070                     ?_setupTimer0:	
   557                           ; 1 bytes @ 0x0
   558                           
   559     0070                     ?_startSensorReading:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_isr:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_lcd_data:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_lcd_display_bool_binary:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ??_isr:	
   572                           ; 1 bytes @ 0x0
   573                           
   574                           
   575                           ; 1 bytes @ 0x0
   576     0070                     	ds	2
   577     0072                     ?_trigger_buzzer:
   578     0072                     ?_EEPROM_Write:	
   579                           ; 1 bytes @ 0x2
   580                           
   581     0072                     ?_getSensorResults:	
   582                           ; 1 bytes @ 0x2
   583                           
   584     0072                     ?_readADC:	
   585                           ; 1 bytes @ 0x2
   586                           
   587     0072                     ?___awdiv:	
   588                           ; 2 bytes @ 0x2
   589                           
   590     0072                     ?___lmul:	
   591                           ; 2 bytes @ 0x2
   592                           
   593     0072                     getSensorResults@low_active:	
   594                           ; 4 bytes @ 0x2
   595                           
   596     0072                     EEPROM_Write@data:	
   597                           ; 1 bytes @ 0x2
   598                           
   599     0072                     EEPROM_Read@address:	
   600                           ; 1 bytes @ 0x2
   601                           
   602     0072                     trigger_buzzer@duration_seconds:	
   603                           ; 1 bytes @ 0x2
   604                           
   605     0072                     ___awdiv@divisor:	
   606                           ; 2 bytes @ 0x2
   607                           
   608     0072                     ___lmul@multiplier:	
   609                           ; 2 bytes @ 0x2
   610                           
   611     0072                     ??_initSystem:	
   612                           ; 4 bytes @ 0x2
   613                           
   614     0072                     ??_EEPROM_Read:	
   615                           ; 1 bytes @ 0x2
   616                           
   617     0072                     ??_buzzer_update:	
   618                           ; 1 bytes @ 0x2
   619                           
   620     0072                     ??_init_timer:	
   621                           ; 1 bytes @ 0x2
   622                           
   623     0072                     ??_check_button_press:	
   624                           ; 1 bytes @ 0x2
   625                           
   626     0072                     ??_lcd_cmd:	
   627                           ; 1 bytes @ 0x2
   628                           
   629     0072                     ??_setupTimer0:	
   630                           ; 1 bytes @ 0x2
   631                           
   632     0072                     ??_startSensorReading:	
   633                           ; 1 bytes @ 0x2
   634                           
   635     0072                     ??_lcd_data:	
   636                           ; 1 bytes @ 0x2
   637                           
   638                           
   639                           ; 1 bytes @ 0x2
   640     0072                     	ds	1
   641     0073                     getSensorResults@high_active:
   642     0073                     EEPROM_Write@address:	
   643                           ; 1 bytes @ 0x3
   644                           
   645     0073                     lcd_cmd@cmd:	
   646                           ; 1 bytes @ 0x3
   647                           
   648     0073                     lcd_data@data:	
   649                           ; 1 bytes @ 0x3
   650                           
   651     0073                     ??_EEPROM_Write:	
   652                           ; 1 bytes @ 0x3
   653                           
   654                           
   655                           ; 1 bytes @ 0x3
   656     0073                     	ds	1
   657     0074                     ?_lcd_set_cursor:
   658     0074                     getSensorResults@flow_active:	
   659                           ; 1 bytes @ 0x4
   660                           
   661     0074                     lcd_set_cursor@col:	
   662                           ; 1 bytes @ 0x4
   663                           
   664     0074                     lcd_display_bool_binary@value:	
   665                           ; 1 bytes @ 0x4
   666                           
   667     0074                     check_button_press@long_press_threshold:	
   668                           ; 1 bytes @ 0x4
   669                           
   670     0074                     ___awdiv@dividend:	
   671                           ; 2 bytes @ 0x4
   672                           
   673     0074                     ??_readADC:	
   674                           ; 2 bytes @ 0x4
   675                           
   676     0074                     ??_trigger_buzzer:	
   677                           ; 1 bytes @ 0x4
   678                           
   679     0074                     ??_initLCD:	
   680                           ; 1 bytes @ 0x4
   681                           
   682     0074                     ??_lcd_display_bool_binary:	
   683                           ; 1 bytes @ 0x4
   684                           
   685                           
   686                           ; 1 bytes @ 0x4
   687     0074                     	ds	1
   688     0075                     readADC@channel:
   689     0075                     lcd_set_cursor@row:	
   690                           ; 1 bytes @ 0x5
   691                           
   692     0075                     ??_getSensorResults:	
   693                           ; 1 bytes @ 0x5
   694                           
   695     0075                     ??_lcd_set_cursor:	
   696                           ; 1 bytes @ 0x5
   697                           
   698                           
   699                           ; 1 bytes @ 0x5
   700     0075                     	ds	1
   701     0076                     lcd_set_cursor@address:
   702     0076                     ___awdiv@counter:	
   703                           ; 1 bytes @ 0x6
   704                           
   705     0076                     check_button_press@hold_count:	
   706                           ; 1 bytes @ 0x6
   707                           
   708     0076                     ___lmul@multiplicand:	
   709                           ; 2 bytes @ 0x6
   710                           
   711     0076                     ??___awdiv:	
   712                           ; 4 bytes @ 0x6
   713                           
   714                           
   715                           ; 1 bytes @ 0x6
   716     0076                     	ds	1
   717     0077                     ___awdiv@sign:
   718                           
   719                           ; 1 bytes @ 0x7
   720     0077                     	ds	1
   721     0078                     check_button_press@long_press:
   722     0078                     ___awdiv@quotient:	
   723                           ; 1 bytes @ 0x8
   724                           
   725                           
   726                           ; 2 bytes @ 0x8
   727     0078                     	ds	2
   728     007A                     ??_lcd_display_int:
   729     007A                     ??___awmod:	
   730                           ; 1 bytes @ 0xA
   731                           
   732                           
   733                           	psect	cstackBANK0
   734     0047                     __pcstackBANK0:	
   735                           ; 1 bytes @ 0xA
   736                           
   737     0047                     ?___awmod:
   738     0047                     ___awmod@divisor:	
   739                           ; 2 bytes @ 0x0
   740                           
   741     0047                     ??___lmul:	
   742                           ; 2 bytes @ 0x0
   743                           
   744                           
   745                           ; 1 bytes @ 0x0
   746     0047                     	ds	1
   747     0048                     ___lmul@product:
   748                           
   749                           ; 4 bytes @ 0x1
   750     0048                     	ds	1
   751     0049                     ___awmod@dividend:
   752                           
   753                           ; 2 bytes @ 0x2
   754     0049                     	ds	2
   755     004B                     ___awmod@counter:
   756                           
   757                           ; 1 bytes @ 0x4
   758     004B                     	ds	1
   759     004C                     ?___lldiv:
   760     004C                     ___awmod@sign:	
   761                           ; 4 bytes @ 0x5
   762                           
   763     004C                     ___lldiv@divisor:	
   764                           ; 1 bytes @ 0x5
   765                           
   766                           
   767                           ; 4 bytes @ 0x5
   768     004C                     	ds	4
   769     0050                     ___lldiv@dividend:
   770                           
   771                           ; 4 bytes @ 0x9
   772     0050                     	ds	4
   773     0054                     ??___lldiv:
   774                           
   775                           ; 1 bytes @ 0xD
   776     0054                     	ds	1
   777     0055                     ___lldiv@quotient:
   778                           
   779                           ; 4 bytes @ 0xE
   780     0055                     	ds	4
   781     0059                     ___lldiv@counter:
   782                           
   783                           ; 1 bytes @ 0x12
   784     0059                     	ds	1
   785     005A                     ?_lcd_display_int:
   786     005A                     lcd_display_int@num:	
   787                           ; 1 bytes @ 0x13
   788                           
   789     005A                     ??_getsensorreadings:	
   790                           ; 2 bytes @ 0x13
   791                           
   792                           
   793                           ; 1 bytes @ 0x13
   794     005A                     	ds	2
   795     005C                     ??_dispinfo:
   796                           
   797                           ; 1 bytes @ 0x15
   798     005C                     	ds	6
   799     0062                     getsensorreadings@i:
   800                           
   801                           ; 1 bytes @ 0x1B
   802     0062                     	ds	2
   803     0064                     dispinfo@refreshtime:
   804                           
   805                           ; 1 bytes @ 0x1D
   806     0064                     	ds	1
   807     0065                     ??_main:
   808                           
   809                           ; 1 bytes @ 0x1E
   810     0065                     	ds	8
   811                           
   812                           	psect	maintext
   813     002E                     __pmaintext:	
   814 ;;
   815 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   816 ;;
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 138 in file "main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  is_long_pres    1    1[BANK1 ] _Bool 
   824 ;;  is_long_pres    1    0[BANK1 ] _Bool 
   825 ;;  i               1    2[BANK1 ] unsigned char 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   830 ;; Tracked objects:
   831 ;;		On entry : B00/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   835 ;;      Params:         0       0       0       0
   836 ;;      Locals:         0       0       3       0
   837 ;;      Temps:          0       8       0       0
   838 ;;      Totals:         0       8       3       0
   839 ;;Total ram usage:       11 bytes
   840 ;; Hardware stack levels required when called: 4
   841 ;; This function calls:
   842 ;;		_EEPROM_Read
   843 ;;		_EEPROM_Write
   844 ;;		___lldiv
   845 ;;		___lmul
   846 ;;		_buzzer_update
   847 ;;		_check_button_press
   848 ;;		_dispinfo
   849 ;;		_getsensorreadings
   850 ;;		_initLCD
   851 ;;		_initSystem
   852 ;;		_init_timer
   853 ;;		_readADC
   854 ;;		_trigger_buzzer
   855 ;; This function is called by:
   856 ;;		Startup code after reset
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860     002E                     _main:	
   861                           ;psect for function _main
   862                           
   863     002E                     l2991:	
   864                           ;incstack = 0
   865                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   866                           
   867                           
   868                           ;main.c: 141:   initSystem();
   869     002E  158A  2404  118A   	fcall	_initSystem
   870     0031                     l2993:
   871                           
   872                           ;main.c: 145:   minvoltagelimit = 200;
   873     0031  30C8               	movlw	200
   874     0032  1683               	bsf	3,5	;RP0=1, select bank1
   875     0033  1303               	bcf	3,6	;RP1=0, select bank1
   876     0034  00D4               	movwf	_minvoltagelimit^(0+128)
   877     0035  3000               	movlw	0
   878     0036  00D5               	movwf	(_minvoltagelimit^(0+128)+1)
   879     0037                     l2995:
   880                           
   881                           ;main.c: 146:   maxvoltagelimit = 240;
   882     0037  30F0               	movlw	240
   883     0038  00D2               	movwf	_maxvoltagelimit^(0+128)
   884     0039  3000               	movlw	0
   885     003A  00D3               	movwf	(_maxvoltagelimit^(0+128)+1)
   886     003B                     l2997:
   887                           
   888                           ;main.c: 147:   minimumrunningvoltage = 190;
   889     003B  30BE               	movlw	190
   890     003C  00D0               	movwf	_minimumrunningvoltage^(0+128)
   891     003D  3000               	movlw	0
   892     003E  00D1               	movwf	(_minimumrunningvoltage^(0+128)+1)
   893     003F                     l2999:
   894                           
   895                           ;main.c: 148:   maximumrinningvoltage = 250;
   896     003F  30FA               	movlw	250
   897     0040  00CE               	movwf	_maximumrinningvoltage^(0+128)
   898     0041  3000               	movlw	0
   899     0042  00CF               	movwf	(_maximumrinningvoltage^(0+128)+1)
   900     0043                     l3001:
   901                           
   902                           ;main.c: 149:   maxruntimeindex = EEPROM_Read(0x01);
   903     0043  3001               	movlw	1
   904     0044  158A  2346  118A   	fcall	_EEPROM_Read
   905     0047  1283               	bcf	3,5	;RP0=0, select bank0
   906     0048  1303               	bcf	3,6	;RP1=0, select bank0
   907     0049  00ED               	movwf	_maxruntimeindex
   908     004A                     l3003:
   909                           
   910                           ;main.c: 155:   potraw = readADC(4);
   911     004A  3004               	movlw	4
   912     004B  158A  238D  118A   	fcall	_readADC
   913     004E  0873               	movf	?_readADC+1,w
   914     004F  1683               	bsf	3,5	;RP0=1, select bank1
   915     0050  1303               	bcf	3,6	;RP1=0, select bank1
   916     0051  00C1               	movwf	(_potraw+1)^(0+128)
   917     0052  0872               	movf	?_readADC,w
   918     0053  00C0               	movwf	_potraw^(0+128)
   919     0054                     l3005:
   920                           
   921                           ;main.c: 157:   dryruntime = (((uint32_t)potraw * 360) / 1023) + 120;
   922     0054  3000               	movlw	0
   923     0055  1283               	bcf	3,5	;RP0=0, select bank0
   924     0056  1303               	bcf	3,6	;RP1=0, select bank0
   925     0057  00CF               	movwf	___lldiv@divisor+3
   926     0058  3000               	movlw	0
   927     0059  00CE               	movwf	___lldiv@divisor+2
   928     005A  3003               	movlw	3
   929     005B  00CD               	movwf	___lldiv@divisor+1
   930     005C  30FF               	movlw	255
   931     005D  00CC               	movwf	___lldiv@divisor
   932     005E  1683               	bsf	3,5	;RP0=1, select bank1
   933     005F  1303               	bcf	3,6	;RP1=0, select bank1
   934     0060  0840               	movf	_potraw^(0+128),w
   935     0061  00F2               	movwf	___lmul@multiplier
   936     0062  0841               	movf	(_potraw+1)^(0+128),w
   937     0063  00F3               	movwf	___lmul@multiplier+1
   938     0064  01F4               	clrf	___lmul@multiplier+2
   939     0065  01F5               	clrf	___lmul@multiplier+3
   940     0066  3000               	movlw	0
   941     0067  00F9               	movwf	___lmul@multiplicand+3
   942     0068  3000               	movlw	0
   943     0069  00F8               	movwf	___lmul@multiplicand+2
   944     006A  3001               	movlw	1
   945     006B  00F7               	movwf	___lmul@multiplicand+1
   946     006C  3068               	movlw	104
   947     006D  00F6               	movwf	___lmul@multiplicand
   948     006E  158A  2433  118A   	fcall	___lmul
   949     0071  0875               	movf	?___lmul+3,w
   950     0072  1283               	bcf	3,5	;RP0=0, select bank0
   951     0073  1303               	bcf	3,6	;RP1=0, select bank0
   952     0074  00D3               	movwf	___lldiv@dividend+3
   953     0075  0874               	movf	?___lmul+2,w
   954     0076  00D2               	movwf	___lldiv@dividend+2
   955     0077  0873               	movf	?___lmul+1,w
   956     0078  00D1               	movwf	___lldiv@dividend+1
   957     0079  0872               	movf	?___lmul,w
   958     007A  00D0               	movwf	___lldiv@dividend
   959     007B  158A  2581  118A   	fcall	___lldiv
   960     007E  1283               	bcf	3,5	;RP0=0, select bank0
   961     007F  1303               	bcf	3,6	;RP1=0, select bank0
   962     0080  084C               	movf	?___lldiv,w
   963     0081  3E78               	addlw	120
   964     0082  1683               	bsf	3,5	;RP0=1, select bank1
   965     0083  1303               	bcf	3,6	;RP1=0, select bank1
   966     0084  00BC               	movwf	_dryruntime^(0+128)
   967     0085  1283               	bcf	3,5	;RP0=0, select bank0
   968     0086  1303               	bcf	3,6	;RP1=0, select bank0
   969     0087  084D               	movf	?___lldiv+1,w
   970     0088  1803               	skipnc
   971     0089  3E01               	addlw	1
   972     008A  3E00               	addlw	0
   973     008B  1683               	bsf	3,5	;RP0=1, select bank1
   974     008C  1303               	bcf	3,6	;RP1=0, select bank1
   975     008D  00BD               	movwf	(_dryruntime+1)^(0+128)
   976     008E                     l3007:
   977                           
   978                           ;main.c: 159:   for (uint8_t i = 0; i < 10; i++) {
   979     008E  01DA               	clrf	main@i^(0+128)
   980     008F                     l185:
   981                           
   982                           ;main.c: 160:     PORTAbits.RA0 = 1;
   983     008F  1283               	bcf	3,5	;RP0=0, select bank0
   984     0090  1303               	bcf	3,6	;RP1=0, select bank0
   985     0091  1405               	bsf	5,0	;volatile
   986                           
   987                           ;main.c: 161:     PORTAbits.RA1 = 1;
   988     0092  1485               	bsf	5,1	;volatile
   989                           
   990                           ;main.c: 162:     PORTAbits.RA2 = 1;
   991     0093  1505               	bsf	5,2	;volatile
   992                           
   993                           ;main.c: 163:     PORTAbits.RA4 = 1;
   994     0094  1605               	bsf	5,4	;volatile
   995     0095                     l3013:
   996                           
   997                           ;main.c: 164:     if (i == 0) {
   998     0095  1683               	bsf	3,5	;RP0=1, select bank1
   999     0096  1303               	bcf	3,6	;RP1=0, select bank1
  1000     0097  085A               	movf	main@i^(0+128),w
  1001     0098  1D03               	btfss	3,2
  1002     0099  289B               	goto	u4541
  1003     009A  289C               	goto	u4540
  1004     009B                     u4541:
  1005     009B  28A5               	goto	l3019
  1006     009C                     u4540:
  1007     009C                     l3015:
  1008                           
  1009                           ;main.c: 165:       if (PORTCbits.RC1 == 0) {
  1010     009C  1283               	bcf	3,5	;RP0=0, select bank0
  1011     009D  1303               	bcf	3,6	;RP1=0, select bank0
  1012     009E  1887               	btfsc	7,1	;volatile
  1013     009F  28A1               	goto	u4551
  1014     00A0  28A2               	goto	u4550
  1015     00A1                     u4551:
  1016     00A1  28BC               	goto	l3027
  1017     00A2                     u4550:
  1018     00A2                     l3017:
  1019                           
  1020                           ;main.c: 166:         smc = 1;
  1021     00A2  3001               	movlw	1
  1022     00A3  00C2               	movwf	_smc
  1023     00A4  28BC               	goto	l3027
  1024     00A5                     l3019:
  1025     00A5  3003               	movlw	3
  1026     00A6  065A               	xorwf	main@i^(0+128),w
  1027     00A7  1D03               	btfss	3,2
  1028     00A8  28AA               	goto	u4561
  1029     00A9  28AB               	goto	u4560
  1030     00AA                     u4561:
  1031     00AA  28BC               	goto	l3027
  1032     00AB                     u4560:
  1033     00AB                     l3021:
  1034                           
  1035                           ;main.c: 169:       if (smc == 1) {
  1036     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1037     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1038     00AD  0342               	decf	_smc,w
  1039     00AE  1D03               	btfss	3,2
  1040     00AF  28B1               	goto	u4571
  1041     00B0  28B2               	goto	u4570
  1042     00B1                     u4571:
  1043     00B1  28BC               	goto	l3027
  1044     00B2                     u4570:
  1045     00B2                     l3023:
  1046                           
  1047                           ;main.c: 170:         if (PORTCbits.RC1 == 0) {
  1048     00B2  1887               	btfsc	7,1	;volatile
  1049     00B3  28B5               	goto	u4581
  1050     00B4  28B6               	goto	u4580
  1051     00B5                     u4581:
  1052     00B5  28BC               	goto	l3027
  1053     00B6                     u4580:
  1054     00B6                     l3025:
  1055                           
  1056                           ;main.c: 171:           settingsmode = 1;
  1057     00B6  3001               	movlw	1
  1058     00B7  00C1               	movwf	_settingsmode
  1059                           
  1060                           ;main.c: 172:           i = 10;
  1061     00B8  300A               	movlw	10
  1062     00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1063     00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1064     00BB  00DA               	movwf	main@i^(0+128)
  1065     00BC                     l3027:
  1066                           
  1067                           ;main.c: 176:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1068     00BC  300B               	movlw	11
  1069     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1070     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1071     00BF  00E7               	movwf	??_main+2
  1072     00C0  3026               	movlw	38
  1073     00C1  00E6               	movwf	??_main+1
  1074     00C2  305D               	movlw	93
  1075     00C3  00E5               	movwf	??_main
  1076     00C4                     u5017:
  1077     00C4  0BE5               	decfsz	??_main,f
  1078     00C5  28C4               	goto	u5017
  1079     00C6  0BE6               	decfsz	??_main+1,f
  1080     00C7  28C4               	goto	u5017
  1081     00C8  0BE7               	decfsz	??_main+2,f
  1082     00C9  28C4               	goto	u5017
  1083     00CA  0000               	nop
  1084     00CB                     l3029:
  1085                           
  1086                           ;main.c: 177:     PORTAbits.RA0 = 0;
  1087     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1088     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1089     00CD  1005               	bcf	5,0	;volatile
  1090     00CE                     l3031:
  1091                           
  1092                           ;main.c: 178:     PORTAbits.RA1 = 0;
  1093     00CE  1085               	bcf	5,1	;volatile
  1094     00CF                     l3033:
  1095                           
  1096                           ;main.c: 179:     PORTAbits.RA2 = 0;
  1097     00CF  1105               	bcf	5,2	;volatile
  1098     00D0                     l3035:
  1099                           
  1100                           ;main.c: 180:     PORTAbits.RA4 = 0;
  1101     00D0  1205               	bcf	5,4	;volatile
  1102                           
  1103                           ;main.c: 181:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1104     00D1  300B               	movlw	11
  1105     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1106     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1107     00D4  00E7               	movwf	??_main+2
  1108     00D5  3026               	movlw	38
  1109     00D6  00E6               	movwf	??_main+1
  1110     00D7  305D               	movlw	93
  1111     00D8  00E5               	movwf	??_main
  1112     00D9                     u5027:
  1113     00D9  0BE5               	decfsz	??_main,f
  1114     00DA  28D9               	goto	u5027
  1115     00DB  0BE6               	decfsz	??_main+1,f
  1116     00DC  28D9               	goto	u5027
  1117     00DD  0BE7               	decfsz	??_main+2,f
  1118     00DE  28D9               	goto	u5027
  1119     00DF  0000               	nop
  1120     00E0                     l3037:
  1121                           
  1122                           ;main.c: 182:   }
  1123     00E0  3001               	movlw	1
  1124     00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1125     00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1126     00E3  07DA               	addwf	main@i^(0+128),f
  1127     00E4                     l3039:
  1128     00E4  300A               	movlw	10
  1129     00E5  025A               	subwf	main@i^(0+128),w
  1130     00E6  1C03               	skipc
  1131     00E7  28E9               	goto	u4591
  1132     00E8  28EA               	goto	u4590
  1133     00E9                     u4591:
  1134     00E9  288F               	goto	l185
  1135     00EA                     u4590:
  1136     00EA                     l3041:
  1137                           
  1138                           ;main.c: 184:   trigger_buzzer(3000);
  1139     00EA  30B8               	movlw	184
  1140     00EB  00F2               	movwf	trigger_buzzer@duration_seconds
  1141     00EC  300B               	movlw	11
  1142     00ED  00F3               	movwf	trigger_buzzer@duration_seconds+1
  1143     00EE  158A  23AF  118A   	fcall	_trigger_buzzer
  1144                           
  1145                           ;main.c: 185:   buzzer_update();
  1146     00F1  118A  27AD  118A   	fcall	_buzzer_update
  1147     00F4                     l3043:
  1148                           
  1149                           ;main.c: 187:   init_timer();
  1150     00F4  158A  2312  118A   	fcall	_init_timer
  1151     00F7                     l3045:
  1152                           
  1153                           ;main.c: 188:   initLCD();
  1154     00F7  158A  2791  118A   	fcall	_initLCD
  1155                           
  1156                           ;main.c: 190:   while (settingsmode) {
  1157     00FA  299F               	goto	l3077
  1158     00FB                     l3047:
  1159                           
  1160                           ;main.c: 191:     buzzer_update();
  1161     00FB  118A  27AD  118A   	fcall	_buzzer_update
  1162     00FE                     l3049:
  1163                           
  1164                           ;main.c: 193:     getsensorreadings();
  1165     00FE  118A  2488  118A   	fcall	_getsensorreadings
  1166     0101                     l3051:
  1167                           
  1168                           ;main.c: 194:     potraw = readADC(4);
  1169     0101  3004               	movlw	4
  1170     0102  158A  238D  118A   	fcall	_readADC
  1171     0105  0873               	movf	?_readADC+1,w
  1172     0106  1683               	bsf	3,5	;RP0=1, select bank1
  1173     0107  1303               	bcf	3,6	;RP1=0, select bank1
  1174     0108  00C1               	movwf	(_potraw+1)^(0+128)
  1175     0109  0872               	movf	?_readADC,w
  1176     010A  00C0               	movwf	_potraw^(0+128)
  1177     010B                     l3053:
  1178                           
  1179                           ;main.c: 195:     dryruntime = (((uint32_t)potraw * 360) / 1023) + 120;
  1180     010B  3000               	movlw	0
  1181     010C  1283               	bcf	3,5	;RP0=0, select bank0
  1182     010D  1303               	bcf	3,6	;RP1=0, select bank0
  1183     010E  00CF               	movwf	___lldiv@divisor+3
  1184     010F  3000               	movlw	0
  1185     0110  00CE               	movwf	___lldiv@divisor+2
  1186     0111  3003               	movlw	3
  1187     0112  00CD               	movwf	___lldiv@divisor+1
  1188     0113  30FF               	movlw	255
  1189     0114  00CC               	movwf	___lldiv@divisor
  1190     0115  1683               	bsf	3,5	;RP0=1, select bank1
  1191     0116  1303               	bcf	3,6	;RP1=0, select bank1
  1192     0117  0840               	movf	_potraw^(0+128),w
  1193     0118  00F2               	movwf	___lmul@multiplier
  1194     0119  0841               	movf	(_potraw+1)^(0+128),w
  1195     011A  00F3               	movwf	___lmul@multiplier+1
  1196     011B  01F4               	clrf	___lmul@multiplier+2
  1197     011C  01F5               	clrf	___lmul@multiplier+3
  1198     011D  3000               	movlw	0
  1199     011E  00F9               	movwf	___lmul@multiplicand+3
  1200     011F  3000               	movlw	0
  1201     0120  00F8               	movwf	___lmul@multiplicand+2
  1202     0121  3001               	movlw	1
  1203     0122  00F7               	movwf	___lmul@multiplicand+1
  1204     0123  3068               	movlw	104
  1205     0124  00F6               	movwf	___lmul@multiplicand
  1206     0125  158A  2433  118A   	fcall	___lmul
  1207     0128  0875               	movf	?___lmul+3,w
  1208     0129  1283               	bcf	3,5	;RP0=0, select bank0
  1209     012A  1303               	bcf	3,6	;RP1=0, select bank0
  1210     012B  00D3               	movwf	___lldiv@dividend+3
  1211     012C  0874               	movf	?___lmul+2,w
  1212     012D  00D2               	movwf	___lldiv@dividend+2
  1213     012E  0873               	movf	?___lmul+1,w
  1214     012F  00D1               	movwf	___lldiv@dividend+1
  1215     0130  0872               	movf	?___lmul,w
  1216     0131  00D0               	movwf	___lldiv@dividend
  1217     0132  158A  2581  118A   	fcall	___lldiv
  1218     0135  1283               	bcf	3,5	;RP0=0, select bank0
  1219     0136  1303               	bcf	3,6	;RP1=0, select bank0
  1220     0137  084C               	movf	?___lldiv,w
  1221     0138  3E78               	addlw	120
  1222     0139  1683               	bsf	3,5	;RP0=1, select bank1
  1223     013A  1303               	bcf	3,6	;RP1=0, select bank1
  1224     013B  00BC               	movwf	_dryruntime^(0+128)
  1225     013C  1283               	bcf	3,5	;RP0=0, select bank0
  1226     013D  1303               	bcf	3,6	;RP1=0, select bank0
  1227     013E  084D               	movf	?___lldiv+1,w
  1228     013F  1803               	skipnc
  1229     0140  3E01               	addlw	1
  1230     0141  3E00               	addlw	0
  1231     0142  1683               	bsf	3,5	;RP0=1, select bank1
  1232     0143  1303               	bcf	3,6	;RP1=0, select bank1
  1233     0144  00BD               	movwf	(_dryruntime+1)^(0+128)
  1234     0145                     l3055:
  1235                           
  1236                           ;main.c: 197:     if (PORTCbits.RC1 == 0) {
  1237     0145  1283               	bcf	3,5	;RP0=0, select bank0
  1238     0146  1303               	bcf	3,6	;RP1=0, select bank0
  1239     0147  1887               	btfsc	7,1	;volatile
  1240     0148  294A               	goto	u4601
  1241     0149  294B               	goto	u4600
  1242     014A                     u4601:
  1243     014A  2988               	goto	l3073
  1244     014B                     u4600:
  1245     014B                     l3057:
  1246                           
  1247                           ;main.c: 198:       _Bool is_long_press = check_button_press();
  1248     014B  158A  26B9  118A   	fcall	_check_button_press
  1249     014E  1683               	bsf	3,5	;RP0=1, select bank1
  1250     014F  1303               	bcf	3,6	;RP1=0, select bank1
  1251     0150  00D8               	movwf	main@is_long_press^(0+128)
  1252     0151                     l3059:
  1253                           
  1254                           ;main.c: 200:       if (is_long_press) {
  1255     0151  0858               	movf	main@is_long_press^(0+128),w
  1256     0152  1903               	btfsc	3,2
  1257     0153  2955               	goto	u4611
  1258     0154  2956               	goto	u4610
  1259     0155                     u4611:
  1260     0155  295D               	goto	l3063
  1261     0156                     u4610:
  1262     0156                     l3061:
  1263                           
  1264                           ;main.c: 201:         tankempty = 1;
  1265     0156  3001               	movlw	1
  1266     0157  1283               	bcf	3,5	;RP0=0, select bank0
  1267     0158  1303               	bcf	3,6	;RP1=0, select bank0
  1268     0159  00B6               	movwf	_tankempty
  1269                           
  1270                           ;main.c: 202:         pretankempty = 1;
  1271     015A  3001               	movlw	1
  1272     015B  00B5               	movwf	_pretankempty
  1273                           
  1274                           ;main.c: 204:       } else {
  1275     015C  2988               	goto	l3073
  1276     015D                     l3063:
  1277                           
  1278                           ;main.c: 205:         maxruntimeindex++;
  1279     015D  3001               	movlw	1
  1280     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1281     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1282     0160  07ED               	addwf	_maxruntimeindex,f
  1283     0161                     l3065:
  1284                           
  1285                           ;main.c: 206:         if (maxruntimeindex >= 5) {
  1286     0161  3005               	movlw	5
  1287     0162  026D               	subwf	_maxruntimeindex,w
  1288     0163  1C03               	skipc
  1289     0164  2966               	goto	u4621
  1290     0165  2967               	goto	u4620
  1291     0166                     u4621:
  1292     0166  2968               	goto	l3069
  1293     0167                     u4620:
  1294     0167                     l3067:
  1295                           
  1296                           ;main.c: 207:           maxruntimeindex = 0;
  1297     0167  01ED               	clrf	_maxruntimeindex
  1298     0168                     l3069:
  1299                           
  1300                           ;main.c: 209:         EEPROM_Write(0x01, maxruntimeindex);
  1301     0168  086D               	movf	_maxruntimeindex,w
  1302     0169  00F2               	movwf	EEPROM_Write@data
  1303     016A  3001               	movlw	1
  1304     016B  158A  236F  118A   	fcall	_EEPROM_Write
  1305     016E  2988               	goto	l3073
  1306     016F                     l200:	
  1307                           ;main.c: 213:     case 0:
  1308                           
  1309                           
  1310                           ;main.c: 214:       PORTAbits.RA0 = 0;
  1311     016F  1005               	bcf	5,0	;volatile
  1312                           
  1313                           ;main.c: 215:       PORTAbits.RA1 = 0;
  1314     0170  1085               	bcf	5,1	;volatile
  1315                           
  1316                           ;main.c: 216:       PORTAbits.RA2 = 0;
  1317     0171  1105               	bcf	5,2	;volatile
  1318                           
  1319                           ;main.c: 217:       PORTAbits.RA4 = 1;
  1320     0172  1605               	bsf	5,4	;volatile
  1321                           
  1322                           ;main.c: 218:       break;
  1323     0173  299B               	goto	l3075
  1324     0174                     l202:	
  1325                           ;main.c: 219:     case 1:
  1326                           
  1327                           
  1328                           ;main.c: 220:       PORTAbits.RA0 = 0;
  1329     0174  1005               	bcf	5,0	;volatile
  1330                           
  1331                           ;main.c: 221:       PORTAbits.RA1 = 0;
  1332     0175  1085               	bcf	5,1	;volatile
  1333                           
  1334                           ;main.c: 222:       PORTAbits.RA2 = 1;
  1335     0176  1505               	bsf	5,2	;volatile
  1336                           
  1337                           ;main.c: 223:       PORTAbits.RA4 = 0;
  1338     0177  1205               	bcf	5,4	;volatile
  1339                           
  1340                           ;main.c: 224:       break;
  1341     0178  299B               	goto	l3075
  1342     0179                     l203:	
  1343                           ;main.c: 225:     case 2:
  1344                           
  1345                           
  1346                           ;main.c: 226:       PORTAbits.RA0 = 0;
  1347     0179  1005               	bcf	5,0	;volatile
  1348                           
  1349                           ;main.c: 227:       PORTAbits.RA1 = 1;
  1350     017A  1485               	bsf	5,1	;volatile
  1351                           
  1352                           ;main.c: 228:       PORTAbits.RA2 = 0;
  1353     017B  1105               	bcf	5,2	;volatile
  1354                           
  1355                           ;main.c: 229:       PORTAbits.RA4 = 0;
  1356     017C  1205               	bcf	5,4	;volatile
  1357                           
  1358                           ;main.c: 230:       break;
  1359     017D  299B               	goto	l3075
  1360     017E                     l204:	
  1361                           ;main.c: 231:     case 3:
  1362                           
  1363                           
  1364                           ;main.c: 232:       PORTAbits.RA0 = 1;
  1365     017E  1405               	bsf	5,0	;volatile
  1366                           
  1367                           ;main.c: 233:       PORTAbits.RA1 = 0;
  1368     017F  1085               	bcf	5,1	;volatile
  1369                           
  1370                           ;main.c: 234:       PORTAbits.RA2 = 0;
  1371     0180  1105               	bcf	5,2	;volatile
  1372                           
  1373                           ;main.c: 235:       PORTAbits.RA4 = 0;
  1374     0181  1205               	bcf	5,4	;volatile
  1375                           
  1376                           ;main.c: 236:       break;
  1377     0182  299B               	goto	l3075
  1378     0183                     l205:	
  1379                           ;main.c: 237:     case 4:
  1380                           
  1381                           
  1382                           ;main.c: 238:       PORTAbits.RA0 = 0;
  1383     0183  1005               	bcf	5,0	;volatile
  1384                           
  1385                           ;main.c: 239:       PORTAbits.RA1 = 1;
  1386     0184  1485               	bsf	5,1	;volatile
  1387                           
  1388                           ;main.c: 240:       PORTAbits.RA2 = 1;
  1389     0185  1505               	bsf	5,2	;volatile
  1390                           
  1391                           ;main.c: 241:       PORTAbits.RA4 = 0;
  1392     0186  1205               	bcf	5,4	;volatile
  1393                           
  1394                           ;main.c: 242:       break;
  1395     0187  299B               	goto	l3075
  1396     0188                     l3073:
  1397     0188  1283               	bcf	3,5	;RP0=0, select bank0
  1398     0189  1303               	bcf	3,6	;RP1=0, select bank0
  1399     018A  086D               	movf	_maxruntimeindex,w
  1400                           
  1401                           ; Switch size 1, requested type "simple"
  1402                           ; Number of cases is 5, Range of values is 0 to 4
  1403                           ; switch strategies available:
  1404                           ; Name         Instructions Cycles
  1405                           ; simple_byte           16     9 (average)
  1406                           ; direct_byte           17     7 (fixed)
  1407                           ; jumptable            260     6 (fixed)
  1408                           ;	Chosen strategy is simple_byte
  1409     018B  3A00               	xorlw	0	; case 0
  1410     018C  1903               	skipnz
  1411     018D  296F               	goto	l200
  1412     018E  3A01               	xorlw	1	; case 1
  1413     018F  1903               	skipnz
  1414     0190  2974               	goto	l202
  1415     0191  3A03               	xorlw	3	; case 2
  1416     0192  1903               	skipnz
  1417     0193  2979               	goto	l203
  1418     0194  3A01               	xorlw	1	; case 3
  1419     0195  1903               	skipnz
  1420     0196  297E               	goto	l204
  1421     0197  3A07               	xorlw	7	; case 4
  1422     0198  1903               	skipnz
  1423     0199  2983               	goto	l205
  1424     019A  299B               	goto	l3075
  1425     019B                     l3075:
  1426                           
  1427                           ;main.c: 245:     dispinfo(100);
  1428     019B  3064               	movlw	100
  1429     019C  118A  269A  118A   	fcall	_dispinfo
  1430     019F                     l3077:
  1431                           
  1432                           ;main.c: 190:   while (settingsmode) {
  1433     019F  1283               	bcf	3,5	;RP0=0, select bank0
  1434     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1435     01A1  0841               	movf	_settingsmode,w
  1436     01A2  1D03               	btfss	3,2
  1437     01A3  29A5               	goto	u4631
  1438     01A4  29A6               	goto	u4630
  1439     01A5                     u4631:
  1440     01A5  28FB               	goto	l3047
  1441     01A6                     u4630:
  1442     01A6                     l207:	
  1443                           ;main.c: 247:   while (1) {
  1444                           
  1445                           
  1446                           ;main.c: 249:     if (PORTCbits.RC1 == 0) {
  1447     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1448     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1449     01A8  1887               	btfsc	7,1	;volatile
  1450     01A9  29AB               	goto	u4641
  1451     01AA  29AC               	goto	u4640
  1452     01AB                     u4641:
  1453     01AB  29CD               	goto	l3087
  1454     01AC                     u4640:
  1455     01AC                     l3079:
  1456                           
  1457                           ;main.c: 250:       _Bool is_long_press = check_button_press();
  1458     01AC  158A  26B9  118A   	fcall	_check_button_press
  1459     01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1460     01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1461     01B1  00D9               	movwf	main@is_long_press_463^(0+128)
  1462     01B2                     l3081:
  1463                           
  1464                           ;main.c: 252:       if (is_long_press) {
  1465     01B2  0859               	movf	main@is_long_press_463^(0+128),w
  1466     01B3  1903               	btfsc	3,2
  1467     01B4  29B6               	goto	u4651
  1468     01B5  29B7               	goto	u4650
  1469     01B6                     u4651:
  1470     01B6  29BE               	goto	l3085
  1471     01B7                     u4650:
  1472     01B7                     l3083:
  1473                           
  1474                           ;main.c: 253:         tankempty = 1;
  1475     01B7  3001               	movlw	1
  1476     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1477     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1478     01BA  00B6               	movwf	_tankempty
  1479                           
  1480                           ;main.c: 254:         pretankempty = 1;
  1481     01BB  3001               	movlw	1
  1482     01BC  00B5               	movwf	_pretankempty
  1483                           
  1484                           ;main.c: 256:       } else {
  1485     01BD  29CD               	goto	l3087
  1486     01BE                     l3085:
  1487                           
  1488                           ;main.c: 257:         PORTAbits.RA2 = ~PORTAbits.RA2;
  1489     01BE  1003               	clrc
  1490     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1491     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1492     01C1  1D05               	btfss	5,2	;volatile
  1493     01C2  1403               	setc
  1494     01C3  1803               	btfsc	3,0
  1495     01C4  29C6               	goto	u4661
  1496     01C5  29CA               	goto	u4660
  1497     01C6                     u4661:
  1498     01C6  1283               	bcf	3,5	;RP0=0, select bank0
  1499     01C7  1303               	bcf	3,6	;RP1=0, select bank0
  1500     01C8  1505               	bsf	5,2	;volatile
  1501     01C9  29CD               	goto	u4674
  1502     01CA                     u4660:
  1503     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1504     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1505     01CC  1105               	bcf	5,2	;volatile
  1506     01CD                     u4674:
  1507     01CD                     l3087:
  1508                           
  1509                           ;main.c: 261:     buzzer_update();
  1510     01CD  118A  27AD  118A   	fcall	_buzzer_update
  1511     01D0                     l3089:
  1512                           
  1513                           ;main.c: 263:     getsensorreadings();
  1514     01D0  118A  2488  118A   	fcall	_getsensorreadings
  1515     01D3                     l3091:
  1516                           
  1517                           ;main.c: 265:     if (tankempty) {
  1518     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1519     01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1520     01D5  0836               	movf	_tankempty,w
  1521     01D6  1903               	btfsc	3,2
  1522     01D7  29D9               	goto	u4681
  1523     01D8  29DA               	goto	u4680
  1524     01D9                     u4681:
  1525     01D9  2B20               	goto	l3135
  1526     01DA                     u4680:
  1527     01DA                     l3093:
  1528                           
  1529                           ;main.c: 266:       if (!timeouterror && !voltageerror && !dryrunerror && !motorrunning)
      +                           {
  1530     01DA  0838               	movf	_timeouterror,w
  1531     01DB  1D03               	btfss	3,2
  1532     01DC  29DE               	goto	u4691
  1533     01DD  29DF               	goto	u4690
  1534     01DE                     u4691:
  1535     01DE  2A10               	goto	l3109
  1536     01DF                     u4690:
  1537     01DF                     l3095:
  1538     01DF  083A               	movf	_voltageerror,w
  1539     01E0  1D03               	btfss	3,2
  1540     01E1  29E3               	goto	u4701
  1541     01E2  29E4               	goto	u4700
  1542     01E3                     u4701:
  1543     01E3  2A10               	goto	l3109
  1544     01E4                     u4700:
  1545     01E4                     l3097:
  1546     01E4  0839               	movf	_dryrunerror,w
  1547     01E5  1D03               	btfss	3,2
  1548     01E6  29E8               	goto	u4711
  1549     01E7  29E9               	goto	u4710
  1550     01E8                     u4711:
  1551     01E8  2A10               	goto	l3109
  1552     01E9                     u4710:
  1553     01E9                     l3099:
  1554     01E9  0837               	movf	_motorrunning,w
  1555     01EA  1D03               	btfss	3,2
  1556     01EB  29ED               	goto	u4721
  1557     01EC  29EE               	goto	u4720
  1558     01ED                     u4721:
  1559     01ED  2A10               	goto	l3109
  1560     01EE                     u4720:
  1561     01EE                     l3101:
  1562                           
  1563                           ;main.c: 268:         PORTCbits.RC3 = 1;
  1564     01EE  1587               	bsf	7,3	;volatile
  1565     01EF                     l3103:
  1566                           
  1567                           ;main.c: 269:         motorstarttime = seconds_counter;
  1568     01EF  082F               	movf	_seconds_counter+3,w	;volatile
  1569     01F0  1683               	bsf	3,5	;RP0=1, select bank1
  1570     01F1  1303               	bcf	3,6	;RP1=0, select bank1
  1571     01F2  00AF               	movwf	(_motorstarttime+3)^(0+128)
  1572     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  1573     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  1574     01F5  082E               	movf	_seconds_counter+2,w	;volatile
  1575     01F6  1683               	bsf	3,5	;RP0=1, select bank1
  1576     01F7  1303               	bcf	3,6	;RP1=0, select bank1
  1577     01F8  00AE               	movwf	(_motorstarttime+2)^(0+128)
  1578     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1579     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1580     01FB  082D               	movf	_seconds_counter+1,w	;volatile
  1581     01FC  1683               	bsf	3,5	;RP0=1, select bank1
  1582     01FD  1303               	bcf	3,6	;RP1=0, select bank1
  1583     01FE  00AD               	movwf	(_motorstarttime+1)^(0+128)
  1584     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1585     0200  1303               	bcf	3,6	;RP1=0, select bank0
  1586     0201  082C               	movf	_seconds_counter,w	;volatile
  1587     0202  1683               	bsf	3,5	;RP0=1, select bank1
  1588     0203  1303               	bcf	3,6	;RP1=0, select bank1
  1589     0204  00AC               	movwf	_motorstarttime^(0+128)
  1590     0205                     l3105:
  1591                           
  1592                           ;main.c: 270:         motorrunning = 1;
  1593     0205  3001               	movlw	1
  1594     0206  1283               	bcf	3,5	;RP0=0, select bank0
  1595     0207  1303               	bcf	3,6	;RP1=0, select bank0
  1596     0208  00B7               	movwf	_motorrunning
  1597     0209                     l3107:
  1598                           
  1599                           ;main.c: 271:         trigger_buzzer(1000);
  1600     0209  30E8               	movlw	232
  1601     020A  00F2               	movwf	trigger_buzzer@duration_seconds
  1602     020B  3003               	movlw	3
  1603     020C  00F3               	movwf	trigger_buzzer@duration_seconds+1
  1604     020D  158A  23AF  118A   	fcall	_trigger_buzzer
  1605     0210                     l3109:
  1606                           
  1607                           ;main.c: 273:       if (motorrunning) {
  1608     0210  1283               	bcf	3,5	;RP0=0, select bank0
  1609     0211  1303               	bcf	3,6	;RP1=0, select bank0
  1610     0212  0837               	movf	_motorrunning,w
  1611     0213  1903               	btfsc	3,2
  1612     0214  2A16               	goto	u4731
  1613     0215  2A17               	goto	u4730
  1614     0216                     u4731:
  1615     0216  2B28               	goto	l3141
  1616     0217                     u4730:
  1617     0217                     l3111:
  1618                           
  1619                           ;main.c: 274:         if (seconds_counter - motorstarttime >= maxruntime[4]) {
  1620     0217  1683               	bsf	3,5	;RP0=1, select bank1
  1621     0218  1303               	bcf	3,6	;RP1=0, select bank1
  1622     0219  084A               	movf	(_maxruntime^(0+128)+8),w
  1623     021A  1283               	bcf	3,5	;RP0=0, select bank0
  1624     021B  1303               	bcf	3,6	;RP1=0, select bank0
  1625     021C  00E5               	movwf	??_main
  1626     021D  1683               	bsf	3,5	;RP0=1, select bank1
  1627     021E  1303               	bcf	3,6	;RP1=0, select bank1
  1628     021F  084B               	movf	((_maxruntime+1)^(0+128)+8),w
  1629     0220  1283               	bcf	3,5	;RP0=0, select bank0
  1630     0221  1303               	bcf	3,6	;RP1=0, select bank0
  1631     0222  00E6               	movwf	??_main+1
  1632     0223  01E7               	clrf	??_main+2
  1633     0224  01E8               	clrf	??_main+3
  1634     0225  082C               	movf	_seconds_counter,w	;volatile
  1635     0226  00E9               	movwf	??_main+4
  1636     0227  082D               	movf	_seconds_counter+1,w	;volatile
  1637     0228  00EA               	movwf	??_main+5
  1638     0229  082E               	movf	_seconds_counter+2,w	;volatile
  1639     022A  00EB               	movwf	??_main+6
  1640     022B  082F               	movf	_seconds_counter+3,w	;volatile
  1641     022C  00EC               	movwf	??_main+7
  1642     022D  1683               	bsf	3,5	;RP0=1, select bank1
  1643     022E  1303               	bcf	3,6	;RP1=0, select bank1
  1644     022F  082C               	movf	_motorstarttime^(0+128),w
  1645     0230  1283               	bcf	3,5	;RP0=0, select bank0
  1646     0231  1303               	bcf	3,6	;RP1=0, select bank0
  1647     0232  02E9               	subwf	??_main+4,f
  1648     0233  1683               	bsf	3,5	;RP0=1, select bank1
  1649     0234  1303               	bcf	3,6	;RP1=0, select bank1
  1650     0235  082D               	movf	(_motorstarttime+1)^(0+128),w
  1651     0236  1C03               	skipc
  1652     0237  0F2D               	incfsz	(_motorstarttime+1)^(0+128),w
  1653     0238  2A3A               	goto	u4741
  1654     0239  2A3D               	goto	u4742
  1655     023A                     u4741:
  1656     023A  1283               	bcf	3,5	;RP0=0, select bank0
  1657     023B  1303               	bcf	3,6	;RP1=0, select bank0
  1658     023C  02EA               	subwf	??_main+5,f
  1659     023D                     u4742:
  1660     023D  1683               	bsf	3,5	;RP0=1, select bank1
  1661     023E  1303               	bcf	3,6	;RP1=0, select bank1
  1662     023F  082E               	movf	(_motorstarttime+2)^(0+128),w
  1663     0240  1C03               	skipc
  1664     0241  0F2E               	incfsz	(_motorstarttime+2)^(0+128),w
  1665     0242  2A44               	goto	u4743
  1666     0243  2A47               	goto	u4744
  1667     0244                     u4743:
  1668     0244  1283               	bcf	3,5	;RP0=0, select bank0
  1669     0245  1303               	bcf	3,6	;RP1=0, select bank0
  1670     0246  02EB               	subwf	??_main+6,f
  1671     0247                     u4744:
  1672     0247  1683               	bsf	3,5	;RP0=1, select bank1
  1673     0248  1303               	bcf	3,6	;RP1=0, select bank1
  1674     0249  082F               	movf	(_motorstarttime+3)^(0+128),w
  1675     024A  1C03               	skipc
  1676     024B  0F2F               	incfsz	(_motorstarttime+3)^(0+128),w
  1677     024C  2A4E               	goto	u4745
  1678     024D  2A51               	goto	u4746
  1679     024E                     u4745:
  1680     024E  1283               	bcf	3,5	;RP0=0, select bank0
  1681     024F  1303               	bcf	3,6	;RP1=0, select bank0
  1682     0250  02EC               	subwf	??_main+7,f
  1683     0251                     u4746:
  1684     0251  1683               	bsf	3,5	;RP0=1, select bank1
  1685     0252  1303               	bcf	3,6	;RP1=0, select bank1
  1686     0253  1283               	bcf	3,5	;RP0=0, select bank0
  1687     0254  1303               	bcf	3,6	;RP1=0, select bank0
  1688     0255  0868               	movf	??_main+3,w
  1689     0256  026C               	subwf	??_main+7,w
  1690     0257  1D03               	skipz
  1691     0258  2A63               	goto	u4755
  1692     0259  0867               	movf	??_main+2,w
  1693     025A  026B               	subwf	??_main+6,w
  1694     025B  1D03               	skipz
  1695     025C  2A63               	goto	u4755
  1696     025D  0866               	movf	??_main+1,w
  1697     025E  026A               	subwf	??_main+5,w
  1698     025F  1D03               	skipz
  1699     0260  2A63               	goto	u4755
  1700     0261  0865               	movf	??_main,w
  1701     0262  0269               	subwf	??_main+4,w
  1702     0263                     u4755:
  1703     0263  1C03               	skipc
  1704     0264  2A66               	goto	u4751
  1705     0265  2A67               	goto	u4750
  1706     0266                     u4751:
  1707     0266  2A69               	goto	l3115
  1708     0267                     u4750:
  1709     0267                     l3113:
  1710                           
  1711                           ;main.c: 275:           timeouterror = 1;
  1712     0267  3001               	movlw	1
  1713     0268  00B8               	movwf	_timeouterror
  1714     0269                     l3115:
  1715                           
  1716                           ;main.c: 277:         if (!flowactive) {
  1717     0269  0834               	movf	_flowactive,w
  1718     026A  1D03               	btfss	3,2
  1719     026B  2A6D               	goto	u4761
  1720     026C  2A6E               	goto	u4760
  1721     026D                     u4761:
  1722     026D  2AEA               	goto	l3129
  1723     026E                     u4760:
  1724     026E                     l3117:
  1725                           
  1726                           ;main.c: 278:           if (seconds_counter % 2 == 0) {
  1727     026E  182C               	btfsc	_seconds_counter,0	;volatile
  1728     026F  2A71               	goto	u4771
  1729     0270  2A72               	goto	u4770
  1730     0271                     u4771:
  1731     0271  2A74               	goto	l216
  1732     0272                     u4770:
  1733     0272                     l3119:
  1734                           
  1735                           ;main.c: 280:             PORTAbits.RA2 = 1;
  1736     0272  1505               	bsf	5,2	;volatile
  1737                           
  1738                           ;main.c: 281:           } else {
  1739     0273  2A75               	goto	l3121
  1740     0274                     l216:
  1741                           
  1742                           ;main.c: 283:             PORTAbits.RA2 = 0;
  1743     0274  1105               	bcf	5,2	;volatile
  1744     0275                     l3121:
  1745                           
  1746                           ;main.c: 285:           if (lastdryruncheck == 0) {
  1747     0275  1683               	bsf	3,5	;RP0=1, select bank1
  1748     0276  1303               	bcf	3,6	;RP1=0, select bank1
  1749     0277  0833               	movf	(_lastdryruncheck+3)^(0+128),w
  1750     0278  0432               	iorwf	(_lastdryruncheck+2)^(0+128),w
  1751     0279  0431               	iorwf	(_lastdryruncheck+1)^(0+128),w
  1752     027A  0430               	iorwf	_lastdryruncheck^(0+128),w
  1753     027B  1D03               	skipz
  1754     027C  2A7E               	goto	u4781
  1755     027D  2A7F               	goto	u4780
  1756     027E                     u4781:
  1757     027E  2A98               	goto	l3125
  1758     027F                     u4780:
  1759     027F                     l3123:
  1760                           
  1761                           ;main.c: 286:             lastdryruncheck = seconds_counter;
  1762     027F  1283               	bcf	3,5	;RP0=0, select bank0
  1763     0280  1303               	bcf	3,6	;RP1=0, select bank0
  1764     0281  082F               	movf	_seconds_counter+3,w	;volatile
  1765     0282  1683               	bsf	3,5	;RP0=1, select bank1
  1766     0283  1303               	bcf	3,6	;RP1=0, select bank1
  1767     0284  00B3               	movwf	(_lastdryruncheck+3)^(0+128)
  1768     0285  1283               	bcf	3,5	;RP0=0, select bank0
  1769     0286  1303               	bcf	3,6	;RP1=0, select bank0
  1770     0287  082E               	movf	_seconds_counter+2,w	;volatile
  1771     0288  1683               	bsf	3,5	;RP0=1, select bank1
  1772     0289  1303               	bcf	3,6	;RP1=0, select bank1
  1773     028A  00B2               	movwf	(_lastdryruncheck+2)^(0+128)
  1774     028B  1283               	bcf	3,5	;RP0=0, select bank0
  1775     028C  1303               	bcf	3,6	;RP1=0, select bank0
  1776     028D  082D               	movf	_seconds_counter+1,w	;volatile
  1777     028E  1683               	bsf	3,5	;RP0=1, select bank1
  1778     028F  1303               	bcf	3,6	;RP1=0, select bank1
  1779     0290  00B1               	movwf	(_lastdryruncheck+1)^(0+128)
  1780     0291  1283               	bcf	3,5	;RP0=0, select bank0
  1781     0292  1303               	bcf	3,6	;RP1=0, select bank0
  1782     0293  082C               	movf	_seconds_counter,w	;volatile
  1783     0294  1683               	bsf	3,5	;RP0=1, select bank1
  1784     0295  1303               	bcf	3,6	;RP1=0, select bank1
  1785     0296  00B0               	movwf	_lastdryruncheck^(0+128)
  1786                           
  1787                           ;main.c: 287:           } else if (seconds_counter - lastdryruncheck >= dryruntime) {
  1788     0297  2AF7               	goto	l221
  1789     0298                     l3125:
  1790     0298  083C               	movf	_dryruntime^(0+128),w
  1791     0299  1283               	bcf	3,5	;RP0=0, select bank0
  1792     029A  1303               	bcf	3,6	;RP1=0, select bank0
  1793     029B  00E5               	movwf	??_main
  1794     029C  1683               	bsf	3,5	;RP0=1, select bank1
  1795     029D  1303               	bcf	3,6	;RP1=0, select bank1
  1796     029E  083D               	movf	(_dryruntime+1)^(0+128),w
  1797     029F  1283               	bcf	3,5	;RP0=0, select bank0
  1798     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1799     02A1  00E6               	movwf	??_main+1
  1800     02A2  01E7               	clrf	??_main+2
  1801     02A3  01E8               	clrf	??_main+3
  1802     02A4  082C               	movf	_seconds_counter,w	;volatile
  1803     02A5  00E9               	movwf	??_main+4
  1804     02A6  082D               	movf	_seconds_counter+1,w	;volatile
  1805     02A7  00EA               	movwf	??_main+5
  1806     02A8  082E               	movf	_seconds_counter+2,w	;volatile
  1807     02A9  00EB               	movwf	??_main+6
  1808     02AA  082F               	movf	_seconds_counter+3,w	;volatile
  1809     02AB  00EC               	movwf	??_main+7
  1810     02AC  1683               	bsf	3,5	;RP0=1, select bank1
  1811     02AD  1303               	bcf	3,6	;RP1=0, select bank1
  1812     02AE  0830               	movf	_lastdryruncheck^(0+128),w
  1813     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1814     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1815     02B1  02E9               	subwf	??_main+4,f
  1816     02B2  1683               	bsf	3,5	;RP0=1, select bank1
  1817     02B3  1303               	bcf	3,6	;RP1=0, select bank1
  1818     02B4  0831               	movf	(_lastdryruncheck+1)^(0+128),w
  1819     02B5  1C03               	skipc
  1820     02B6  0F31               	incfsz	(_lastdryruncheck+1)^(0+128),w
  1821     02B7  2AB9               	goto	u4791
  1822     02B8  2ABC               	goto	u4792
  1823     02B9                     u4791:
  1824     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1825     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1826     02BB  02EA               	subwf	??_main+5,f
  1827     02BC                     u4792:
  1828     02BC  1683               	bsf	3,5	;RP0=1, select bank1
  1829     02BD  1303               	bcf	3,6	;RP1=0, select bank1
  1830     02BE  0832               	movf	(_lastdryruncheck+2)^(0+128),w
  1831     02BF  1C03               	skipc
  1832     02C0  0F32               	incfsz	(_lastdryruncheck+2)^(0+128),w
  1833     02C1  2AC3               	goto	u4793
  1834     02C2  2AC6               	goto	u4794
  1835     02C3                     u4793:
  1836     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1837     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1838     02C5  02EB               	subwf	??_main+6,f
  1839     02C6                     u4794:
  1840     02C6  1683               	bsf	3,5	;RP0=1, select bank1
  1841     02C7  1303               	bcf	3,6	;RP1=0, select bank1
  1842     02C8  0833               	movf	(_lastdryruncheck+3)^(0+128),w
  1843     02C9  1C03               	skipc
  1844     02CA  0F33               	incfsz	(_lastdryruncheck+3)^(0+128),w
  1845     02CB  2ACD               	goto	u4795
  1846     02CC  2AD0               	goto	u4796
  1847     02CD                     u4795:
  1848     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1849     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1850     02CF  02EC               	subwf	??_main+7,f
  1851     02D0                     u4796:
  1852     02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1853     02D1  1303               	bcf	3,6	;RP1=0, select bank1
  1854     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  1855     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  1856     02D4  0868               	movf	??_main+3,w
  1857     02D5  026C               	subwf	??_main+7,w
  1858     02D6  1D03               	skipz
  1859     02D7  2AE2               	goto	u4805
  1860     02D8  0867               	movf	??_main+2,w
  1861     02D9  026B               	subwf	??_main+6,w
  1862     02DA  1D03               	skipz
  1863     02DB  2AE2               	goto	u4805
  1864     02DC  0866               	movf	??_main+1,w
  1865     02DD  026A               	subwf	??_main+5,w
  1866     02DE  1D03               	skipz
  1867     02DF  2AE2               	goto	u4805
  1868     02E0  0865               	movf	??_main,w
  1869     02E1  0269               	subwf	??_main+4,w
  1870     02E2                     u4805:
  1871     02E2  1C03               	skipc
  1872     02E3  2AE5               	goto	u4801
  1873     02E4  2AE6               	goto	u4800
  1874     02E5                     u4801:
  1875     02E5  2AF7               	goto	l221
  1876     02E6                     u4800:
  1877     02E6                     l3127:
  1878                           
  1879                           ;main.c: 288:             dryrunerror = 1;
  1880     02E6  3001               	movlw	1
  1881     02E7  00B9               	movwf	_dryrunerror
  1882                           
  1883                           ;main.c: 289:             PORTAbits.RA2 = 1;
  1884     02E8  1505               	bsf	5,2	;volatile
  1885     02E9  2AF7               	goto	l221
  1886     02EA                     l3129:
  1887                           
  1888                           ;main.c: 292:           lastdryruncheck = 0;
  1889     02EA  3000               	movlw	0
  1890     02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1891     02EC  1303               	bcf	3,6	;RP1=0, select bank1
  1892     02ED  00B3               	movwf	(_lastdryruncheck+3)^(0+128)
  1893     02EE  3000               	movlw	0
  1894     02EF  00B2               	movwf	(_lastdryruncheck+2)^(0+128)
  1895     02F0  3000               	movlw	0
  1896     02F1  00B1               	movwf	(_lastdryruncheck+1)^(0+128)
  1897     02F2  3000               	movlw	0
  1898     02F3  00B0               	movwf	_lastdryruncheck^(0+128)
  1899     02F4                     l3131:
  1900                           
  1901                           ;main.c: 293:           PORTAbits.RA2 = 0;
  1902     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1903     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1904     02F6  1105               	bcf	5,2	;volatile
  1905     02F7                     l221:	
  1906                           ;main.c: 294:         }
  1907                           
  1908                           
  1909                           ;main.c: 296:          if (voltage > maximumrinningvoltage || voltage < minimumrunningvo
      +                          ltage) {
  1910     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1911     02F8  0840               	movf	_voltage,w
  1912     02F9  00E5               	movwf	??_main
  1913     02FA  01E6               	clrf	??_main+1
  1914     02FB  0866               	movf	??_main+1,w
  1915     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  1916     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  1917     02FE  024F               	subwf	(_maximumrinningvoltage+1)^(0+128),w
  1918     02FF  1D03               	skipz
  1919     0300  2B07               	goto	u4815
  1920     0301  1283               	bcf	3,5	;RP0=0, select bank0
  1921     0302  1303               	bcf	3,6	;RP1=0, select bank0
  1922     0303  0865               	movf	??_main,w
  1923     0304  1683               	bsf	3,5	;RP0=1, select bank1
  1924     0305  1303               	bcf	3,6	;RP1=0, select bank1
  1925     0306  024E               	subwf	_maximumrinningvoltage^(0+128),w
  1926     0307                     u4815:
  1927     0307  1C03               	skipc
  1928     0308  2B0A               	goto	u4811
  1929     0309  2B0B               	goto	u4810
  1930     030A                     u4811:
  1931     030A  2B1C               	goto	l224
  1932     030B                     u4810:
  1933     030B                     l3133:
  1934     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1935     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1936     030D  0840               	movf	_voltage,w
  1937     030E  00E5               	movwf	??_main
  1938     030F  1683               	bsf	3,5	;RP0=1, select bank1
  1939     0310  1303               	bcf	3,6	;RP1=0, select bank1
  1940     0311  0851               	movf	(_minimumrunningvoltage+1)^(0+128),w
  1941     0312  1D03               	skipz
  1942     0313  2B18               	goto	u4825
  1943     0314  0850               	movf	_minimumrunningvoltage^(0+128),w
  1944     0315  1283               	bcf	3,5	;RP0=0, select bank0
  1945     0316  1303               	bcf	3,6	;RP1=0, select bank0
  1946     0317  0265               	subwf	??_main,w
  1947     0318                     u4825:
  1948     0318  1803               	skipnc
  1949     0319  2B1B               	goto	u4821
  1950     031A  2B1C               	goto	u4820
  1951     031B                     u4821:
  1952     031B  2B28               	goto	l3141
  1953     031C                     u4820:
  1954     031C                     l224:
  1955                           
  1956                           ;main.c: 297:           voltageerror = 1;
  1957     031C  3001               	movlw	1
  1958     031D  1283               	bcf	3,5	;RP0=0, select bank0
  1959     031E  00BA               	movwf	_voltageerror
  1960     031F  2B28               	goto	l3141
  1961     0320                     l3135:
  1962                           
  1963                           ;main.c: 301:       if (motorrunning) {
  1964     0320  0837               	movf	_motorrunning,w
  1965     0321  1903               	btfsc	3,2
  1966     0322  2B24               	goto	u4831
  1967     0323  2B25               	goto	u4830
  1968     0324                     u4831:
  1969     0324  2B28               	goto	l3141
  1970     0325                     u4830:
  1971     0325                     l3137:
  1972                           
  1973                           ;main.c: 302:         motorrunning = 0;
  1974     0325  01B7               	clrf	_motorrunning
  1975                           
  1976                           ;main.c: 303:         mannualon = 0;
  1977     0326  01BB               	clrf	_mannualon
  1978     0327                     l3139:
  1979                           
  1980                           ;main.c: 304:         PORTCbits.RC3 = 0;
  1981     0327  1187               	bcf	7,3	;volatile
  1982     0328                     l3141:
  1983                           
  1984                           ;main.c: 307:     if (timeouterror) {
  1985     0328  0838               	movf	_timeouterror,w
  1986     0329  1903               	btfsc	3,2
  1987     032A  2B2C               	goto	u4841
  1988     032B  2B2D               	goto	u4840
  1989     032C                     u4841:
  1990     032C  2B2E               	goto	l3145
  1991     032D                     u4840:
  1992     032D                     l3143:
  1993                           
  1994                           ;main.c: 308:       motorrunning = 0;
  1995     032D  01B7               	clrf	_motorrunning
  1996     032E                     l3145:
  1997                           
  1998                           ;main.c: 310:     if (dryrunerror) {
  1999     032E  0839               	movf	_dryrunerror,w
  2000     032F  1903               	btfsc	3,2
  2001     0330  2B32               	goto	u4851
  2002     0331  2B33               	goto	u4850
  2003     0332                     u4851:
  2004     0332  2B34               	goto	l3149
  2005     0333                     u4850:
  2006     0333                     l3147:
  2007                           
  2008                           ;main.c: 311:       motorrunning = 0;
  2009     0333  01B7               	clrf	_motorrunning
  2010     0334                     l3149:
  2011                           
  2012                           ;main.c: 314:     if (!motorrunning) {
  2013     0334  0837               	movf	_motorrunning,w
  2014     0335  1D03               	btfss	3,2
  2015     0336  2B38               	goto	u4861
  2016     0337  2B39               	goto	u4860
  2017     0338                     u4861:
  2018     0338  2B63               	goto	l229
  2019     0339                     u4860:
  2020     0339                     l3151:
  2021                           
  2022                           ;main.c: 315:       if (voltage > maxvoltagelimit || voltage < minvoltagelimit) {
  2023     0339  0840               	movf	_voltage,w
  2024     033A  00E5               	movwf	??_main
  2025     033B  01E6               	clrf	??_main+1
  2026     033C  0866               	movf	??_main+1,w
  2027     033D  1683               	bsf	3,5	;RP0=1, select bank1
  2028     033E  1303               	bcf	3,6	;RP1=0, select bank1
  2029     033F  0253               	subwf	(_maxvoltagelimit+1)^(0+128),w
  2030     0340  1D03               	skipz
  2031     0341  2B48               	goto	u4875
  2032     0342  1283               	bcf	3,5	;RP0=0, select bank0
  2033     0343  1303               	bcf	3,6	;RP1=0, select bank0
  2034     0344  0865               	movf	??_main,w
  2035     0345  1683               	bsf	3,5	;RP0=1, select bank1
  2036     0346  1303               	bcf	3,6	;RP1=0, select bank1
  2037     0347  0252               	subwf	_maxvoltagelimit^(0+128),w
  2038     0348                     u4875:
  2039     0348  1C03               	skipc
  2040     0349  2B4B               	goto	u4871
  2041     034A  2B4C               	goto	u4870
  2042     034B                     u4871:
  2043     034B  2B5D               	goto	l232
  2044     034C                     u4870:
  2045     034C                     l3153:
  2046     034C  1283               	bcf	3,5	;RP0=0, select bank0
  2047     034D  1303               	bcf	3,6	;RP1=0, select bank0
  2048     034E  0840               	movf	_voltage,w
  2049     034F  00E5               	movwf	??_main
  2050     0350  1683               	bsf	3,5	;RP0=1, select bank1
  2051     0351  1303               	bcf	3,6	;RP1=0, select bank1
  2052     0352  0855               	movf	(_minvoltagelimit+1)^(0+128),w
  2053     0353  1D03               	skipz
  2054     0354  2B59               	goto	u4885
  2055     0355  0854               	movf	_minvoltagelimit^(0+128),w
  2056     0356  1283               	bcf	3,5	;RP0=0, select bank0
  2057     0357  1303               	bcf	3,6	;RP1=0, select bank0
  2058     0358  0265               	subwf	??_main,w
  2059     0359                     u4885:
  2060     0359  1803               	skipnc
  2061     035A  2B5C               	goto	u4881
  2062     035B  2B5D               	goto	u4880
  2063     035C                     u4881:
  2064     035C  2B60               	goto	l230
  2065     035D                     u4880:
  2066     035D                     l232:
  2067                           
  2068                           ;main.c: 316:         voltageerror = 1;
  2069     035D  3001               	movlw	1
  2070     035E  1283               	bcf	3,5	;RP0=0, select bank0
  2071     035F  00BA               	movwf	_voltageerror
  2072     0360                     l230:	
  2073                           ;main.c: 317:       }
  2074                           
  2075                           
  2076                           ;main.c: 318:       PORTCbits.RC3 = 0;
  2077     0360  1187               	bcf	7,3	;volatile
  2078                           
  2079                           ;main.c: 319:       PORTAbits.RA1 = 0;
  2080     0361  1085               	bcf	5,1	;volatile
  2081                           
  2082                           ;main.c: 320:     } else {
  2083     0362  2BC6               	goto	l3161
  2084     0363                     l229:
  2085                           
  2086                           ;main.c: 321:       PORTAbits.RA1 = 1;
  2087     0363  1485               	bsf	5,1	;volatile
  2088                           
  2089                           ;main.c: 322:       PORTCbits.RC3 = 1;
  2090     0364  1587               	bsf	7,3	;volatile
  2091     0365                     l3155:
  2092                           
  2093                           ;main.c: 323:       if (millis - lt >= 20000) {
  2094     0365  0828               	movf	_millis,w	;volatile
  2095     0366  00E5               	movwf	??_main
  2096     0367  0829               	movf	_millis+1,w	;volatile
  2097     0368  00E6               	movwf	??_main+1
  2098     0369  082A               	movf	_millis+2,w	;volatile
  2099     036A  00E7               	movwf	??_main+2
  2100     036B  082B               	movf	_millis+3,w	;volatile
  2101     036C  00E8               	movwf	??_main+3
  2102     036D  1683               	bsf	3,5	;RP0=1, select bank1
  2103     036E  1303               	bcf	3,6	;RP1=0, select bank1
  2104     036F  0824               	movf	_lt^(0+128),w
  2105     0370  1283               	bcf	3,5	;RP0=0, select bank0
  2106     0371  1303               	bcf	3,6	;RP1=0, select bank0
  2107     0372  02E5               	subwf	??_main,f
  2108     0373  1683               	bsf	3,5	;RP0=1, select bank1
  2109     0374  1303               	bcf	3,6	;RP1=0, select bank1
  2110     0375  0825               	movf	(_lt+1)^(0+128),w
  2111     0376  1C03               	skipc
  2112     0377  0F25               	incfsz	(_lt+1)^(0+128),w
  2113     0378  2B7A               	goto	u4891
  2114     0379  2B7D               	goto	u4892
  2115     037A                     u4891:
  2116     037A  1283               	bcf	3,5	;RP0=0, select bank0
  2117     037B  1303               	bcf	3,6	;RP1=0, select bank0
  2118     037C  02E6               	subwf	??_main+1,f
  2119     037D                     u4892:
  2120     037D  1683               	bsf	3,5	;RP0=1, select bank1
  2121     037E  1303               	bcf	3,6	;RP1=0, select bank1
  2122     037F  0826               	movf	(_lt+2)^(0+128),w
  2123     0380  1C03               	skipc
  2124     0381  0F26               	incfsz	(_lt+2)^(0+128),w
  2125     0382  2B84               	goto	u4893
  2126     0383  2B87               	goto	u4894
  2127     0384                     u4893:
  2128     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2129     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2130     0386  02E7               	subwf	??_main+2,f
  2131     0387                     u4894:
  2132     0387  1683               	bsf	3,5	;RP0=1, select bank1
  2133     0388  1303               	bcf	3,6	;RP1=0, select bank1
  2134     0389  0827               	movf	(_lt+3)^(0+128),w
  2135     038A  1C03               	skipc
  2136     038B  0F27               	incfsz	(_lt+3)^(0+128),w
  2137     038C  2B8E               	goto	u4895
  2138     038D  2B91               	goto	u4896
  2139     038E                     u4895:
  2140     038E  1283               	bcf	3,5	;RP0=0, select bank0
  2141     038F  1303               	bcf	3,6	;RP1=0, select bank0
  2142     0390  02E8               	subwf	??_main+3,f
  2143     0391                     u4896:
  2144     0391  1683               	bsf	3,5	;RP0=1, select bank1
  2145     0392  1303               	bcf	3,6	;RP1=0, select bank1
  2146     0393  1283               	bcf	3,5	;RP0=0, select bank0
  2147     0394  1303               	bcf	3,6	;RP1=0, select bank0
  2148     0395  0868               	movf	??_main+3,w
  2149     0396  1D03               	btfss	3,2
  2150     0397  2BA7               	goto	u4900
  2151     0398  0867               	movf	??_main+2,w
  2152     0399  1D03               	btfss	3,2
  2153     039A  2BA7               	goto	u4900
  2154     039B  304E               	movlw	78
  2155     039C  0266               	subwf	??_main+1,w
  2156     039D  1D03               	skipz
  2157     039E  2BA3               	goto	u4903
  2158     039F  3020               	movlw	32
  2159     03A0  0265               	subwf	??_main,w
  2160     03A1  1D03               	skipz
  2161     03A2  2BA3               	goto	u4903
  2162     03A3                     u4903:
  2163     03A3  1C03               	btfss	3,0
  2164     03A4  2BA6               	goto	u4901
  2165     03A5  2BA7               	goto	u4900
  2166     03A6                     u4901:
  2167     03A6  2BC6               	goto	l3161
  2168     03A7                     u4900:
  2169     03A7                     l3157:
  2170                           
  2171                           ;main.c: 324:         lt = millis;
  2172     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2173     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2174     03A9  082B               	movf	_millis+3,w	;volatile
  2175     03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2176     03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2177     03AC  00A7               	movwf	(_lt+3)^(0+128)
  2178     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2179     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2180     03AF  082A               	movf	_millis+2,w	;volatile
  2181     03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2182     03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2183     03B2  00A6               	movwf	(_lt+2)^(0+128)
  2184     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2185     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2186     03B5  0829               	movf	_millis+1,w	;volatile
  2187     03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2188     03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2189     03B8  00A5               	movwf	(_lt+1)^(0+128)
  2190     03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2191     03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2192     03BB  0828               	movf	_millis,w	;volatile
  2193     03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2194     03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2195     03BE  00A4               	movwf	_lt^(0+128)
  2196     03BF                     l3159:
  2197                           
  2198                           ;main.c: 326:         trigger_buzzer(200);
  2199     03BF  30C8               	movlw	200
  2200     03C0  00F2               	movwf	trigger_buzzer@duration_seconds
  2201     03C1  3000               	movlw	0
  2202     03C2  00F3               	movwf	trigger_buzzer@duration_seconds+1
  2203     03C3  158A  23AF  118A   	fcall	_trigger_buzzer
  2204     03C6                     l3161:
  2205                           
  2206                           ;main.c: 332:     if (voltageerror) {
  2207     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2208     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2209     03C8  083A               	movf	_voltageerror,w
  2210     03C9  1903               	btfsc	3,2
  2211     03CA  2BCC               	goto	u4911
  2212     03CB  2BCD               	goto	u4910
  2213     03CC                     u4911:
  2214     03CC  2C42               	goto	l3179
  2215     03CD                     u4910:
  2216     03CD                     l3163:
  2217                           
  2218                           ;main.c: 333:       if (lastvoltageerror == 0) {
  2219     03CD  0827               	movf	_lastvoltageerror+3,w
  2220     03CE  0426               	iorwf	_lastvoltageerror+2,w
  2221     03CF  0425               	iorwf	_lastvoltageerror+1,w
  2222     03D0  0424               	iorwf	_lastvoltageerror,w
  2223     03D1  1D03               	skipz
  2224     03D2  2BD4               	goto	u4921
  2225     03D3  2BD5               	goto	u4920
  2226     03D4                     u4921:
  2227     03D4  2BDE               	goto	l3167
  2228     03D5                     u4920:
  2229     03D5                     l3165:
  2230                           
  2231                           ;main.c: 334:         lastvoltageerror = seconds_counter;
  2232     03D5  082F               	movf	_seconds_counter+3,w	;volatile
  2233     03D6  00A7               	movwf	_lastvoltageerror+3
  2234     03D7  082E               	movf	_seconds_counter+2,w	;volatile
  2235     03D8  00A6               	movwf	_lastvoltageerror+2
  2236     03D9  082D               	movf	_seconds_counter+1,w	;volatile
  2237     03DA  00A5               	movwf	_lastvoltageerror+1
  2238     03DB  082C               	movf	_seconds_counter,w	;volatile
  2239     03DC  00A4               	movwf	_lastvoltageerror
  2240                           
  2241                           ;main.c: 335:       } else if (seconds_counter - lastvoltageerror >= maxvoltageerrortime
      +                          ) {
  2242     03DD  2C3E               	goto	l3177
  2243     03DE                     l3167:
  2244     03DE  082C               	movf	_seconds_counter,w	;volatile
  2245     03DF  00E5               	movwf	??_main
  2246     03E0  082D               	movf	_seconds_counter+1,w	;volatile
  2247     03E1  00E6               	movwf	??_main+1
  2248     03E2  082E               	movf	_seconds_counter+2,w	;volatile
  2249     03E3  00E7               	movwf	??_main+2
  2250     03E4  082F               	movf	_seconds_counter+3,w	;volatile
  2251     03E5  00E8               	movwf	??_main+3
  2252     03E6  0824               	movf	_lastvoltageerror,w
  2253     03E7  02E5               	subwf	??_main,f
  2254     03E8  0825               	movf	_lastvoltageerror+1,w
  2255     03E9  1C03               	skipc
  2256     03EA  0F25               	incfsz	_lastvoltageerror+1,w
  2257     03EB  2BED               	goto	u4931
  2258     03EC  2BEE               	goto	u4932
  2259     03ED                     u4931:
  2260     03ED  02E6               	subwf	??_main+1,f
  2261     03EE                     u4932:
  2262     03EE  0826               	movf	_lastvoltageerror+2,w
  2263     03EF  1C03               	skipc
  2264     03F0  0F26               	incfsz	_lastvoltageerror+2,w
  2265     03F1  2BF3               	goto	u4933
  2266     03F2  2BF4               	goto	u4934
  2267     03F3                     u4933:
  2268     03F3  02E7               	subwf	??_main+2,f
  2269     03F4                     u4934:
  2270     03F4  0827               	movf	_lastvoltageerror+3,w
  2271     03F5  1C03               	skipc
  2272     03F6  0F27               	incfsz	_lastvoltageerror+3,w
  2273     03F7  2BF9               	goto	u4935
  2274     03F8  2BFA               	goto	u4936
  2275     03F9                     u4935:
  2276     03F9  02E8               	subwf	??_main+3,f
  2277     03FA                     u4936:
  2278     03FA  0868               	movf	??_main+3,w
  2279     03FB  1D03               	btfss	3,2
  2280     03FC  2C0B               	goto	u4940
  2281     03FD  0867               	movf	??_main+2,w
  2282     03FE  1D03               	btfss	3,2
  2283     03FF  2C0B               	goto	u4940
  2284     0400  0866               	movf	??_main+1,w
  2285     0401  1D03               	btfss	3,2
  2286     0402  2C0B               	goto	u4940
  2287     0403  300A               	movlw	10
  2288     0404  0265               	subwf	??_main,w
  2289     0405  1D03               	skipz
  2290     0406  2C07               	goto	u4943
  2291     0407                     u4943:
  2292     0407  1C03               	btfss	3,0
  2293     0408  2C0A               	goto	u4941
  2294     0409  2C0B               	goto	u4940
  2295     040A                     u4941:
  2296     040A  2C3E               	goto	l3177
  2297     040B                     u4940:
  2298     040B                     l3169:
  2299                           
  2300                           ;main.c: 336:         if (voltage > maxvoltagelimit || voltage < minvoltagelimit) {
  2301     040B  1283               	bcf	3,5	;RP0=0, select bank0
  2302     040C  1303               	bcf	3,6	;RP1=0, select bank0
  2303     040D  0840               	movf	_voltage,w
  2304     040E  00E5               	movwf	??_main
  2305     040F  01E6               	clrf	??_main+1
  2306     0410  0866               	movf	??_main+1,w
  2307     0411  1683               	bsf	3,5	;RP0=1, select bank1
  2308     0412  1303               	bcf	3,6	;RP1=0, select bank1
  2309     0413  0253               	subwf	(_maxvoltagelimit+1)^(0+128),w
  2310     0414  1D03               	skipz
  2311     0415  2C1C               	goto	u4955
  2312     0416  1283               	bcf	3,5	;RP0=0, select bank0
  2313     0417  1303               	bcf	3,6	;RP1=0, select bank0
  2314     0418  0865               	movf	??_main,w
  2315     0419  1683               	bsf	3,5	;RP0=1, select bank1
  2316     041A  1303               	bcf	3,6	;RP1=0, select bank1
  2317     041B  0252               	subwf	_maxvoltagelimit^(0+128),w
  2318     041C                     u4955:
  2319     041C  1C03               	skipc
  2320     041D  2C1F               	goto	u4951
  2321     041E  2C20               	goto	u4950
  2322     041F                     u4951:
  2323     041F  2C31               	goto	l241
  2324     0420                     u4950:
  2325     0420                     l3171:
  2326     0420  1283               	bcf	3,5	;RP0=0, select bank0
  2327     0421  1303               	bcf	3,6	;RP1=0, select bank0
  2328     0422  0840               	movf	_voltage,w
  2329     0423  00E5               	movwf	??_main
  2330     0424  1683               	bsf	3,5	;RP0=1, select bank1
  2331     0425  1303               	bcf	3,6	;RP1=0, select bank1
  2332     0426  0855               	movf	(_minvoltagelimit+1)^(0+128),w
  2333     0427  1D03               	skipz
  2334     0428  2C2D               	goto	u4965
  2335     0429  0854               	movf	_minvoltagelimit^(0+128),w
  2336     042A  1283               	bcf	3,5	;RP0=0, select bank0
  2337     042B  1303               	bcf	3,6	;RP1=0, select bank0
  2338     042C  0265               	subwf	??_main,w
  2339     042D                     u4965:
  2340     042D  1803               	skipnc
  2341     042E  2C30               	goto	u4961
  2342     042F  2C31               	goto	u4960
  2343     0430                     u4961:
  2344     0430  2C35               	goto	l3173
  2345     0431                     u4960:
  2346     0431                     l241:
  2347                           
  2348                           ;main.c: 337:         voltageerror = 1;
  2349     0431  3001               	movlw	1
  2350     0432  1283               	bcf	3,5	;RP0=0, select bank0
  2351     0433  00BA               	movwf	_voltageerror
  2352                           
  2353                           ;main.c: 338:       }else{
  2354     0434  2C36               	goto	l3175
  2355     0435                     l3173:
  2356                           
  2357                           ;main.c: 339:         voltageerror = 0;
  2358     0435  01BA               	clrf	_voltageerror
  2359     0436                     l3175:
  2360                           
  2361                           ;main.c: 342:         lastvoltageerror = 0;
  2362     0436  3000               	movlw	0
  2363     0437  00A7               	movwf	_lastvoltageerror+3
  2364     0438  3000               	movlw	0
  2365     0439  00A6               	movwf	_lastvoltageerror+2
  2366     043A  3000               	movlw	0
  2367     043B  00A5               	movwf	_lastvoltageerror+1
  2368     043C  3000               	movlw	0
  2369     043D  00A4               	movwf	_lastvoltageerror
  2370     043E                     l3177:
  2371                           
  2372                           ;main.c: 345:       motorrunning = 0;
  2373     043E  1283               	bcf	3,5	;RP0=0, select bank0
  2374     043F  1303               	bcf	3,6	;RP1=0, select bank0
  2375     0440  01B7               	clrf	_motorrunning
  2376                           
  2377                           ;main.c: 346:     } else if (lastvoltageerror != 0 &&
  2378     0441  2C81               	goto	l3185
  2379     0442                     l3179:
  2380     0442  0827               	movf	_lastvoltageerror+3,w
  2381     0443  0426               	iorwf	_lastvoltageerror+2,w
  2382     0444  0425               	iorwf	_lastvoltageerror+1,w
  2383     0445  0424               	iorwf	_lastvoltageerror,w
  2384     0446  1903               	skipnz
  2385     0447  2C49               	goto	u4971
  2386     0448  2C4A               	goto	u4970
  2387     0449                     u4971:
  2388     0449  2C81               	goto	l3185
  2389     044A                     u4970:
  2390     044A                     l3181:
  2391     044A  082C               	movf	_seconds_counter,w	;volatile
  2392     044B  00E5               	movwf	??_main
  2393     044C  082D               	movf	_seconds_counter+1,w	;volatile
  2394     044D  00E6               	movwf	??_main+1
  2395     044E  082E               	movf	_seconds_counter+2,w	;volatile
  2396     044F  00E7               	movwf	??_main+2
  2397     0450  082F               	movf	_seconds_counter+3,w	;volatile
  2398     0451  00E8               	movwf	??_main+3
  2399     0452  0824               	movf	_lastvoltageerror,w
  2400     0453  02E5               	subwf	??_main,f
  2401     0454  0825               	movf	_lastvoltageerror+1,w
  2402     0455  1C03               	skipc
  2403     0456  0F25               	incfsz	_lastvoltageerror+1,w
  2404     0457  2C59               	goto	u4981
  2405     0458  2C5A               	goto	u4982
  2406     0459                     u4981:
  2407     0459  02E6               	subwf	??_main+1,f
  2408     045A                     u4982:
  2409     045A  0826               	movf	_lastvoltageerror+2,w
  2410     045B  1C03               	skipc
  2411     045C  0F26               	incfsz	_lastvoltageerror+2,w
  2412     045D  2C5F               	goto	u4983
  2413     045E  2C60               	goto	u4984
  2414     045F                     u4983:
  2415     045F  02E7               	subwf	??_main+2,f
  2416     0460                     u4984:
  2417     0460  0827               	movf	_lastvoltageerror+3,w
  2418     0461  1C03               	skipc
  2419     0462  0F27               	incfsz	_lastvoltageerror+3,w
  2420     0463  2C65               	goto	u4985
  2421     0464  2C66               	goto	u4986
  2422     0465                     u4985:
  2423     0465  02E8               	subwf	??_main+3,f
  2424     0466                     u4986:
  2425     0466  0868               	movf	??_main+3,w
  2426     0467  1D03               	btfss	3,2
  2427     0468  2C77               	goto	u4990
  2428     0469  0867               	movf	??_main+2,w
  2429     046A  1D03               	btfss	3,2
  2430     046B  2C77               	goto	u4990
  2431     046C  0866               	movf	??_main+1,w
  2432     046D  1D03               	btfss	3,2
  2433     046E  2C77               	goto	u4990
  2434     046F  300A               	movlw	10
  2435     0470  0265               	subwf	??_main,w
  2436     0471  1D03               	skipz
  2437     0472  2C73               	goto	u4993
  2438     0473                     u4993:
  2439     0473  1C03               	btfss	3,0
  2440     0474  2C76               	goto	u4991
  2441     0475  2C77               	goto	u4990
  2442     0476                     u4991:
  2443     0476  2C81               	goto	l3185
  2444     0477                     u4990:
  2445     0477                     l3183:
  2446                           
  2447                           ;main.c: 347:                (seconds_counter - lastvoltageerror >= maxvoltageerrortime)
      +                          ) {;main.c: 348:       lastvoltageerror = 0;
  2448     0477  3000               	movlw	0
  2449     0478  1283               	bcf	3,5	;RP0=0, select bank0
  2450     0479  1303               	bcf	3,6	;RP1=0, select bank0
  2451     047A  00A7               	movwf	_lastvoltageerror+3
  2452     047B  3000               	movlw	0
  2453     047C  00A6               	movwf	_lastvoltageerror+2
  2454     047D  3000               	movlw	0
  2455     047E  00A5               	movwf	_lastvoltageerror+1
  2456     047F  3000               	movlw	0
  2457     0480  00A4               	movwf	_lastvoltageerror
  2458     0481                     l3185:
  2459                           
  2460                           ;main.c: 351:     dispinfo(100);
  2461     0481  3064               	movlw	100
  2462     0482  118A  269A  118A   	fcall	_dispinfo
  2463     0485  29A6               	goto	l207
  2464     0486  118A  280B         	ljmp	start
  2465     0488                     __end_of_main:
  2466                           
  2467                           	psect	text1
  2468     0BAF                     __ptext1:	
  2469 ;; *************** function _trigger_buzzer *****************
  2470 ;; Defined at:
  2471 ;;		line 551 in file "main.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  duration_sec    2    2[COMMON] unsigned int 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2485 ;;      Params:         2       0       0       0
  2486 ;;      Locals:         0       0       0       0
  2487 ;;      Temps:          0       0       0       0
  2488 ;;      Totals:         2       0       0       0
  2489 ;;Total ram usage:        2 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499     0BAF                     _trigger_buzzer:	
  2500                           ;psect for function _trigger_buzzer
  2501                           
  2502     0BAF                     l2741:	
  2503                           ;incstack = 0
  2504                           ; Regs used in _trigger_buzzer: [wreg+status,2+status,0]
  2505                           
  2506                           
  2507                           ;main.c: 552:   if (!buzzer_active) {
  2508     0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  2509     0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  2510     0BB1  0832               	movf	_buzzer_active,w
  2511     0BB2  1D03               	btfss	3,2
  2512     0BB3  2BB5               	goto	u4171
  2513     0BB4  2BB6               	goto	u4170
  2514     0BB5                     u4171:
  2515     0BB5  2BD5               	goto	l314
  2516     0BB6                     u4170:
  2517     0BB6                     l2743:
  2518                           
  2519                           ;main.c: 553:     PORTCbits.RC4 = 1;
  2520     0BB6  1607               	bsf	7,4	;volatile
  2521     0BB7                     l2745:
  2522                           
  2523                           ;main.c: 554:     buzzer_start_time = millis;
  2524     0BB7  082B               	movf	_millis+3,w	;volatile
  2525     0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  2526     0BB9  1303               	bcf	3,6	;RP1=0, select bank1
  2527     0BBA  00AB               	movwf	(_buzzer_start_time+3)^(0+128)
  2528     0BBB  1283               	bcf	3,5	;RP0=0, select bank0
  2529     0BBC  1303               	bcf	3,6	;RP1=0, select bank0
  2530     0BBD  082A               	movf	_millis+2,w	;volatile
  2531     0BBE  1683               	bsf	3,5	;RP0=1, select bank1
  2532     0BBF  1303               	bcf	3,6	;RP1=0, select bank1
  2533     0BC0  00AA               	movwf	(_buzzer_start_time+2)^(0+128)
  2534     0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  2535     0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  2536     0BC3  0829               	movf	_millis+1,w	;volatile
  2537     0BC4  1683               	bsf	3,5	;RP0=1, select bank1
  2538     0BC5  1303               	bcf	3,6	;RP1=0, select bank1
  2539     0BC6  00A9               	movwf	(_buzzer_start_time+1)^(0+128)
  2540     0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  2541     0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  2542     0BC9  0828               	movf	_millis,w	;volatile
  2543     0BCA  1683               	bsf	3,5	;RP0=1, select bank1
  2544     0BCB  1303               	bcf	3,6	;RP1=0, select bank1
  2545     0BCC  00A8               	movwf	_buzzer_start_time^(0+128)
  2546                           
  2547                           ;main.c: 555:     buzzer_duration = duration_seconds;
  2548     0BCD  0873               	movf	trigger_buzzer@duration_seconds+1,w
  2549     0BCE  00B9               	movwf	(_buzzer_duration+1)^(0+128)
  2550     0BCF  0872               	movf	trigger_buzzer@duration_seconds,w
  2551     0BD0  00B8               	movwf	_buzzer_duration^(0+128)
  2552     0BD1                     l2747:
  2553                           
  2554                           ;main.c: 556:     buzzer_active = 1;
  2555     0BD1  3001               	movlw	1
  2556     0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  2557     0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  2558     0BD4  00B2               	movwf	_buzzer_active
  2559     0BD5                     l314:
  2560     0BD5  0008               	return
  2561     0BD6                     __end_of_trigger_buzzer:
  2562                           
  2563                           	psect	text2
  2564     0B12                     __ptext2:	
  2565 ;; *************** function _init_timer *****************
  2566 ;; Defined at:
  2567 ;;		line 469 in file "main.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;		None
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		None
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2581 ;;      Params:         0       0       0       0
  2582 ;;      Locals:         0       0       0       0
  2583 ;;      Temps:          0       0       0       0
  2584 ;;      Totals:         0       0       0       0
  2585 ;;Total ram usage:        0 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 1
  2588 ;; This function calls:
  2589 ;;		Nothing
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595     0B12                     _init_timer:	
  2596                           ;psect for function _init_timer
  2597                           
  2598     0B12                     l2757:	
  2599                           ;incstack = 0
  2600                           ; Regs used in _init_timer: []
  2601                           
  2602                           
  2603                           ;main.c: 470:   T1CON = 0b00110000;
  2604     0B12  3030               	movlw	48
  2605     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  2606     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  2607     0B15  0090               	movwf	16	;volatile
  2608                           
  2609                           ;main.c: 472:   TMR1H = 255;
  2610     0B16  30FF               	movlw	255
  2611     0B17  008F               	movwf	15	;volatile
  2612                           
  2613                           ;main.c: 473:   TMR1L = 14;
  2614     0B18  300E               	movlw	14
  2615     0B19  008E               	movwf	14	;volatile
  2616                           
  2617                           ;main.c: 475:   PIE1bits.TMR1IE = 1;
  2618     0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  2619     0B1B  1303               	bcf	3,6	;RP1=0, select bank1
  2620     0B1C  140C               	bsf	12,0	;volatile
  2621                           
  2622                           ;main.c: 476:   INTCONbits.PEIE = 1;
  2623     0B1D  170B               	bsf	11,6	;volatile
  2624                           
  2625                           ;main.c: 477:   INTCONbits.GIE = 1;
  2626     0B1E  178B               	bsf	11,7	;volatile
  2627                           
  2628                           ;main.c: 479:   T1CONbits.TMR1ON = 1;
  2629     0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  2630     0B20  1303               	bcf	3,6	;RP1=0, select bank0
  2631     0B21  1410               	bsf	16,0	;volatile
  2632     0B22                     l282:
  2633     0B22  0008               	return
  2634     0B23                     __end_of_init_timer:
  2635                           
  2636                           	psect	text3
  2637     0C04                     __ptext3:	
  2638 ;; *************** function _initSystem *****************
  2639 ;; Defined at:
  2640 ;;		line 355 in file "main.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2654 ;;      Params:         0       0       0       0
  2655 ;;      Locals:         0       0       0       0
  2656 ;;      Temps:          2       0       0       0
  2657 ;;      Totals:         2       0       0       0
  2658 ;;Total ram usage:        2 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668     0C04                     _initSystem:	
  2669                           ;psect for function _initSystem
  2670                           
  2671     0C04                     l2703:	
  2672                           ;incstack = 0
  2673                           ; Regs used in _initSystem: [wreg+status,2+status,0]
  2674                           
  2675                           
  2676                           ;main.c: 357:   OSCCONbits.IRCF = 0b111;
  2677     0C04  3070               	movlw	112
  2678     0C05  1683               	bsf	3,5	;RP0=1, select bank1
  2679     0C06  1303               	bcf	3,6	;RP1=0, select bank1
  2680     0C07  048F               	iorwf	15,f	;volatile
  2681     0C08                     l2705:
  2682                           
  2683                           ;main.c: 358:   ANSEL = 0b00011000;
  2684     0C08  3018               	movlw	24
  2685     0C09  1683               	bsf	3,5	;RP0=1, select bank3
  2686     0C0A  1703               	bsf	3,6	;RP1=1, select bank3
  2687     0C0B  0088               	movwf	8	;volatile
  2688     0C0C                     l2707:
  2689                           
  2690                           ;main.c: 359:   ANSELH = 0x00;
  2691     0C0C  0189               	clrf	9	;volatile
  2692     0C0D                     l2709:
  2693                           
  2694                           ;main.c: 360:   TRISA = 0b11101000;
  2695     0C0D  30E8               	movlw	232
  2696     0C0E  1683               	bsf	3,5	;RP0=1, select bank1
  2697     0C0F  1303               	bcf	3,6	;RP1=0, select bank1
  2698     0C10  0085               	movwf	5	;volatile
  2699     0C11                     l2711:
  2700                           
  2701                           ;main.c: 361:   TRISB = 0b00111000;
  2702     0C11  3038               	movlw	56
  2703     0C12  0086               	movwf	6	;volatile
  2704     0C13                     l2713:
  2705                           
  2706                           ;main.c: 362:   TRISC = 0b00000011;
  2707     0C13  3003               	movlw	3
  2708     0C14  0087               	movwf	7	;volatile
  2709     0C15                     l2715:
  2710                           
  2711                           ;main.c: 364:   ADCON0 = 0b00001101;
  2712     0C15  300D               	movlw	13
  2713     0C16  1283               	bcf	3,5	;RP0=0, select bank0
  2714     0C17  1303               	bcf	3,6	;RP1=0, select bank0
  2715     0C18  009F               	movwf	31	;volatile
  2716     0C19                     l2717:
  2717                           
  2718                           ;main.c: 365:   ADCON1 = 0b10000000;
  2719     0C19  3080               	movlw	128
  2720     0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  2721     0C1B  1303               	bcf	3,6	;RP1=0, select bank1
  2722     0C1C  009F               	movwf	31	;volatile
  2723     0C1D                     l2719:
  2724                           
  2725                           ;main.c: 367:   _delay((unsigned long)((10)*(8000000/4000.0)));
  2726     0C1D  301A               	movlw	26
  2727     0C1E  00F3               	movwf	??_initSystem+1
  2728     0C1F  30F8               	movlw	248
  2729     0C20  00F2               	movwf	??_initSystem
  2730     0C21                     u5037:
  2731     0C21  0BF2               	decfsz	??_initSystem,f
  2732     0C22  2C21               	goto	u5037
  2733     0C23  0BF3               	decfsz	??_initSystem+1,f
  2734     0C24  2C21               	goto	u5037
  2735     0C25  0000               	nop
  2736     0C26                     l2721:
  2737                           
  2738                           ;main.c: 368:   PORTA = 0x00;
  2739     0C26  1283               	bcf	3,5	;RP0=0, select bank0
  2740     0C27  1303               	bcf	3,6	;RP1=0, select bank0
  2741     0C28  0185               	clrf	5	;volatile
  2742     0C29                     l2723:
  2743                           
  2744                           ;main.c: 369:   PORTB = 0x00;
  2745     0C29  0186               	clrf	6	;volatile
  2746     0C2A                     l2725:
  2747                           
  2748                           ;main.c: 370:   PORTC = 0x00;
  2749     0C2A  0187               	clrf	7	;volatile
  2750     0C2B                     l2727:
  2751                           
  2752                           ;main.c: 372:   PORTCbits.RC5 = 0;
  2753     0C2B  1287               	bcf	7,5	;volatile
  2754     0C2C                     l2729:
  2755                           
  2756                           ;main.c: 373:   PORTCbits.RC6 = 0;
  2757     0C2C  1307               	bcf	7,6	;volatile
  2758     0C2D                     l2731:
  2759                           
  2760                           ;main.c: 374:   PORTBbits.RB0 = 0;
  2761     0C2D  1006               	bcf	6,0	;volatile
  2762     0C2E                     l2733:
  2763                           
  2764                           ;main.c: 375:   PORTBbits.RB1 = 0;
  2765     0C2E  1086               	bcf	6,1	;volatile
  2766     0C2F                     l2735:
  2767                           
  2768                           ;main.c: 376:   PORTBbits.RB2 = 0;
  2769     0C2F  1106               	bcf	6,2	;volatile
  2770     0C30                     l2737:
  2771                           
  2772                           ;main.c: 377:   PORTCbits.RC7 = 0;
  2773     0C30  1387               	bcf	7,7	;volatile
  2774     0C31                     l2739:
  2775                           
  2776                           ;main.c: 379:   PORTCbits.RC4 = 0;
  2777     0C31  1207               	bcf	7,4	;volatile
  2778     0C32                     l250:
  2779     0C32  0008               	return
  2780     0C33                     __end_of_initSystem:
  2781                           
  2782                           	psect	text4
  2783     0F91                     __ptext4:	
  2784 ;; *************** function _initLCD *****************
  2785 ;; Defined at:
  2786 ;;		line 618 in file "main.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0, pclath, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2800 ;;      Params:         0       0       0       0
  2801 ;;      Locals:         0       0       0       0
  2802 ;;      Temps:          2       0       0       0
  2803 ;;      Totals:         2       0       0       0
  2804 ;;Total ram usage:        2 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 2
  2807 ;; This function calls:
  2808 ;;		_lcd_cmd
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814     0F91                     _initLCD:	
  2815                           ;psect for function _initLCD
  2816                           
  2817     0F91                     l2759:	
  2818                           ;incstack = 0
  2819                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  2820                           
  2821                           
  2822                           ;main.c: 620:   _delay((unsigned long)((15)*(8000000/4000.0)));
  2823     0F91  3027               	movlw	39
  2824     0F92  00F5               	movwf	??_initLCD+1
  2825     0F93  30F5               	movlw	245
  2826     0F94  00F4               	movwf	??_initLCD
  2827     0F95                     u5047:
  2828     0F95  0BF4               	decfsz	??_initLCD,f
  2829     0F96  2F95               	goto	u5047
  2830     0F97  0BF5               	decfsz	??_initLCD+1,f
  2831     0F98  2F95               	goto	u5047
  2832     0F99                     l2761:
  2833                           
  2834                           ;main.c: 624:   PORTCbits.RC5 = 0;
  2835     0F99  1283               	bcf	3,5	;RP0=0, select bank0
  2836     0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  2837     0F9B  1287               	bcf	7,5	;volatile
  2838     0F9C                     l2763:
  2839                           
  2840                           ;main.c: 625:   PORTCbits.RC7 = 0;
  2841     0F9C  1387               	bcf	7,7	;volatile
  2842     0F9D                     l2765:
  2843                           
  2844                           ;main.c: 626:   PORTBbits.RB2 = 0;
  2845     0F9D  1106               	bcf	6,2	;volatile
  2846     0F9E                     l2767:
  2847                           
  2848                           ;main.c: 627:   PORTBbits.RB1 = 1;
  2849     0F9E  1486               	bsf	6,1	;volatile
  2850     0F9F                     l2769:
  2851                           
  2852                           ;main.c: 628:   PORTBbits.RB0 = 1;
  2853     0F9F  1406               	bsf	6,0	;volatile
  2854     0FA0                     l2771:
  2855                           
  2856                           ;main.c: 629:   PORTCbits.RC6 = 1;
  2857     0FA0  1707               	bsf	7,6	;volatile
  2858     0FA1                     l2773:
  2859                           
  2860                           ;main.c: 630:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2861     0FA1  2FA2               	nop2	;2 cycle nop
  2862     0FA2                     l2775:
  2863                           
  2864                           ;main.c: 631:   PORTCbits.RC6 = 0;
  2865     0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  2866     0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  2867     0FA4  1307               	bcf	7,6	;volatile
  2868                           
  2869                           ;main.c: 632:   _delay((unsigned long)((5)*(8000000/4000.0)));
  2870     0FA5  300D               	movlw	13
  2871     0FA6  00F5               	movwf	??_initLCD+1
  2872     0FA7  30FB               	movlw	251
  2873     0FA8  00F4               	movwf	??_initLCD
  2874     0FA9                     u5057:
  2875     0FA9  0BF4               	decfsz	??_initLCD,f
  2876     0FAA  2FA9               	goto	u5057
  2877     0FAB  0BF5               	decfsz	??_initLCD+1,f
  2878     0FAC  2FA9               	goto	u5057
  2879     0FAD  2FAE               	nop2
  2880     0FAE                     l2777:
  2881                           
  2882                           ;main.c: 635:   PORTCbits.RC6 = 1;
  2883     0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  2884     0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  2885     0FB0  1707               	bsf	7,6	;volatile
  2886     0FB1                     l2779:
  2887                           
  2888                           ;main.c: 636:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2889     0FB1  2FB2               	nop2	;2 cycle nop
  2890     0FB2                     l2781:
  2891                           
  2892                           ;main.c: 637:   PORTCbits.RC6 = 0;
  2893     0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  2894     0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  2895     0FB4  1307               	bcf	7,6	;volatile
  2896                           
  2897                           ;main.c: 638:   _delay((unsigned long)((1)*(8000000/4000.0)));
  2898     0FB5  3003               	movlw	3
  2899     0FB6  00F5               	movwf	??_initLCD+1
  2900     0FB7  3097               	movlw	151
  2901     0FB8  00F4               	movwf	??_initLCD
  2902     0FB9                     u5067:
  2903     0FB9  0BF4               	decfsz	??_initLCD,f
  2904     0FBA  2FB9               	goto	u5067
  2905     0FBB  0BF5               	decfsz	??_initLCD+1,f
  2906     0FBC  2FB9               	goto	u5067
  2907     0FBD  2FBE               	nop2
  2908     0FBE                     l2783:
  2909                           
  2910                           ;main.c: 641:   PORTCbits.RC6 = 1;
  2911     0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  2912     0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  2913     0FC0  1707               	bsf	7,6	;volatile
  2914     0FC1                     l2785:
  2915                           
  2916                           ;main.c: 642:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2917     0FC1  2FC2               	nop2	;2 cycle nop
  2918     0FC2                     l2787:
  2919                           
  2920                           ;main.c: 643:   PORTCbits.RC6 = 0;
  2921     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  2922     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  2923     0FC4  1307               	bcf	7,6	;volatile
  2924                           
  2925                           ;main.c: 644:   _delay((unsigned long)((1)*(8000000/4000.0)));
  2926     0FC5  3003               	movlw	3
  2927     0FC6  00F5               	movwf	??_initLCD+1
  2928     0FC7  3097               	movlw	151
  2929     0FC8  00F4               	movwf	??_initLCD
  2930     0FC9                     u5077:
  2931     0FC9  0BF4               	decfsz	??_initLCD,f
  2932     0FCA  2FC9               	goto	u5077
  2933     0FCB  0BF5               	decfsz	??_initLCD+1,f
  2934     0FCC  2FC9               	goto	u5077
  2935     0FCD  2FCE               	nop2
  2936     0FCE                     l2789:
  2937                           
  2938                           ;main.c: 647:   PORTCbits.RC7 = 0;
  2939     0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  2940     0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  2941     0FD0  1387               	bcf	7,7	;volatile
  2942     0FD1                     l2791:
  2943                           
  2944                           ;main.c: 648:   PORTBbits.RB2 = 0;
  2945     0FD1  1106               	bcf	6,2	;volatile
  2946     0FD2                     l2793:
  2947                           
  2948                           ;main.c: 649:   PORTBbits.RB1 = 1;
  2949     0FD2  1486               	bsf	6,1	;volatile
  2950     0FD3                     l2795:
  2951                           
  2952                           ;main.c: 650:   PORTBbits.RB0 = 0;
  2953     0FD3  1006               	bcf	6,0	;volatile
  2954     0FD4                     l2797:
  2955                           
  2956                           ;main.c: 651:   PORTCbits.RC6 = 1;
  2957     0FD4  1707               	bsf	7,6	;volatile
  2958     0FD5                     l2799:
  2959                           
  2960                           ;main.c: 652:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  2961     0FD5  2FD6               	nop2	;2 cycle nop
  2962     0FD6                     l2801:
  2963                           
  2964                           ;main.c: 653:   PORTCbits.RC6 = 0;
  2965     0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  2966     0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  2967     0FD8  1307               	bcf	7,6	;volatile
  2968                           
  2969                           ;main.c: 654:   _delay((unsigned long)((1)*(8000000/4000.0)));
  2970     0FD9  3003               	movlw	3
  2971     0FDA  00F5               	movwf	??_initLCD+1
  2972     0FDB  3097               	movlw	151
  2973     0FDC  00F4               	movwf	??_initLCD
  2974     0FDD                     u5087:
  2975     0FDD  0BF4               	decfsz	??_initLCD,f
  2976     0FDE  2FDD               	goto	u5087
  2977     0FDF  0BF5               	decfsz	??_initLCD+1,f
  2978     0FE0  2FDD               	goto	u5087
  2979     0FE1  2FE2               	nop2
  2980     0FE2                     l2803:
  2981                           
  2982                           ;main.c: 658:   lcd_cmd(0x28);
  2983     0FE2  3028               	movlw	40
  2984     0FE3  158A  2650  158A   	fcall	_lcd_cmd
  2985     0FE6                     l2805:
  2986                           
  2987                           ;main.c: 661:   lcd_cmd(0x08);
  2988     0FE6  3008               	movlw	8
  2989     0FE7  158A  2650  158A   	fcall	_lcd_cmd
  2990     0FEA                     l2807:
  2991                           
  2992                           ;main.c: 664:   lcd_cmd(0x01);
  2993     0FEA  3001               	movlw	1
  2994     0FEB  158A  2650  158A   	fcall	_lcd_cmd
  2995     0FEE                     l2809:
  2996                           
  2997                           ;main.c: 665:   _delay((unsigned long)((2)*(8000000/4000.0)));
  2998     0FEE  3006               	movlw	6
  2999     0FEF  00F5               	movwf	??_initLCD+1
  3000     0FF0  3030               	movlw	48
  3001     0FF1  00F4               	movwf	??_initLCD
  3002     0FF2                     u5097:
  3003     0FF2  0BF4               	decfsz	??_initLCD,f
  3004     0FF3  2FF2               	goto	u5097
  3005     0FF4  0BF5               	decfsz	??_initLCD+1,f
  3006     0FF5  2FF2               	goto	u5097
  3007     0FF6  0000               	nop
  3008                           
  3009                           ;main.c: 668:   lcd_cmd(0x06);
  3010     0FF7  3006               	movlw	6
  3011     0FF8  158A  2650  158A   	fcall	_lcd_cmd
  3012                           
  3013                           ;main.c: 671:   lcd_cmd(0x0C);
  3014     0FFB  300C               	movlw	12
  3015     0FFC  158A  2650  158A   	fcall	_lcd_cmd
  3016     0FFF                     l334:
  3017     0FFF  0008               	return
  3018     1000                     __end_of_initLCD:
  3019                           
  3020                           	psect	text5
  3021     0488                     __ptext5:	
  3022 ;; *************** function _getsensorreadings *****************
  3023 ;; Defined at:
  3024 ;;		line 760 in file "main.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;		None
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  i               1   27[BANK0 ] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3038 ;;      Params:         0       0       0       0
  3039 ;;      Locals:         0       1       0       0
  3040 ;;      Temps:          0       8       0       0
  3041 ;;      Totals:         0       9       0       0
  3042 ;;Total ram usage:        9 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 2
  3045 ;; This function calls:
  3046 ;;		___lldiv
  3047 ;;		___lmul
  3048 ;;		_getSensorResults
  3049 ;;		_readADC
  3050 ;;		_setupTimer0
  3051 ;;		_startSensorReading
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057     0488                     _getsensorreadings:	
  3058                           ;psect for function _getsensorreadings
  3059                           
  3060     0488                     l2811:	
  3061                           ;incstack = 0
  3062                           ; Regs used in _getsensorreadings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3063                           
  3064                           
  3065                           ;main.c: 761:   for (uint8_t i = 0; i < 16; i++) {
  3066     0488  1283               	bcf	3,5	;RP0=0, select bank0
  3067     0489  1303               	bcf	3,6	;RP1=0, select bank0
  3068     048A  01E2               	clrf	getsensorreadings@i
  3069     048B                     l2817:
  3070                           
  3071                           ;main.c: 762:     voltagesum += readADC(3);
  3072     048B  3003               	movlw	3
  3073     048C  158A  238D  118A   	fcall	_readADC
  3074     048F  0872               	movf	?_readADC,w
  3075     0490  1683               	bsf	3,5	;RP0=1, select bank1
  3076     0491  1303               	bcf	3,6	;RP1=0, select bank1
  3077     0492  07BA               	addwf	_voltagesum^(0+128),f
  3078     0493  1803               	skipnc
  3079     0494  0ABB               	incf	(_voltagesum+1)^(0+128),f
  3080     0495  0873               	movf	?_readADC+1,w
  3081     0496  07BB               	addwf	(_voltagesum+1)^(0+128),f
  3082     0497                     l2819:
  3083                           
  3084                           ;main.c: 763:   }
  3085     0497  3001               	movlw	1
  3086     0498  1283               	bcf	3,5	;RP0=0, select bank0
  3087     0499  1303               	bcf	3,6	;RP1=0, select bank0
  3088     049A  07E2               	addwf	getsensorreadings@i,f
  3089     049B                     l2821:
  3090     049B  3010               	movlw	16
  3091     049C  0262               	subwf	getsensorreadings@i,w
  3092     049D  1C03               	skipc
  3093     049E  2CA0               	goto	u4211
  3094     049F  2CA1               	goto	u4210
  3095     04A0                     u4211:
  3096     04A0  2C8B               	goto	l2817
  3097     04A1                     u4210:
  3098     04A1                     l2823:
  3099                           
  3100                           ;main.c: 764:   voltageraw = voltagesum >> 4;
  3101     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  3102     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  3103     04A3  0E3A               	swapf	_voltagesum^(0+128),w
  3104     04A4  390F               	andlw	15
  3105     04A5  00BE               	movwf	_voltageraw^(0+128)
  3106     04A6  0E3B               	swapf	(_voltagesum+1)^(0+128),w
  3107     04A7  39F0               	andlw	240
  3108     04A8  04BE               	iorwf	_voltageraw^(0+128),f
  3109     04A9  0E3B               	swapf	(_voltagesum+1)^(0+128),w
  3110     04AA  390F               	andlw	15
  3111     04AB  00BF               	movwf	(_voltageraw^(0+128)+1)
  3112     04AC                     l2825:
  3113                           
  3114                           ;main.c: 765:   voltagesum = 0;
  3115     04AC  01BA               	clrf	_voltagesum^(0+128)
  3116     04AD  01BB               	clrf	(_voltagesum+1)^(0+128)
  3117     04AE                     l2827:
  3118                           
  3119                           ;main.c: 770:   if (seconds_counter % 1 == 0 && !sensors_reading_in_progress &&
  3120     04AE  3000               	movlw	0
  3121     04AF  1283               	bcf	3,5	;RP0=0, select bank0
  3122     04B0  1303               	bcf	3,6	;RP1=0, select bank0
  3123     04B1  00CF               	movwf	___lldiv@divisor+3
  3124     04B2  3000               	movlw	0
  3125     04B3  00CE               	movwf	___lldiv@divisor+2
  3126     04B4  3003               	movlw	3
  3127     04B5  00CD               	movwf	___lldiv@divisor+1
  3128     04B6  30FF               	movlw	255
  3129     04B7  00CC               	movwf	___lldiv@divisor
  3130     04B8  1683               	bsf	3,5	;RP0=1, select bank1
  3131     04B9  1303               	bcf	3,6	;RP1=0, select bank1
  3132     04BA  083E               	movf	_voltageraw^(0+128),w
  3133     04BB  00F2               	movwf	___lmul@multiplier
  3134     04BC  083F               	movf	(_voltageraw+1)^(0+128),w
  3135     04BD  00F3               	movwf	___lmul@multiplier+1
  3136     04BE  01F4               	clrf	___lmul@multiplier+2
  3137     04BF  01F5               	clrf	___lmul@multiplier+3
  3138     04C0  3000               	movlw	0
  3139     04C1  00F9               	movwf	___lmul@multiplicand+3
  3140     04C2  3000               	movlw	0
  3141     04C3  00F8               	movwf	___lmul@multiplicand+2
  3142     04C4  3000               	movlw	0
  3143     04C5  00F7               	movwf	___lmul@multiplicand+1
  3144     04C6  30EB               	movlw	235
  3145     04C7  00F6               	movwf	___lmul@multiplicand
  3146     04C8  158A  2433  118A   	fcall	___lmul
  3147     04CB  0875               	movf	?___lmul+3,w
  3148     04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3149     04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3150     04CE  00D3               	movwf	___lldiv@dividend+3
  3151     04CF  0874               	movf	?___lmul+2,w
  3152     04D0  00D2               	movwf	___lldiv@dividend+2
  3153     04D1  0873               	movf	?___lmul+1,w
  3154     04D2  00D1               	movwf	___lldiv@dividend+1
  3155     04D3  0872               	movf	?___lmul,w
  3156     04D4  00D0               	movwf	___lldiv@dividend
  3157     04D5  158A  2581  118A   	fcall	___lldiv
  3158     04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3159     04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3160     04DA  084C               	movf	?___lldiv,w
  3161     04DB  3E55               	addlw	85
  3162     04DC  00C0               	movwf	_voltage
  3163     04DD                     l2829:
  3164     04DD  083C               	movf	_sensors_reading_in_progress,w	;volatile
  3165     04DE  1D03               	btfss	3,2
  3166     04DF  2CE1               	goto	u4221
  3167     04E0  2CE2               	goto	u4220
  3168     04E1                     u4221:
  3169     04E1  2CED               	goto	l2835
  3170     04E2                     u4220:
  3171     04E2                     l2831:
  3172     04E2  083D               	movf	_sensors_reading_complete,w	;volatile
  3173     04E3  1D03               	btfss	3,2
  3174     04E4  2CE6               	goto	u4231
  3175     04E5  2CE7               	goto	u4230
  3176     04E6                     u4231:
  3177     04E6  2CED               	goto	l2835
  3178     04E7                     u4230:
  3179     04E7                     l2833:
  3180                           
  3181                           ;main.c: 771:       !sensors_reading_complete) {;main.c: 772:     setupTimer0();
  3182     04E7  158A  22E5  118A   	fcall	_setupTimer0
  3183                           
  3184                           ;main.c: 773:     startSensorReading();
  3185     04EA  158A  22F3  118A   	fcall	_startSensorReading
  3186     04ED                     l2835:
  3187                           
  3188                           ;main.c: 776:   if (getSensorResults(&low_sensor_active, &high_sensor_active,
  3189     04ED  3046               	movlw	(low (_low_sensor_active| 0))& (0+255)
  3190     04EE  00F2               	movwf	getSensorResults@low_active
  3191     04EF  3045               	movlw	(low (_high_sensor_active| 0))& (0+255)
  3192     04F0  00F3               	movwf	getSensorResults@high_active
  3193     04F1  3044               	movlw	(low (_flow_sensor_active| 0))& (0+255)
  3194     04F2  00F4               	movwf	getSensorResults@flow_active
  3195     04F3  158A  23D6  118A   	fcall	_getSensorResults
  3196     04F6  3A00               	xorlw	0
  3197     04F7  1903               	skipnz
  3198     04F8  2CFA               	goto	u4241
  3199     04F9  2CFB               	goto	u4240
  3200     04FA                     u4241:
  3201     04FA  2D0F               	goto	l2847
  3202     04FB                     u4240:
  3203     04FB                     l2837:
  3204                           
  3205                           ;main.c: 777:                        &flow_sensor_active)) {;main.c: 779:     if (high_s
      +                          ensor_active) {
  3206     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3207     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3208     04FD  0845               	movf	_high_sensor_active,w
  3209     04FE  1903               	btfsc	3,2
  3210     04FF  2D01               	goto	u4251
  3211     0500  2D02               	goto	u4250
  3212     0501                     u4251:
  3213     0501  2D03               	goto	l2841
  3214     0502                     u4250:
  3215     0502                     l2839:
  3216                           
  3217                           ;main.c: 781:       pretankempty = 0;
  3218     0502  01B5               	clrf	_pretankempty
  3219     0503                     l2841:
  3220                           
  3221                           ;main.c: 783:     if (!low_sensor_active && !high_sensor_active) {
  3222     0503  0846               	movf	_low_sensor_active,w
  3223     0504  1D03               	btfss	3,2
  3224     0505  2D07               	goto	u4261
  3225     0506  2D08               	goto	u4260
  3226     0507                     u4261:
  3227     0507  2D0F               	goto	l2847
  3228     0508                     u4260:
  3229     0508                     l2843:
  3230     0508  0845               	movf	_high_sensor_active,w
  3231     0509  1D03               	btfss	3,2
  3232     050A  2D0C               	goto	u4271
  3233     050B  2D0D               	goto	u4270
  3234     050C                     u4271:
  3235     050C  2D0F               	goto	l2847
  3236     050D                     u4270:
  3237     050D                     l2845:
  3238                           
  3239                           ;main.c: 785:       pretankempty = 1;
  3240     050D  3001               	movlw	1
  3241     050E  00B5               	movwf	_pretankempty
  3242     050F                     l2847:
  3243                           
  3244                           ;main.c: 789:   if (pretankempty != tankempty) {
  3245     050F  1283               	bcf	3,5	;RP0=0, select bank0
  3246     0510  1303               	bcf	3,6	;RP1=0, select bank0
  3247     0511  0835               	movf	_pretankempty,w
  3248     0512  0636               	xorwf	_tankempty,w
  3249     0513  1903               	skipnz
  3250     0514  2D16               	goto	u4281
  3251     0515  2D17               	goto	u4280
  3252     0516                     u4281:
  3253     0516  2D63               	goto	l2857
  3254     0517                     u4280:
  3255     0517                     l2849:
  3256                           
  3257                           ;main.c: 790:     if (lastsensorcheck == 0) {
  3258     0517  0823               	movf	_lastsensorcheck+3,w
  3259     0518  0422               	iorwf	_lastsensorcheck+2,w
  3260     0519  0421               	iorwf	_lastsensorcheck+1,w
  3261     051A  0420               	iorwf	_lastsensorcheck,w
  3262     051B  1D03               	skipz
  3263     051C  2D1E               	goto	u4291
  3264     051D  2D1F               	goto	u4290
  3265     051E                     u4291:
  3266     051E  2D28               	goto	l2853
  3267     051F                     u4290:
  3268     051F                     l2851:
  3269                           
  3270                           ;main.c: 791:       lastsensorcheck = millis;
  3271     051F  082B               	movf	_millis+3,w	;volatile
  3272     0520  00A3               	movwf	_lastsensorcheck+3
  3273     0521  082A               	movf	_millis+2,w	;volatile
  3274     0522  00A2               	movwf	_lastsensorcheck+2
  3275     0523  0829               	movf	_millis+1,w	;volatile
  3276     0524  00A1               	movwf	_lastsensorcheck+1
  3277     0525  0828               	movf	_millis,w	;volatile
  3278     0526  00A0               	movwf	_lastsensorcheck
  3279                           
  3280                           ;main.c: 792:     } else if (millis - lastsensorcheck >= sensorbuffer) {
  3281     0527  2DA3               	goto	l363
  3282     0528                     l2853:
  3283     0528  0828               	movf	_millis,w	;volatile
  3284     0529  00DA               	movwf	??_getsensorreadings
  3285     052A  0829               	movf	_millis+1,w	;volatile
  3286     052B  00DB               	movwf	??_getsensorreadings+1
  3287     052C  082A               	movf	_millis+2,w	;volatile
  3288     052D  00DC               	movwf	??_getsensorreadings+2
  3289     052E  082B               	movf	_millis+3,w	;volatile
  3290     052F  00DD               	movwf	??_getsensorreadings+3
  3291     0530  0820               	movf	_lastsensorcheck,w
  3292     0531  02DA               	subwf	??_getsensorreadings,f
  3293     0532  0821               	movf	_lastsensorcheck+1,w
  3294     0533  1C03               	skipc
  3295     0534  0F21               	incfsz	_lastsensorcheck+1,w
  3296     0535  2D37               	goto	u4301
  3297     0536  2D38               	goto	u4302
  3298     0537                     u4301:
  3299     0537  02DB               	subwf	??_getsensorreadings+1,f
  3300     0538                     u4302:
  3301     0538  0822               	movf	_lastsensorcheck+2,w
  3302     0539  1C03               	skipc
  3303     053A  0F22               	incfsz	_lastsensorcheck+2,w
  3304     053B  2D3D               	goto	u4303
  3305     053C  2D3E               	goto	u4304
  3306     053D                     u4303:
  3307     053D  02DC               	subwf	??_getsensorreadings+2,f
  3308     053E                     u4304:
  3309     053E  0823               	movf	_lastsensorcheck+3,w
  3310     053F  1C03               	skipc
  3311     0540  0F23               	incfsz	_lastsensorcheck+3,w
  3312     0541  2D43               	goto	u4305
  3313     0542  2D44               	goto	u4306
  3314     0543                     u4305:
  3315     0543  02DD               	subwf	??_getsensorreadings+3,f
  3316     0544                     u4306:
  3317     0544  085D               	movf	??_getsensorreadings+3,w
  3318     0545  1D03               	btfss	3,2
  3319     0546  2D56               	goto	u4310
  3320     0547  085C               	movf	??_getsensorreadings+2,w
  3321     0548  1D03               	btfss	3,2
  3322     0549  2D56               	goto	u4310
  3323     054A  3027               	movlw	39
  3324     054B  025B               	subwf	??_getsensorreadings+1,w
  3325     054C  1D03               	skipz
  3326     054D  2D52               	goto	u4313
  3327     054E  3010               	movlw	16
  3328     054F  025A               	subwf	??_getsensorreadings,w
  3329     0550  1D03               	skipz
  3330     0551  2D52               	goto	u4313
  3331     0552                     u4313:
  3332     0552  1C03               	btfss	3,0
  3333     0553  2D55               	goto	u4311
  3334     0554  2D56               	goto	u4310
  3335     0555                     u4311:
  3336     0555  2DA3               	goto	l363
  3337     0556                     u4310:
  3338     0556                     l2855:
  3339                           
  3340                           ;main.c: 793:       lastsensorcheck = 0;
  3341     0556  3000               	movlw	0
  3342     0557  1283               	bcf	3,5	;RP0=0, select bank0
  3343     0558  1303               	bcf	3,6	;RP1=0, select bank0
  3344     0559  00A3               	movwf	_lastsensorcheck+3
  3345     055A  3000               	movlw	0
  3346     055B  00A2               	movwf	_lastsensorcheck+2
  3347     055C  3000               	movlw	0
  3348     055D  00A1               	movwf	_lastsensorcheck+1
  3349     055E  3000               	movlw	0
  3350     055F  00A0               	movwf	_lastsensorcheck
  3351                           
  3352                           ;main.c: 794:       tankempty = pretankempty;
  3353     0560  0835               	movf	_pretankempty,w
  3354     0561  00B6               	movwf	_tankempty
  3355     0562  2DA3               	goto	l363
  3356     0563                     l2857:
  3357     0563  0823               	movf	_lastsensorcheck+3,w
  3358     0564  0422               	iorwf	_lastsensorcheck+2,w
  3359     0565  0421               	iorwf	_lastsensorcheck+1,w
  3360     0566  0420               	iorwf	_lastsensorcheck,w
  3361     0567  1903               	skipnz
  3362     0568  2D6A               	goto	u4321
  3363     0569  2D6B               	goto	u4320
  3364     056A                     u4321:
  3365     056A  2DA3               	goto	l363
  3366     056B                     u4320:
  3367     056B                     l2859:
  3368     056B  0828               	movf	_millis,w	;volatile
  3369     056C  00DA               	movwf	??_getsensorreadings
  3370     056D  0829               	movf	_millis+1,w	;volatile
  3371     056E  00DB               	movwf	??_getsensorreadings+1
  3372     056F  082A               	movf	_millis+2,w	;volatile
  3373     0570  00DC               	movwf	??_getsensorreadings+2
  3374     0571  082B               	movf	_millis+3,w	;volatile
  3375     0572  00DD               	movwf	??_getsensorreadings+3
  3376     0573  0820               	movf	_lastsensorcheck,w
  3377     0574  02DA               	subwf	??_getsensorreadings,f
  3378     0575  0821               	movf	_lastsensorcheck+1,w
  3379     0576  1C03               	skipc
  3380     0577  0F21               	incfsz	_lastsensorcheck+1,w
  3381     0578  2D7A               	goto	u4331
  3382     0579  2D7B               	goto	u4332
  3383     057A                     u4331:
  3384     057A  02DB               	subwf	??_getsensorreadings+1,f
  3385     057B                     u4332:
  3386     057B  0822               	movf	_lastsensorcheck+2,w
  3387     057C  1C03               	skipc
  3388     057D  0F22               	incfsz	_lastsensorcheck+2,w
  3389     057E  2D80               	goto	u4333
  3390     057F  2D81               	goto	u4334
  3391     0580                     u4333:
  3392     0580  02DC               	subwf	??_getsensorreadings+2,f
  3393     0581                     u4334:
  3394     0581  0823               	movf	_lastsensorcheck+3,w
  3395     0582  1C03               	skipc
  3396     0583  0F23               	incfsz	_lastsensorcheck+3,w
  3397     0584  2D86               	goto	u4335
  3398     0585  2D87               	goto	u4336
  3399     0586                     u4335:
  3400     0586  02DD               	subwf	??_getsensorreadings+3,f
  3401     0587                     u4336:
  3402     0587  085D               	movf	??_getsensorreadings+3,w
  3403     0588  1D03               	btfss	3,2
  3404     0589  2D99               	goto	u4340
  3405     058A  085C               	movf	??_getsensorreadings+2,w
  3406     058B  1D03               	btfss	3,2
  3407     058C  2D99               	goto	u4340
  3408     058D  3027               	movlw	39
  3409     058E  025B               	subwf	??_getsensorreadings+1,w
  3410     058F  1D03               	skipz
  3411     0590  2D95               	goto	u4343
  3412     0591  3010               	movlw	16
  3413     0592  025A               	subwf	??_getsensorreadings,w
  3414     0593  1D03               	skipz
  3415     0594  2D95               	goto	u4343
  3416     0595                     u4343:
  3417     0595  1C03               	btfss	3,0
  3418     0596  2D98               	goto	u4341
  3419     0597  2D99               	goto	u4340
  3420     0598                     u4341:
  3421     0598  2DA3               	goto	l363
  3422     0599                     u4340:
  3423     0599                     l2861:
  3424                           
  3425                           ;main.c: 797:              (millis - lastsensorcheck >= sensorbuffer)) {;main.c: 798:   
      +                            lastsensorcheck = 0;
  3426     0599  3000               	movlw	0
  3427     059A  1283               	bcf	3,5	;RP0=0, select bank0
  3428     059B  1303               	bcf	3,6	;RP1=0, select bank0
  3429     059C  00A3               	movwf	_lastsensorcheck+3
  3430     059D  3000               	movlw	0
  3431     059E  00A2               	movwf	_lastsensorcheck+2
  3432     059F  3000               	movlw	0
  3433     05A0  00A1               	movwf	_lastsensorcheck+1
  3434     05A1  3000               	movlw	0
  3435     05A2  00A0               	movwf	_lastsensorcheck
  3436     05A3                     l363:
  3437                           
  3438                           ;main.c: 801:   if (flow_sensor_active != flowactive) {
  3439     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3440     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3441     05A5  0844               	movf	_flow_sensor_active,w
  3442     05A6  0634               	xorwf	_flowactive,w
  3443     05A7  1903               	skipnz
  3444     05A8  2DAA               	goto	u4351
  3445     05A9  2DAB               	goto	u4350
  3446     05AA                     u4351:
  3447     05AA  2DF1               	goto	l2873
  3448     05AB                     u4350:
  3449     05AB                     l2863:
  3450                           
  3451                           ;main.c: 802:     if (lastflowcheck == 0) {
  3452     05AB  0830               	movf	_lastflowcheck,w
  3453     05AC  0431               	iorwf	_lastflowcheck+1,w
  3454     05AD  1D03               	btfss	3,2
  3455     05AE  2DB0               	goto	u4361
  3456     05AF  2DB1               	goto	u4360
  3457     05B0                     u4361:
  3458     05B0  2DB6               	goto	l2867
  3459     05B1                     u4360:
  3460     05B1                     l2865:
  3461                           
  3462                           ;main.c: 803:       lastflowcheck = millis;
  3463     05B1  0829               	movf	_millis+1,w	;volatile
  3464     05B2  00B1               	movwf	_lastflowcheck+1
  3465     05B3  0828               	movf	_millis,w	;volatile
  3466     05B4  00B0               	movwf	_lastflowcheck
  3467                           
  3468                           ;main.c: 804:     } else if (millis - lastflowcheck >= sensorbuffer) {
  3469     05B5  2E2F               	goto	l2879
  3470     05B6                     l2867:
  3471     05B6  0830               	movf	_lastflowcheck,w
  3472     05B7  00DA               	movwf	??_getsensorreadings
  3473     05B8  0831               	movf	_lastflowcheck+1,w
  3474     05B9  00DB               	movwf	??_getsensorreadings+1
  3475     05BA  01DC               	clrf	??_getsensorreadings+2
  3476     05BB  01DD               	clrf	??_getsensorreadings+3
  3477     05BC  0828               	movf	_millis,w	;volatile
  3478     05BD  00DE               	movwf	??_getsensorreadings+4
  3479     05BE  0829               	movf	_millis+1,w	;volatile
  3480     05BF  00DF               	movwf	??_getsensorreadings+5
  3481     05C0  082A               	movf	_millis+2,w	;volatile
  3482     05C1  00E0               	movwf	??_getsensorreadings+6
  3483     05C2  082B               	movf	_millis+3,w	;volatile
  3484     05C3  00E1               	movwf	??_getsensorreadings+7
  3485     05C4  085A               	movf	??_getsensorreadings,w
  3486     05C5  02DE               	subwf	??_getsensorreadings+4,f
  3487     05C6  085B               	movf	??_getsensorreadings+1,w
  3488     05C7  1C03               	skipc
  3489     05C8  0F5B               	incfsz	??_getsensorreadings+1,w
  3490     05C9  2DCB               	goto	u4371
  3491     05CA  2DCC               	goto	u4372
  3492     05CB                     u4371:
  3493     05CB  02DF               	subwf	??_getsensorreadings+5,f
  3494     05CC                     u4372:
  3495     05CC  085C               	movf	??_getsensorreadings+2,w
  3496     05CD  1C03               	skipc
  3497     05CE  0F5C               	incfsz	??_getsensorreadings+2,w
  3498     05CF  2DD1               	goto	u4373
  3499     05D0  2DD2               	goto	u4374
  3500     05D1                     u4373:
  3501     05D1  02E0               	subwf	??_getsensorreadings+6,f
  3502     05D2                     u4374:
  3503     05D2  085D               	movf	??_getsensorreadings+3,w
  3504     05D3  1C03               	skipc
  3505     05D4  0F5D               	incfsz	??_getsensorreadings+3,w
  3506     05D5  2DD7               	goto	u4375
  3507     05D6  2DD8               	goto	u4376
  3508     05D7                     u4375:
  3509     05D7  02E1               	subwf	??_getsensorreadings+7,f
  3510     05D8                     u4376:
  3511     05D8  0861               	movf	??_getsensorreadings+7,w
  3512     05D9  1D03               	btfss	3,2
  3513     05DA  2DEA               	goto	u4380
  3514     05DB  0860               	movf	??_getsensorreadings+6,w
  3515     05DC  1D03               	btfss	3,2
  3516     05DD  2DEA               	goto	u4380
  3517     05DE  3027               	movlw	39
  3518     05DF  025F               	subwf	??_getsensorreadings+5,w
  3519     05E0  1D03               	skipz
  3520     05E1  2DE6               	goto	u4383
  3521     05E2  3010               	movlw	16
  3522     05E3  025E               	subwf	??_getsensorreadings+4,w
  3523     05E4  1D03               	skipz
  3524     05E5  2DE6               	goto	u4383
  3525     05E6                     u4383:
  3526     05E6  1C03               	btfss	3,0
  3527     05E7  2DE9               	goto	u4381
  3528     05E8  2DEA               	goto	u4380
  3529     05E9                     u4381:
  3530     05E9  2E2F               	goto	l2879
  3531     05EA                     u4380:
  3532     05EA                     l2869:
  3533                           
  3534                           ;main.c: 805:       lastflowcheck = 0;
  3535     05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3536     05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3537     05EC  01B0               	clrf	_lastflowcheck
  3538     05ED  01B1               	clrf	_lastflowcheck+1
  3539     05EE                     l2871:
  3540                           
  3541                           ;main.c: 806:       flowactive = flow_sensor_active;
  3542     05EE  0844               	movf	_flow_sensor_active,w
  3543     05EF  00B4               	movwf	_flowactive
  3544     05F0  2E2F               	goto	l2879
  3545     05F1                     l2873:
  3546     05F1  0830               	movf	_lastflowcheck,w
  3547     05F2  0431               	iorwf	_lastflowcheck+1,w
  3548     05F3  1903               	btfsc	3,2
  3549     05F4  2DF6               	goto	u4391
  3550     05F5  2DF7               	goto	u4390
  3551     05F6                     u4391:
  3552     05F6  2E2F               	goto	l2879
  3553     05F7                     u4390:
  3554     05F7                     l2875:
  3555     05F7  0830               	movf	_lastflowcheck,w
  3556     05F8  00DA               	movwf	??_getsensorreadings
  3557     05F9  0831               	movf	_lastflowcheck+1,w
  3558     05FA  00DB               	movwf	??_getsensorreadings+1
  3559     05FB  01DC               	clrf	??_getsensorreadings+2
  3560     05FC  01DD               	clrf	??_getsensorreadings+3
  3561     05FD  0828               	movf	_millis,w	;volatile
  3562     05FE  00DE               	movwf	??_getsensorreadings+4
  3563     05FF  0829               	movf	_millis+1,w	;volatile
  3564     0600  00DF               	movwf	??_getsensorreadings+5
  3565     0601  082A               	movf	_millis+2,w	;volatile
  3566     0602  00E0               	movwf	??_getsensorreadings+6
  3567     0603  082B               	movf	_millis+3,w	;volatile
  3568     0604  00E1               	movwf	??_getsensorreadings+7
  3569     0605  085A               	movf	??_getsensorreadings,w
  3570     0606  02DE               	subwf	??_getsensorreadings+4,f
  3571     0607  085B               	movf	??_getsensorreadings+1,w
  3572     0608  1C03               	skipc
  3573     0609  0F5B               	incfsz	??_getsensorreadings+1,w
  3574     060A  2E0C               	goto	u4401
  3575     060B  2E0D               	goto	u4402
  3576     060C                     u4401:
  3577     060C  02DF               	subwf	??_getsensorreadings+5,f
  3578     060D                     u4402:
  3579     060D  085C               	movf	??_getsensorreadings+2,w
  3580     060E  1C03               	skipc
  3581     060F  0F5C               	incfsz	??_getsensorreadings+2,w
  3582     0610  2E12               	goto	u4403
  3583     0611  2E13               	goto	u4404
  3584     0612                     u4403:
  3585     0612  02E0               	subwf	??_getsensorreadings+6,f
  3586     0613                     u4404:
  3587     0613  085D               	movf	??_getsensorreadings+3,w
  3588     0614  1C03               	skipc
  3589     0615  0F5D               	incfsz	??_getsensorreadings+3,w
  3590     0616  2E18               	goto	u4405
  3591     0617  2E19               	goto	u4406
  3592     0618                     u4405:
  3593     0618  02E1               	subwf	??_getsensorreadings+7,f
  3594     0619                     u4406:
  3595     0619  0861               	movf	??_getsensorreadings+7,w
  3596     061A  1D03               	btfss	3,2
  3597     061B  2E2B               	goto	u4410
  3598     061C  0860               	movf	??_getsensorreadings+6,w
  3599     061D  1D03               	btfss	3,2
  3600     061E  2E2B               	goto	u4410
  3601     061F  3027               	movlw	39
  3602     0620  025F               	subwf	??_getsensorreadings+5,w
  3603     0621  1D03               	skipz
  3604     0622  2E27               	goto	u4413
  3605     0623  3010               	movlw	16
  3606     0624  025E               	subwf	??_getsensorreadings+4,w
  3607     0625  1D03               	skipz
  3608     0626  2E27               	goto	u4413
  3609     0627                     u4413:
  3610     0627  1C03               	btfss	3,0
  3611     0628  2E2A               	goto	u4411
  3612     0629  2E2B               	goto	u4410
  3613     062A                     u4411:
  3614     062A  2E2F               	goto	l2879
  3615     062B                     u4410:
  3616     062B                     l2877:
  3617                           
  3618                           ;main.c: 809:     lastflowcheck = 0;
  3619     062B  1283               	bcf	3,5	;RP0=0, select bank0
  3620     062C  1303               	bcf	3,6	;RP1=0, select bank0
  3621     062D  01B0               	clrf	_lastflowcheck
  3622     062E  01B1               	clrf	_lastflowcheck+1
  3623     062F                     l2879:
  3624                           
  3625                           ;main.c: 811:   if ((millis - last_millis) >= 1000) {
  3626     062F  1283               	bcf	3,5	;RP0=0, select bank0
  3627     0630  1303               	bcf	3,6	;RP1=0, select bank0
  3628     0631  0828               	movf	_millis,w	;volatile
  3629     0632  00DA               	movwf	??_getsensorreadings
  3630     0633  0829               	movf	_millis+1,w	;volatile
  3631     0634  00DB               	movwf	??_getsensorreadings+1
  3632     0635  082A               	movf	_millis+2,w	;volatile
  3633     0636  00DC               	movwf	??_getsensorreadings+2
  3634     0637  082B               	movf	_millis+3,w	;volatile
  3635     0638  00DD               	movwf	??_getsensorreadings+3
  3636     0639  1683               	bsf	3,5	;RP0=1, select bank1
  3637     063A  1303               	bcf	3,6	;RP1=0, select bank1
  3638     063B  0834               	movf	_last_millis^(0+128),w
  3639     063C  1283               	bcf	3,5	;RP0=0, select bank0
  3640     063D  1303               	bcf	3,6	;RP1=0, select bank0
  3641     063E  02DA               	subwf	??_getsensorreadings,f
  3642     063F  1683               	bsf	3,5	;RP0=1, select bank1
  3643     0640  1303               	bcf	3,6	;RP1=0, select bank1
  3644     0641  0835               	movf	(_last_millis+1)^(0+128),w
  3645     0642  1C03               	skipc
  3646     0643  0F35               	incfsz	(_last_millis+1)^(0+128),w
  3647     0644  2E46               	goto	u4421
  3648     0645  2E49               	goto	u4422
  3649     0646                     u4421:
  3650     0646  1283               	bcf	3,5	;RP0=0, select bank0
  3651     0647  1303               	bcf	3,6	;RP1=0, select bank0
  3652     0648  02DB               	subwf	??_getsensorreadings+1,f
  3653     0649                     u4422:
  3654     0649  1683               	bsf	3,5	;RP0=1, select bank1
  3655     064A  1303               	bcf	3,6	;RP1=0, select bank1
  3656     064B  0836               	movf	(_last_millis+2)^(0+128),w
  3657     064C  1C03               	skipc
  3658     064D  0F36               	incfsz	(_last_millis+2)^(0+128),w
  3659     064E  2E50               	goto	u4423
  3660     064F  2E53               	goto	u4424
  3661     0650                     u4423:
  3662     0650  1283               	bcf	3,5	;RP0=0, select bank0
  3663     0651  1303               	bcf	3,6	;RP1=0, select bank0
  3664     0652  02DC               	subwf	??_getsensorreadings+2,f
  3665     0653                     u4424:
  3666     0653  1683               	bsf	3,5	;RP0=1, select bank1
  3667     0654  1303               	bcf	3,6	;RP1=0, select bank1
  3668     0655  0837               	movf	(_last_millis+3)^(0+128),w
  3669     0656  1C03               	skipc
  3670     0657  0F37               	incfsz	(_last_millis+3)^(0+128),w
  3671     0658  2E5A               	goto	u4425
  3672     0659  2E5D               	goto	u4426
  3673     065A                     u4425:
  3674     065A  1283               	bcf	3,5	;RP0=0, select bank0
  3675     065B  1303               	bcf	3,6	;RP1=0, select bank0
  3676     065C  02DD               	subwf	??_getsensorreadings+3,f
  3677     065D                     u4426:
  3678     065D  1683               	bsf	3,5	;RP0=1, select bank1
  3679     065E  1303               	bcf	3,6	;RP1=0, select bank1
  3680     065F  1283               	bcf	3,5	;RP0=0, select bank0
  3681     0660  1303               	bcf	3,6	;RP1=0, select bank0
  3682     0661  085D               	movf	??_getsensorreadings+3,w
  3683     0662  1D03               	btfss	3,2
  3684     0663  2E73               	goto	u4430
  3685     0664  085C               	movf	??_getsensorreadings+2,w
  3686     0665  1D03               	btfss	3,2
  3687     0666  2E73               	goto	u4430
  3688     0667  3003               	movlw	3
  3689     0668  025B               	subwf	??_getsensorreadings+1,w
  3690     0669  1D03               	skipz
  3691     066A  2E6F               	goto	u4433
  3692     066B  30E8               	movlw	232
  3693     066C  025A               	subwf	??_getsensorreadings,w
  3694     066D  1D03               	skipz
  3695     066E  2E6F               	goto	u4433
  3696     066F                     u4433:
  3697     066F  1C03               	btfss	3,0
  3698     0670  2E72               	goto	u4431
  3699     0671  2E73               	goto	u4430
  3700     0672                     u4431:
  3701     0672  2E99               	goto	l372
  3702     0673                     u4430:
  3703     0673                     l2881:
  3704                           
  3705                           ;main.c: 812:     seconds_counter++;
  3706     0673  3001               	movlw	1
  3707     0674  1283               	bcf	3,5	;RP0=0, select bank0
  3708     0675  1303               	bcf	3,6	;RP1=0, select bank0
  3709     0676  07AC               	addwf	_seconds_counter,f	;volatile
  3710     0677  3000               	movlw	0
  3711     0678  1803               	skipnc
  3712     0679  3001               	movlw	1
  3713     067A  07AD               	addwf	_seconds_counter+1,f	;volatile
  3714     067B  3000               	movlw	0
  3715     067C  1803               	skipnc
  3716     067D  3001               	movlw	1
  3717     067E  07AE               	addwf	_seconds_counter+2,f	;volatile
  3718     067F  3000               	movlw	0
  3719     0680  1803               	skipnc
  3720     0681  3001               	movlw	1
  3721     0682  07AF               	addwf	_seconds_counter+3,f	;volatile
  3722                           
  3723                           ;main.c: 813:     last_millis = millis;
  3724     0683  082B               	movf	_millis+3,w	;volatile
  3725     0684  1683               	bsf	3,5	;RP0=1, select bank1
  3726     0685  1303               	bcf	3,6	;RP1=0, select bank1
  3727     0686  00B7               	movwf	(_last_millis+3)^(0+128)
  3728     0687  1283               	bcf	3,5	;RP0=0, select bank0
  3729     0688  1303               	bcf	3,6	;RP1=0, select bank0
  3730     0689  082A               	movf	_millis+2,w	;volatile
  3731     068A  1683               	bsf	3,5	;RP0=1, select bank1
  3732     068B  1303               	bcf	3,6	;RP1=0, select bank1
  3733     068C  00B6               	movwf	(_last_millis+2)^(0+128)
  3734     068D  1283               	bcf	3,5	;RP0=0, select bank0
  3735     068E  1303               	bcf	3,6	;RP1=0, select bank0
  3736     068F  0829               	movf	_millis+1,w	;volatile
  3737     0690  1683               	bsf	3,5	;RP0=1, select bank1
  3738     0691  1303               	bcf	3,6	;RP1=0, select bank1
  3739     0692  00B5               	movwf	(_last_millis+1)^(0+128)
  3740     0693  1283               	bcf	3,5	;RP0=0, select bank0
  3741     0694  1303               	bcf	3,6	;RP1=0, select bank0
  3742     0695  0828               	movf	_millis,w	;volatile
  3743     0696  1683               	bsf	3,5	;RP0=1, select bank1
  3744     0697  1303               	bcf	3,6	;RP1=0, select bank1
  3745     0698  00B4               	movwf	_last_millis^(0+128)
  3746     0699                     l372:
  3747     0699  0008               	return
  3748     069A                     __end_of_getsensorreadings:
  3749                           
  3750                           	psect	text6
  3751     0AF3                     __ptext6:	
  3752 ;; *************** function _startSensorReading *****************
  3753 ;; Defined at:
  3754 ;;		line 410 in file "main.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, status,2, status,0
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3768 ;;      Params:         0       0       0       0
  3769 ;;      Locals:         0       0       0       0
  3770 ;;      Temps:          0       0       0       0
  3771 ;;      Totals:         0       0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 1
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_getsensorreadings
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782     0AF3                     _startSensorReading:	
  3783                           ;psect for function _startSensorReading
  3784                           
  3785     0AF3                     l2615:	
  3786                           ;incstack = 0
  3787                           ; Regs used in _startSensorReading: [wreg+status,2+status,0]
  3788                           
  3789                           
  3790                           ;main.c: 411:   if (!sensors_reading_in_progress) {
  3791     0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  3792     0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  3793     0AF5  083C               	movf	_sensors_reading_in_progress,w	;volatile
  3794     0AF6  1D03               	btfss	3,2
  3795     0AF7  2AF9               	goto	u3931
  3796     0AF8  2AFA               	goto	u3930
  3797     0AF9                     u3931:
  3798     0AF9  2B01               	goto	l263
  3799     0AFA                     u3930:
  3800     0AFA                     l2617:
  3801                           
  3802                           ;main.c: 412:     reading_count = 0;
  3803     0AFA  01FB               	clrf	_reading_count	;volatile
  3804                           
  3805                           ;main.c: 413:     low_sensor_high_count = 0;
  3806     0AFB  01FA               	clrf	_low_sensor_high_count	;volatile
  3807                           
  3808                           ;main.c: 414:     high_sensor_high_count = 0;
  3809     0AFC  01BF               	clrf	_high_sensor_high_count	;volatile
  3810                           
  3811                           ;main.c: 415:     flow_sensor_high_count = 0;
  3812     0AFD  01BE               	clrf	_flow_sensor_high_count	;volatile
  3813                           
  3814                           ;main.c: 416:     sensors_reading_complete = 0;
  3815     0AFE  01BD               	clrf	_sensors_reading_complete	;volatile
  3816     0AFF                     l2619:
  3817                           
  3818                           ;main.c: 417:     sensors_reading_in_progress = 1;
  3819     0AFF  3001               	movlw	1
  3820     0B00  00BC               	movwf	_sensors_reading_in_progress	;volatile
  3821     0B01                     l263:
  3822     0B01  0008               	return
  3823     0B02                     __end_of_startSensorReading:
  3824                           
  3825                           	psect	text7
  3826     0AE5                     __ptext7:	
  3827 ;; *************** function _setupTimer0 *****************
  3828 ;; Defined at:
  3829 ;;		line 396 in file "main.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;		None
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  1    wreg      void 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0
  3838 ;; Tracked objects:
  3839 ;;		On entry : 0/0
  3840 ;;		On exit  : 0/0
  3841 ;;		Unchanged: 0/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3843 ;;      Params:         0       0       0       0
  3844 ;;      Locals:         0       0       0       0
  3845 ;;      Temps:          0       0       0       0
  3846 ;;      Totals:         0       0       0       0
  3847 ;;Total ram usage:        0 bytes
  3848 ;; Hardware stack levels used: 1
  3849 ;; Hardware stack levels required when called: 1
  3850 ;; This function calls:
  3851 ;;		Nothing
  3852 ;; This function is called by:
  3853 ;;		_getsensorreadings
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857     0AE5                     _setupTimer0:	
  3858                           ;psect for function _setupTimer0
  3859                           
  3860     0AE5                     l2607:	
  3861                           ;incstack = 0
  3862                           ; Regs used in _setupTimer0: [wreg+status,2+status,0]
  3863                           
  3864                           
  3865                           ;main.c: 397:   OPTION_REGbits.T0CS = 0;
  3866     0AE5  1683               	bsf	3,5	;RP0=1, select bank1
  3867     0AE6  1303               	bcf	3,6	;RP1=0, select bank1
  3868     0AE7  1281               	bcf	1,5	;volatile
  3869                           
  3870                           ;main.c: 398:   OPTION_REGbits.PSA = 0;
  3871     0AE8  1181               	bcf	1,3	;volatile
  3872     0AE9                     l2609:
  3873                           
  3874                           ;main.c: 399:   OPTION_REGbits.PS = 0b011;
  3875     0AE9  0801               	movf	1,w	;volatile
  3876     0AEA  39F8               	andlw	-8
  3877     0AEB  3803               	iorlw	3
  3878     0AEC  0081               	movwf	1	;volatile
  3879     0AED                     l2611:
  3880                           
  3881                           ;main.c: 406:   TMR0 = 6;
  3882     0AED  3006               	movlw	6
  3883     0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  3884     0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  3885     0AF0  0081               	movwf	1	;volatile
  3886     0AF1                     l2613:
  3887                           
  3888                           ;main.c: 407:   INTCONbits.TMR0IE = 1;
  3889     0AF1  168B               	bsf	11,5	;volatile
  3890     0AF2                     l259:
  3891     0AF2  0008               	return
  3892     0AF3                     __end_of_setupTimer0:
  3893                           
  3894                           	psect	text8
  3895     0B8D                     __ptext8:	
  3896 ;; *************** function _readADC *****************
  3897 ;; Defined at:
  3898 ;;		line 382 in file "main.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  channel         1    wreg     unsigned char 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  channel         1    5[COMMON] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  2    2[COMMON] unsigned int 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3912 ;;      Params:         2       0       0       0
  3913 ;;      Locals:         1       0       0       0
  3914 ;;      Temps:          1       0       0       0
  3915 ;;      Totals:         4       0       0       0
  3916 ;;Total ram usage:        4 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; Hardware stack levels required when called: 1
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_main
  3923 ;;		_getsensorreadings
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926                           
  3927     0B8D                     _readADC:	
  3928                           ;psect for function _readADC
  3929                           
  3930                           
  3931                           ;incstack = 0
  3932                           ; Regs used in _readADC: [wreg+status,2+status,0]
  3933                           ;readADC@channel stored from wreg
  3934     0B8D  00F5               	movwf	readADC@channel
  3935     0B8E                     l2597:
  3936                           
  3937                           ;main.c: 384:   ADCON0 = (ADCON0 & 0b11000011) | ((uint8_t)(channel << 2));
  3938     0B8E  0875               	movf	readADC@channel,w
  3939     0B8F  00F4               	movwf	??_readADC
  3940     0B90  3002               	movlw	2
  3941     0B91                     u3915:
  3942     0B91  1003               	clrc
  3943     0B92  0DF4               	rlf	??_readADC,f
  3944     0B93  3EFF               	addlw	-1
  3945     0B94  1D03               	skipz
  3946     0B95  2B91               	goto	u3915
  3947     0B96  1283               	bcf	3,5	;RP0=0, select bank0
  3948     0B97  1303               	bcf	3,6	;RP1=0, select bank0
  3949     0B98  081F               	movf	31,w	;volatile
  3950     0B99  39C3               	andlw	195
  3951     0B9A  0474               	iorwf	??_readADC,w
  3952     0B9B  009F               	movwf	31	;volatile
  3953     0B9C                     l2599:
  3954                           
  3955                           ;main.c: 385:   _delay((unsigned long)((10)*(8000000/4000000.0)));
  3956     0B9C  3006               	movlw	6
  3957     0B9D  00F4               	movwf	??_readADC
  3958     0B9E                     u5107:
  3959     0B9E  0BF4               	decfsz	??_readADC,f
  3960     0B9F  2B9E               	goto	u5107
  3961     0BA0  0000               	nop
  3962     0BA1                     l2601:
  3963                           
  3964                           ;main.c: 386:   ADCON0bits.GO = 1;
  3965     0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  3966     0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  3967     0BA3  149F               	bsf	31,1	;volatile
  3968     0BA4                     l253:	
  3969                           ;main.c: 390:     ;
  3970                           
  3971                           
  3972                           ;main.c: 389:   while (ADCON0bits.GO)
  3973     0BA4  189F               	btfsc	31,1	;volatile
  3974     0BA5  2BA7               	goto	u3921
  3975     0BA6  2BA8               	goto	u3920
  3976     0BA7                     u3921:
  3977     0BA7  2BA4               	goto	l253
  3978     0BA8                     u3920:
  3979     0BA8                     l2603:
  3980                           
  3981                           ;main.c: 393:   return ((unsigned int)ADRESH << 8) | ADRESL;
  3982     0BA8  081E               	movf	30,w	;volatile
  3983     0BA9  00F3               	movwf	?_readADC+1
  3984     0BAA  1683               	bsf	3,5	;RP0=1, select bank1
  3985     0BAB  1303               	bcf	3,6	;RP1=0, select bank1
  3986     0BAC  081E               	movf	30,w	;volatile
  3987     0BAD  00F2               	movwf	?_readADC
  3988     0BAE                     l256:
  3989     0BAE  0008               	return
  3990     0BAF                     __end_of_readADC:
  3991                           
  3992                           	psect	text9
  3993     0BD6                     __ptext9:	
  3994 ;; *************** function _getSensorResults *****************
  3995 ;; Defined at:
  3996 ;;		line 421 in file "main.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  low_active      1    2[COMMON] PTR _Bool 
  3999 ;;		 -> low_sensor_active(1), 
  4000 ;;  high_active     1    3[COMMON] PTR _Bool 
  4001 ;;		 -> high_sensor_active(1), 
  4002 ;;  flow_active     1    4[COMMON] PTR _Bool 
  4003 ;;		 -> flow_sensor_active(1), 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      _Bool 
  4008 ;; Registers used:
  4009 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4015 ;;      Params:         3       0       0       0
  4016 ;;      Locals:         0       0       0       0
  4017 ;;      Temps:          0       0       0       0
  4018 ;;      Totals:         3       0       0       0
  4019 ;;Total ram usage:        3 bytes
  4020 ;; Hardware stack levels used: 1
  4021 ;; Hardware stack levels required when called: 1
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_getsensorreadings
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029     0BD6                     _getSensorResults:	
  4030                           ;psect for function _getSensorResults
  4031                           
  4032     0BD6                     l2621:	
  4033                           ;incstack = 0
  4034                           ; Regs used in _getSensorResults: [wreg-fsr0h+status,2+status,0]
  4035                           
  4036                           
  4037                           ;main.c: 422:   if (sensors_reading_complete) {
  4038     0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  4039     0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  4040     0BD8  083D               	movf	_sensors_reading_complete,w	;volatile
  4041     0BD9  1903               	btfsc	3,2
  4042     0BDA  2BDC               	goto	u3941
  4043     0BDB  2BDD               	goto	u3940
  4044     0BDC                     u3941:
  4045     0BDC  2C02               	goto	l2631
  4046     0BDD                     u3940:
  4047     0BDD                     l2623:
  4048                           
  4049                           ;main.c: 423:     *low_active = (low_sensor_high_count < 45);
  4050     0BDD  0872               	movf	getSensorResults@low_active,w
  4051     0BDE  0084               	movwf	4
  4052     0BDF  302D               	movlw	45
  4053     0BE0  027A               	subwf	_low_sensor_high_count,w	;volatile
  4054     0BE1  1C03               	skipc
  4055     0BE2  2BE4               	goto	u3951
  4056     0BE3  2BE6               	goto	u3950
  4057     0BE4                     u3951:
  4058     0BE4  3001               	movlw	1
  4059     0BE5  2BE7               	goto	u3960
  4060     0BE6                     u3950:
  4061     0BE6  3000               	movlw	0
  4062     0BE7                     u3960:
  4063     0BE7  1383               	bcf	3,7	;select IRP bank0
  4064     0BE8  0080               	movwf	0
  4065                           
  4066                           ;main.c: 424:     *high_active = (high_sensor_high_count < 45);
  4067     0BE9  0873               	movf	getSensorResults@high_active,w
  4068     0BEA  0084               	movwf	4
  4069     0BEB  302D               	movlw	45
  4070     0BEC  023F               	subwf	_high_sensor_high_count,w	;volatile
  4071     0BED  1C03               	skipc
  4072     0BEE  2BF0               	goto	u3971
  4073     0BEF  2BF2               	goto	u3970
  4074     0BF0                     u3971:
  4075     0BF0  3001               	movlw	1
  4076     0BF1  2BF3               	goto	u3980
  4077     0BF2                     u3970:
  4078     0BF2  3000               	movlw	0
  4079     0BF3                     u3980:
  4080     0BF3  0080               	movwf	0
  4081                           
  4082                           ;main.c: 425:     *flow_active = (flow_sensor_high_count < 45);
  4083     0BF4  0874               	movf	getSensorResults@flow_active,w
  4084     0BF5  0084               	movwf	4
  4085     0BF6  302D               	movlw	45
  4086     0BF7  023E               	subwf	_flow_sensor_high_count,w	;volatile
  4087     0BF8  1C03               	skipc
  4088     0BF9  2BFB               	goto	u3991
  4089     0BFA  2BFD               	goto	u3990
  4090     0BFB                     u3991:
  4091     0BFB  3001               	movlw	1
  4092     0BFC  2BFE               	goto	u4000
  4093     0BFD                     u3990:
  4094     0BFD  3000               	movlw	0
  4095     0BFE                     u4000:
  4096     0BFE  0080               	movwf	0
  4097     0BFF                     l2625:
  4098                           
  4099                           ;main.c: 426:     sensors_reading_complete = 0;
  4100     0BFF  01BD               	clrf	_sensors_reading_complete	;volatile
  4101     0C00                     l2627:
  4102                           
  4103                           ;main.c: 427:     return 1;
  4104     0C00  3001               	movlw	1
  4105     0C01  2C03               	goto	l267
  4106     0C02                     l2631:
  4107                           
  4108                           ;main.c: 429:   return 0;
  4109     0C02  3000               	movlw	0
  4110     0C03                     l267:
  4111     0C03  0008               	return
  4112     0C04                     __end_of_getSensorResults:
  4113                           
  4114                           	psect	text10
  4115     0C33                     __ptext10:	
  4116 ;; *************** function ___lmul *****************
  4117 ;; Defined at:
  4118 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul32.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  multiplier      4    2[COMMON] unsigned long 
  4121 ;;  multiplicand    4    6[COMMON] unsigned long 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  product         4    1[BANK0 ] unsigned long 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  4    2[COMMON] unsigned long 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4133 ;;      Params:         8       0       0       0
  4134 ;;      Locals:         0       4       0       0
  4135 ;;      Temps:          0       1       0       0
  4136 ;;      Totals:         8       5       0       0
  4137 ;;Total ram usage:       13 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 1
  4140 ;; This function calls:
  4141 ;;		Nothing
  4142 ;; This function is called by:
  4143 ;;		_main
  4144 ;;		_getsensorreadings
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148     0C33                     ___lmul:	
  4149                           ;psect for function ___lmul
  4150                           
  4151     0C33                     l2665:	
  4152                           ;incstack = 0
  4153                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4154                           
  4155     0C33  3000               	movlw	0
  4156     0C34  1283               	bcf	3,5	;RP0=0, select bank0
  4157     0C35  1303               	bcf	3,6	;RP1=0, select bank0
  4158     0C36  00CB               	movwf	___lmul@product+3
  4159     0C37  3000               	movlw	0
  4160     0C38  00CA               	movwf	___lmul@product+2
  4161     0C39  3000               	movlw	0
  4162     0C3A  00C9               	movwf	___lmul@product+1
  4163     0C3B  3000               	movlw	0
  4164     0C3C  00C8               	movwf	___lmul@product
  4165     0C3D                     l2667:
  4166     0C3D  1C72               	btfss	___lmul@multiplier,0
  4167     0C3E  2C40               	goto	u4051
  4168     0C3F  2C41               	goto	u4050
  4169     0C40                     u4051:
  4170     0C40  2C58               	goto	l2671
  4171     0C41                     u4050:
  4172     0C41                     l2669:
  4173     0C41  0876               	movf	___lmul@multiplicand,w
  4174     0C42  07C8               	addwf	___lmul@product,f
  4175     0C43  0877               	movf	___lmul@multiplicand+1,w
  4176     0C44  1103               	clrz
  4177     0C45  1803               	skipnc
  4178     0C46  3E01               	addlw	1
  4179     0C47  1903               	skipnz
  4180     0C48  2C4A               	goto	u4061
  4181     0C49  07C9               	addwf	___lmul@product+1,f
  4182     0C4A                     u4061:
  4183     0C4A  0878               	movf	___lmul@multiplicand+2,w
  4184     0C4B  1103               	clrz
  4185     0C4C  1803               	skipnc
  4186     0C4D  3E01               	addlw	1
  4187     0C4E  1903               	skipnz
  4188     0C4F  2C51               	goto	u4062
  4189     0C50  07CA               	addwf	___lmul@product+2,f
  4190     0C51                     u4062:
  4191     0C51  0879               	movf	___lmul@multiplicand+3,w
  4192     0C52  1103               	clrz
  4193     0C53  1803               	skipnc
  4194     0C54  3E01               	addlw	1
  4195     0C55  1903               	skipnz
  4196     0C56  2C58               	goto	u4063
  4197     0C57  07CB               	addwf	___lmul@product+3,f
  4198     0C58                     u4063:
  4199     0C58                     l2671:
  4200     0C58  3001               	movlw	1
  4201     0C59  00C7               	movwf	??___lmul
  4202     0C5A                     u4075:
  4203     0C5A  1003               	clrc
  4204     0C5B  0DF6               	rlf	___lmul@multiplicand,f
  4205     0C5C  0DF7               	rlf	___lmul@multiplicand+1,f
  4206     0C5D  0DF8               	rlf	___lmul@multiplicand+2,f
  4207     0C5E  0DF9               	rlf	___lmul@multiplicand+3,f
  4208     0C5F  0BC7               	decfsz	??___lmul,f
  4209     0C60  2C5A               	goto	u4075
  4210     0C61                     l2673:
  4211     0C61  3001               	movlw	1
  4212     0C62                     u4085:
  4213     0C62  1003               	clrc
  4214     0C63  0CF5               	rrf	___lmul@multiplier+3,f
  4215     0C64  0CF4               	rrf	___lmul@multiplier+2,f
  4216     0C65  0CF3               	rrf	___lmul@multiplier+1,f
  4217     0C66  0CF2               	rrf	___lmul@multiplier,f
  4218     0C67  3EFF               	addlw	-1
  4219     0C68  1D03               	skipz
  4220     0C69  2C62               	goto	u4085
  4221     0C6A  0875               	movf	___lmul@multiplier+3,w
  4222     0C6B  0474               	iorwf	___lmul@multiplier+2,w
  4223     0C6C  0473               	iorwf	___lmul@multiplier+1,w
  4224     0C6D  0472               	iorwf	___lmul@multiplier,w
  4225     0C6E  1D03               	skipz
  4226     0C6F  2C71               	goto	u4091
  4227     0C70  2C72               	goto	u4090
  4228     0C71                     u4091:
  4229     0C71  2C3D               	goto	l2667
  4230     0C72                     u4090:
  4231     0C72                     l2675:
  4232     0C72  084B               	movf	___lmul@product+3,w
  4233     0C73  00F5               	movwf	?___lmul+3
  4234     0C74  084A               	movf	___lmul@product+2,w
  4235     0C75  00F4               	movwf	?___lmul+2
  4236     0C76  0849               	movf	___lmul@product+1,w
  4237     0C77  00F3               	movwf	?___lmul+1
  4238     0C78  0848               	movf	___lmul@product,w
  4239     0C79  00F2               	movwf	?___lmul
  4240     0C7A                     l481:
  4241     0C7A  0008               	return
  4242     0C7B                     __end_of___lmul:
  4243                           
  4244                           	psect	text11
  4245     069A                     __ptext11:	
  4246 ;; *************** function _dispinfo *****************
  4247 ;; Defined at:
  4248 ;;		line 825 in file "main.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  refreshtime     1    wreg     unsigned char 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  refreshtime     1   29[BANK0 ] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4262 ;;      Params:         0       0       0       0
  4263 ;;      Locals:         0       1       0       0
  4264 ;;      Temps:          0       8       0       0
  4265 ;;      Totals:         0       9       0       0
  4266 ;;Total ram usage:        9 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 3
  4269 ;; This function calls:
  4270 ;;		_EEPROM_Read
  4271 ;;		___lldiv
  4272 ;;		_lcd_display_bool_binary
  4273 ;;		_lcd_display_int
  4274 ;;		_lcd_set_cursor
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280     069A                     _dispinfo:	
  4281                           ;psect for function _dispinfo
  4282                           
  4283                           
  4284                           ;incstack = 0
  4285                           ; Regs used in _dispinfo: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4286                           ;dispinfo@refreshtime stored from wreg
  4287     069A  1283               	bcf	3,5	;RP0=0, select bank0
  4288     069B  1303               	bcf	3,6	;RP1=0, select bank0
  4289     069C  00E4               	movwf	dispinfo@refreshtime
  4290     069D                     l2935:
  4291                           
  4292                           ;main.c: 826:   if (millis - lastdispupdt >= refreshtime) {
  4293     069D  0864               	movf	dispinfo@refreshtime,w
  4294     069E  00DC               	movwf	??_dispinfo
  4295     069F  01DD               	clrf	??_dispinfo+1
  4296     06A0  01DE               	clrf	??_dispinfo+2
  4297     06A1  01DF               	clrf	??_dispinfo+3
  4298     06A2  0828               	movf	_millis,w	;volatile
  4299     06A3  00E0               	movwf	??_dispinfo+4
  4300     06A4  0829               	movf	_millis+1,w	;volatile
  4301     06A5  00E1               	movwf	??_dispinfo+5
  4302     06A6  082A               	movf	_millis+2,w	;volatile
  4303     06A7  00E2               	movwf	??_dispinfo+6
  4304     06A8  082B               	movf	_millis+3,w	;volatile
  4305     06A9  00E3               	movwf	??_dispinfo+7
  4306     06AA  1683               	bsf	3,5	;RP0=1, select bank1
  4307     06AB  1303               	bcf	3,6	;RP1=0, select bank1
  4308     06AC  0820               	movf	_lastdispupdt^(0+128),w
  4309     06AD  1283               	bcf	3,5	;RP0=0, select bank0
  4310     06AE  1303               	bcf	3,6	;RP1=0, select bank0
  4311     06AF  02E0               	subwf	??_dispinfo+4,f
  4312     06B0  1683               	bsf	3,5	;RP0=1, select bank1
  4313     06B1  1303               	bcf	3,6	;RP1=0, select bank1
  4314     06B2  0821               	movf	(_lastdispupdt+1)^(0+128),w
  4315     06B3  1C03               	skipc
  4316     06B4  0F21               	incfsz	(_lastdispupdt+1)^(0+128),w
  4317     06B5  2EB7               	goto	u4521
  4318     06B6  2EBA               	goto	u4522
  4319     06B7                     u4521:
  4320     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  4321     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  4322     06B9  02E1               	subwf	??_dispinfo+5,f
  4323     06BA                     u4522:
  4324     06BA  1683               	bsf	3,5	;RP0=1, select bank1
  4325     06BB  1303               	bcf	3,6	;RP1=0, select bank1
  4326     06BC  0822               	movf	(_lastdispupdt+2)^(0+128),w
  4327     06BD  1C03               	skipc
  4328     06BE  0F22               	incfsz	(_lastdispupdt+2)^(0+128),w
  4329     06BF  2EC1               	goto	u4523
  4330     06C0  2EC4               	goto	u4524
  4331     06C1                     u4523:
  4332     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  4333     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  4334     06C3  02E2               	subwf	??_dispinfo+6,f
  4335     06C4                     u4524:
  4336     06C4  1683               	bsf	3,5	;RP0=1, select bank1
  4337     06C5  1303               	bcf	3,6	;RP1=0, select bank1
  4338     06C6  0823               	movf	(_lastdispupdt+3)^(0+128),w
  4339     06C7  1C03               	skipc
  4340     06C8  0F23               	incfsz	(_lastdispupdt+3)^(0+128),w
  4341     06C9  2ECB               	goto	u4525
  4342     06CA  2ECE               	goto	u4526
  4343     06CB                     u4525:
  4344     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  4345     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  4346     06CD  02E3               	subwf	??_dispinfo+7,f
  4347     06CE                     u4526:
  4348     06CE  1683               	bsf	3,5	;RP0=1, select bank1
  4349     06CF  1303               	bcf	3,6	;RP1=0, select bank1
  4350     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  4351     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  4352     06D2  085F               	movf	??_dispinfo+3,w
  4353     06D3  0263               	subwf	??_dispinfo+7,w
  4354     06D4  1D03               	skipz
  4355     06D5  2EE0               	goto	u4535
  4356     06D6  085E               	movf	??_dispinfo+2,w
  4357     06D7  0262               	subwf	??_dispinfo+6,w
  4358     06D8  1D03               	skipz
  4359     06D9  2EE0               	goto	u4535
  4360     06DA  085D               	movf	??_dispinfo+1,w
  4361     06DB  0261               	subwf	??_dispinfo+5,w
  4362     06DC  1D03               	skipz
  4363     06DD  2EE0               	goto	u4535
  4364     06DE  085C               	movf	??_dispinfo,w
  4365     06DF  0260               	subwf	??_dispinfo+4,w
  4366     06E0                     u4535:
  4367     06E0  1C03               	skipc
  4368     06E1  2EE3               	goto	u4531
  4369     06E2  2EE4               	goto	u4530
  4370     06E3                     u4531:
  4371     06E3  2FAC               	goto	l381
  4372     06E4                     u4530:
  4373     06E4                     l2937:
  4374                           
  4375                           ;main.c: 827:     lastdispupdt = millis;
  4376     06E4  082B               	movf	_millis+3,w	;volatile
  4377     06E5  1683               	bsf	3,5	;RP0=1, select bank1
  4378     06E6  1303               	bcf	3,6	;RP1=0, select bank1
  4379     06E7  00A3               	movwf	(_lastdispupdt+3)^(0+128)
  4380     06E8  1283               	bcf	3,5	;RP0=0, select bank0
  4381     06E9  1303               	bcf	3,6	;RP1=0, select bank0
  4382     06EA  082A               	movf	_millis+2,w	;volatile
  4383     06EB  1683               	bsf	3,5	;RP0=1, select bank1
  4384     06EC  1303               	bcf	3,6	;RP1=0, select bank1
  4385     06ED  00A2               	movwf	(_lastdispupdt+2)^(0+128)
  4386     06EE  1283               	bcf	3,5	;RP0=0, select bank0
  4387     06EF  1303               	bcf	3,6	;RP1=0, select bank0
  4388     06F0  0829               	movf	_millis+1,w	;volatile
  4389     06F1  1683               	bsf	3,5	;RP0=1, select bank1
  4390     06F2  1303               	bcf	3,6	;RP1=0, select bank1
  4391     06F3  00A1               	movwf	(_lastdispupdt+1)^(0+128)
  4392     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  4393     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  4394     06F6  0828               	movf	_millis,w	;volatile
  4395     06F7  1683               	bsf	3,5	;RP0=1, select bank1
  4396     06F8  1303               	bcf	3,6	;RP1=0, select bank1
  4397     06F9  00A0               	movwf	_lastdispupdt^(0+128)
  4398     06FA                     l2939:
  4399                           
  4400                           ;main.c: 829:     lcd_set_cursor(0, 0);
  4401     06FA  01F4               	clrf	lcd_set_cursor@col
  4402     06FB  3000               	movlw	0
  4403     06FC  158A  2334  118A   	fcall	_lcd_set_cursor
  4404     06FF                     l2941:
  4405                           
  4406                           ;main.c: 830:     lcd_display_int(voltage);
  4407     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4408     0700  1303               	bcf	3,6	;RP1=0, select bank0
  4409     0701  0840               	movf	_voltage,w
  4410     0702  00DC               	movwf	??_dispinfo
  4411     0703  01DD               	clrf	??_dispinfo+1
  4412     0704  085C               	movf	??_dispinfo,w
  4413     0705  00DA               	movwf	lcd_display_int@num
  4414     0706  085D               	movf	??_dispinfo+1,w
  4415     0707  00DB               	movwf	lcd_display_int@num+1
  4416     0708  158A  2725  118A   	fcall	_lcd_display_int
  4417     070B                     l2943:
  4418                           
  4419                           ;main.c: 831:     lcd_set_cursor(0, 4);
  4420     070B  3004               	movlw	4
  4421     070C  00F4               	movwf	lcd_set_cursor@col
  4422     070D  3000               	movlw	0
  4423     070E  158A  2334  118A   	fcall	_lcd_set_cursor
  4424     0711                     l2945:
  4425                           
  4426                           ;main.c: 832:     lcd_display_int(seconds_counter / 60);
  4427     0711  3000               	movlw	0
  4428     0712  1283               	bcf	3,5	;RP0=0, select bank0
  4429     0713  1303               	bcf	3,6	;RP1=0, select bank0
  4430     0714  00CF               	movwf	___lldiv@divisor+3
  4431     0715  3000               	movlw	0
  4432     0716  00CE               	movwf	___lldiv@divisor+2
  4433     0717  3000               	movlw	0
  4434     0718  00CD               	movwf	___lldiv@divisor+1
  4435     0719  303C               	movlw	60
  4436     071A  00CC               	movwf	___lldiv@divisor
  4437     071B  082F               	movf	_seconds_counter+3,w	;volatile
  4438     071C  00D3               	movwf	___lldiv@dividend+3
  4439     071D  082E               	movf	_seconds_counter+2,w	;volatile
  4440     071E  00D2               	movwf	___lldiv@dividend+2
  4441     071F  082D               	movf	_seconds_counter+1,w	;volatile
  4442     0720  00D1               	movwf	___lldiv@dividend+1
  4443     0721  082C               	movf	_seconds_counter,w	;volatile
  4444     0722  00D0               	movwf	___lldiv@dividend
  4445     0723  158A  2581  118A   	fcall	___lldiv
  4446     0726  1283               	bcf	3,5	;RP0=0, select bank0
  4447     0727  1303               	bcf	3,6	;RP1=0, select bank0
  4448     0728  084D               	movf	?___lldiv+1,w
  4449     0729  00DB               	movwf	lcd_display_int@num+1
  4450     072A  084C               	movf	?___lldiv,w
  4451     072B  00DA               	movwf	lcd_display_int@num
  4452     072C  158A  2725  118A   	fcall	_lcd_display_int
  4453     072F                     l2947:
  4454                           
  4455                           ;main.c: 833:     lcd_set_cursor(0, 8);
  4456     072F  3008               	movlw	8
  4457     0730  00F4               	movwf	lcd_set_cursor@col
  4458     0731  3000               	movlw	0
  4459     0732  158A  2334  118A   	fcall	_lcd_set_cursor
  4460     0735                     l2949:
  4461                           
  4462                           ;main.c: 834:     lcd_display_int(dryruntime);
  4463     0735  1683               	bsf	3,5	;RP0=1, select bank1
  4464     0736  1303               	bcf	3,6	;RP1=0, select bank1
  4465     0737  083D               	movf	(_dryruntime+1)^(0+128),w
  4466     0738  1283               	bcf	3,5	;RP0=0, select bank0
  4467     0739  1303               	bcf	3,6	;RP1=0, select bank0
  4468     073A  00DB               	movwf	lcd_display_int@num+1
  4469     073B  1683               	bsf	3,5	;RP0=1, select bank1
  4470     073C  1303               	bcf	3,6	;RP1=0, select bank1
  4471     073D  083C               	movf	_dryruntime^(0+128),w
  4472     073E  1283               	bcf	3,5	;RP0=0, select bank0
  4473     073F  1303               	bcf	3,6	;RP1=0, select bank0
  4474     0740  00DA               	movwf	lcd_display_int@num
  4475     0741  158A  2725  118A   	fcall	_lcd_display_int
  4476     0744                     l2951:
  4477                           
  4478                           ;main.c: 835:     lcd_set_cursor(0, 12);
  4479     0744  300C               	movlw	12
  4480     0745  00F4               	movwf	lcd_set_cursor@col
  4481     0746  3000               	movlw	0
  4482     0747  158A  2334  118A   	fcall	_lcd_set_cursor
  4483     074A                     l2953:
  4484                           
  4485                           ;main.c: 836:     lcd_display_int(maxruntimeindex);
  4486     074A  1283               	bcf	3,5	;RP0=0, select bank0
  4487     074B  1303               	bcf	3,6	;RP1=0, select bank0
  4488     074C  086D               	movf	_maxruntimeindex,w
  4489     074D  00DC               	movwf	??_dispinfo
  4490     074E  01DD               	clrf	??_dispinfo+1
  4491     074F  085C               	movf	??_dispinfo,w
  4492     0750  00DA               	movwf	lcd_display_int@num
  4493     0751  085D               	movf	??_dispinfo+1,w
  4494     0752  00DB               	movwf	lcd_display_int@num+1
  4495     0753  158A  2725  118A   	fcall	_lcd_display_int
  4496     0756                     l2955:
  4497                           
  4498                           ;main.c: 837:     lcd_set_cursor(1, 0);
  4499     0756  01F4               	clrf	lcd_set_cursor@col
  4500     0757  3001               	movlw	1
  4501     0758  158A  2334  118A   	fcall	_lcd_set_cursor
  4502     075B                     l2957:
  4503                           
  4504                           ;main.c: 838:     lcd_display_int(EEPROM_Read(0x04));
  4505     075B  3004               	movlw	4
  4506     075C  158A  2346  118A   	fcall	_EEPROM_Read
  4507     075F  1283               	bcf	3,5	;RP0=0, select bank0
  4508     0760  1303               	bcf	3,6	;RP1=0, select bank0
  4509     0761  00DC               	movwf	??_dispinfo
  4510     0762  01DD               	clrf	??_dispinfo+1
  4511     0763  085C               	movf	??_dispinfo,w
  4512     0764  00DA               	movwf	lcd_display_int@num
  4513     0765  085D               	movf	??_dispinfo+1,w
  4514     0766  00DB               	movwf	lcd_display_int@num+1
  4515     0767  158A  2725  118A   	fcall	_lcd_display_int
  4516     076A                     l2959:
  4517                           
  4518                           ;main.c: 840:     lcd_set_cursor(1, 4);
  4519     076A  3004               	movlw	4
  4520     076B  00F4               	movwf	lcd_set_cursor@col
  4521     076C  3001               	movlw	1
  4522     076D  158A  2334  118A   	fcall	_lcd_set_cursor
  4523     0770                     l2961:
  4524                           
  4525                           ;main.c: 841:     lcd_display_bool_binary(low_sensor_active);
  4526     0770  1283               	bcf	3,5	;RP0=0, select bank0
  4527     0771  1303               	bcf	3,6	;RP1=0, select bank0
  4528     0772  0846               	movf	_low_sensor_active,w
  4529     0773  158A  2302  118A   	fcall	_lcd_display_bool_binary
  4530     0776                     l2963:
  4531                           
  4532                           ;main.c: 842:     lcd_set_cursor(1, 6);
  4533     0776  3006               	movlw	6
  4534     0777  00F4               	movwf	lcd_set_cursor@col
  4535     0778  3001               	movlw	1
  4536     0779  158A  2334  118A   	fcall	_lcd_set_cursor
  4537     077C                     l2965:
  4538                           
  4539                           ;main.c: 843:     lcd_display_bool_binary(high_sensor_active);
  4540     077C  1283               	bcf	3,5	;RP0=0, select bank0
  4541     077D  1303               	bcf	3,6	;RP1=0, select bank0
  4542     077E  0845               	movf	_high_sensor_active,w
  4543     077F  158A  2302  118A   	fcall	_lcd_display_bool_binary
  4544     0782                     l2967:
  4545                           
  4546                           ;main.c: 844:     lcd_set_cursor(1, 8);
  4547     0782  3008               	movlw	8
  4548     0783  00F4               	movwf	lcd_set_cursor@col
  4549     0784  3001               	movlw	1
  4550     0785  158A  2334  118A   	fcall	_lcd_set_cursor
  4551     0788                     l2969:
  4552                           
  4553                           ;main.c: 845:     lcd_display_bool_binary(flow_sensor_active);
  4554     0788  1283               	bcf	3,5	;RP0=0, select bank0
  4555     0789  1303               	bcf	3,6	;RP1=0, select bank0
  4556     078A  0844               	movf	_flow_sensor_active,w
  4557     078B  158A  2302  118A   	fcall	_lcd_display_bool_binary
  4558     078E                     l2971:
  4559                           
  4560                           ;main.c: 846:     lcd_set_cursor(1, 10);
  4561     078E  300A               	movlw	10
  4562     078F  00F4               	movwf	lcd_set_cursor@col
  4563     0790  3001               	movlw	1
  4564     0791  158A  2334  118A   	fcall	_lcd_set_cursor
  4565     0794                     l2973:
  4566                           
  4567                           ;main.c: 847:     lcd_display_bool_binary(tankempty);
  4568     0794  1283               	bcf	3,5	;RP0=0, select bank0
  4569     0795  1303               	bcf	3,6	;RP1=0, select bank0
  4570     0796  0836               	movf	_tankempty,w
  4571     0797  158A  2302  118A   	fcall	_lcd_display_bool_binary
  4572     079A                     l2975:
  4573                           
  4574                           ;main.c: 848:     lcd_display_bool_binary(motorrunning);
  4575     079A  1283               	bcf	3,5	;RP0=0, select bank0
  4576     079B  1303               	bcf	3,6	;RP1=0, select bank0
  4577     079C  0837               	movf	_motorrunning,w
  4578     079D  158A  2302  118A   	fcall	_lcd_display_bool_binary
  4579     07A0                     l2977:
  4580                           
  4581                           ;main.c: 849:     lcd_display_bool_binary(dryrunerror);
  4582     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  4583     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  4584     07A2  0839               	movf	_dryrunerror,w
  4585     07A3  158A  2302  118A   	fcall	_lcd_display_bool_binary
  4586     07A6                     l2979:
  4587                           
  4588                           ;main.c: 850:     lcd_display_bool_binary(voltageerror);
  4589     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4590     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  4591     07A8  083A               	movf	_voltageerror,w
  4592     07A9  158A  2302  118A   	fcall	_lcd_display_bool_binary
  4593     07AC                     l381:
  4594     07AC  0008               	return
  4595     07AD                     __end_of_dispinfo:
  4596                           
  4597                           	psect	text12
  4598     0B34                     __ptext12:	
  4599 ;; *************** function _lcd_set_cursor *****************
  4600 ;; Defined at:
  4601 ;;		line 700 in file "main.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  row             1    wreg     unsigned char 
  4604 ;;  col             1    4[COMMON] unsigned char 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  row             1    5[COMMON] unsigned char 
  4607 ;;  address         1    6[COMMON] unsigned char 
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, status,2, status,0, pclath, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4617 ;;      Params:         1       0       0       0
  4618 ;;      Locals:         2       0       0       0
  4619 ;;      Temps:          0       0       0       0
  4620 ;;      Totals:         3       0       0       0
  4621 ;;Total ram usage:        3 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; Hardware stack levels required when called: 2
  4624 ;; This function calls:
  4625 ;;		_lcd_cmd
  4626 ;; This function is called by:
  4627 ;;		_dispinfo
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631     0B34                     _lcd_set_cursor:	
  4632                           ;psect for function _lcd_set_cursor
  4633                           
  4634                           
  4635                           ;incstack = 0
  4636                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  4637                           ;lcd_set_cursor@row stored from wreg
  4638     0B34  00F5               	movwf	lcd_set_cursor@row
  4639     0B35                     l2635:
  4640                           
  4641                           ;main.c: 701:   unsigned char address;;main.c: 704:   if (row == 0) {
  4642     0B35  0875               	movf	lcd_set_cursor@row,w
  4643     0B36  1D03               	btfss	3,2
  4644     0B37  2B39               	goto	u4011
  4645     0B38  2B3A               	goto	u4010
  4646     0B39                     u4011:
  4647     0B39  2B3E               	goto	l2639
  4648     0B3A                     u4010:
  4649     0B3A                     l2637:
  4650                           
  4651                           ;main.c: 705:     address = 0x80 + col;
  4652     0B3A  0874               	movf	lcd_set_cursor@col,w
  4653     0B3B  3E80               	addlw	128
  4654     0B3C  00F6               	movwf	lcd_set_cursor@address
  4655                           
  4656                           ;main.c: 706:   } else {
  4657     0B3D  2B41               	goto	l2641
  4658     0B3E                     l2639:
  4659                           
  4660                           ;main.c: 707:     address = 0xC0 + col;
  4661     0B3E  0874               	movf	lcd_set_cursor@col,w
  4662     0B3F  3EC0               	addlw	192
  4663     0B40  00F6               	movwf	lcd_set_cursor@address
  4664     0B41                     l2641:
  4665                           
  4666                           ;main.c: 710:   lcd_cmd(address);
  4667     0B41  0876               	movf	lcd_set_cursor@address,w
  4668     0B42  158A  2650  158A   	fcall	_lcd_cmd
  4669     0B45                     l342:
  4670     0B45  0008               	return
  4671     0B46                     __end_of_lcd_set_cursor:
  4672                           
  4673                           	psect	text13
  4674     0E50                     __ptext13:	
  4675 ;; *************** function _lcd_cmd *****************
  4676 ;; Defined at:
  4677 ;;		line 674 in file "main.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  cmd             1    wreg     unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  cmd             1    3[COMMON] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4691 ;;      Params:         0       0       0       0
  4692 ;;      Locals:         1       0       0       0
  4693 ;;      Temps:          1       0       0       0
  4694 ;;      Totals:         2       0       0       0
  4695 ;;Total ram usage:        2 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_initLCD
  4702 ;;		_lcd_set_cursor
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706     0E50                     _lcd_cmd:	
  4707                           ;psect for function _lcd_cmd
  4708                           
  4709                           
  4710                           ;incstack = 0
  4711                           ; Regs used in _lcd_cmd: [wreg]
  4712                           ;lcd_cmd@cmd stored from wreg
  4713     0E50  00F3               	movwf	lcd_cmd@cmd
  4714     0E51                     l2469:
  4715                           
  4716                           ;main.c: 675:   PORTCbits.RC5 = 0;
  4717     0E51  1283               	bcf	3,5	;RP0=0, select bank0
  4718     0E52  1303               	bcf	3,6	;RP1=0, select bank0
  4719     0E53  1287               	bcf	7,5	;volatile
  4720                           
  4721                           ;main.c: 678:   PORTCbits.RC7 = (cmd & 0x80) ? 1 : 0;
  4722     0E54  1BF3               	btfsc	lcd_cmd@cmd,7
  4723     0E55  2E57               	goto	u3391
  4724     0E56  2E5B               	goto	u3390
  4725     0E57                     u3391:
  4726     0E57  1283               	bcf	3,5	;RP0=0, select bank0
  4727     0E58  1303               	bcf	3,6	;RP1=0, select bank0
  4728     0E59  1787               	bsf	7,7	;volatile
  4729     0E5A  2E5E               	goto	u3404
  4730     0E5B                     u3390:
  4731     0E5B  1283               	bcf	3,5	;RP0=0, select bank0
  4732     0E5C  1303               	bcf	3,6	;RP1=0, select bank0
  4733     0E5D  1387               	bcf	7,7	;volatile
  4734     0E5E                     u3404:
  4735                           
  4736                           ;main.c: 679:   PORTBbits.RB2 = (cmd & 0x40) ? 1 : 0;
  4737     0E5E  1B73               	btfsc	lcd_cmd@cmd,6
  4738     0E5F  2E61               	goto	u3411
  4739     0E60  2E65               	goto	u3410
  4740     0E61                     u3411:
  4741     0E61  1283               	bcf	3,5	;RP0=0, select bank0
  4742     0E62  1303               	bcf	3,6	;RP1=0, select bank0
  4743     0E63  1506               	bsf	6,2	;volatile
  4744     0E64  2E68               	goto	u3424
  4745     0E65                     u3410:
  4746     0E65  1283               	bcf	3,5	;RP0=0, select bank0
  4747     0E66  1303               	bcf	3,6	;RP1=0, select bank0
  4748     0E67  1106               	bcf	6,2	;volatile
  4749     0E68                     u3424:
  4750                           
  4751                           ;main.c: 680:   PORTBbits.RB1 = (cmd & 0x20) ? 1 : 0;
  4752     0E68  1AF3               	btfsc	lcd_cmd@cmd,5
  4753     0E69  2E6B               	goto	u3431
  4754     0E6A  2E6F               	goto	u3430
  4755     0E6B                     u3431:
  4756     0E6B  1283               	bcf	3,5	;RP0=0, select bank0
  4757     0E6C  1303               	bcf	3,6	;RP1=0, select bank0
  4758     0E6D  1486               	bsf	6,1	;volatile
  4759     0E6E  2E72               	goto	u3444
  4760     0E6F                     u3430:
  4761     0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  4762     0E70  1303               	bcf	3,6	;RP1=0, select bank0
  4763     0E71  1086               	bcf	6,1	;volatile
  4764     0E72                     u3444:
  4765                           
  4766                           ;main.c: 681:   PORTBbits.RB0 = (cmd & 0x10) ? 1 : 0;
  4767     0E72  1A73               	btfsc	lcd_cmd@cmd,4
  4768     0E73  2E75               	goto	u3451
  4769     0E74  2E79               	goto	u3450
  4770     0E75                     u3451:
  4771     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  4772     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  4773     0E77  1406               	bsf	6,0	;volatile
  4774     0E78  2E7C               	goto	u3464
  4775     0E79                     u3450:
  4776     0E79  1283               	bcf	3,5	;RP0=0, select bank0
  4777     0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  4778     0E7B  1006               	bcf	6,0	;volatile
  4779     0E7C                     u3464:
  4780                           
  4781                           ;main.c: 683:   PORTCbits.RC6 = 1;
  4782     0E7C  1707               	bsf	7,6	;volatile
  4783                           
  4784                           ;main.c: 684:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  4785     0E7D  2E7E               	nop2	;2 cycle nop
  4786                           
  4787                           ;main.c: 685:   PORTCbits.RC6 = 0;
  4788     0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  4789     0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  4790     0E80  1307               	bcf	7,6	;volatile
  4791     0E81                     l2471:
  4792                           
  4793                           ;main.c: 686:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  4794     0E81  3042               	movlw	66
  4795     0E82  00F2               	movwf	??_lcd_cmd
  4796     0E83                     u5117:
  4797     0E83  0BF2               	decfsz	??_lcd_cmd,f
  4798     0E84  2E83               	goto	u5117
  4799     0E85  0000               	nop
  4800     0E86                     l2473:
  4801                           
  4802                           ;main.c: 689:   PORTCbits.RC7 = (cmd & 0x08) ? 1 : 0;
  4803     0E86  19F3               	btfsc	lcd_cmd@cmd,3
  4804     0E87  2E89               	goto	u3471
  4805     0E88  2E8D               	goto	u3470
  4806     0E89                     u3471:
  4807     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  4808     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  4809     0E8B  1787               	bsf	7,7	;volatile
  4810     0E8C  2E90               	goto	u3484
  4811     0E8D                     u3470:
  4812     0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  4813     0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  4814     0E8F  1387               	bcf	7,7	;volatile
  4815     0E90                     u3484:
  4816     0E90                     l2475:
  4817                           
  4818                           ;main.c: 690:   PORTBbits.RB2 = (cmd & 0x04) ? 1 : 0;
  4819     0E90  1973               	btfsc	lcd_cmd@cmd,2
  4820     0E91  2E93               	goto	u3491
  4821     0E92  2E97               	goto	u3490
  4822     0E93                     u3491:
  4823     0E93  1283               	bcf	3,5	;RP0=0, select bank0
  4824     0E94  1303               	bcf	3,6	;RP1=0, select bank0
  4825     0E95  1506               	bsf	6,2	;volatile
  4826     0E96  2E9A               	goto	u3504
  4827     0E97                     u3490:
  4828     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4829     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4830     0E99  1106               	bcf	6,2	;volatile
  4831     0E9A                     u3504:
  4832     0E9A                     l2477:
  4833                           
  4834                           ;main.c: 691:   PORTBbits.RB1 = (cmd & 0x02) ? 1 : 0;
  4835     0E9A  18F3               	btfsc	lcd_cmd@cmd,1
  4836     0E9B  2E9D               	goto	u3511
  4837     0E9C  2EA1               	goto	u3510
  4838     0E9D                     u3511:
  4839     0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  4840     0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  4841     0E9F  1486               	bsf	6,1	;volatile
  4842     0EA0  2EA4               	goto	u3524
  4843     0EA1                     u3510:
  4844     0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  4845     0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  4846     0EA3  1086               	bcf	6,1	;volatile
  4847     0EA4                     u3524:
  4848     0EA4                     l2479:
  4849                           
  4850                           ;main.c: 692:   PORTBbits.RB0 = (cmd & 0x01) ? 1 : 0;
  4851     0EA4  1873               	btfsc	lcd_cmd@cmd,0
  4852     0EA5  2EA7               	goto	u3531
  4853     0EA6  2EAB               	goto	u3530
  4854     0EA7                     u3531:
  4855     0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  4856     0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  4857     0EA9  1406               	bsf	6,0	;volatile
  4858     0EAA  2EAE               	goto	u3544
  4859     0EAB                     u3530:
  4860     0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4861     0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4862     0EAD  1006               	bcf	6,0	;volatile
  4863     0EAE                     u3544:
  4864     0EAE                     l2481:
  4865                           
  4866                           ;main.c: 694:   PORTCbits.RC6 = 1;
  4867     0EAE  1707               	bsf	7,6	;volatile
  4868     0EAF                     l2483:
  4869                           
  4870                           ;main.c: 695:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  4871     0EAF  2EB0               	nop2	;2 cycle nop
  4872     0EB0                     l2485:
  4873                           
  4874                           ;main.c: 696:   PORTCbits.RC6 = 0;
  4875     0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  4876     0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  4877     0EB2  1307               	bcf	7,6	;volatile
  4878                           
  4879                           ;main.c: 697:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  4880     0EB3  3042               	movlw	66
  4881     0EB4  00F2               	movwf	??_lcd_cmd
  4882     0EB5                     u5127:
  4883     0EB5  0BF2               	decfsz	??_lcd_cmd,f
  4884     0EB6  2EB5               	goto	u5127
  4885     0EB7  0000               	nop
  4886     0EB8                     l337:
  4887     0EB8  0008               	return
  4888     0EB9                     __end_of_lcd_cmd:
  4889                           
  4890                           	psect	text14
  4891     0F25                     __ptext14:	
  4892 ;; *************** function _lcd_display_int *****************
  4893 ;; Defined at:
  4894 ;;		line 739 in file "main.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  num             2   19[BANK0 ] int 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4908 ;;      Params:         0       2       0       0
  4909 ;;      Locals:         0       0       0       0
  4910 ;;      Temps:          0       0       0       0
  4911 ;;      Totals:         0       2       0       0
  4912 ;;Total ram usage:        2 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; Hardware stack levels required when called: 2
  4915 ;; This function calls:
  4916 ;;		___awdiv
  4917 ;;		___awmod
  4918 ;;		_lcd_data
  4919 ;; This function is called by:
  4920 ;;		_dispinfo
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924     0F25                     _lcd_display_int:	
  4925                           ;psect for function _lcd_display_int
  4926                           
  4927     0F25                     l2643:	
  4928                           ;incstack = 0
  4929                           ; Regs used in _lcd_display_int: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4930                           
  4931                           
  4932                           ;main.c: 741:   if (num < 0) {
  4933     0F25  1283               	bcf	3,5	;RP0=0, select bank0
  4934     0F26  1303               	bcf	3,6	;RP1=0, select bank0
  4935     0F27  1FDB               	btfss	lcd_display_int@num+1,7
  4936     0F28  2F2A               	goto	u4021
  4937     0F29  2F2B               	goto	u4020
  4938     0F2A                     u4021:
  4939     0F2A  2F36               	goto	l2649
  4940     0F2B                     u4020:
  4941     0F2B                     l2645:
  4942                           
  4943                           ;main.c: 742:     lcd_data('-');
  4944     0F2B  302D               	movlw	45
  4945     0F2C  158A  25E7  158A   	fcall	_lcd_data
  4946     0F2F                     l2647:
  4947                           
  4948                           ;main.c: 743:     num = -num;
  4949     0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  4950     0F30  1303               	bcf	3,6	;RP1=0, select bank0
  4951     0F31  09DA               	comf	lcd_display_int@num,f
  4952     0F32  09DB               	comf	lcd_display_int@num+1,f
  4953     0F33  0ADA               	incf	lcd_display_int@num,f
  4954     0F34  1903               	skipnz
  4955     0F35  0ADB               	incf	lcd_display_int@num+1,f
  4956     0F36                     l2649:
  4957                           
  4958                           ;main.c: 747:   if (num > 999)
  4959     0F36  085B               	movf	lcd_display_int@num+1,w
  4960     0F37  3A80               	xorlw	128
  4961     0F38  00FF               	movwf	btemp+1
  4962     0F39  3083               	movlw	131
  4963     0F3A  027F               	subwf	btemp+1,w
  4964     0F3B  1D03               	skipz
  4965     0F3C  2F3F               	goto	u4035
  4966     0F3D  30E8               	movlw	232
  4967     0F3E  025A               	subwf	lcd_display_int@num,w
  4968     0F3F                     u4035:
  4969     0F3F  1C03               	skipc
  4970     0F40  2F42               	goto	u4031
  4971     0F41  2F43               	goto	u4030
  4972     0F42                     u4031:
  4973     0F42  2F49               	goto	l2653
  4974     0F43                     u4030:
  4975     0F43                     l2651:
  4976                           
  4977                           ;main.c: 748:     num = 999;
  4978     0F43  30E7               	movlw	231
  4979     0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4980     0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4981     0F46  00DA               	movwf	lcd_display_int@num
  4982     0F47  3003               	movlw	3
  4983     0F48  00DB               	movwf	lcd_display_int@num+1
  4984     0F49                     l2653:
  4985                           
  4986                           ;main.c: 751:   lcd_data('0' + (num / 100));
  4987     0F49  3064               	movlw	100
  4988     0F4A  00F2               	movwf	___awdiv@divisor
  4989     0F4B  3000               	movlw	0
  4990     0F4C  00F3               	movwf	___awdiv@divisor+1
  4991     0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  4992     0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  4993     0F4F  085B               	movf	lcd_display_int@num+1,w
  4994     0F50  00F5               	movwf	___awdiv@dividend+1
  4995     0F51  085A               	movf	lcd_display_int@num,w
  4996     0F52  00F4               	movwf	___awdiv@dividend
  4997     0F53  158A  251E  158A   	fcall	___awdiv
  4998     0F56  0872               	movf	?___awdiv,w
  4999     0F57  3E30               	addlw	48
  5000     0F58  158A  25E7  158A   	fcall	_lcd_data
  5001     0F5B                     l2655:
  5002                           
  5003                           ;main.c: 754:   lcd_data('0' + ((num / 10) % 10));
  5004     0F5B  300A               	movlw	10
  5005     0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  5006     0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  5007     0F5E  00C7               	movwf	___awmod@divisor
  5008     0F5F  3000               	movlw	0
  5009     0F60  00C8               	movwf	___awmod@divisor+1
  5010     0F61  300A               	movlw	10
  5011     0F62  00F2               	movwf	___awdiv@divisor
  5012     0F63  3000               	movlw	0
  5013     0F64  00F3               	movwf	___awdiv@divisor+1
  5014     0F65  085B               	movf	lcd_display_int@num+1,w
  5015     0F66  00F5               	movwf	___awdiv@dividend+1
  5016     0F67  085A               	movf	lcd_display_int@num,w
  5017     0F68  00F4               	movwf	___awdiv@dividend
  5018     0F69  158A  251E  158A   	fcall	___awdiv
  5019     0F6C  0873               	movf	?___awdiv+1,w
  5020     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  5021     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  5022     0F6F  00CA               	movwf	___awmod@dividend+1
  5023     0F70  0872               	movf	?___awdiv,w
  5024     0F71  00C9               	movwf	___awmod@dividend
  5025     0F72  158A  24C5  158A   	fcall	___awmod
  5026     0F75  1283               	bcf	3,5	;RP0=0, select bank0
  5027     0F76  1303               	bcf	3,6	;RP1=0, select bank0
  5028     0F77  0847               	movf	?___awmod,w
  5029     0F78  3E30               	addlw	48
  5030     0F79  158A  25E7  158A   	fcall	_lcd_data
  5031     0F7C                     l2657:
  5032                           
  5033                           ;main.c: 757:   lcd_data('0' + (num % 10));
  5034     0F7C  300A               	movlw	10
  5035     0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5036     0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  5037     0F7F  00C7               	movwf	___awmod@divisor
  5038     0F80  3000               	movlw	0
  5039     0F81  00C8               	movwf	___awmod@divisor+1
  5040     0F82  085B               	movf	lcd_display_int@num+1,w
  5041     0F83  00CA               	movwf	___awmod@dividend+1
  5042     0F84  085A               	movf	lcd_display_int@num,w
  5043     0F85  00C9               	movwf	___awmod@dividend
  5044     0F86  158A  24C5  158A   	fcall	___awmod
  5045     0F89  1283               	bcf	3,5	;RP0=0, select bank0
  5046     0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  5047     0F8B  0847               	movf	?___awmod,w
  5048     0F8C  3E30               	addlw	48
  5049     0F8D  158A  25E7  158A   	fcall	_lcd_data
  5050     0F90                     l350:
  5051     0F90  0008               	return
  5052     0F91                     __end_of_lcd_display_int:
  5053                           
  5054                           	psect	text15
  5055     0CC5                     __ptext15:	
  5056 ;; *************** function ___awmod *****************
  5057 ;; Defined at:
  5058 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awmod.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  divisor         2    0[BANK0 ] int 
  5061 ;;  dividend        2    2[BANK0 ] int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  sign            1    5[BANK0 ] unsigned char 
  5064 ;;  counter         1    4[BANK0 ] unsigned char 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  2    0[BANK0 ] int 
  5067 ;; Registers used:
  5068 ;;		wreg, status,2, status,0
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5074 ;;      Params:         0       4       0       0
  5075 ;;      Locals:         0       2       0       0
  5076 ;;      Temps:          0       0       0       0
  5077 ;;      Totals:         0       6       0       0
  5078 ;;Total ram usage:        6 bytes
  5079 ;; Hardware stack levels used: 1
  5080 ;; Hardware stack levels required when called: 1
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_lcd_display_int
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088     0CC5                     ___awmod:	
  5089                           ;psect for function ___awmod
  5090                           
  5091     0CC5                     l2549:	
  5092                           ;incstack = 0
  5093                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5094                           
  5095     0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  5096     0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  5097     0CC7  01CC               	clrf	___awmod@sign
  5098     0CC8                     l2551:
  5099     0CC8  1FCA               	btfss	___awmod@dividend+1,7
  5100     0CC9  2CCB               	goto	u3811
  5101     0CCA  2CCC               	goto	u3810
  5102     0CCB                     u3811:
  5103     0CCB  2CD3               	goto	l2557
  5104     0CCC                     u3810:
  5105     0CCC                     l2553:
  5106     0CCC  09C9               	comf	___awmod@dividend,f
  5107     0CCD  09CA               	comf	___awmod@dividend+1,f
  5108     0CCE  0AC9               	incf	___awmod@dividend,f
  5109     0CCF  1903               	skipnz
  5110     0CD0  0ACA               	incf	___awmod@dividend+1,f
  5111     0CD1                     l2555:
  5112     0CD1  3001               	movlw	1
  5113     0CD2  00CC               	movwf	___awmod@sign
  5114     0CD3                     l2557:
  5115     0CD3  1FC8               	btfss	___awmod@divisor+1,7
  5116     0CD4  2CD6               	goto	u3821
  5117     0CD5  2CD7               	goto	u3820
  5118     0CD6                     u3821:
  5119     0CD6  2CDC               	goto	l2561
  5120     0CD7                     u3820:
  5121     0CD7                     l2559:
  5122     0CD7  09C7               	comf	___awmod@divisor,f
  5123     0CD8  09C8               	comf	___awmod@divisor+1,f
  5124     0CD9  0AC7               	incf	___awmod@divisor,f
  5125     0CDA  1903               	skipnz
  5126     0CDB  0AC8               	incf	___awmod@divisor+1,f
  5127     0CDC                     l2561:
  5128     0CDC  0847               	movf	___awmod@divisor,w
  5129     0CDD  0448               	iorwf	___awmod@divisor+1,w
  5130     0CDE  1903               	btfsc	3,2
  5131     0CDF  2CE1               	goto	u3831
  5132     0CE0  2CE2               	goto	u3830
  5133     0CE1                     u3831:
  5134     0CE1  2D0F               	goto	l2579
  5135     0CE2                     u3830:
  5136     0CE2                     l2563:
  5137     0CE2  3001               	movlw	1
  5138     0CE3  00CB               	movwf	___awmod@counter
  5139     0CE4  2CEE               	goto	l2569
  5140     0CE5                     l2565:
  5141     0CE5  3001               	movlw	1
  5142     0CE6                     u3845:
  5143     0CE6  1003               	clrc
  5144     0CE7  0DC7               	rlf	___awmod@divisor,f
  5145     0CE8  0DC8               	rlf	___awmod@divisor+1,f
  5146     0CE9  3EFF               	addlw	-1
  5147     0CEA  1D03               	skipz
  5148     0CEB  2CE6               	goto	u3845
  5149     0CEC                     l2567:
  5150     0CEC  3001               	movlw	1
  5151     0CED  07CB               	addwf	___awmod@counter,f
  5152     0CEE                     l2569:
  5153     0CEE  1FC8               	btfss	___awmod@divisor+1,7
  5154     0CEF  2CF1               	goto	u3851
  5155     0CF0  2CF2               	goto	u3850
  5156     0CF1                     u3851:
  5157     0CF1  2CE5               	goto	l2565
  5158     0CF2                     u3850:
  5159     0CF2                     l2571:
  5160     0CF2  0848               	movf	___awmod@divisor+1,w
  5161     0CF3  024A               	subwf	___awmod@dividend+1,w
  5162     0CF4  1D03               	skipz
  5163     0CF5  2CF8               	goto	u3865
  5164     0CF6  0847               	movf	___awmod@divisor,w
  5165     0CF7  0249               	subwf	___awmod@dividend,w
  5166     0CF8                     u3865:
  5167     0CF8  1C03               	skipc
  5168     0CF9  2CFB               	goto	u3861
  5169     0CFA  2CFC               	goto	u3860
  5170     0CFB                     u3861:
  5171     0CFB  2D02               	goto	l2575
  5172     0CFC                     u3860:
  5173     0CFC                     l2573:
  5174     0CFC  0847               	movf	___awmod@divisor,w
  5175     0CFD  02C9               	subwf	___awmod@dividend,f
  5176     0CFE  0848               	movf	___awmod@divisor+1,w
  5177     0CFF  1C03               	skipc
  5178     0D00  03CA               	decf	___awmod@dividend+1,f
  5179     0D01  02CA               	subwf	___awmod@dividend+1,f
  5180     0D02                     l2575:
  5181     0D02  3001               	movlw	1
  5182     0D03                     u3875:
  5183     0D03  1003               	clrc
  5184     0D04  0CC8               	rrf	___awmod@divisor+1,f
  5185     0D05  0CC7               	rrf	___awmod@divisor,f
  5186     0D06  3EFF               	addlw	-1
  5187     0D07  1D03               	skipz
  5188     0D08  2D03               	goto	u3875
  5189     0D09                     l2577:
  5190     0D09  3001               	movlw	1
  5191     0D0A  02CB               	subwf	___awmod@counter,f
  5192     0D0B  1D03               	btfss	3,2
  5193     0D0C  2D0E               	goto	u3881
  5194     0D0D  2D0F               	goto	u3880
  5195     0D0E                     u3881:
  5196     0D0E  2CF2               	goto	l2571
  5197     0D0F                     u3880:
  5198     0D0F                     l2579:
  5199     0D0F  084C               	movf	___awmod@sign,w
  5200     0D10  1903               	btfsc	3,2
  5201     0D11  2D13               	goto	u3891
  5202     0D12  2D14               	goto	u3890
  5203     0D13                     u3891:
  5204     0D13  2D19               	goto	l2583
  5205     0D14                     u3890:
  5206     0D14                     l2581:
  5207     0D14  09C9               	comf	___awmod@dividend,f
  5208     0D15  09CA               	comf	___awmod@dividend+1,f
  5209     0D16  0AC9               	incf	___awmod@dividend,f
  5210     0D17  1903               	skipnz
  5211     0D18  0ACA               	incf	___awmod@dividend+1,f
  5212     0D19                     l2583:
  5213     0D19  084A               	movf	___awmod@dividend+1,w
  5214     0D1A  00C8               	movwf	?___awmod+1
  5215     0D1B  0849               	movf	___awmod@dividend,w
  5216     0D1C  00C7               	movwf	?___awmod
  5217     0D1D                     l633:
  5218     0D1D  0008               	return
  5219     0D1E                     __end_of___awmod:
  5220                           
  5221                           	psect	text16
  5222     0D1E                     __ptext16:	
  5223 ;; *************** function ___awdiv *****************
  5224 ;; Defined at:
  5225 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/awdiv.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  divisor         2    2[COMMON] int 
  5228 ;;  dividend        2    4[COMMON] int 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  quotient        2    8[COMMON] int 
  5231 ;;  sign            1    7[COMMON] unsigned char 
  5232 ;;  counter         1    6[COMMON] unsigned char 
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  2    2[COMMON] int 
  5235 ;; Registers used:
  5236 ;;		wreg, status,2, status,0
  5237 ;; Tracked objects:
  5238 ;;		On entry : 0/0
  5239 ;;		On exit  : 0/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5242 ;;      Params:         4       0       0       0
  5243 ;;      Locals:         4       0       0       0
  5244 ;;      Temps:          0       0       0       0
  5245 ;;      Totals:         8       0       0       0
  5246 ;;Total ram usage:        8 bytes
  5247 ;; Hardware stack levels used: 1
  5248 ;; Hardware stack levels required when called: 1
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_lcd_display_int
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256     0D1E                     ___awdiv:	
  5257                           ;psect for function ___awdiv
  5258                           
  5259     0D1E                     l2505:	
  5260                           ;incstack = 0
  5261                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5262                           
  5263     0D1E  01F7               	clrf	___awdiv@sign
  5264     0D1F                     l2507:
  5265     0D1F  1FF3               	btfss	___awdiv@divisor+1,7
  5266     0D20  2D22               	goto	u3711
  5267     0D21  2D23               	goto	u3710
  5268     0D22                     u3711:
  5269     0D22  2D2A               	goto	l2513
  5270     0D23                     u3710:
  5271     0D23                     l2509:
  5272     0D23  09F2               	comf	___awdiv@divisor,f
  5273     0D24  09F3               	comf	___awdiv@divisor+1,f
  5274     0D25  0AF2               	incf	___awdiv@divisor,f
  5275     0D26  1903               	skipnz
  5276     0D27  0AF3               	incf	___awdiv@divisor+1,f
  5277     0D28                     l2511:
  5278     0D28  3001               	movlw	1
  5279     0D29  00F7               	movwf	___awdiv@sign
  5280     0D2A                     l2513:
  5281     0D2A  1FF5               	btfss	___awdiv@dividend+1,7
  5282     0D2B  2D2D               	goto	u3721
  5283     0D2C  2D2E               	goto	u3720
  5284     0D2D                     u3721:
  5285     0D2D  2D35               	goto	l2519
  5286     0D2E                     u3720:
  5287     0D2E                     l2515:
  5288     0D2E  09F4               	comf	___awdiv@dividend,f
  5289     0D2F  09F5               	comf	___awdiv@dividend+1,f
  5290     0D30  0AF4               	incf	___awdiv@dividend,f
  5291     0D31  1903               	skipnz
  5292     0D32  0AF5               	incf	___awdiv@dividend+1,f
  5293     0D33                     l2517:
  5294     0D33  3001               	movlw	1
  5295     0D34  06F7               	xorwf	___awdiv@sign,f
  5296     0D35                     l2519:
  5297     0D35  01F8               	clrf	___awdiv@quotient
  5298     0D36  01F9               	clrf	___awdiv@quotient+1
  5299     0D37                     l2521:
  5300     0D37  0872               	movf	___awdiv@divisor,w
  5301     0D38  0473               	iorwf	___awdiv@divisor+1,w
  5302     0D39  1903               	btfsc	3,2
  5303     0D3A  2D3C               	goto	u3731
  5304     0D3B  2D3D               	goto	u3730
  5305     0D3C                     u3731:
  5306     0D3C  2D72               	goto	l2541
  5307     0D3D                     u3730:
  5308     0D3D                     l2523:
  5309     0D3D  3001               	movlw	1
  5310     0D3E  00F6               	movwf	___awdiv@counter
  5311     0D3F  2D49               	goto	l2529
  5312     0D40                     l2525:
  5313     0D40  3001               	movlw	1
  5314     0D41                     u3745:
  5315     0D41  1003               	clrc
  5316     0D42  0DF2               	rlf	___awdiv@divisor,f
  5317     0D43  0DF3               	rlf	___awdiv@divisor+1,f
  5318     0D44  3EFF               	addlw	-1
  5319     0D45  1D03               	skipz
  5320     0D46  2D41               	goto	u3745
  5321     0D47                     l2527:
  5322     0D47  3001               	movlw	1
  5323     0D48  07F6               	addwf	___awdiv@counter,f
  5324     0D49                     l2529:
  5325     0D49  1FF3               	btfss	___awdiv@divisor+1,7
  5326     0D4A  2D4C               	goto	u3751
  5327     0D4B  2D4D               	goto	u3750
  5328     0D4C                     u3751:
  5329     0D4C  2D40               	goto	l2525
  5330     0D4D                     u3750:
  5331     0D4D                     l2531:
  5332     0D4D  3001               	movlw	1
  5333     0D4E                     u3765:
  5334     0D4E  1003               	clrc
  5335     0D4F  0DF8               	rlf	___awdiv@quotient,f
  5336     0D50  0DF9               	rlf	___awdiv@quotient+1,f
  5337     0D51  3EFF               	addlw	-1
  5338     0D52  1D03               	skipz
  5339     0D53  2D4E               	goto	u3765
  5340     0D54  0873               	movf	___awdiv@divisor+1,w
  5341     0D55  0275               	subwf	___awdiv@dividend+1,w
  5342     0D56  1D03               	skipz
  5343     0D57  2D5A               	goto	u3775
  5344     0D58  0872               	movf	___awdiv@divisor,w
  5345     0D59  0274               	subwf	___awdiv@dividend,w
  5346     0D5A                     u3775:
  5347     0D5A  1C03               	skipc
  5348     0D5B  2D5D               	goto	u3771
  5349     0D5C  2D5E               	goto	u3770
  5350     0D5D                     u3771:
  5351     0D5D  2D65               	goto	l2537
  5352     0D5E                     u3770:
  5353     0D5E                     l2533:
  5354     0D5E  0872               	movf	___awdiv@divisor,w
  5355     0D5F  02F4               	subwf	___awdiv@dividend,f
  5356     0D60  0873               	movf	___awdiv@divisor+1,w
  5357     0D61  1C03               	skipc
  5358     0D62  03F5               	decf	___awdiv@dividend+1,f
  5359     0D63  02F5               	subwf	___awdiv@dividend+1,f
  5360     0D64                     l2535:
  5361     0D64  1478               	bsf	___awdiv@quotient,0
  5362     0D65                     l2537:
  5363     0D65  3001               	movlw	1
  5364     0D66                     u3785:
  5365     0D66  1003               	clrc
  5366     0D67  0CF3               	rrf	___awdiv@divisor+1,f
  5367     0D68  0CF2               	rrf	___awdiv@divisor,f
  5368     0D69  3EFF               	addlw	-1
  5369     0D6A  1D03               	skipz
  5370     0D6B  2D66               	goto	u3785
  5371     0D6C                     l2539:
  5372     0D6C  3001               	movlw	1
  5373     0D6D  02F6               	subwf	___awdiv@counter,f
  5374     0D6E  1D03               	btfss	3,2
  5375     0D6F  2D71               	goto	u3791
  5376     0D70  2D72               	goto	u3790
  5377     0D71                     u3791:
  5378     0D71  2D4D               	goto	l2531
  5379     0D72                     u3790:
  5380     0D72                     l2541:
  5381     0D72  0877               	movf	___awdiv@sign,w
  5382     0D73  1903               	btfsc	3,2
  5383     0D74  2D76               	goto	u3801
  5384     0D75  2D77               	goto	u3800
  5385     0D76                     u3801:
  5386     0D76  2D7C               	goto	l2545
  5387     0D77                     u3800:
  5388     0D77                     l2543:
  5389     0D77  09F8               	comf	___awdiv@quotient,f
  5390     0D78  09F9               	comf	___awdiv@quotient+1,f
  5391     0D79  0AF8               	incf	___awdiv@quotient,f
  5392     0D7A  1903               	skipnz
  5393     0D7B  0AF9               	incf	___awdiv@quotient+1,f
  5394     0D7C                     l2545:
  5395     0D7C  0879               	movf	___awdiv@quotient+1,w
  5396     0D7D  00F3               	movwf	?___awdiv+1
  5397     0D7E  0878               	movf	___awdiv@quotient,w
  5398     0D7F  00F2               	movwf	?___awdiv
  5399     0D80                     l620:
  5400     0D80  0008               	return
  5401     0D81                     __end_of___awdiv:
  5402                           
  5403                           	psect	text17
  5404     0B02                     __ptext17:	
  5405 ;; *************** function _lcd_display_bool_binary *****************
  5406 ;; Defined at:
  5407 ;;		line 817 in file "main.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  value           1    wreg     _Bool 
  5410 ;; Auto vars:     Size  Location     Type
  5411 ;;  value           1    4[COMMON] _Bool 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  1    wreg      void 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0, pclath, cstack
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5421 ;;      Params:         0       0       0       0
  5422 ;;      Locals:         1       0       0       0
  5423 ;;      Temps:          0       0       0       0
  5424 ;;      Totals:         1       0       0       0
  5425 ;;Total ram usage:        1 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 2
  5428 ;; This function calls:
  5429 ;;		_lcd_data
  5430 ;; This function is called by:
  5431 ;;		_dispinfo
  5432 ;; This function uses a non-reentrant model
  5433 ;;
  5434                           
  5435     0B02                     _lcd_display_bool_binary:	
  5436                           ;psect for function _lcd_display_bool_binary
  5437                           
  5438                           
  5439                           ;incstack = 0
  5440                           ; Regs used in _lcd_display_bool_binary: [wreg+status,2+status,0+pclath+cstack]
  5441                           ;lcd_display_bool_binary@value stored from wreg
  5442     0B02  00F4               	movwf	lcd_display_bool_binary@value
  5443     0B03                     l2659:
  5444                           
  5445                           ;main.c: 818:   if (value) {
  5446     0B03  0874               	movf	lcd_display_bool_binary@value,w
  5447     0B04  1903               	btfsc	3,2
  5448     0B05  2B07               	goto	u4041
  5449     0B06  2B08               	goto	u4040
  5450     0B07                     u4041:
  5451     0B07  2B0D               	goto	l2663
  5452     0B08                     u4040:
  5453     0B08                     l2661:
  5454                           
  5455                           ;main.c: 819:     lcd_data('1');
  5456     0B08  3031               	movlw	49
  5457     0B09  158A  25E7  158A   	fcall	_lcd_data
  5458                           
  5459                           ;main.c: 820:   } else {
  5460     0B0C  2B11               	goto	l377
  5461     0B0D                     l2663:
  5462                           
  5463                           ;main.c: 821:     lcd_data('0');
  5464     0B0D  3030               	movlw	48
  5465     0B0E  158A  25E7  158A   	fcall	_lcd_data
  5466     0B11                     l377:
  5467     0B11  0008               	return
  5468     0B12                     __end_of_lcd_display_bool_binary:
  5469                           
  5470                           	psect	text18
  5471     0DE7                     __ptext18:	
  5472 ;; *************** function _lcd_data *****************
  5473 ;; Defined at:
  5474 ;;		line 713 in file "main.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  data            1    wreg     unsigned char 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;  data            1    3[COMMON] unsigned char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5488 ;;      Params:         0       0       0       0
  5489 ;;      Locals:         1       0       0       0
  5490 ;;      Temps:          1       0       0       0
  5491 ;;      Totals:         2       0       0       0
  5492 ;;Total ram usage:        2 bytes
  5493 ;; Hardware stack levels used: 1
  5494 ;; Hardware stack levels required when called: 1
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_lcd_display_int
  5499 ;;		_lcd_display_bool_binary
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503     0DE7                     _lcd_data:	
  5504                           ;psect for function _lcd_data
  5505                           
  5506                           
  5507                           ;incstack = 0
  5508                           ; Regs used in _lcd_data: [wreg]
  5509                           ;lcd_data@data stored from wreg
  5510     0DE7  00F3               	movwf	lcd_data@data
  5511     0DE8                     l2487:
  5512                           
  5513                           ;main.c: 714:   PORTCbits.RC5 = 1;
  5514     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  5515     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  5516     0DEA  1687               	bsf	7,5	;volatile
  5517                           
  5518                           ;main.c: 717:   PORTCbits.RC7 = (data & 0x80) ? 1 : 0;
  5519     0DEB  1BF3               	btfsc	lcd_data@data,7
  5520     0DEC  2DEE               	goto	u3551
  5521     0DED  2DF2               	goto	u3550
  5522     0DEE                     u3551:
  5523     0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  5524     0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  5525     0DF0  1787               	bsf	7,7	;volatile
  5526     0DF1  2DF5               	goto	u3564
  5527     0DF2                     u3550:
  5528     0DF2  1283               	bcf	3,5	;RP0=0, select bank0
  5529     0DF3  1303               	bcf	3,6	;RP1=0, select bank0
  5530     0DF4  1387               	bcf	7,7	;volatile
  5531     0DF5                     u3564:
  5532                           
  5533                           ;main.c: 718:   PORTBbits.RB2 = (data & 0x40) ? 1 : 0;
  5534     0DF5  1B73               	btfsc	lcd_data@data,6
  5535     0DF6  2DF8               	goto	u3571
  5536     0DF7  2DFC               	goto	u3570
  5537     0DF8                     u3571:
  5538     0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  5539     0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  5540     0DFA  1506               	bsf	6,2	;volatile
  5541     0DFB  2DFF               	goto	u3584
  5542     0DFC                     u3570:
  5543     0DFC  1283               	bcf	3,5	;RP0=0, select bank0
  5544     0DFD  1303               	bcf	3,6	;RP1=0, select bank0
  5545     0DFE  1106               	bcf	6,2	;volatile
  5546     0DFF                     u3584:
  5547                           
  5548                           ;main.c: 719:   PORTBbits.RB1 = (data & 0x20) ? 1 : 0;
  5549     0DFF  1AF3               	btfsc	lcd_data@data,5
  5550     0E00  2E02               	goto	u3591
  5551     0E01  2E06               	goto	u3590
  5552     0E02                     u3591:
  5553     0E02  1283               	bcf	3,5	;RP0=0, select bank0
  5554     0E03  1303               	bcf	3,6	;RP1=0, select bank0
  5555     0E04  1486               	bsf	6,1	;volatile
  5556     0E05  2E09               	goto	u3604
  5557     0E06                     u3590:
  5558     0E06  1283               	bcf	3,5	;RP0=0, select bank0
  5559     0E07  1303               	bcf	3,6	;RP1=0, select bank0
  5560     0E08  1086               	bcf	6,1	;volatile
  5561     0E09                     u3604:
  5562                           
  5563                           ;main.c: 720:   PORTBbits.RB0 = (data & 0x10) ? 1 : 0;
  5564     0E09  1A73               	btfsc	lcd_data@data,4
  5565     0E0A  2E0C               	goto	u3611
  5566     0E0B  2E10               	goto	u3610
  5567     0E0C                     u3611:
  5568     0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  5569     0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  5570     0E0E  1406               	bsf	6,0	;volatile
  5571     0E0F  2E13               	goto	u3624
  5572     0E10                     u3610:
  5573     0E10  1283               	bcf	3,5	;RP0=0, select bank0
  5574     0E11  1303               	bcf	3,6	;RP1=0, select bank0
  5575     0E12  1006               	bcf	6,0	;volatile
  5576     0E13                     u3624:
  5577                           
  5578                           ;main.c: 722:   PORTCbits.RC6 = 1;
  5579     0E13  1707               	bsf	7,6	;volatile
  5580                           
  5581                           ;main.c: 723:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  5582     0E14  2E15               	nop2	;2 cycle nop
  5583                           
  5584                           ;main.c: 724:   PORTCbits.RC6 = 0;
  5585     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  5586     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  5587     0E17  1307               	bcf	7,6	;volatile
  5588     0E18                     l2489:
  5589                           
  5590                           ;main.c: 725:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  5591     0E18  3042               	movlw	66
  5592     0E19  00F2               	movwf	??_lcd_data
  5593     0E1A                     u5137:
  5594     0E1A  0BF2               	decfsz	??_lcd_data,f
  5595     0E1B  2E1A               	goto	u5137
  5596     0E1C  0000               	nop
  5597     0E1D                     l2491:
  5598                           
  5599                           ;main.c: 728:   PORTCbits.RC7 = (data & 0x08) ? 1 : 0;
  5600     0E1D  19F3               	btfsc	lcd_data@data,3
  5601     0E1E  2E20               	goto	u3631
  5602     0E1F  2E24               	goto	u3630
  5603     0E20                     u3631:
  5604     0E20  1283               	bcf	3,5	;RP0=0, select bank0
  5605     0E21  1303               	bcf	3,6	;RP1=0, select bank0
  5606     0E22  1787               	bsf	7,7	;volatile
  5607     0E23  2E27               	goto	u3644
  5608     0E24                     u3630:
  5609     0E24  1283               	bcf	3,5	;RP0=0, select bank0
  5610     0E25  1303               	bcf	3,6	;RP1=0, select bank0
  5611     0E26  1387               	bcf	7,7	;volatile
  5612     0E27                     u3644:
  5613     0E27                     l2493:
  5614                           
  5615                           ;main.c: 729:   PORTBbits.RB2 = (data & 0x04) ? 1 : 0;
  5616     0E27  1973               	btfsc	lcd_data@data,2
  5617     0E28  2E2A               	goto	u3651
  5618     0E29  2E2E               	goto	u3650
  5619     0E2A                     u3651:
  5620     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  5621     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  5622     0E2C  1506               	bsf	6,2	;volatile
  5623     0E2D  2E31               	goto	u3664
  5624     0E2E                     u3650:
  5625     0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  5626     0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  5627     0E30  1106               	bcf	6,2	;volatile
  5628     0E31                     u3664:
  5629     0E31                     l2495:
  5630                           
  5631                           ;main.c: 730:   PORTBbits.RB1 = (data & 0x02) ? 1 : 0;
  5632     0E31  18F3               	btfsc	lcd_data@data,1
  5633     0E32  2E34               	goto	u3671
  5634     0E33  2E38               	goto	u3670
  5635     0E34                     u3671:
  5636     0E34  1283               	bcf	3,5	;RP0=0, select bank0
  5637     0E35  1303               	bcf	3,6	;RP1=0, select bank0
  5638     0E36  1486               	bsf	6,1	;volatile
  5639     0E37  2E3B               	goto	u3684
  5640     0E38                     u3670:
  5641     0E38  1283               	bcf	3,5	;RP0=0, select bank0
  5642     0E39  1303               	bcf	3,6	;RP1=0, select bank0
  5643     0E3A  1086               	bcf	6,1	;volatile
  5644     0E3B                     u3684:
  5645     0E3B                     l2497:
  5646                           
  5647                           ;main.c: 731:   PORTBbits.RB0 = (data & 0x01) ? 1 : 0;
  5648     0E3B  1873               	btfsc	lcd_data@data,0
  5649     0E3C  2E3E               	goto	u3691
  5650     0E3D  2E42               	goto	u3690
  5651     0E3E                     u3691:
  5652     0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  5653     0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  5654     0E40  1406               	bsf	6,0	;volatile
  5655     0E41  2E45               	goto	u3704
  5656     0E42                     u3690:
  5657     0E42  1283               	bcf	3,5	;RP0=0, select bank0
  5658     0E43  1303               	bcf	3,6	;RP1=0, select bank0
  5659     0E44  1006               	bcf	6,0	;volatile
  5660     0E45                     u3704:
  5661     0E45                     l2499:
  5662                           
  5663                           ;main.c: 733:   PORTCbits.RC6 = 1;
  5664     0E45  1707               	bsf	7,6	;volatile
  5665     0E46                     l2501:
  5666                           
  5667                           ;main.c: 734:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  5668     0E46  2E47               	nop2	;2 cycle nop
  5669     0E47                     l2503:
  5670                           
  5671                           ;main.c: 735:   PORTCbits.RC6 = 0;
  5672     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  5673     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  5674     0E49  1307               	bcf	7,6	;volatile
  5675                           
  5676                           ;main.c: 736:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  5677     0E4A  3042               	movlw	66
  5678     0E4B  00F2               	movwf	??_lcd_data
  5679     0E4C                     u5147:
  5680     0E4C  0BF2               	decfsz	??_lcd_data,f
  5681     0E4D  2E4C               	goto	u5147
  5682     0E4E  0000               	nop
  5683     0E4F                     l345:
  5684     0E4F  0008               	return
  5685     0E50                     __end_of_lcd_data:
  5686                           
  5687                           	psect	text19
  5688     0D81                     __ptext19:	
  5689 ;; *************** function ___lldiv *****************
  5690 ;; Defined at:
  5691 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  divisor         4    5[BANK0 ] unsigned long 
  5694 ;;  dividend        4    9[BANK0 ] unsigned long 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  quotient        4   14[BANK0 ] unsigned long 
  5697 ;;  counter         1   18[BANK0 ] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  4    5[BANK0 ] unsigned long 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5707 ;;      Params:         0       8       0       0
  5708 ;;      Locals:         0       5       0       0
  5709 ;;      Temps:          0       1       0       0
  5710 ;;      Totals:         0      14       0       0
  5711 ;;Total ram usage:       14 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; Hardware stack levels required when called: 1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_main
  5718 ;;		_getsensorreadings
  5719 ;;		_dispinfo
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723     0D81                     ___lldiv:	
  5724                           ;psect for function ___lldiv
  5725                           
  5726     0D81                     l2679:	
  5727                           ;incstack = 0
  5728                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5729                           
  5730     0D81  3000               	movlw	0
  5731     0D82  1283               	bcf	3,5	;RP0=0, select bank0
  5732     0D83  1303               	bcf	3,6	;RP1=0, select bank0
  5733     0D84  00D8               	movwf	___lldiv@quotient+3
  5734     0D85  3000               	movlw	0
  5735     0D86  00D7               	movwf	___lldiv@quotient+2
  5736     0D87  3000               	movlw	0
  5737     0D88  00D6               	movwf	___lldiv@quotient+1
  5738     0D89  3000               	movlw	0
  5739     0D8A  00D5               	movwf	___lldiv@quotient
  5740     0D8B  084F               	movf	___lldiv@divisor+3,w
  5741     0D8C  044E               	iorwf	___lldiv@divisor+2,w
  5742     0D8D  044D               	iorwf	___lldiv@divisor+1,w
  5743     0D8E  044C               	iorwf	___lldiv@divisor,w
  5744     0D8F  1903               	skipnz
  5745     0D90  2D92               	goto	u4101
  5746     0D91  2D93               	goto	u4100
  5747     0D92                     u4101:
  5748     0D92  2DDE               	goto	l2699
  5749     0D93                     u4100:
  5750     0D93                     l2681:
  5751     0D93  3001               	movlw	1
  5752     0D94  00D9               	movwf	___lldiv@counter
  5753     0D95  2DA1               	goto	l2685
  5754     0D96                     l2683:
  5755     0D96  3001               	movlw	1
  5756     0D97  00D4               	movwf	??___lldiv
  5757     0D98                     u4115:
  5758     0D98  1003               	clrc
  5759     0D99  0DCC               	rlf	___lldiv@divisor,f
  5760     0D9A  0DCD               	rlf	___lldiv@divisor+1,f
  5761     0D9B  0DCE               	rlf	___lldiv@divisor+2,f
  5762     0D9C  0DCF               	rlf	___lldiv@divisor+3,f
  5763     0D9D  0BD4               	decfsz	??___lldiv,f
  5764     0D9E  2D98               	goto	u4115
  5765     0D9F  3001               	movlw	1
  5766     0DA0  07D9               	addwf	___lldiv@counter,f
  5767     0DA1                     l2685:
  5768     0DA1  1FCF               	btfss	___lldiv@divisor+3,7
  5769     0DA2  2DA4               	goto	u4121
  5770     0DA3  2DA5               	goto	u4120
  5771     0DA4                     u4121:
  5772     0DA4  2D96               	goto	l2683
  5773     0DA5                     u4120:
  5774     0DA5                     l2687:
  5775     0DA5  3001               	movlw	1
  5776     0DA6  00D4               	movwf	??___lldiv
  5777     0DA7                     u4135:
  5778     0DA7  1003               	clrc
  5779     0DA8  0DD5               	rlf	___lldiv@quotient,f
  5780     0DA9  0DD6               	rlf	___lldiv@quotient+1,f
  5781     0DAA  0DD7               	rlf	___lldiv@quotient+2,f
  5782     0DAB  0DD8               	rlf	___lldiv@quotient+3,f
  5783     0DAC  0BD4               	decfsz	??___lldiv,f
  5784     0DAD  2DA7               	goto	u4135
  5785     0DAE                     l2689:
  5786     0DAE  084F               	movf	___lldiv@divisor+3,w
  5787     0DAF  0253               	subwf	___lldiv@dividend+3,w
  5788     0DB0  1D03               	skipz
  5789     0DB1  2DBC               	goto	u4145
  5790     0DB2  084E               	movf	___lldiv@divisor+2,w
  5791     0DB3  0252               	subwf	___lldiv@dividend+2,w
  5792     0DB4  1D03               	skipz
  5793     0DB5  2DBC               	goto	u4145
  5794     0DB6  084D               	movf	___lldiv@divisor+1,w
  5795     0DB7  0251               	subwf	___lldiv@dividend+1,w
  5796     0DB8  1D03               	skipz
  5797     0DB9  2DBC               	goto	u4145
  5798     0DBA  084C               	movf	___lldiv@divisor,w
  5799     0DBB  0250               	subwf	___lldiv@dividend,w
  5800     0DBC                     u4145:
  5801     0DBC  1C03               	skipc
  5802     0DBD  2DBF               	goto	u4141
  5803     0DBE  2DC0               	goto	u4140
  5804     0DBF                     u4141:
  5805     0DBF  2DCF               	goto	l2695
  5806     0DC0                     u4140:
  5807     0DC0                     l2691:
  5808     0DC0  084C               	movf	___lldiv@divisor,w
  5809     0DC1  02D0               	subwf	___lldiv@dividend,f
  5810     0DC2  084D               	movf	___lldiv@divisor+1,w
  5811     0DC3  1C03               	skipc
  5812     0DC4  0F4D               	incfsz	___lldiv@divisor+1,w
  5813     0DC5  02D1               	subwf	___lldiv@dividend+1,f
  5814     0DC6  084E               	movf	___lldiv@divisor+2,w
  5815     0DC7  1C03               	skipc
  5816     0DC8  0F4E               	incfsz	___lldiv@divisor+2,w
  5817     0DC9  02D2               	subwf	___lldiv@dividend+2,f
  5818     0DCA  084F               	movf	___lldiv@divisor+3,w
  5819     0DCB  1C03               	skipc
  5820     0DCC  0F4F               	incfsz	___lldiv@divisor+3,w
  5821     0DCD  02D3               	subwf	___lldiv@dividend+3,f
  5822     0DCE                     l2693:
  5823     0DCE  1455               	bsf	___lldiv@quotient,0
  5824     0DCF                     l2695:
  5825     0DCF  3001               	movlw	1
  5826     0DD0                     u4155:
  5827     0DD0  1003               	clrc
  5828     0DD1  0CCF               	rrf	___lldiv@divisor+3,f
  5829     0DD2  0CCE               	rrf	___lldiv@divisor+2,f
  5830     0DD3  0CCD               	rrf	___lldiv@divisor+1,f
  5831     0DD4  0CCC               	rrf	___lldiv@divisor,f
  5832     0DD5  3EFF               	addlw	-1
  5833     0DD6  1D03               	skipz
  5834     0DD7  2DD0               	goto	u4155
  5835     0DD8                     l2697:
  5836     0DD8  3001               	movlw	1
  5837     0DD9  02D9               	subwf	___lldiv@counter,f
  5838     0DDA  1D03               	btfss	3,2
  5839     0DDB  2DDD               	goto	u4161
  5840     0DDC  2DDE               	goto	u4160
  5841     0DDD                     u4161:
  5842     0DDD  2DA5               	goto	l2687
  5843     0DDE                     u4160:
  5844     0DDE                     l2699:
  5845     0DDE  0858               	movf	___lldiv@quotient+3,w
  5846     0DDF  00CF               	movwf	?___lldiv+3
  5847     0DE0  0857               	movf	___lldiv@quotient+2,w
  5848     0DE1  00CE               	movwf	?___lldiv+2
  5849     0DE2  0856               	movf	___lldiv@quotient+1,w
  5850     0DE3  00CD               	movwf	?___lldiv+1
  5851     0DE4  0855               	movf	___lldiv@quotient,w
  5852     0DE5  00CC               	movwf	?___lldiv
  5853     0DE6                     l503:
  5854     0DE6  0008               	return
  5855     0DE7                     __end_of___lldiv:
  5856                           
  5857                           	psect	text20
  5858     0B46                     __ptext20:	
  5859 ;; *************** function _EEPROM_Read *****************
  5860 ;; Defined at:
  5861 ;;		line 504 in file "main.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  address         1    wreg     unsigned char 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  address         1    2[COMMON] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      unsigned char 
  5868 ;; Registers used:
  5869 ;;		wreg
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5875 ;;      Params:         0       0       0       0
  5876 ;;      Locals:         1       0       0       0
  5877 ;;      Temps:          0       0       0       0
  5878 ;;      Totals:         1       0       0       0
  5879 ;;Total ram usage:        1 bytes
  5880 ;; Hardware stack levels used: 1
  5881 ;; Hardware stack levels required when called: 1
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_main
  5886 ;;		_dispinfo
  5887 ;;		_EEPROM_Read16
  5888 ;;		_loadSettings
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892     0B46                     _EEPROM_Read:	
  5893                           ;psect for function _EEPROM_Read
  5894                           
  5895                           
  5896                           ;incstack = 0
  5897                           ; Regs used in _EEPROM_Read: [wreg]
  5898                           ;EEPROM_Read@address stored from wreg
  5899     0B46  00F2               	movwf	EEPROM_Read@address
  5900     0B47                     l2587:
  5901     0B47                     l294:	
  5902                           ;main.c: 506:     ;
  5903                           
  5904                           
  5905                           ;main.c: 505:   while (EECON1bits.WR)
  5906     0B47  1683               	bsf	3,5	;RP0=1, select bank3
  5907     0B48  1703               	bsf	3,6	;RP1=1, select bank3
  5908     0B49  188C               	btfsc	12,1	;volsfr
  5909     0B4A  2B4C               	goto	u3901
  5910     0B4B  2B4D               	goto	u3900
  5911     0B4C                     u3901:
  5912     0B4C  2B47               	goto	l294
  5913     0B4D                     u3900:
  5914     0B4D                     l2589:
  5915                           
  5916                           ;main.c: 507:   EEADR = address;
  5917     0B4D  0872               	movf	EEPROM_Read@address,w
  5918     0B4E  1283               	bcf	3,5	;RP0=0, select bank2
  5919     0B4F  1703               	bsf	3,6	;RP1=1, select bank2
  5920     0B50  008D               	movwf	13	;volatile
  5921     0B51                     l2591:
  5922                           
  5923                           ;main.c: 508:   EECON1bits.EEPGD = 0;
  5924     0B51  1683               	bsf	3,5	;RP0=1, select bank3
  5925     0B52  1703               	bsf	3,6	;RP1=1, select bank3
  5926     0B53  138C               	bcf	12,7	;volsfr
  5927     0B54                     l2593:
  5928                           
  5929                           ;main.c: 509:   EECON1bits.RD = 1;
  5930     0B54  140C               	bsf	12,0	;volsfr
  5931                           
  5932                           ;main.c: 510:   return EEDATA;
  5933     0B55  1283               	bcf	3,5	;RP0=0, select bank2
  5934     0B56  1703               	bsf	3,6	;RP1=1, select bank2
  5935     0B57  080C               	movf	12,w	;volatile
  5936     0B58                     l297:
  5937     0B58  0008               	return
  5938     0B59                     __end_of_EEPROM_Read:
  5939                           
  5940                           	psect	text21
  5941     0EB9                     __ptext21:	
  5942 ;; *************** function _check_button_press *****************
  5943 ;; Defined at:
  5944 ;;		line 568 in file "main.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;		None
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  hold_count      2    6[COMMON] unsigned int 
  5949 ;;  long_press_t    2    4[COMMON] unsigned int 
  5950 ;;  long_press      1    8[COMMON] _Bool 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      _Bool 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5960 ;;      Params:         0       0       0       0
  5961 ;;      Locals:         5       0       0       0
  5962 ;;      Temps:          2       0       0       0
  5963 ;;      Totals:         7       0       0       0
  5964 ;;Total ram usage:        7 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; Hardware stack levels required when called: 1
  5967 ;; This function calls:
  5968 ;;		Nothing
  5969 ;; This function is called by:
  5970 ;;		_main
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974     0EB9                     _check_button_press:	
  5975                           ;psect for function _check_button_press
  5976                           
  5977     0EB9                     l2883:	
  5978                           ;incstack = 0
  5979                           ; Regs used in _check_button_press: [wreg+status,2+status,0]
  5980                           
  5981                           
  5982                           ;main.c: 569:   _Bool long_press = 0;
  5983     0EB9  01F8               	clrf	check_button_press@long_press
  5984     0EBA                     l2885:
  5985                           
  5986                           ;main.c: 572:   if (PORTCbits.RC1 == 0) {
  5987     0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  5988     0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  5989     0EBC  1887               	btfsc	7,1	;volatile
  5990     0EBD  2EBF               	goto	u4441
  5991     0EBE  2EC0               	goto	u4440
  5992     0EBF                     u4441:
  5993     0EBF  2F23               	goto	l2915
  5994     0EC0                     u4440:
  5995     0EC0                     l2887:
  5996                           
  5997                           ;main.c: 574:     _delay((unsigned long)((50)*(8000000/4000.0)));
  5998     0EC0  3082               	movlw	130
  5999     0EC1  00F3               	movwf	??_check_button_press+1
  6000     0EC2  30DD               	movlw	221
  6001     0EC3  00F2               	movwf	??_check_button_press
  6002     0EC4                     u5157:
  6003     0EC4  0BF2               	decfsz	??_check_button_press,f
  6004     0EC5  2EC4               	goto	u5157
  6005     0EC6  0BF3               	decfsz	??_check_button_press+1,f
  6006     0EC7  2EC4               	goto	u5157
  6007     0EC8  2EC9               	nop2
  6008     0EC9                     l2889:
  6009                           
  6010                           ;main.c: 577:     if (PORTCbits.RC1 == 0) {
  6011     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  6012     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  6013     0ECB  1887               	btfsc	7,1	;volatile
  6014     0ECC  2ECE               	goto	u4451
  6015     0ECD  2ECF               	goto	u4450
  6016     0ECE                     u4451:
  6017     0ECE  2F23               	goto	l2915
  6018     0ECF                     u4450:
  6019     0ECF                     l2891:
  6020                           
  6021                           ;main.c: 579:       unsigned int hold_count = 0;
  6022     0ECF  01F6               	clrf	check_button_press@hold_count
  6023     0ED0  01F7               	clrf	check_button_press@hold_count+1
  6024     0ED1                     l2893:
  6025                           
  6026                           ;main.c: 580:       unsigned int long_press_threshold = 20;
  6027     0ED1  3014               	movlw	20
  6028     0ED2  00F4               	movwf	check_button_press@long_press_threshold
  6029     0ED3  3000               	movlw	0
  6030     0ED4  00F5               	movwf	check_button_press@long_press_threshold+1
  6031                           
  6032                           ;main.c: 583:       while (PORTCbits.RC1 == 0) {
  6033     0ED5  2F0B               	goto	l323
  6034     0ED6                     l2895:
  6035                           
  6036                           ;main.c: 584:         _delay((unsigned long)((10)*(8000000/4000.0)));
  6037     0ED6  301A               	movlw	26
  6038     0ED7  00F3               	movwf	??_check_button_press+1
  6039     0ED8  30F8               	movlw	248
  6040     0ED9  00F2               	movwf	??_check_button_press
  6041     0EDA                     u5167:
  6042     0EDA  0BF2               	decfsz	??_check_button_press,f
  6043     0EDB  2EDA               	goto	u5167
  6044     0EDC  0BF3               	decfsz	??_check_button_press+1,f
  6045     0EDD  2EDA               	goto	u5167
  6046     0EDE  0000               	nop
  6047                           
  6048                           ;main.c: 585:         hold_count++;
  6049     0EDF  3001               	movlw	1
  6050     0EE0  07F6               	addwf	check_button_press@hold_count,f
  6051     0EE1  1803               	skipnc
  6052     0EE2  0AF7               	incf	check_button_press@hold_count+1,f
  6053     0EE3  3000               	movlw	0
  6054     0EE4  07F7               	addwf	check_button_press@hold_count+1,f
  6055                           
  6056                           ;main.c: 588:         if (hold_count >= long_press_threshold) {
  6057     0EE5  0875               	movf	check_button_press@long_press_threshold+1,w
  6058     0EE6  0277               	subwf	check_button_press@hold_count+1,w
  6059     0EE7  1D03               	skipz
  6060     0EE8  2EEB               	goto	u4465
  6061     0EE9  0874               	movf	check_button_press@long_press_threshold,w
  6062     0EEA  0276               	subwf	check_button_press@hold_count,w
  6063     0EEB                     u4465:
  6064     0EEB  1C03               	skipc
  6065     0EEC  2EEE               	goto	u4461
  6066     0EED  2EEF               	goto	u4460
  6067     0EEE                     u4461:
  6068     0EEE  2F0B               	goto	l323
  6069     0EEF                     u4460:
  6070     0EEF                     l2897:
  6071                           
  6072                           ;main.c: 589:           long_press = 1;
  6073     0EEF  3001               	movlw	1
  6074     0EF0  00F8               	movwf	check_button_press@long_press
  6075                           
  6076                           ;main.c: 594:           while (PORTCbits.RC1 == 0) {
  6077     0EF1  2EFB               	goto	l2901
  6078     0EF2                     l2899:
  6079                           
  6080                           ;main.c: 595:             _delay((unsigned long)((10)*(8000000/4000.0)));
  6081     0EF2  301A               	movlw	26
  6082     0EF3  00F3               	movwf	??_check_button_press+1
  6083     0EF4  30F8               	movlw	248
  6084     0EF5  00F2               	movwf	??_check_button_press
  6085     0EF6                     u5177:
  6086     0EF6  0BF2               	decfsz	??_check_button_press,f
  6087     0EF7  2EF6               	goto	u5177
  6088     0EF8  0BF3               	decfsz	??_check_button_press+1,f
  6089     0EF9  2EF6               	goto	u5177
  6090     0EFA  0000               	nop
  6091     0EFB                     l2901:
  6092                           
  6093                           ;main.c: 594:           while (PORTCbits.RC1 == 0) {
  6094     0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  6095     0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  6096     0EFD  1C87               	btfss	7,1	;volatile
  6097     0EFE  2F00               	goto	u4471
  6098     0EFF  2F01               	goto	u4470
  6099     0F00                     u4471:
  6100     0F00  2EF2               	goto	l2899
  6101     0F01                     u4470:
  6102     0F01                     l2903:
  6103                           
  6104                           ;main.c: 599:           _delay((unsigned long)((50)*(8000000/4000.0)));
  6105     0F01  3082               	movlw	130
  6106     0F02  00F3               	movwf	??_check_button_press+1
  6107     0F03  30DD               	movlw	221
  6108     0F04  00F2               	movwf	??_check_button_press
  6109     0F05                     u5187:
  6110     0F05  0BF2               	decfsz	??_check_button_press,f
  6111     0F06  2F05               	goto	u5187
  6112     0F07  0BF3               	decfsz	??_check_button_press+1,f
  6113     0F08  2F05               	goto	u5187
  6114     0F09  2F0A               	nop2
  6115                           
  6116                           ;main.c: 600:           break;
  6117     0F0A  2F11               	goto	l2905
  6118     0F0B                     l323:	
  6119                           ;main.c: 602:       }
  6120                           
  6121                           
  6122                           ;main.c: 583:       while (PORTCbits.RC1 == 0) {
  6123     0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  6124     0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  6125     0F0D  1C87               	btfss	7,1	;volatile
  6126     0F0E  2F10               	goto	u4481
  6127     0F0F  2F11               	goto	u4480
  6128     0F10                     u4481:
  6129     0F10  2ED6               	goto	l2895
  6130     0F11                     u4480:
  6131     0F11                     l2905:
  6132                           
  6133                           ;main.c: 605:       if (!long_press) {
  6134     0F11  0878               	movf	check_button_press@long_press,w
  6135     0F12  1D03               	btfss	3,2
  6136     0F13  2F15               	goto	u4491
  6137     0F14  2F16               	goto	u4490
  6138     0F15                     u4491:
  6139     0F15  2F21               	goto	l2911
  6140     0F16                     u4490:
  6141     0F16                     l2907:
  6142                           
  6143                           ;main.c: 607:         _delay((unsigned long)((50)*(8000000/4000.0)));
  6144     0F16  3082               	movlw	130
  6145     0F17  00F3               	movwf	??_check_button_press+1
  6146     0F18  30DD               	movlw	221
  6147     0F19  00F2               	movwf	??_check_button_press
  6148     0F1A                     u5197:
  6149     0F1A  0BF2               	decfsz	??_check_button_press,f
  6150     0F1B  2F1A               	goto	u5197
  6151     0F1C  0BF3               	decfsz	??_check_button_press+1,f
  6152     0F1D  2F1A               	goto	u5197
  6153     0F1E  2F1F               	nop2
  6154                           
  6155                           ;main.c: 608:         return 0;
  6156     0F1F  3000               	movlw	0
  6157     0F20  2F24               	goto	l331
  6158     0F21                     l2911:
  6159                           
  6160                           ;main.c: 611:       return 1;
  6161     0F21  3001               	movlw	1
  6162     0F22  2F24               	goto	l331
  6163     0F23                     l2915:
  6164                           
  6165                           ;main.c: 615:   return 0;
  6166     0F23  3000               	movlw	0
  6167     0F24                     l331:
  6168     0F24  0008               	return
  6169     0F25                     __end_of_check_button_press:
  6170                           
  6171                           	psect	text22
  6172     07AD                     __ptext22:	
  6173 ;; *************** function _buzzer_update *****************
  6174 ;; Defined at:
  6175 ;;		line 560 in file "main.c"
  6176 ;; Parameters:    Size  Location     Type
  6177 ;;		None
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6189 ;;      Params:         0       0       0       0
  6190 ;;      Locals:         0       0       0       0
  6191 ;;      Temps:          8       0       0       0
  6192 ;;      Totals:         8       0       0       0
  6193 ;;Total ram usage:        8 bytes
  6194 ;; Hardware stack levels used: 1
  6195 ;; Hardware stack levels required when called: 1
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_main
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203     07AD                     _buzzer_update:	
  6204                           ;psect for function _buzzer_update
  6205                           
  6206     07AD                     l2749:	
  6207                           ;incstack = 0
  6208                           ; Regs used in _buzzer_update: [wreg+status,2+status,0]
  6209                           
  6210                           
  6211                           ;main.c: 561:   if (buzzer_active && (millis - buzzer_start_time >= buzzer_duration)) {
  6212     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  6213     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  6214     07AF  0832               	movf	_buzzer_active,w
  6215     07B0  1903               	btfsc	3,2
  6216     07B1  2FB3               	goto	u4181
  6217     07B2  2FB4               	goto	u4180
  6218     07B3                     u4181:
  6219     07B3  2FF6               	goto	l318
  6220     07B4                     u4180:
  6221     07B4                     l2751:
  6222     07B4  1683               	bsf	3,5	;RP0=1, select bank1
  6223     07B5  1303               	bcf	3,6	;RP1=0, select bank1
  6224     07B6  0838               	movf	_buzzer_duration^(0+128),w
  6225     07B7  00F2               	movwf	??_buzzer_update
  6226     07B8  0839               	movf	(_buzzer_duration+1)^(0+128),w
  6227     07B9  00F3               	movwf	??_buzzer_update+1
  6228     07BA  01F4               	clrf	??_buzzer_update+2
  6229     07BB  01F5               	clrf	??_buzzer_update+3
  6230     07BC  1283               	bcf	3,5	;RP0=0, select bank0
  6231     07BD  1303               	bcf	3,6	;RP1=0, select bank0
  6232     07BE  0828               	movf	_millis,w	;volatile
  6233     07BF  00F6               	movwf	??_buzzer_update+4
  6234     07C0  0829               	movf	_millis+1,w	;volatile
  6235     07C1  00F7               	movwf	??_buzzer_update+5
  6236     07C2  082A               	movf	_millis+2,w	;volatile
  6237     07C3  00F8               	movwf	??_buzzer_update+6
  6238     07C4  082B               	movf	_millis+3,w	;volatile
  6239     07C5  00F9               	movwf	??_buzzer_update+7
  6240     07C6  1683               	bsf	3,5	;RP0=1, select bank1
  6241     07C7  1303               	bcf	3,6	;RP1=0, select bank1
  6242     07C8  0828               	movf	_buzzer_start_time^(0+128),w
  6243     07C9  02F6               	subwf	??_buzzer_update+4,f
  6244     07CA  0829               	movf	(_buzzer_start_time+1)^(0+128),w
  6245     07CB  1C03               	skipc
  6246     07CC  0F29               	incfsz	(_buzzer_start_time+1)^(0+128),w
  6247     07CD  2FCF               	goto	u4191
  6248     07CE  2FD0               	goto	u4192
  6249     07CF                     u4191:
  6250     07CF  02F7               	subwf	??_buzzer_update+5,f
  6251     07D0                     u4192:
  6252     07D0  082A               	movf	(_buzzer_start_time+2)^(0+128),w
  6253     07D1  1C03               	skipc
  6254     07D2  0F2A               	incfsz	(_buzzer_start_time+2)^(0+128),w
  6255     07D3  2FD5               	goto	u4193
  6256     07D4  2FD6               	goto	u4194
  6257     07D5                     u4193:
  6258     07D5  02F8               	subwf	??_buzzer_update+6,f
  6259     07D6                     u4194:
  6260     07D6  082B               	movf	(_buzzer_start_time+3)^(0+128),w
  6261     07D7  1C03               	skipc
  6262     07D8  0F2B               	incfsz	(_buzzer_start_time+3)^(0+128),w
  6263     07D9  2FDB               	goto	u4195
  6264     07DA  2FDC               	goto	u4196
  6265     07DB                     u4195:
  6266     07DB  02F9               	subwf	??_buzzer_update+7,f
  6267     07DC                     u4196:
  6268     07DC  0875               	movf	??_buzzer_update+3,w
  6269     07DD  0279               	subwf	??_buzzer_update+7,w
  6270     07DE  1D03               	skipz
  6271     07DF  2FEA               	goto	u4205
  6272     07E0  0874               	movf	??_buzzer_update+2,w
  6273     07E1  0278               	subwf	??_buzzer_update+6,w
  6274     07E2  1D03               	skipz
  6275     07E3  2FEA               	goto	u4205
  6276     07E4  0873               	movf	??_buzzer_update+1,w
  6277     07E5  0277               	subwf	??_buzzer_update+5,w
  6278     07E6  1D03               	skipz
  6279     07E7  2FEA               	goto	u4205
  6280     07E8  0872               	movf	??_buzzer_update,w
  6281     07E9  0276               	subwf	??_buzzer_update+4,w
  6282     07EA                     u4205:
  6283     07EA  1C03               	skipc
  6284     07EB  2FED               	goto	u4201
  6285     07EC  2FEE               	goto	u4200
  6286     07ED                     u4201:
  6287     07ED  2FF6               	goto	l318
  6288     07EE                     u4200:
  6289     07EE                     l2753:
  6290                           
  6291                           ;main.c: 562:     PORTCbits.RC4 = 0;
  6292     07EE  1283               	bcf	3,5	;RP0=0, select bank0
  6293     07EF  1303               	bcf	3,6	;RP1=0, select bank0
  6294     07F0  1207               	bcf	7,4	;volatile
  6295     07F1                     l2755:
  6296                           
  6297                           ;main.c: 563:     buzzer_active = 0;
  6298     07F1  01B2               	clrf	_buzzer_active
  6299                           
  6300                           ;main.c: 564:     buzzer_duration = 0;
  6301     07F2  1683               	bsf	3,5	;RP0=1, select bank1
  6302     07F3  1303               	bcf	3,6	;RP1=0, select bank1
  6303     07F4  01B8               	clrf	_buzzer_duration^(0+128)
  6304     07F5  01B9               	clrf	(_buzzer_duration+1)^(0+128)
  6305     07F6                     l318:
  6306     07F6  0008               	return
  6307     07F7                     __end_of_buzzer_update:
  6308                           
  6309                           	psect	text23
  6310     0B6F                     __ptext23:	
  6311 ;; *************** function _EEPROM_Write *****************
  6312 ;; Defined at:
  6313 ;;		line 482 in file "main.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  address         1    wreg     unsigned char 
  6316 ;;  data            1    2[COMMON] unsigned char 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  address         1    3[COMMON] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6328 ;;      Params:         1       0       0       0
  6329 ;;      Locals:         1       0       0       0
  6330 ;;      Temps:          0       0       0       0
  6331 ;;      Totals:         2       0       0       0
  6332 ;;Total ram usage:        2 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_main
  6339 ;;		_EEPROM_Write16
  6340 ;;		_saveSettings
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344     0B6F                     _EEPROM_Write:	
  6345                           ;psect for function _EEPROM_Write
  6346                           
  6347                           
  6348                           ;incstack = 0
  6349                           ; Regs used in _EEPROM_Write: [wreg]
  6350                           ;EEPROM_Write@address stored from wreg
  6351     0B6F  00F3               	movwf	EEPROM_Write@address
  6352     0B70                     l2919:
  6353     0B70                     l285:	
  6354                           ;main.c: 484:     ;
  6355                           
  6356                           
  6357                           ;main.c: 483:   while (EECON1bits.WR)
  6358     0B70  1683               	bsf	3,5	;RP0=1, select bank3
  6359     0B71  1703               	bsf	3,6	;RP1=1, select bank3
  6360     0B72  188C               	btfsc	12,1	;volsfr
  6361     0B73  2B75               	goto	u4501
  6362     0B74  2B76               	goto	u4500
  6363     0B75                     u4501:
  6364     0B75  2B70               	goto	l285
  6365     0B76                     u4500:
  6366     0B76                     l2921:
  6367                           
  6368                           ;main.c: 486:   EEADR = address;
  6369     0B76  0873               	movf	EEPROM_Write@address,w
  6370     0B77  1283               	bcf	3,5	;RP0=0, select bank2
  6371     0B78  1703               	bsf	3,6	;RP1=1, select bank2
  6372     0B79  008D               	movwf	13	;volatile
  6373                           
  6374                           ;main.c: 487:   EEDATA = data;
  6375     0B7A  0872               	movf	EEPROM_Write@data,w
  6376     0B7B  008C               	movwf	12	;volatile
  6377     0B7C                     l2923:
  6378                           
  6379                           ;main.c: 489:   EECON1bits.EEPGD = 0;
  6380     0B7C  1683               	bsf	3,5	;RP0=1, select bank3
  6381     0B7D  1703               	bsf	3,6	;RP1=1, select bank3
  6382     0B7E  138C               	bcf	12,7	;volsfr
  6383     0B7F                     l2925:
  6384                           
  6385                           ;main.c: 490:   EECON1bits.WREN = 1;
  6386     0B7F  150C               	bsf	12,2	;volsfr
  6387     0B80                     l2927:
  6388                           
  6389                           ;main.c: 492:   INTCONbits.GIE = 0;
  6390     0B80  138B               	bcf	11,7	;volatile
  6391     0B81                     l2929:
  6392                           
  6393                           ;main.c: 493:   EECON2 = 0x55;
  6394     0B81  3055               	movlw	85
  6395     0B82  008D               	movwf	13	;volsfr
  6396     0B83                     l2931:
  6397                           
  6398                           ;main.c: 494:   EECON2 = 0xAA;
  6399     0B83  30AA               	movlw	170
  6400     0B84  008D               	movwf	13	;volsfr
  6401     0B85                     l2933:
  6402                           
  6403                           ;main.c: 495:   EECON1bits.WR = 1;
  6404     0B85  148C               	bsf	12,1	;volsfr
  6405     0B86                     l288:	
  6406                           ;main.c: 498:     ;
  6407                           
  6408                           
  6409                           ;main.c: 497:   while (EECON1bits.WR)
  6410     0B86  188C               	btfsc	12,1	;volsfr
  6411     0B87  2B89               	goto	u4511
  6412     0B88  2B8A               	goto	u4510
  6413     0B89                     u4511:
  6414     0B89  2B86               	goto	l288
  6415     0B8A                     u4510:
  6416     0B8A                     l290:
  6417                           
  6418                           ;main.c: 500:   EECON1bits.WREN = 0;
  6419     0B8A  110C               	bcf	12,2	;volsfr
  6420                           
  6421                           ;main.c: 501:   INTCONbits.GIE = 1;
  6422     0B8B  178B               	bsf	11,7	;volatile
  6423     0B8C                     l291:
  6424     0B8C  0008               	return
  6425     0B8D                     __end_of_EEPROM_Write:
  6426                           
  6427                           	psect	text24
  6428     0C7B                     __ptext24:	
  6429 ;; *************** function _isr *****************
  6430 ;; Defined at:
  6431 ;;		line 432 in file "main.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6445 ;;      Params:         0       0       0       0
  6446 ;;      Locals:         0       0       0       0
  6447 ;;      Temps:          2       0       0       0
  6448 ;;      Totals:         2       0       0       0
  6449 ;;Total ram usage:        2 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		Interrupt level 1
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458     0C7B                     _isr:	
  6459                           ;psect for function _isr
  6460                           
  6461     0C7B                     i1l2415:
  6462                           
  6463                           ;main.c: 434:   if (PIR1bits.TMR1IF) {
  6464     0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  6465     0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  6466     0C7D  1C0C               	btfss	12,0	;volatile
  6467     0C7E  2C80               	goto	u331_21
  6468     0C7F  2C81               	goto	u331_20
  6469     0C80                     u331_21:
  6470     0C80  2C94               	goto	i1l2425
  6471     0C81                     u331_20:
  6472     0C81                     i1l2417:
  6473                           
  6474                           ;main.c: 435:     millis++;
  6475     0C81  3001               	movlw	1
  6476     0C82  07A8               	addwf	_millis,f	;volatile
  6477     0C83  3000               	movlw	0
  6478     0C84  1803               	skipnc
  6479     0C85  3001               	movlw	1
  6480     0C86  07A9               	addwf	_millis+1,f	;volatile
  6481     0C87  3000               	movlw	0
  6482     0C88  1803               	skipnc
  6483     0C89  3001               	movlw	1
  6484     0C8A  07AA               	addwf	_millis+2,f	;volatile
  6485     0C8B  3000               	movlw	0
  6486     0C8C  1803               	skipnc
  6487     0C8D  3001               	movlw	1
  6488     0C8E  07AB               	addwf	_millis+3,f	;volatile
  6489     0C8F                     i1l2419:
  6490                           
  6491                           ;main.c: 436:     PIR1bits.TMR1IF = 0;
  6492     0C8F  100C               	bcf	12,0	;volatile
  6493     0C90                     i1l2421:
  6494                           
  6495                           ;main.c: 437:     TMR1H = 255;
  6496     0C90  30FF               	movlw	255
  6497     0C91  008F               	movwf	15	;volatile
  6498     0C92                     i1l2423:
  6499                           
  6500                           ;main.c: 438:     TMR1L = 14;
  6501     0C92  300E               	movlw	14
  6502     0C93  008E               	movwf	14	;volatile
  6503     0C94                     i1l2425:
  6504                           
  6505                           ;main.c: 441:   if (INTCONbits.TMR0IF) {
  6506     0C94  1D0B               	btfss	11,2	;volatile
  6507     0C95  2C97               	goto	u332_21
  6508     0C96  2C98               	goto	u332_20
  6509     0C97                     u332_21:
  6510     0C97  2CBE               	goto	i1l279
  6511     0C98                     u332_20:
  6512     0C98                     i1l2427:
  6513                           
  6514                           ;main.c: 443:     TMR0 = 6;
  6515     0C98  3006               	movlw	6
  6516     0C99  0081               	movwf	1	;volatile
  6517                           
  6518                           ;main.c: 444:     INTCONbits.TMR0IF = 0;
  6519     0C9A  110B               	bcf	11,2	;volatile
  6520     0C9B                     i1l2429:
  6521                           
  6522                           ;main.c: 447:     if (sensors_reading_in_progress) {
  6523     0C9B  083C               	movf	_sensors_reading_in_progress,w	;volatile
  6524     0C9C  1903               	btfsc	3,2
  6525     0C9D  2C9F               	goto	u333_21
  6526     0C9E  2CA0               	goto	u333_20
  6527     0C9F                     u333_21:
  6528     0C9F  2CBE               	goto	i1l279
  6529     0CA0                     u333_20:
  6530     0CA0                     i1l2431:
  6531                           
  6532                           ;main.c: 449:       if (PORTBbits.RB5)
  6533     0CA0  1E86               	btfss	6,5	;volatile
  6534     0CA1  2CA3               	goto	u334_21
  6535     0CA2  2CA4               	goto	u334_20
  6536     0CA3                     u334_21:
  6537     0CA3  2CA6               	goto	i1l2435
  6538     0CA4                     u334_20:
  6539     0CA4                     i1l2433:
  6540                           
  6541                           ;main.c: 450:         low_sensor_high_count++;
  6542     0CA4  3001               	movlw	1
  6543     0CA5  07FA               	addwf	_low_sensor_high_count,f	;volatile
  6544     0CA6                     i1l2435:
  6545                           
  6546                           ;main.c: 451:       if (PORTBbits.RB4)
  6547     0CA6  1E06               	btfss	6,4	;volatile
  6548     0CA7  2CA9               	goto	u335_21
  6549     0CA8  2CAA               	goto	u335_20
  6550     0CA9                     u335_21:
  6551     0CA9  2CAC               	goto	i1l2439
  6552     0CAA                     u335_20:
  6553     0CAA                     i1l2437:
  6554                           
  6555                           ;main.c: 452:         high_sensor_high_count++;
  6556     0CAA  3001               	movlw	1
  6557     0CAB  07BF               	addwf	_high_sensor_high_count,f	;volatile
  6558     0CAC                     i1l2439:
  6559                           
  6560                           ;main.c: 453:       if (PORTBbits.RB3)
  6561     0CAC  1D86               	btfss	6,3	;volatile
  6562     0CAD  2CAF               	goto	u336_21
  6563     0CAE  2CB0               	goto	u336_20
  6564     0CAF                     u336_21:
  6565     0CAF  2CB2               	goto	i1l277
  6566     0CB0                     u336_20:
  6567     0CB0                     i1l2441:
  6568                           
  6569                           ;main.c: 454:         flow_sensor_high_count++;
  6570     0CB0  3001               	movlw	1
  6571     0CB1  07BE               	addwf	_flow_sensor_high_count,f	;volatile
  6572     0CB2                     i1l277:
  6573                           
  6574                           ;main.c: 456:       reading_count++;
  6575     0CB2  3001               	movlw	1
  6576     0CB3  07FB               	addwf	_reading_count,f	;volatile
  6577     0CB4                     i1l2443:
  6578                           
  6579                           ;main.c: 459:       if (reading_count >= 50) {
  6580     0CB4  3032               	movlw	50
  6581     0CB5  027B               	subwf	_reading_count,w	;volatile
  6582     0CB6  1C03               	skipc
  6583     0CB7  2CB9               	goto	u337_21
  6584     0CB8  2CBA               	goto	u337_20
  6585     0CB9                     u337_21:
  6586     0CB9  2CBE               	goto	i1l279
  6587     0CBA                     u337_20:
  6588     0CBA                     i1l2445:
  6589                           
  6590                           ;main.c: 460:         sensors_reading_in_progress = 0;
  6591     0CBA  01BC               	clrf	_sensors_reading_in_progress	;volatile
  6592     0CBB                     i1l2447:
  6593                           
  6594                           ;main.c: 461:         sensors_reading_complete = 1;
  6595     0CBB  3001               	movlw	1
  6596     0CBC  00BD               	movwf	_sensors_reading_complete	;volatile
  6597     0CBD                     i1l2449:
  6598                           
  6599                           ;main.c: 462:         INTCONbits.TMR0IE =
  6600     0CBD  128B               	bcf	11,5	;volatile
  6601     0CBE                     i1l279:
  6602     0CBE  0871               	movf	??_isr+1,w
  6603     0CBF  008A               	movwf	10
  6604     0CC0  0E70               	swapf	??_isr,w
  6605     0CC1  0083               	movwf	3
  6606     0CC2  0EFE               	swapf	btemp,f
  6607     0CC3  0E7E               	swapf	btemp,w
  6608     0CC4  0009               	retfie
  6609     0CC5                     __end_of_isr:
  6610     0001                     ___latbits      equ	1
  6611     007E                     btemp           set	126	;btemp
  6612     007E                     wtemp0          set	126
  6613                           
  6614                           	psect	intentry
  6615     0004                     __pintentry:	
  6616                           ;incstack = 0
  6617                           ; Regs used in _isr: [wreg+status,2+status,0]
  6618                           
  6619     0004                     interrupt_function:
  6620     007E                     saved_w         set	btemp
  6621     0004  00FE               	movwf	btemp
  6622     0005  0E03               	swapf	3,w
  6623     0006  00F0               	movwf	??_isr
  6624     0007  080A               	movf	10,w
  6625     0008  00F1               	movwf	??_isr+1
  6626     0009  158A  2C7B         	ljmp	_isr
  6627                           
  6628                           	psect	config
  6629                           
  6630                           ;Config register CONFIG1 @ 0x2007
  6631                           ;	Oscillator Selection bits
  6632                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6633                           ;	Watchdog Timer Enable bit
  6634                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6635                           ;	Power-up Timer Enable bit
  6636                           ;	PWRTE = ON, PWRT enabled
  6637                           ;	RE3/MCLR pin function select bit
  6638                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6639                           ;	Code Protection bit
  6640                           ;	CP = OFF, Program memory code protection is disabled
  6641                           ;	Data Code Protection bit
  6642                           ;	CPD = OFF, Data memory code protection is disabled
  6643                           ;	Brown Out Reset Selection bits
  6644                           ;	BOREN = ON, BOR enabled
  6645                           ;	Internal External Switchover bit
  6646                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6647                           ;	Fail-Safe Clock Monitor Enabled bit
  6648                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6649                           ;	Low Voltage Programming Enable bit
  6650                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6651                           ;	In-Circuit Debugger Mode bit
  6652                           ;	DEBUG = 0x1, unprogrammed default
  6653     2007                     	org	8199
  6654     2007  23E4               	dw	9188

Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     38      78
    BANK1            80      3      59
    BANK2            80      0       0

Pointer List with Targets:

    getSensorResults@flow_active	PTR _Bool  size(1) Largest target is 1
		 -> flow_sensor_active(BANK0[1]), 

    getSensorResults@high_active	PTR _Bool  size(1) Largest target is 1
		 -> high_sensor_active(BANK0[1]), 

    getSensorResults@low_active	PTR _Bool  size(1) Largest target is 1
		 -> low_sensor_active(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___lmul
    _main->_buzzer_update
    _initLCD->_lcd_cmd
    _getsensorreadings->___lmul
    _lcd_set_cursor->_lcd_cmd
    _lcd_display_int->___awdiv
    ___awmod->___awdiv
    _lcd_display_bool_binary->_lcd_data
    ___lldiv->___lmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_dispinfo
    _getsensorreadings->___lldiv
    _dispinfo->_lcd_display_int
    _lcd_display_int->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    4783
                                             30 BANK0      8     8      0
                                              0 BANK1      3     3      0
                        _EEPROM_Read
                       _EEPROM_Write
                            ___lldiv
                             ___lmul
                      _buzzer_update
                 _check_button_press
                           _dispinfo
                  _getsensorreadings
                            _initLCD
                         _initSystem
                         _init_timer
                            _readADC
                     _trigger_buzzer
 ---------------------------------------------------------------------------------
 (1) _trigger_buzzer                                       2     0      2      40
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0     376
                                              4 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _getsensorreadings                                    9     9      0     636
                                             19 BANK0      9     9      0
                            ___lldiv
                             ___lmul
                   _getSensorResults
                            _readADC
                        _setupTimer0
                 _startSensorReading
 ---------------------------------------------------------------------------------
 (2) _startSensorReading                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      47
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getSensorResults                                     3     0      3     102
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     154
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _dispinfo                                             9     9      0    2816
                                             21 BANK0      9     9      0
                        _EEPROM_Read
                            ___lldiv
            _lcd_display_bool_binary
                    _lcd_display_int
                     _lcd_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       3     2      1     549
                                              4 COMMON     3     2      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0     376
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _lcd_display_int                                      2     0      2    1485
                                             19 BANK0      2     0      2
                        _EEPROM_Read (ARG)
                            ___awdiv
                            ___awmod
                            ___lldiv (ARG)
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     445
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     457
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcd_display_bool_binary                              1     1      0     423
                                              4 COMMON     1     1      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             2     2      0     376
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     265
                                              5 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          1     1      0      47
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _check_button_press                                   7     7      0     108
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_update                                        8     8      0       0
                                              2 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1      93
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Read
   _EEPROM_Write
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _buzzer_update
   _check_button_press
   _dispinfo
     _EEPROM_Read
     ___lldiv
     _lcd_display_bool_binary
       _lcd_data
     _lcd_display_int
       _EEPROM_Read (ARG)
       ___awdiv (ARG)
       ___awmod (ARG)
         ___awdiv (ARG)
       ___lldiv (ARG)
       _lcd_data (ARG)
     _lcd_set_cursor
       _lcd_cmd
   _getsensorreadings
     ___lldiv
     ___lmul
     _getSensorResults
     _readADC
     _setupTimer0
     _startSensorReading
   _initLCD
     _lcd_cmd
   _initSystem
   _init_timer
   _readADC
   _trigger_buzzer

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BANK1               80      3      59     73.8%
BITBANK1            80      0       0      0.0%
BANK0               80     38      78     97.5%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     149      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Apr 27 17:44:08 2025

                                     pc 0002                            lcd_data@data 0073  
                          ___awdiv@sign 0077                                      _lt 00A4  
                                    _to 0043                                      fsr 0004  
                                   l200 016F                                     l202 0174  
                                   l203 0179                                     l204 017E  
                                   l221 02F7                                     l205 0183  
                                   l230 0360                                     l207 01A6  
                                   l232 035D                                     l224 031C  
                                   l216 0274                                     l241 0431  
                                   l250 0C32                                     l314 0BD5  
                                   l331 0F24                                     l323 0F0B  
                                   l253 0BA4                                     l229 0363  
                                   l318 07F6                                     l350 0F90  
                                   l342 0B45                                     l334 0FFF  
                                   l503 0DE6                                     l263 0B01  
                                   l256 0BAE                                     l345 0E4F  
                                   l337 0EB8                                     l185 008F  
                                   l290 0B8A                                     l282 0B22  
                                   l291 0B8C                                     l267 0C03  
                                   l259 0AF2                                     l363 05A3  
                                   l620 0D80                                     l372 0699  
                                   l285 0B70                                     l381 07AC  
                                   l294 0B47                                     l288 0B86  
                                   l297 0B58                                     l377 0B11  
                                   l633 0D1D                                     l481 0C7A  
                     _low_sensor_active 0046                                     _isr 0C7B  
                                   _smc 0042                                     fsr0 0004  
                                   indf 0000                            ___awmod@sign 004C  
                       ?_lcd_set_cursor 0074                       main@is_long_press 00D8  
                                  l3001 0043                                    l3003 004A  
                                  l3101 01EE                                    l3021 00AB  
                                  l3013 0095                                    l3005 0054  
                                  l3111 0217                                    l3103 01EF  
                                  l3031 00CE                                    l3023 00B2  
                                  l3015 009C                                    l3007 008E  
                                  l3121 0275                                    l3113 0267  
                                  l3105 0205                                    l3041 00EA  
                                  l3033 00CF                                    l3025 00B6  
                                  l3017 00A2                                    l3131 02F4  
                                  l3123 027F                                    l3115 0269  
                                  l3107 0209                                    l3051 0101  
                                  l3043 00F4                                    l3035 00D0  
                                  l3027 00BC                                    l3019 00A5  
                                  l2501 0E46                                    l3133 030B  
                                  l3125 0298                                    l3117 026E  
                                  l3141 0328                                    l3109 0210  
                                  l3061 0156                                    l3053 010B  
                                  l3045 00F7                                    l3037 00E0  
                                  l3029 00CB                                    l2503 0E47  
                                  l2511 0D28                                    l3151 0339  
                                  l3143 032D                                    l3127 02E6  
                                  l3119 0272                                    l3135 0320  
                                  l3063 015D                                    l3055 0145  
                                  l3047 00FB                                    l3039 00E4  
                                  l2521 0D37                                    l2513 0D2A  
                                  l2505 0D1E                                    l2601 0BA1  
                                  l3161 03C6                                    l3153 034C  
                                  l3145 032E                                    l3137 0325  
                                  l3129 02EA                                    l3081 01B2  
                                  l3065 0161                                    l3057 014B  
                                  l3073 0188                                    l3049 00FE  
                                  l2531 0D4D                                    l2523 0D3D  
                                  l2515 0D2E                                    l2507 0D1F  
                                  l2603 0BA8                                    l2611 0AED  
                                  l3171 0420                                    l3163 03CD  
                                  l3155 0365                                    l3147 0333  
                                  l3139 0327                                    l3091 01D3  
                                  l3083 01B7                                    l3075 019B  
                                  l3067 0167                                    l3059 0151  
                                  l2533 0D5E                                    l2525 0D40  
                                  l2541 0D72                                    l2517 0D33  
                                  l2509 0D23                                    l2621 0BD6  
                                  l2613 0AF1                                    l3181 044A  
                                  l3173 0435                                    l3165 03D5  
                                  l3157 03A7                                    l3149 0334  
                                  l3093 01DA                                    l3085 01BE  
                                  l3069 0168                                    l3077 019F  
                                  l2543 0D77                                    l2535 0D64  
                                  l2527 0D47                                    l2519 0D35  
                                  l2551 0CC8                                    l2471 0E81  
                                  l2623 0BDD                                    l2631 0C02  
                                  l2607 0AE5                                    l2615 0AF3  
                                  l2711 0C11                                    l2703 0C04  
                                  l3183 0477                                    l3175 0436  
                                  l3167 03DE                                    l3159 03BF  
                                  l3095 01DF                                    l3079 01AC  
                                  l3087 01CD                                    l2545 0D7C  
                                  l2537 0D65                                    l2529 0D49  
                                  l2561 0CDC                                    l2553 0CCC  
                                  l2481 0EAE                                    l2473 0E86  
                                  l2641 0B41                                    l2625 0BFF  
                                  l2609 0AE9                                    l2617 0AFA  
                                  l2801 0FD6                                    l2721 0C26  
                                  l2713 0C13                                    l2705 0C08  
                                  l3185 0481                                    l3169 040B  
                                  l3177 043E                                    l3097 01E4  
                                  l3089 01D0                                    l2491 0E1D  
                                  l2539 0D6C                                    l2571 0CF2  
                                  l2563 0CE2                                    l2555 0CD1  
                                  l2651 0F43                                    l2643 0F25  
                                  l2483 0EAF                                    l2475 0E90  
                                  l2635 0B35                                    l2627 0C00  
                                  l2619 0AFF                                    l2811 0488  
                                  l2803 0FE2                                    l2731 0C2D  
                                  l2723 0C29                                    l2715 0C15  
                                  l2707 0C0C                                    l3179 0442  
                                  l3099 01E9                                    l2901 0EFB  
                                  l2493 0E27                                    l2661 0B08  
                                  l2581 0D14                                    l2573 0CFC  
                                  l2565 0CE5                                    l2557 0CD3  
                                  l2549 0CC5                                    l2653 0F49  
                                  l2645 0F2B                                    l2485 0EB0  
                                  l2477 0E9A                                    l2469 0E51  
                                  l2637 0B3A                                    l2821 049B  
                                  l2805 0FE6                                    l2733 0C2E  
                                  l2725 0C2A                                    l2717 0C19  
                                  l2709 0C0D                                    l2741 0BAF  
                                  l2751 07B4                                    l2911 0F21  
                                  l2903 0F01                                    l2591 0B51  
                                  l2495 0E31                                    l2487 0DE8  
                                  l2663 0B0D                                    l2583 0D19  
                                  l2575 0D02                                    l2567 0CEC  
                                  l2559 0CD7                                    l2655 0F5B  
                                  l2647 0F2F                                    l2479 0EA4  
                                  l2639 0B3E                                    l2671 0C58  
                                  l2831 04E2                                    l2823 04A1  
                                  l2807 0FEA                                    l2735 0C2F  
                                  l2727 0C2B                                    l2719 0C1D  
                                  l2743 0BB6                                    l2921 0B76  
                                  l2753 07EE                                    l2905 0F11  
                                  l2593 0B54                                    l2681 0D93  
                                  l2497 0E3B                                    l2489 0E18  
                                  l2577 0D09                                    l2569 0CEE  
                                  l2657 0F7C                                    l2649 0F36  
                                  l2673 0C61                                    l2665 0C33  
                                  l2841 0503                                    l2833 04E7  
                                  l2825 04AC                                    l2817 048B  
                                  l2809 0FEE                                    l2761 0F99  
                                  l2737 0C30                                    l2729 0C2C  
                                  l2745 0BB7                                    l2931 0B83  
                                  l2923 0B7C                                    l2755 07F1  
                                  l2907 0F16                                    l2915 0F23  
                                  l2587 0B47                                    l2691 0DC0  
                                  l2683 0D96                                    l2499 0E45  
                                  l2659 0B03                                    l2579 0D0F  
                                  l2675 0C72                                    l2667 0C3D  
                                  l2851 051F                                    l2843 0508  
                                  l2835 04ED                                    l2827 04AE  
                                  l2819 0497                                    l2771 0FA0  
                                  l2763 0F9C                                    l2739 0C31  
                                  l2747 0BD1                                    l2933 0B85  
                                  l2925 0B7F                                    l2749 07AD  
                                  l2589 0B4D                                    l2693 0DCE  
                                  l2685 0DA1                                    l2941 06FF  
                                  l2669 0C41                                    l2597 0B8E  
                                  l2861 0599                                    l2853 0528  
                                  l2845 050D                                    l2837 04FB  
                                  l2829 04DD                                    l2781 0FB2  
                                  l2773 0FA1                                    l2765 0F9D  
                                  l2757 0B12                                    l2927 0B80  
                                  l2919 0B70                                    l2695 0DCF  
                                  l2687 0DA5                                    l2679 0D81  
                                  l2951 0744                                    l2943 070B  
                                  l2935 069D                                    l2599 0B9C  
                                  l2871 05EE                                    l2863 05AB  
                                  l2855 0556                                    l2839 0502  
                                  l2847 050F                                    l2791 0FD1  
                                  l2783 0FBE                                    l2775 0FA2  
                                  l2767 0F9E                                    l2759 0F91  
                                  l2929 0B81                                    l2697 0DD8  
                                  l2689 0DAE                                    l2961 0770  
                                  l2953 074A                                    l2945 0711  
                                  l2937 06E4                                    l2881 0673  
                                  l2865 05B1                                    l2873 05F1  
                                  l2849 0517                                    l2857 0563  
                                  l2793 0FD2                                    l2785 0FC1  
                                  l2777 0FAE                                    l2769 0F9F  
                                  l2891 0ECF                                    l2883 0EB9  
                                  l2699 0DDE                                    l2971 078E  
                                  l2963 0776                                    l2955 0756  
                                  l2947 072F                                    l2939 06FA  
                                  l2875 05F7                                    l2867 05B6  
                                  l2859 056B                                    l2795 0FD3  
                                  l2787 0FC2                                    l2779 0FB1  
                                  l2893 0ED1                                    l2885 0EBA  
                                  l2973 0794                                    l2965 077C  
                                  l2957 075B                                    l2949 0735  
                                  l2877 062B                                    l2869 05EA  
                                  l2797 0FD4                                    l2789 0FCE  
                                  l2895 0ED6                                    l2887 0EC0  
                                  l2975 079A                                    l2967 0782  
                                  l2959 076A                                    l2879 062F  
                                  l2799 0FD5                                    l2991 002E  
                                  l2897 0EEF                                    l2889 0EC9  
                                  l2977 07A0                                    l2969 0788  
                                  l2993 0031                                    l2899 0EF2  
                                  l2979 07A6                                    l2995 0037  
                                  l2997 003B                                    l2999 003F  
                                  ?_isr 0070                                    u4000 0BFE  
                                  u4010 0B3A                                    u4011 0B39  
                                  u4100 0D93                                    u4020 0F2B  
                                  u4101 0D92                                    u4021 0F2A  
                                  u4030 0F43                                    u4031 0F42  
                                  u4200 07EE                                    u4120 0DA5  
                                  u4040 0B08                                    u4201 07ED  
                                  u4121 0DA4                                    u4041 0B07  
                                  u3410 0E65                                    u4050 0C41  
                                  u4210 04A1                                    u4115 0D98  
                                  u4035 0F3F                                    u3411 0E61  
                                  u4051 0C40                                    u4211 04A0  
                                  u4140 0DC0                                    u3404 0E5E  
                                  u4220 04E2                                    u4205 07EA  
                                  u4141 0DBF                                    u4061 0C4A  
                                  u4301 0537                                    u4221 04E1  
                                  u3510 0EA1                                    u3430 0E6F  
                                  u4062 0C51                                    u4310 0556  
                                  u4302 0538                                    u4230 04E7  
                                  u4135 0DA7                                    u3511 0E9D  
                                  u3431 0E6B                                    u4063 0C58  
                                  u4311 0555                                    u4303 053D  
                                  u4231 04E6                                    u4160 0DDE  
                                  u3504 0E9A                                    u3424 0E68  
                                  u4320 056B                                    u4304 053E  
                                  u4240 04FB                                    u4161 0DDD  
                                  u4145 0DBC                                    u4401 060C  
                                  u4321 056A                                    u4313 0552  
                                  u4305 0543                                    u4241 04FA  
                                  u5017 00C4                                    u3610 0E10  
                                  u3530 0EAB                                    u3450 0E79  
                                  u4090 0C72                                    u4410 062B  
                                  u4402 060D                                    u4306 0544  
                                  u4250 0502                                    u4170 0BB6  
                                  u4155 0DD0                                    u3611 0E0C  
                                  u3531 0EA7                                    u3451 0E75  
                                  u4091 0C71                                    u4075 0C5A  
                                  u5107 0B9E                                    u4411 062A  
                                  u4403 0612                                    u4331 057A  
                                  u4251 0501                                    u4171 0BB5  
                                  u5027 00D9                                    u4500 0B76  
                                  u4180 07B4                                    u3604 0E09  
                                  u3524 0EA4                                    u3444 0E72  
                                  u4404 0613                                    u4340 0599  
                                  u4332 057B                                    u4260 0508  
                                  u4501 0B75                                    u4181 07B3  
                                  u5117 0E83                                    u4085 0C62  
                                  u4421 0646                                    u4413 0627  
                                  u4405 0618                                    u4341 0598  
                                  u4333 0580                                    u4261 0507  
                                  u5037 0C21                                    u4510 0B8A  
                                  u3630 0E24                                    u3550 0DF2  
                                  u3710 0D23                                    u3470 0E8D  
                                  u3390 0E5B                                    u4430 0673  
                                  u4422 0649                                    u4406 0619  
                                  u4350 05AB                                    u4334 0581  
                                  u4270 050D                                    u4511 0B89  
                                  u4191 07CF                                    u3631 0E20  
                                  u3551 0DEE                                    u3711 0D22  
                                  u5127 0EB5                                    u3471 0E89  
                                  u3391 0E57                                    u4431 0672  
                                  u4423 0650                                    u4351 05AA  
                                  u4343 0595                                    u4335 0586  
                                  u4271 050C                                    u5047 0F95  
                                  u4192 07D0                                    u4440 0EC0  
                                  u3704 0E45                                    u3624 0E13  
                                  u3800 0D77                                    u3720 0D2E  
                                  u3544 0EAE                                    u3464 0E7C  
                                  u4424 0653                                    u4360 05B1  
                                  u4336 0587                                    u4280 0517  
                                  u4600 014B                                    u4193 07D5  
                                  u4441 0EBF                                    u5137 0E1A  
                                  u3801 0D76                                    u3721 0D2D  
                                  u4521 06B7                                    u4433 066F  
                                  u4425 065A                                    u4361 05B0  
                                  u4281 0516                                    u5057 0FA9  
                                  u4601 014A                                    u4194 07D6  
                                  u4450 0ECF                                    u3650 0E2E  
                                  u3570 0DFC                                    u3730 0D3D  
                                  u3810 0CCC                                    u3490 0E97  
                                  u4530 06E4                                    u4522 06BA  
                                  u4426 065D                                    u4290 051F  
                                  u4610 0156                                    u4195 07DB  
                                  u4451 0ECE                                    u5147 0E4C  
                                  u3651 0E2A                                    u3571 0DF8  
                                  u3731 0D3C                                    u3811 0CCB  
                                  u3491 0E93                                    u4531 06E3  
                                  u4523 06C1                                    u4371 05CB  
                                  u4291 051E                                    u5067 0FB9  
                                  u4611 0155                                    u4196 07DC  
                                  u4460 0EEF                                    u3900 0B4D  
                                  u3644 0E27                                    u3564 0DF5  
                                  u3820 0CD7                                    u3484 0E90  
                                  u4524 06C4                                    u4380 05EA  
                                  u4372 05CC                                    u4700 01E4  
                                  u4620 0167                                    u4540 009C  
                                  u4461 0EEE                                    u5157 0EC4  
                                  u3901 0B4C                                    u3821 0CD6  
                                  u4525 06CB                                    u4381 05E9  
                                  u4373 05D1                                    u5077 0FC9  
                                  u4701 01E3                                    u4621 0166  
                                  u4541 009B                                    u4470 0F01  
                                  u3670 0E38                                    u3590 0E06  
                                  u3750 0D4D                                    u3830 0CE2  
                                  u4526 06CE                                    u4390 05F7  
                                  u4374 05D2                                    u4710 01E9  
                                  u4630 01A6                                    u4550 00A2  
                                  u4471 0F00                                    u5167 0EDA  
                                  u3671 0E34                                    u3591 0E02  
                                  u3751 0D4C                                    u3831 0CE1  
                                  u4535 06E0                                    u4391 05F6  
                                  u4383 05E6                                    u4375 05D7  
                                  u5087 0FDD                                    u4711 01E8  
                                  u4631 01A5                                    u4551 00A1  
                                  u4480 0F11                                    u3664 0E31  
                                  u3584 0DFF                                    u3920 0BA8  
                                  u4376 05D8                                    u4800 02E6  
                                  u4720 01EE                                    u4640 01AC  
                                  u4560 00AB                                    u4481 0F10  
                                  u5177 0EF6                                    u4465 0EEB  
                                  u3745 0D41                                    u3921 0BA7  
                                  u5097 0FF2                                    u4801 02E5  
                                  u4721 01ED                                    u4641 01AB  
                                  u4561 00AA                                    u4490 0F16  
                                  u3690 0E42                                    u3770 0D5E  
                                  u3850 0CF2                                    u3930 0AFA  
                                  u4810 030B                                    u4730 0217  
                                  u4650 01B7                                    u4570 00B2  
                                  u4491 0F15                                    u5187 0F05  
                                  u3691 0E3E                                    u3771 0D5D  
                                  u3851 0CF1                                    u3915 0B91  
                                  u3931 0AF9                                    u4811 030A  
                                  u4731 0216                                    u4651 01B6  
                                  u4571 00B1                                    u3684 0E3B  
                                  u3860 0CFC                                    u3940 0BDD  
                                  u4900 03A7                                    u4820 031C  
                                  u4660 01CA                                    u4580 00B6  
                                  u5197 0F1A                                    u3765 0D4E  
                                  u3861 0CFB                                    u3845 0CE6  
                                  u3941 0BDC                                    u4901 03A6  
                                  u4821 031B                                    u4805 02E2  
                                  u4741 023A                                    u4661 01C6  
                                  u4581 00B5                                    u3790 0D72  
                                  u3950 0BE6                                    u4910 03CD  
                                  u4830 0325                                    u4750 0267  
                                  u4742 023D                                    u4590 00EA  
                                  u3791 0D71                                    u3775 0D5A  
                                  u3951 0BE4                                    u4911 03CC  
                                  u4903 03A3                                    u4831 0324  
                                  u4815 0307                                    u4751 0266  
                                  u4743 0244                                    u4591 00E9  
                                  u3880 0D0F                                    u3960 0BE7  
                                  u4920 03D5                                    u4840 032D  
                                  u4760 026E                                    u4744 0247  
                                  u4680 01DA                                    u3785 0D66  
                                  u3881 0D0E                                    u3865 0CF8  
                                  u4921 03D4                                    u4841 032C  
                                  u4825 0318                                    u4761 026D  
                                  u4745 024E                                    u4681 01D9  
                                  u3890 0D14                                    u3970 0BF2  
                                  u4850 0333                                    u4770 0272  
                                  u4746 0251                                    u4690 01DF  
                                  u4674 01CD                                    u3891 0D13  
                                  u3875 0D03                                    u3971 0BF0  
                                  u4931 03ED                                    u4851 0332  
                                  u4771 0271                                    u4755 0263  
                                  u4691 01DE                                    u3980 0BF3  
                                  u4940 040B                                    u4932 03EE  
                                  u4860 0339                                    u4780 027F  
                                  u4941 040A                                    u4933 03F3  
                                  u4861 0338                                    u4781 027E  
                                  u3990 0BFD                                    u4950 0420  
                                  u4934 03F4                                    u4870 034C  
                                  u3991 0BFB                                    u4951 041F  
                                  u4943 0407                                    u4935 03F9  
                                  u4871 034B                                    u4791 02B9  
                                  u4960 0431                                    u4936 03FA  
                                  u4880 035D                                    u4792 02BC  
                                  u4961 0430                                    u4881 035C  
                                  u4793 02C3                                    u4970 044A  
                                  u4794 02C6                                    u4971 0449  
                                  u4955 041C                                    u4891 037A  
                                  u4875 0348                                    u4795 02CD  
                                  u4892 037D                                    u4796 02D0  
                                  u4981 0459                                    u4965 042D  
                                  u4893 0384                                    u4885 0359  
                                  u4990 0477                                    u4982 045A  
                                  u4894 0387                                    u4991 0476  
                                  u4983 045F                                    u4895 038E  
                                  u4984 0460                                    u4896 0391  
                                  u4993 0473                                    u4985 0465  
                                  u4986 0466                                    _TMR0 0001  
                                  _main 002E                                    btemp 007E  
                                  start 000B                     dispinfo@refreshtime 0064  
                     ?_getSensorResults 0072             _sensors_reading_in_progress 003C  
                    ??_getSensorResults 0075                    __end_of_EEPROM_Write 0B8D  
                                 ??_isr 0070                                   ?_main 0070  
                       __end_of___awdiv 0D81                                   _EEADR 010D  
                       __end_of___awmod 0D1E                                   _ANSEL 0188  
                       __end_of___lldiv 0DE7                         ___awdiv@divisor 0072  
                                 _T1CON 0010                                   i1l277 0CB2  
                                 i1l279 0CBE                         ___awdiv@counter 0076  
                                 _TMR1H 000F                                   _TMR1L 000E  
                                 _PORTA 0005                                   _PORTB 0006  
                                 _PORTC 0007                                   _TRISA 0085  
                                 _TRISB 0086                                   _TRISC 0087  
                   ___lmul@multiplicand 0076                         __end_of_lcd_cmd 0EB9  
                       __end_of_readADC 0BAF                         __end_of_initLCD 1000  
                                 main@i 00DA                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
                      EEPROM_Write@data 0072                     _maxvoltageerrortime 00D6  
                       __initialization 000D                            _voltageerror 003A  
            __end_of_startSensorReading 0B02                            __end_of_main 0488  
          lcd_display_bool_binary@value 0074                                  ??_main 0065  
                     _buzzer_start_time 00A8                                  _ADCON0 001F  
                                _ADCON1 009F                                  _ADRESH 001E  
                                _ADRESL 009E                                  _EEDATA 010C  
                                _EECON2 018D                        ___awdiv@dividend 0074  
                                _ANSELH 0189                                  i1l2421 0C90  
                                i1l2431 0CA0                                  i1l2423 0C92  
                                i1l2415 0C7B                                  i1l2441 0CB0  
                                i1l2433 0CA4                                  i1l2417 0C81  
                                i1l2425 0C94                                  i1l2443 0CB4  
                                i1l2435 0CA6                                  i1l2427 0C98  
                                i1l2419 0C8F                                  i1l2445 0CBA  
                                i1l2437 0CAA                                  i1l2429 0C9B  
                                i1l2447 0CBB                                  i1l2439 0CAC  
                                i1l2449 0CBD                                  u331_20 0C81  
                                u331_21 0C80                                  u332_20 0C98  
                                u332_21 0C97                                  u333_20 0CA0  
                                u333_21 0C9F                                  u334_20 0CA4  
                                u334_21 0CA3                                  u335_20 0CAA  
                                u335_21 0CA9                                  u336_20 0CB0  
                                u336_21 0CAF                                  u337_20 0CBA  
                                u337_21 0CB9                 _lcd_display_bool_binary 0B02  
                      __end_of_lcd_data 0E50                        __end_of_dispinfo 07AD  
                                ___lmul 0C33                         _lastdryruncheck 00B0  
                             ??___awdiv 0076                               ??___awmod 007A  
                             ??___lldiv 0054                          _trigger_buzzer 0BAF  
                                _millis 0028                        ___awdiv@quotient 0078  
                       ___awmod@divisor 0047                         ___awmod@counter 004B  
                                _potraw 00C0                               ??_lcd_cmd 0072  
                             ??_readADC 0074                               ??_initLCD 0074  
                                saved_w 007E              __end_of_check_button_press 0F25  
                          ?_setupTimer0 0070                 __end_of__initialization 002B  
                        __pcstackCOMMON 0070                  __end_of_trigger_buzzer 0BD6  
                          __pidataBANK0 07FF                            __pidataBANK1 0B59  
                         _lastflowcheck 0030                        ??_lcd_set_cursor 0075  
                        _OPTION_REGbits 0081          trigger_buzzer@duration_seconds 0072  
                       _lastsensorcheck 0020                            _EEPROM_Write 0B6F  
             ??_lcd_display_bool_binary 0074                              __pbssBANK0 0020  
                            __pbssBANK1 00A0                              __pmaintext 002E  
                       ?_trigger_buzzer 0072                                 ?___lmul 0072  
                            __pintentry 0004                          ___lmul@product 0048  
                       _minvoltagelimit 00D4                         _seconds_counter 002C  
                             ?_lcd_data 0070                               ?_dispinfo 0070  
                         _reading_count 007B                       ??_lcd_display_int 007A  
                            _flowactive 0034                                 ___awdiv 0D1E  
                               ___awmod 0CC5                                 ___lldiv 0D81  
       __end_of_lcd_display_bool_binary 0B12                              _initSystem 0C04  
                            _init_timer 0B12                                 __ptext1 0BAF  
                               __ptext2 0B12                                 __ptext3 0C04  
                               __ptext4 0F91                                 __ptext5 0488  
                               __ptext6 0AF3                                 __ptext7 0AE5  
                               __ptext8 0B8D                                 __ptext9 0BD6  
                               _lcd_cmd 0E50                                 _readADC 0B8D  
                               _initLCD 0F91                               _T1CONbits 0010  
                      ___awmod@dividend 0049                      _startSensorReading 0AF3  
                            _dryruntime 00BC                           _buzzer_active 0032  
                            _maxruntime 00C2                   _low_sensor_high_count 007A  
                            ??_lcd_data 0072                                 clrloop0 07F8  
                               _voltage 0040                              ??_dispinfo 005C  
                  end_of_initialization 002B                     ?_startSensorReading 0070  
                         _buzzer_update 07AD                           ??_EEPROM_Read 0072  
                       ___lldiv@divisor 004C                         ___lldiv@counter 0059  
           getSensorResults@high_active 0073                    ??_startSensorReading 0072  
                             _PORTAbits 0005                               _PORTBbits 0006  
                             _PORTCbits 0007                              lcd_cmd@cmd 0073  
                        ?_buzzer_update 0070                       _getsensorreadings 0488  
                    ?_getsensorreadings 0070             getSensorResults@flow_active 0074  
                    _check_button_press 0EB9                              _voltageraw 00BE  
                            _voltagesum 00BA                     __end_of_EEPROM_Read 0B59  
                   ??_getsensorreadings 005A                          __end_of___lmul 0C7B  
                           ?_initSystem 0070                     ?_check_button_press 0070  
                           ?_init_timer 0070                      _high_sensor_active 0045  
              _sensors_reading_complete 003D                     start_initialization 000D  
                      _getSensorResults 0BD6                             __end_of_isr 0CC5  
             __end_of_getsensorreadings 069A                    ??_check_button_press 0072  
                      ??_trigger_buzzer 0074                   lcd_set_cursor@address 0076  
                              ??___lmul 0047                              init_fetch0 0B23  
                           __pdataBANK0 006D                             __pdataBANK1 00C2  
                           __pbssCOMMON 007A                               ___latbits 0001  
                         __pcstackBANK0 0047                           __pcstackBANK1 00D8  
                       _lcd_display_int 0F25                         ??_buzzer_update 0072  
                          _lastdispupdt 00A0                             _EEPROM_Read 0B46  
                 main@is_long_press_463 00D9                                ?___awdiv 0072  
                              ?___awmod 0047                                ?___lldiv 004C  
                              ?_lcd_cmd 0070                                ?_readADC 0072  
                              ?_initLCD 0070                      getsensorreadings@i 0062  
              ?_lcd_display_bool_binary 0070                               _mannualon 003B  
                     interrupt_function 0004                               clear_ram0 07F7  
                              _PIE1bits 008C                               _tankempty 0036  
                              _PIR1bits 000C                          _motorstarttime 00AC  
               __end_of_lcd_display_int 0F91                              _ADCON0bits 001F  
                       _buzzer_duration 00B8                           ??_setupTimer0 0072  
                     ___lmul@multiplier 0072                   _minimumrunningvoltage 00D0  
                    lcd_display_int@num 005A                              _EECON1bits 018C  
check_button_press@long_press_threshold 0074                __end_of_getSensorResults 0C04  
                         _preflowactive 0033                            ??_initSystem 0072  
                           _last_millis 00B4                            ??_init_timer 0072  
                        readADC@channel 0075              getSensorResults@low_active 0072  
                      _lastvoltageerror 0024                                __ptext10 0C33  
                              __ptext11 069A                                __ptext20 0B46  
                              __ptext12 0B34                                __ptext21 0EB9  
                              __ptext13 0E50                                __ptext22 07AD  
                              __ptext14 0F25                                __ptext23 0B6F  
                              __ptext15 0CC5                                __ptext24 0C7B  
                              __ptext16 0D1E                                __ptext17 0B02  
                              __ptext18 0DE7                                __ptext19 0D81  
                              _lcd_data 0DE7                           ?_EEPROM_Write 0072  
                              _dispinfo 069A                      __end_of_initSystem 0C33  
                   __end_of_setupTimer0 0AF3                      __end_of_init_timer 0B23  
                           _dryrunerror 0039                      _flow_sensor_active 0044  
                      ?_lcd_display_int 005A                              _INTCONbits 000B  
                              init_ram0 0B27                          ??_EEPROM_Write 0073  
                              intlevel1 0000                          _lcd_set_cursor 0B34  
                     lcd_set_cursor@col 0074                       lcd_set_cursor@row 0075  
                          _sensorbuffer 00CC                            ?_EEPROM_Read 0070  
                      ___lldiv@dividend 0050                              _OSCCONbits 008F  
                    EEPROM_Read@address 0072                            _pretankempty 0035  
                          _motorrunning 0037            check_button_press@hold_count 0076  
                       _maxvoltagelimit 00D2                         _maxruntimeindex 006D  
                          _settingsmode 0041                        ___lldiv@quotient 0055  
                 _maximumrinningvoltage 00CE                            _timeouterror 0038  
                _high_sensor_high_count 003F                  __end_of_lcd_set_cursor 0B46  
                _flow_sensor_high_count 003E                             _setupTimer0 0AE5  
                 __end_of_buzzer_update 07F7            check_button_press@long_press 0078  
                   EEPROM_Write@address 0073  
