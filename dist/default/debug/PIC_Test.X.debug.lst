

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Apr 24 11:20:28 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,space=0,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Generated 12/10/2023 GMT
    39                           ; 
    40                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F883 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0004                     fsr             equ	4
    73     0004                     fsr0            equ	4
    74     0000                     indf            equ	0
    75     0000                     indf0           equ	0
    76     0002                     pc              equ	2
    77     0002                     pcl             equ	2
    78     000A                     pclath          equ	10
    79     0003                     status          equ	3
    80     0000                     INDF            equ	0	;# 
    81     0001                     TMR0            equ	1	;# 
    82     0002                     PCL             equ	2	;# 
    83     0003                     STATUS          equ	3	;# 
    84     0004                     FSR             equ	4	;# 
    85     0005                     PORTA           equ	5	;# 
    86     0006                     PORTB           equ	6	;# 
    87     0007                     PORTC           equ	7	;# 
    88     0009                     PORTE           equ	9	;# 
    89     000A                     PCLATH          equ	10	;# 
    90     000B                     INTCON          equ	11	;# 
    91     000C                     PIR1            equ	12	;# 
    92     000D                     PIR2            equ	13	;# 
    93     000E                     TMR1            equ	14	;# 
    94     000E                     TMR1L           equ	14	;# 
    95     000F                     TMR1H           equ	15	;# 
    96     0010                     T1CON           equ	16	;# 
    97     0011                     TMR2            equ	17	;# 
    98     0012                     T2CON           equ	18	;# 
    99     0013                     SSPBUF          equ	19	;# 
   100     0014                     SSPCON          equ	20	;# 
   101     0015                     CCPR1           equ	21	;# 
   102     0015                     CCPR1L          equ	21	;# 
   103     0016                     CCPR1H          equ	22	;# 
   104     0017                     CCP1CON         equ	23	;# 
   105     0018                     RCSTA           equ	24	;# 
   106     0019                     TXREG           equ	25	;# 
   107     001A                     RCREG           equ	26	;# 
   108     001B                     CCPR2           equ	27	;# 
   109     001B                     CCPR2L          equ	27	;# 
   110     001C                     CCPR2H          equ	28	;# 
   111     001D                     CCP2CON         equ	29	;# 
   112     001E                     ADRESH          equ	30	;# 
   113     001F                     ADCON0          equ	31	;# 
   114     0081                     OPTION_REG      equ	129	;# 
   115     0085                     TRISA           equ	133	;# 
   116     0086                     TRISB           equ	134	;# 
   117     0087                     TRISC           equ	135	;# 
   118     0089                     TRISE           equ	137	;# 
   119     008C                     PIE1            equ	140	;# 
   120     008D                     PIE2            equ	141	;# 
   121     008E                     PCON            equ	142	;# 
   122     008F                     OSCCON          equ	143	;# 
   123     0090                     OSCTUNE         equ	144	;# 
   124     0091                     SSPCON2         equ	145	;# 
   125     0092                     PR2             equ	146	;# 
   126     0093                     SSPADD          equ	147	;# 
   127     0093                     SSPMSK          equ	147	;# 
   128     0093                     MSK             equ	147	;# 
   129     0094                     SSPSTAT         equ	148	;# 
   130     0095                     WPUB            equ	149	;# 
   131     0096                     IOCB            equ	150	;# 
   132     0097                     VRCON           equ	151	;# 
   133     0098                     TXSTA           equ	152	;# 
   134     0099                     SPBRG           equ	153	;# 
   135     009A                     SPBRGH          equ	154	;# 
   136     009B                     PWM1CON         equ	155	;# 
   137     009C                     ECCPAS          equ	156	;# 
   138     009D                     PSTRCON         equ	157	;# 
   139     009E                     ADRESL          equ	158	;# 
   140     009F                     ADCON1          equ	159	;# 
   141     0105                     WDTCON          equ	261	;# 
   142     0107                     CM1CON0         equ	263	;# 
   143     0108                     CM2CON0         equ	264	;# 
   144     0109                     CM2CON1         equ	265	;# 
   145     010C                     EEDATA          equ	268	;# 
   146     010C                     EEDAT           equ	268	;# 
   147     010D                     EEADR           equ	269	;# 
   148     010E                     EEDATH          equ	270	;# 
   149     010F                     EEADRH          equ	271	;# 
   150     0185                     SRCON           equ	389	;# 
   151     0187                     BAUDCTL         equ	391	;# 
   152     0188                     ANSEL           equ	392	;# 
   153     0189                     ANSELH          equ	393	;# 
   154     018C                     EECON1          equ	396	;# 
   155     018D                     EECON2          equ	397	;# 
   156     0000                     INDF            equ	0	;# 
   157     0001                     TMR0            equ	1	;# 
   158     0002                     PCL             equ	2	;# 
   159     0003                     STATUS          equ	3	;# 
   160     0004                     FSR             equ	4	;# 
   161     0005                     PORTA           equ	5	;# 
   162     0006                     PORTB           equ	6	;# 
   163     0007                     PORTC           equ	7	;# 
   164     0009                     PORTE           equ	9	;# 
   165     000A                     PCLATH          equ	10	;# 
   166     000B                     INTCON          equ	11	;# 
   167     000C                     PIR1            equ	12	;# 
   168     000D                     PIR2            equ	13	;# 
   169     000E                     TMR1            equ	14	;# 
   170     000E                     TMR1L           equ	14	;# 
   171     000F                     TMR1H           equ	15	;# 
   172     0010                     T1CON           equ	16	;# 
   173     0011                     TMR2            equ	17	;# 
   174     0012                     T2CON           equ	18	;# 
   175     0013                     SSPBUF          equ	19	;# 
   176     0014                     SSPCON          equ	20	;# 
   177     0015                     CCPR1           equ	21	;# 
   178     0015                     CCPR1L          equ	21	;# 
   179     0016                     CCPR1H          equ	22	;# 
   180     0017                     CCP1CON         equ	23	;# 
   181     0018                     RCSTA           equ	24	;# 
   182     0019                     TXREG           equ	25	;# 
   183     001A                     RCREG           equ	26	;# 
   184     001B                     CCPR2           equ	27	;# 
   185     001B                     CCPR2L          equ	27	;# 
   186     001C                     CCPR2H          equ	28	;# 
   187     001D                     CCP2CON         equ	29	;# 
   188     001E                     ADRESH          equ	30	;# 
   189     001F                     ADCON0          equ	31	;# 
   190     0081                     OPTION_REG      equ	129	;# 
   191     0085                     TRISA           equ	133	;# 
   192     0086                     TRISB           equ	134	;# 
   193     0087                     TRISC           equ	135	;# 
   194     0089                     TRISE           equ	137	;# 
   195     008C                     PIE1            equ	140	;# 
   196     008D                     PIE2            equ	141	;# 
   197     008E                     PCON            equ	142	;# 
   198     008F                     OSCCON          equ	143	;# 
   199     0090                     OSCTUNE         equ	144	;# 
   200     0091                     SSPCON2         equ	145	;# 
   201     0092                     PR2             equ	146	;# 
   202     0093                     SSPADD          equ	147	;# 
   203     0093                     SSPMSK          equ	147	;# 
   204     0093                     MSK             equ	147	;# 
   205     0094                     SSPSTAT         equ	148	;# 
   206     0095                     WPUB            equ	149	;# 
   207     0096                     IOCB            equ	150	;# 
   208     0097                     VRCON           equ	151	;# 
   209     0098                     TXSTA           equ	152	;# 
   210     0099                     SPBRG           equ	153	;# 
   211     009A                     SPBRGH          equ	154	;# 
   212     009B                     PWM1CON         equ	155	;# 
   213     009C                     ECCPAS          equ	156	;# 
   214     009D                     PSTRCON         equ	157	;# 
   215     009E                     ADRESL          equ	158	;# 
   216     009F                     ADCON1          equ	159	;# 
   217     0105                     WDTCON          equ	261	;# 
   218     0107                     CM1CON0         equ	263	;# 
   219     0108                     CM2CON0         equ	264	;# 
   220     0109                     CM2CON1         equ	265	;# 
   221     010C                     EEDATA          equ	268	;# 
   222     010C                     EEDAT           equ	268	;# 
   223     010D                     EEADR           equ	269	;# 
   224     010E                     EEDATH          equ	270	;# 
   225     010F                     EEADRH          equ	271	;# 
   226     0185                     SRCON           equ	389	;# 
   227     0187                     BAUDCTL         equ	391	;# 
   228     0188                     ANSEL           equ	392	;# 
   229     0189                     ANSELH          equ	393	;# 
   230     018C                     EECON1          equ	396	;# 
   231     018D                     EECON2          equ	397	;# 
   232                           
   233                           	psect	idataBANK0
   234     0D8A                     __pidataBANK0:
   235                           
   236                           ;initializer for _minimumrunningvoltage
   237     0D8A  34AA               	retlw	170
   238     0D8B  3400               	retlw	0
   239                           
   240                           ;initializer for _maxvoltagelimit
   241     0D8C  34E6               	retlw	230
   242     0D8D  3400               	retlw	0
   243                           
   244                           ;initializer for _minvoltagelimit
   245     0D8E  34C8               	retlw	200
   246     0D8F  3400               	retlw	0
   247                           
   248                           ;initializer for _maxruntimeindex
   249     0D90  3403               	retlw	3
   250                           
   251                           	psect	idataBANK1
   252     0DC5                     __pidataBANK1:
   253                           
   254                           ;initializer for _maxruntime
   255     0DC5  341E               	retlw	30
   256     0DC6  3400               	retlw	0
   257     0DC7  342D               	retlw	45
   258     0DC8  3400               	retlw	0
   259     0DC9  343C               	retlw	60
   260     0DCA  3400               	retlw	0
   261     0DCB  3478               	retlw	120
   262     0DCC  3400               	retlw	0
   263     0DCD  34FF               	retlw	255
   264     0DCE  34FF               	retlw	255
   265                           
   266                           ;initializer for _sensorbuffer
   267     0DCF  3410               	retlw	16
   268     0DD0  3427               	retlw	39
   269                           
   270                           ;initializer for _maximumrinningvoltage
   271     0DD1  341D               	retlw	29
   272     0DD2  3401               	retlw	1
   273                           
   274                           ;initializer for _maxvoltageerrortime
   275     0DD3  340A               	retlw	10
   276     0DD4  3400               	retlw	0
   277     0010                     _T1CONbits      set	16
   278     0010                     _T1CON          set	16
   279     0006                     _PORTBbits      set	6
   280     000E                     _TMR1L          set	14
   281     000F                     _TMR1H          set	15
   282     000C                     _PIR1bits       set	12
   283     000B                     _INTCONbits     set	11
   284     0001                     _TMR0           set	1
   285     001E                     _ADRESH         set	30
   286     001F                     _ADCON0bits     set	31
   287     0007                     _PORTC          set	7
   288     0006                     _PORTB          set	6
   289     0005                     _PORTA          set	5
   290     001F                     _ADCON0         set	31
   291     0007                     _PORTCbits      set	7
   292     0005                     _PORTAbits      set	5
   293     008C                     _PIE1bits       set	140
   294     0081                     _OPTION_REGbits set	129
   295     009E                     _ADRESL         set	158
   296     009F                     _ADCON1         set	159
   297     0087                     _TRISC          set	135
   298     0086                     _TRISB          set	134
   299     0085                     _TRISA          set	133
   300     008F                     _OSCCONbits     set	143
   301     010C                     _EEDATA         set	268
   302     010D                     _EEADR          set	269
   303     018D                     _EECON2         set	397
   304     018C                     _EECON1bits     set	396
   305     0189                     _ANSELH         set	393
   306     0188                     _ANSEL          set	392
   307                           
   308                           	psect	cinit
   309     000D                     start_initialization:	
   310                           ; #config settings
   311                           
   312     000D                     __initialization:
   313                           
   314                           ; Initialize objects allocated to BANK1
   315     000D  1383               	bcf	3,7	;select IRP bank0
   316     000E  30CE               	movlw	low (__pdataBANK1+16)
   317     000F  00FD               	movwf	btemp+-1
   318     0010  300D               	movlw	high __pidataBANK1
   319     0011  00FE               	movwf	btemp
   320     0012  30C5               	movlw	low __pidataBANK1
   321     0013  00FF               	movwf	btemp+1
   322     0014  30BE               	movlw	low __pdataBANK1
   323     0015  0084               	movwf	4
   324     0016  118A  27F1  118A   	fcall	init_ram0
   325                           
   326                           ; Initialize objects allocated to BANK0
   327     0019  306B               	movlw	low (__pdataBANK0+7)
   328     001A  00FD               	movwf	btemp+-1
   329     001B  300D               	movlw	high __pidataBANK0
   330     001C  00FE               	movwf	btemp
   331     001D  308A               	movlw	low __pidataBANK0
   332     001E  00FF               	movwf	btemp+1
   333     001F  3064               	movlw	low __pdataBANK0
   334     0020  0084               	movwf	4
   335     0021  118A  27F1  118A   	fcall	init_ram0
   336                           
   337                           ; Clear objects allocated to BANK1
   338     0024  30A0               	movlw	low __pbssBANK1
   339     0025  0084               	movwf	4
   340     0026  30BE               	movlw	low (__pbssBANK1+30)
   341     0027  158A  2591  118A   	fcall	clear_ram0
   342                           
   343                           ; Clear objects allocated to BANK0
   344     002A  3020               	movlw	low __pbssBANK0
   345     002B  0084               	movwf	4
   346     002C  3047               	movlw	low (__pbssBANK0+39)
   347     002D  158A  2591  118A   	fcall	clear_ram0
   348                           
   349                           ; Clear objects allocated to COMMON
   350     0030  01FA               	clrf	__pbssCOMMON& (0+127)
   351     0031  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   352     0032                     end_of_initialization:	
   353                           ;End of C runtime variable initialization code
   354                           
   355     0032                     __end_of__initialization:
   356     0032  0183               	clrf	3
   357     0033  118A  2835         	ljmp	_main	;jump to C main() function
   358                           
   359                           	psect	bssCOMMON
   360     007A                     __pbssCOMMON:
   361     007A                     _low_sensor_high_count:
   362     007A                     	ds	1
   363     007B                     _reading_count:
   364     007B                     	ds	1
   365                           
   366                           	psect	bssBANK0
   367     0020                     __pbssBANK0:
   368     0020                     _lastsensorcheck:
   369     0020                     	ds	4
   370     0024                     _lastvoltageerror:
   371     0024                     	ds	4
   372     0028                     _millis:
   373     0028                     	ds	4
   374     002C                     _seconds_counter:
   375     002C                     	ds	4
   376     0030                     _lastflowcheck:
   377     0030                     	ds	2
   378     0032                     _buzzer_active:
   379     0032                     	ds	1
   380     0033                     _preflowactive:
   381     0033                     	ds	1
   382     0034                     _flowactive:
   383     0034                     	ds	1
   384     0035                     _pretankempty:
   385     0035                     	ds	1
   386     0036                     _tankempty:
   387     0036                     	ds	1
   388     0037                     _motorrunning:
   389     0037                     	ds	1
   390     0038                     _timeouterror:
   391     0038                     	ds	1
   392     0039                     _dryrunerror:
   393     0039                     	ds	1
   394     003A                     _voltageerror:
   395     003A                     	ds	1
   396     003B                     _mannualon:
   397     003B                     	ds	1
   398     003C                     _sensors_reading_in_progress:
   399     003C                     	ds	1
   400     003D                     _sensors_reading_complete:
   401     003D                     	ds	1
   402     003E                     _flow_sensor_high_count:
   403     003E                     	ds	1
   404     003F                     _high_sensor_high_count:
   405     003F                     	ds	1
   406     0040                     _voltage:
   407     0040                     	ds	1
   408     0041                     _settingsmode:
   409     0041                     	ds	1
   410     0042                     _smc:
   411     0042                     	ds	1
   412     0043                     _to:
   413     0043                     	ds	1
   414     0044                     _flow_sensor_active:
   415     0044                     	ds	1
   416     0045                     _high_sensor_active:
   417     0045                     	ds	1
   418     0046                     _low_sensor_active:
   419     0046                     	ds	1
   420                           
   421                           	psect	dataBANK0
   422     0064                     __pdataBANK0:
   423     0064                     _minimumrunningvoltage:
   424     0064                     	ds	2
   425     0066                     _maxvoltagelimit:
   426     0066                     	ds	2
   427     0068                     _minvoltagelimit:
   428     0068                     	ds	2
   429     006A                     _maxruntimeindex:
   430     006A                     	ds	1
   431                           
   432                           	psect	bssBANK1
   433     00A0                     __pbssBANK1:
   434     00A0                     _lt:
   435     00A0                     	ds	4
   436     00A4                     _buzzer_start_time:
   437     00A4                     	ds	4
   438     00A8                     _motorstarttime:
   439     00A8                     	ds	4
   440     00AC                     _lastdryruncheck:
   441     00AC                     	ds	4
   442     00B0                     _last_millis:
   443     00B0                     	ds	4
   444     00B4                     _buzzer_duration:
   445     00B4                     	ds	2
   446     00B6                     _voltagesum:
   447     00B6                     	ds	2
   448     00B8                     _dryruntime:
   449     00B8                     	ds	2
   450     00BA                     _voltageraw:
   451     00BA                     	ds	2
   452     00BC                     _potraw:
   453     00BC                     	ds	2
   454                           
   455                           	psect	dataBANK1
   456     00BE                     __pdataBANK1:
   457     00BE                     _maxruntime:
   458     00BE                     	ds	10
   459     00C8                     _sensorbuffer:
   460     00C8                     	ds	2
   461     00CA                     _maximumrinningvoltage:
   462     00CA                     	ds	2
   463     00CC                     _maxvoltageerrortime:
   464     00CC                     	ds	2
   465                           
   466                           	psect	inittext
   467     07ED                     init_fetch0:	
   468                           ;	Called with low address in FSR and high address in W
   469                           
   470     07ED  087E               	movf	btemp,w
   471     07EE  008A               	movwf	10
   472     07EF  087F               	movf	btemp+1,w
   473     07F0  0082               	movwf	2
   474     07F1                     init_ram0:	
   475                           ;Called with:
   476                           ;	high address of idata address in btemp 
   477                           ;	low address of idata address in btemp+1 
   478                           ;	low address of data in FSR
   479                           ;	high address + 1 of data in btemp-1
   480                           
   481     07F1  118A  27ED  118A   	fcall	init_fetch0
   482     07F4  0080               	movwf	0
   483     07F5  0A84               	incf	4,f
   484     07F6  0804               	movf	4,w
   485     07F7  067D               	xorwf	btemp+-1,w
   486     07F8  1903               	btfsc	3,2
   487     07F9  3400               	retlw	0
   488     07FA  0AFF               	incf	btemp+1,f
   489     07FB  1903               	btfsc	3,2
   490     07FC  0AFE               	incf	btemp,f
   491     07FD  2FF1               	goto	init_ram0
   492                           
   493                           	psect	clrtext
   494     0D91                     clear_ram0:	
   495                           ;	Called with FSR containing the base address, and
   496                           ;	W with the last address+1
   497                           
   498     0D91  0064               	clrwdt	;clear the watchdog before getting into this loop
   499     0D92                     clrloop0:
   500     0D92  0180               	clrf	0	;clear RAM location pointed to by FSR
   501     0D93  0A84               	incf	4,f	;increment pointer
   502     0D94  0604               	xorwf	4,w	;XOR with final address
   503     0D95  1903               	btfsc	3,2	;have we reached the end yet?
   504     0D96  3400               	retlw	0	;all done for this memory range, return
   505     0D97  0604               	xorwf	4,w	;XOR again to restore value
   506     0D98  2D92               	goto	clrloop0	;do the next byte
   507                           
   508                           	psect	cstackBANK1
   509     00CE                     __pcstackBANK1:
   510     00CE                     ??_main:
   511                           
   512                           ; 1 bytes @ 0x0
   513     00CE                     	ds	8
   514                           
   515                           	psect	cstackCOMMON
   516     0071                     __pcstackCOMMON:
   517     0071                     ?_initSystem:
   518     0071                     ?_buzzer_update:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0071                     ?_init_timer:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0071                     ?_check_button_press:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0071                     ?_setupTimer0:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0071                     ?_startSensorReading:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0071                     ?_main:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0071                     ?_isr:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0071                     ??_isr:	
   540                           ; 1 bytes @ 0x0
   541                           
   542                           
   543                           ; 1 bytes @ 0x0
   544     0071                     	ds	2
   545     0073                     ?_trigger_buzzer:
   546     0073                     ?_getSensorResults:	
   547                           ; 1 bytes @ 0x2
   548                           
   549     0073                     ?_EEPROM_Write:	
   550                           ; 1 bytes @ 0x2
   551                           
   552     0073                     ?_readADC:	
   553                           ; 1 bytes @ 0x2
   554                           
   555     0073                     getSensorResults@low_active:	
   556                           ; 2 bytes @ 0x2
   557                           
   558     0073                     EEPROM_Write@data:	
   559                           ; 1 bytes @ 0x2
   560                           
   561     0073                     trigger_buzzer@duration_seconds:	
   562                           ; 1 bytes @ 0x2
   563                           
   564     0073                     ??_initSystem:	
   565                           ; 2 bytes @ 0x2
   566                           
   567     0073                     ??_init_timer:	
   568                           ; 1 bytes @ 0x2
   569                           
   570     0073                     ??_check_button_press:	
   571                           ; 1 bytes @ 0x2
   572                           
   573     0073                     ??_setupTimer0:	
   574                           ; 1 bytes @ 0x2
   575                           
   576     0073                     ??_startSensorReading:	
   577                           ; 1 bytes @ 0x2
   578                           
   579     0073                     ??___lmul:	
   580                           ; 1 bytes @ 0x2
   581                           
   582                           
   583                           ; 1 bytes @ 0x2
   584     0073                     	ds	1
   585     0074                     getSensorResults@high_active:
   586     0074                     EEPROM_Write@address:	
   587                           ; 1 bytes @ 0x3
   588                           
   589     0074                     ___lmul@product:	
   590                           ; 1 bytes @ 0x3
   591                           
   592     0074                     ??_EEPROM_Write:	
   593                           ; 4 bytes @ 0x3
   594                           
   595                           
   596                           ; 1 bytes @ 0x3
   597     0074                     	ds	1
   598     0075                     ?_EEPROM_Write16:
   599     0075                     getSensorResults@flow_active:	
   600                           ; 1 bytes @ 0x4
   601                           
   602     0075                     EEPROM_Write16@data:	
   603                           ; 1 bytes @ 0x4
   604                           
   605     0075                     check_button_press@long_press_threshold:	
   606                           ; 2 bytes @ 0x4
   607                           
   608     0075                     ??_readADC:	
   609                           ; 2 bytes @ 0x4
   610                           
   611     0075                     ??_trigger_buzzer:	
   612                           ; 1 bytes @ 0x4
   613                           
   614                           
   615                           ; 1 bytes @ 0x4
   616     0075                     	ds	1
   617     0076                     readADC@channel:
   618     0076                     ??_getSensorResults:	
   619                           ; 1 bytes @ 0x5
   620                           
   621                           
   622                           ; 1 bytes @ 0x5
   623     0076                     	ds	1
   624     0077                     EEPROM_Write16@address:
   625     0077                     check_button_press@hold_count:	
   626                           ; 1 bytes @ 0x6
   627                           
   628     0077                     ??_EEPROM_Write16:	
   629                           ; 2 bytes @ 0x6
   630                           
   631                           
   632                           ; 1 bytes @ 0x6
   633     0077                     	ds	1
   634     0078                     saveSettings@value8bit:
   635     0078                     ??_saveSettings:	
   636                           ; 1 bytes @ 0x7
   637                           
   638     0078                     ??___lldiv:	
   639                           ; 1 bytes @ 0x7
   640                           
   641                           
   642                           ; 1 bytes @ 0x7
   643     0078                     	ds	1
   644     0079                     check_button_press@long_press:
   645     0079                     ??___wmul:	
   646                           ; 1 bytes @ 0x8
   647                           
   648                           
   649                           ; 1 bytes @ 0x8
   650     0079                     	ds	1
   651                           
   652                           	psect	cstackBANK0
   653     0047                     __pcstackBANK0:
   654     0047                     ?_saveSettings:
   655     0047                     ?___lmul:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0047                     saveSettings@value16bit1:	
   659                           ; 4 bytes @ 0x0
   660                           
   661     0047                     ___lmul@multiplier:	
   662                           ; 2 bytes @ 0x0
   663                           
   664     0047                     ??_buzzer_update:	
   665                           ; 4 bytes @ 0x0
   666                           
   667                           
   668                           ; 1 bytes @ 0x0
   669     0047                     	ds	2
   670     0049                     saveSettings@value16bit2:
   671                           
   672                           ; 2 bytes @ 0x2
   673     0049                     	ds	2
   674     004B                     saveSettings@value16bit3:
   675     004B                     ___lmul@multiplicand:	
   676                           ; 2 bytes @ 0x4
   677                           
   678                           
   679                           ; 4 bytes @ 0x4
   680     004B                     	ds	2
   681     004D                     saveSettings@value16bit4:
   682                           
   683                           ; 2 bytes @ 0x6
   684     004D                     	ds	2
   685     004F                     ?___lldiv:
   686     004F                     ___lldiv@divisor:	
   687                           ; 4 bytes @ 0x8
   688                           
   689                           
   690                           ; 4 bytes @ 0x8
   691     004F                     	ds	4
   692     0053                     ___lldiv@dividend:
   693                           
   694                           ; 4 bytes @ 0xC
   695     0053                     	ds	4
   696     0057                     ___lldiv@quotient:
   697                           
   698                           ; 4 bytes @ 0x10
   699     0057                     	ds	4
   700     005B                     ___lldiv@counter:
   701                           
   702                           ; 1 bytes @ 0x14
   703     005B                     	ds	1
   704     005C                     ?___wmul:
   705     005C                     ___wmul@multiplier:	
   706                           ; 2 bytes @ 0x15
   707                           
   708                           
   709                           ; 2 bytes @ 0x15
   710     005C                     	ds	2
   711     005E                     ___wmul@multiplicand:
   712                           
   713                           ; 2 bytes @ 0x17
   714     005E                     	ds	2
   715     0060                     ___wmul@product:
   716                           
   717                           ; 2 bytes @ 0x19
   718     0060                     	ds	2
   719     0062                     main@is_long_press:
   720                           
   721                           ; 1 bytes @ 0x1B
   722     0062                     	ds	1
   723     0063                     main@i:
   724                           
   725                           ; 1 bytes @ 0x1C
   726     0063                     	ds	1
   727                           
   728                           	psect	maintext
   729     0035                     __pmaintext:	
   730 ;;
   731 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   732 ;;
   733 ;; *************** function _main *****************
   734 ;; Defined at:
   735 ;;		line 119 in file "main.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;  i               1   28[BANK0 ] unsigned char 
   740 ;;  is_long_pres    1   27[BANK0 ] _Bool 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : B00/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   750 ;;      Params:         0       0       0       0
   751 ;;      Locals:         0       2       0       0
   752 ;;      Temps:          0       0       8       0
   753 ;;      Totals:         0       2       8       0
   754 ;;Total ram usage:       10 bytes
   755 ;; Hardware stack levels required when called: 4
   756 ;; This function calls:
   757 ;;		___lldiv
   758 ;;		___lmul
   759 ;;		___wmul
   760 ;;		_buzzer_update
   761 ;;		_check_button_press
   762 ;;		_getSensorResults
   763 ;;		_initSystem
   764 ;;		_init_timer
   765 ;;		_readADC
   766 ;;		_saveSettings
   767 ;;		_setupTimer0
   768 ;;		_startSensorReading
   769 ;;		_trigger_buzzer
   770 ;; This function is called by:
   771 ;;		Startup code after reset
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775     0035                     _main:	
   776                           ;psect for function _main
   777                           
   778     0035                     l1784:	
   779                           ;incstack = 0
   780                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   781                           
   782                           
   783                           ;main.c: 122:   initSystem();
   784     0035  158A  2674  118A   	fcall	_initSystem
   785     0038                     l1786:
   786                           
   787                           ;main.c: 126:     maxruntimeindex = 4;
   788     0038  3004               	movlw	4
   789     0039  1283               	bcf	3,5	;RP0=0, select bank0
   790     003A  1303               	bcf	3,6	;RP1=0, select bank0
   791     003B  00EA               	movwf	_maxruntimeindex
   792     003C                     l1788:
   793                           
   794                           ;main.c: 127:     minvoltagelimit = 150;
   795     003C  3096               	movlw	150
   796     003D  00E8               	movwf	_minvoltagelimit
   797     003E  3000               	movlw	0
   798     003F  00E9               	movwf	_minvoltagelimit+1
   799     0040                     l1790:
   800                           
   801                           ;main.c: 128:     maxvoltagelimit = 255;
   802     0040  30FF               	movlw	255
   803     0041  00E6               	movwf	_maxvoltagelimit
   804     0042  3000               	movlw	0
   805     0043  00E7               	movwf	_maxvoltagelimit+1
   806     0044                     l1792:
   807                           
   808                           ;main.c: 129:     minimumrunningvoltage = 170;
   809     0044  30AA               	movlw	170
   810     0045  00E4               	movwf	_minimumrunningvoltage
   811     0046  3000               	movlw	0
   812     0047  00E5               	movwf	_minimumrunningvoltage+1
   813     0048                     l1794:
   814                           
   815                           ;main.c: 130:     maximumrinningvoltage = 285;
   816     0048  301D               	movlw	29
   817     0049  1683               	bsf	3,5	;RP0=1, select bank1
   818     004A  1303               	bcf	3,6	;RP1=0, select bank1
   819     004B  00CA               	movwf	_maximumrinningvoltage^(0+128)
   820     004C  3001               	movlw	1
   821     004D  00CB               	movwf	(_maximumrinningvoltage^(0+128)+1)
   822                           
   823                           ;main.c: 133:     saveSettings(maxruntimeindex, minvoltagelimit, maxvoltagelimit,
   824     004E  3096               	movlw	150
   825     004F  1283               	bcf	3,5	;RP0=0, select bank0
   826     0050  1303               	bcf	3,6	;RP1=0, select bank0
   827     0051  00C7               	movwf	saveSettings@value16bit1
   828     0052  3000               	movlw	0
   829     0053  00C8               	movwf	saveSettings@value16bit1+1
   830     0054  30FF               	movlw	255
   831     0055  00C9               	movwf	saveSettings@value16bit2
   832     0056  3000               	movlw	0
   833     0057  00CA               	movwf	saveSettings@value16bit2+1
   834     0058  30AA               	movlw	170
   835     0059  00CB               	movwf	saveSettings@value16bit3
   836     005A  3000               	movlw	0
   837     005B  00CC               	movwf	saveSettings@value16bit3+1
   838     005C  301D               	movlw	29
   839     005D  00CD               	movwf	saveSettings@value16bit4
   840     005E  3001               	movlw	1
   841     005F  00CE               	movwf	saveSettings@value16bit4+1
   842     0060  3004               	movlw	4
   843     0061  158A  26CA  118A   	fcall	_saveSettings
   844                           
   845                           ;main.c: 136:   potraw = readADC(4);
   846     0064  3004               	movlw	4
   847     0065  158A  2604  118A   	fcall	_readADC
   848     0068  0874               	movf	?_readADC+1,w
   849     0069  1683               	bsf	3,5	;RP0=1, select bank1
   850     006A  1303               	bcf	3,6	;RP1=0, select bank1
   851     006B  00BD               	movwf	(_potraw+1)^(0+128)
   852     006C  0873               	movf	?_readADC,w
   853     006D  00BC               	movwf	_potraw^(0+128)
   854                           
   855                           ;main.c: 138:   dryruntime = 1000 *(((uint32_t)potraw * 360) / 1023) + 120;
   856     006E  3000               	movlw	0
   857     006F  1283               	bcf	3,5	;RP0=0, select bank0
   858     0070  1303               	bcf	3,6	;RP1=0, select bank0
   859     0071  00CE               	movwf	___lmul@multiplicand+3
   860     0072  3000               	movlw	0
   861     0073  00CD               	movwf	___lmul@multiplicand+2
   862     0074  3001               	movlw	1
   863     0075  00CC               	movwf	___lmul@multiplicand+1
   864     0076  3068               	movlw	104
   865     0077  00CB               	movwf	___lmul@multiplicand
   866     0078  1683               	bsf	3,5	;RP0=1, select bank1
   867     0079  1303               	bcf	3,6	;RP1=0, select bank1
   868     007A  083C               	movf	_potraw^(0+128),w
   869     007B  1283               	bcf	3,5	;RP0=0, select bank0
   870     007C  1303               	bcf	3,6	;RP1=0, select bank0
   871     007D  00C7               	movwf	___lmul@multiplier
   872     007E  1683               	bsf	3,5	;RP0=1, select bank1
   873     007F  1303               	bcf	3,6	;RP1=0, select bank1
   874     0080  083D               	movf	(_potraw+1)^(0+128),w
   875     0081  1283               	bcf	3,5	;RP0=0, select bank0
   876     0082  1303               	bcf	3,6	;RP1=0, select bank0
   877     0083  00C8               	movwf	___lmul@multiplier+1
   878     0084  01C9               	clrf	___lmul@multiplier+2
   879     0085  01CA               	clrf	___lmul@multiplier+3
   880     0086  118A  27A5  118A   	fcall	___lmul
   881     0089  1283               	bcf	3,5	;RP0=0, select bank0
   882     008A  1303               	bcf	3,6	;RP1=0, select bank0
   883     008B  084A               	movf	?___lmul+3,w
   884     008C  00D6               	movwf	___lldiv@dividend+3
   885     008D  0849               	movf	?___lmul+2,w
   886     008E  00D5               	movwf	___lldiv@dividend+2
   887     008F  0848               	movf	?___lmul+1,w
   888     0090  00D4               	movwf	___lldiv@dividend+1
   889     0091  0847               	movf	?___lmul,w
   890     0092  00D3               	movwf	___lldiv@dividend
   891     0093  3000               	movlw	0
   892     0094  00D2               	movwf	___lldiv@divisor+3
   893     0095  3000               	movlw	0
   894     0096  00D1               	movwf	___lldiv@divisor+2
   895     0097  3003               	movlw	3
   896     0098  00D0               	movwf	___lldiv@divisor+1
   897     0099  30FF               	movlw	255
   898     009A  00CF               	movwf	___lldiv@divisor
   899     009B  118A  2697  118A   	fcall	___lldiv
   900     009E  1283               	bcf	3,5	;RP0=0, select bank0
   901     009F  1303               	bcf	3,6	;RP1=0, select bank0
   902     00A0  0850               	movf	?___lldiv+1,w
   903     00A1  00DD               	movwf	___wmul@multiplier+1
   904     00A2  084F               	movf	?___lldiv,w
   905     00A3  00DC               	movwf	___wmul@multiplier
   906     00A4  30E8               	movlw	232
   907     00A5  00DE               	movwf	___wmul@multiplicand
   908     00A6  3003               	movlw	3
   909     00A7  00DF               	movwf	___wmul@multiplicand+1
   910     00A8  158A  2626  118A   	fcall	___wmul
   911     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   912     00AC  1303               	bcf	3,6	;RP1=0, select bank0
   913     00AD  085C               	movf	?___wmul,w
   914     00AE  3E78               	addlw	120
   915     00AF  1683               	bsf	3,5	;RP0=1, select bank1
   916     00B0  1303               	bcf	3,6	;RP1=0, select bank1
   917     00B1  00B8               	movwf	_dryruntime^(0+128)
   918     00B2  1283               	bcf	3,5	;RP0=0, select bank0
   919     00B3  1303               	bcf	3,6	;RP1=0, select bank0
   920     00B4  085D               	movf	?___wmul+1,w
   921     00B5  1803               	skipnc
   922     00B6  3E01               	addlw	1
   923     00B7  3E00               	addlw	0
   924     00B8  1683               	bsf	3,5	;RP0=1, select bank1
   925     00B9  1303               	bcf	3,6	;RP1=0, select bank1
   926     00BA  00B9               	movwf	(_dryruntime+1)^(0+128)
   927                           
   928                           ;main.c: 165:   trigger_buzzer(3000);
   929     00BB  30B8               	movlw	184
   930     00BC  00F3               	movwf	trigger_buzzer@duration_seconds
   931     00BD  300B               	movlw	11
   932     00BE  00F4               	movwf	trigger_buzzer@duration_seconds+1
   933     00BF  158A  264D  118A   	fcall	_trigger_buzzer
   934                           
   935                           ;main.c: 166:   buzzer_update();
   936     00C2  118A  26FD  118A   	fcall	_buzzer_update
   937     00C5                     l1796:
   938                           
   939                           ;main.c: 168:   init_timer();
   940     00C5  158A  25D5  118A   	fcall	_init_timer
   941     00C8                     l1802:	
   942                           ;main.c: 170:   while (settingsmode) {
   943                           
   944                           
   945                           ;main.c: 178:     if (PORTCbits.RC1 == 0) {
   946     00C8  1283               	bcf	3,5	;RP0=0, select bank0
   947     00C9  1303               	bcf	3,6	;RP1=0, select bank0
   948     00CA  1887               	btfsc	7,1	;volatile
   949     00CB  28CD               	goto	u2261
   950     00CC  28CE               	goto	u2260
   951     00CD                     u2261:
   952     00CD  28EB               	goto	l1812
   953     00CE                     u2260:
   954     00CE                     l1804:
   955                           
   956                           ;main.c: 179:       _Bool is_long_press = check_button_press();
   957     00CE  118A  262B  118A   	fcall	_check_button_press
   958     00D1  1283               	bcf	3,5	;RP0=0, select bank0
   959     00D2  1303               	bcf	3,6	;RP1=0, select bank0
   960     00D3  00E2               	movwf	main@is_long_press
   961     00D4                     l1806:
   962                           
   963                           ;main.c: 181:       if (is_long_press) {
   964     00D4  0862               	movf	main@is_long_press,w
   965     00D5  1903               	btfsc	3,2
   966     00D6  28D8               	goto	u2271
   967     00D7  28D9               	goto	u2270
   968     00D8                     u2271:
   969     00D8  28DE               	goto	l1810
   970     00D9                     u2270:
   971     00D9                     l1808:
   972                           
   973                           ;main.c: 182:         tankempty = 1;
   974     00D9  3001               	movlw	1
   975     00DA  00B6               	movwf	_tankempty
   976                           
   977                           ;main.c: 183:         pretankempty = 1;
   978     00DB  3001               	movlw	1
   979     00DC  00B5               	movwf	_pretankempty
   980                           
   981                           ;main.c: 185:       } else {
   982     00DD  28EB               	goto	l1812
   983     00DE                     l1810:
   984                           
   985                           ;main.c: 186:         PORTAbits.RA2 = ~PORTAbits.RA2;
   986     00DE  1003               	clrc
   987     00DF  1D05               	btfss	5,2	;volatile
   988     00E0  1403               	setc
   989     00E1  1803               	btfsc	3,0
   990     00E2  28E4               	goto	u2281
   991     00E3  28E8               	goto	u2280
   992     00E4                     u2281:
   993     00E4  1283               	bcf	3,5	;RP0=0, select bank0
   994     00E5  1303               	bcf	3,6	;RP1=0, select bank0
   995     00E6  1505               	bsf	5,2	;volatile
   996     00E7  28EB               	goto	u2294
   997     00E8                     u2280:
   998     00E8  1283               	bcf	3,5	;RP0=0, select bank0
   999     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1000     00EA  1105               	bcf	5,2	;volatile
  1001     00EB                     u2294:
  1002     00EB                     l1812:
  1003                           
  1004                           ;main.c: 190:     buzzer_update();
  1005     00EB  118A  26FD  118A   	fcall	_buzzer_update
  1006     00EE                     l1814:
  1007                           
  1008                           ;main.c: 192:     for (uint8_t i = 0; i < 16; i++) {
  1009     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1010     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1011     00F0  01E3               	clrf	main@i
  1012     00F1                     l1816:
  1013     00F1  3010               	movlw	16
  1014     00F2  0263               	subwf	main@i,w
  1015     00F3  1C03               	skipc
  1016     00F4  28F6               	goto	u2301
  1017     00F5  28F7               	goto	u2300
  1018     00F6                     u2301:
  1019     00F6  28F8               	goto	l1820
  1020     00F7                     u2300:
  1021     00F7  2909               	goto	l1826
  1022     00F8                     l1820:
  1023                           
  1024                           ;main.c: 193:       voltagesum += readADC(3);
  1025     00F8  3003               	movlw	3
  1026     00F9  158A  2604  118A   	fcall	_readADC
  1027     00FC  0873               	movf	?_readADC,w
  1028     00FD  1683               	bsf	3,5	;RP0=1, select bank1
  1029     00FE  1303               	bcf	3,6	;RP1=0, select bank1
  1030     00FF  07B6               	addwf	_voltagesum^(0+128),f
  1031     0100  1803               	skipnc
  1032     0101  0AB7               	incf	(_voltagesum+1)^(0+128),f
  1033     0102  0874               	movf	?_readADC+1,w
  1034     0103  07B7               	addwf	(_voltagesum+1)^(0+128),f
  1035     0104                     l1822:
  1036                           
  1037                           ;main.c: 194:     }
  1038     0104  3001               	movlw	1
  1039     0105  1283               	bcf	3,5	;RP0=0, select bank0
  1040     0106  1303               	bcf	3,6	;RP1=0, select bank0
  1041     0107  07E3               	addwf	main@i,f
  1042     0108  28F1               	goto	l1816
  1043     0109                     l1826:
  1044                           
  1045                           ;main.c: 195:     voltageraw = voltagesum >> 4;
  1046     0109  1683               	bsf	3,5	;RP0=1, select bank1
  1047     010A  1303               	bcf	3,6	;RP1=0, select bank1
  1048     010B  0E36               	swapf	_voltagesum^(0+128),w
  1049     010C  390F               	andlw	15
  1050     010D  00BA               	movwf	_voltageraw^(0+128)
  1051     010E  0E37               	swapf	(_voltagesum+1)^(0+128),w
  1052     010F  39F0               	andlw	240
  1053     0110  04BA               	iorwf	_voltageraw^(0+128),f
  1054     0111  0E37               	swapf	(_voltagesum+1)^(0+128),w
  1055     0112  390F               	andlw	15
  1056     0113  00BB               	movwf	(_voltageraw^(0+128)+1)
  1057     0114                     l1828:
  1058                           
  1059                           ;main.c: 196:     voltagesum = 0;
  1060     0114  01B6               	clrf	_voltagesum^(0+128)
  1061     0115  01B7               	clrf	(_voltagesum+1)^(0+128)
  1062     0116                     l1830:
  1063                           
  1064                           ;main.c: 197:     voltage = (((uint32_t)voltageraw * 235) / 1023) + 85;
  1065     0116  3000               	movlw	0
  1066     0117  1283               	bcf	3,5	;RP0=0, select bank0
  1067     0118  1303               	bcf	3,6	;RP1=0, select bank0
  1068     0119  00D2               	movwf	___lldiv@divisor+3
  1069     011A  3000               	movlw	0
  1070     011B  00D1               	movwf	___lldiv@divisor+2
  1071     011C  3003               	movlw	3
  1072     011D  00D0               	movwf	___lldiv@divisor+1
  1073     011E  30FF               	movlw	255
  1074     011F  00CF               	movwf	___lldiv@divisor
  1075     0120  1683               	bsf	3,5	;RP0=1, select bank1
  1076     0121  1303               	bcf	3,6	;RP1=0, select bank1
  1077     0122  083A               	movf	_voltageraw^(0+128),w
  1078     0123  1283               	bcf	3,5	;RP0=0, select bank0
  1079     0124  1303               	bcf	3,6	;RP1=0, select bank0
  1080     0125  00C7               	movwf	___lmul@multiplier
  1081     0126  1683               	bsf	3,5	;RP0=1, select bank1
  1082     0127  1303               	bcf	3,6	;RP1=0, select bank1
  1083     0128  083B               	movf	(_voltageraw+1)^(0+128),w
  1084     0129  1283               	bcf	3,5	;RP0=0, select bank0
  1085     012A  1303               	bcf	3,6	;RP1=0, select bank0
  1086     012B  00C8               	movwf	___lmul@multiplier+1
  1087     012C  01C9               	clrf	___lmul@multiplier+2
  1088     012D  01CA               	clrf	___lmul@multiplier+3
  1089     012E  3000               	movlw	0
  1090     012F  00CE               	movwf	___lmul@multiplicand+3
  1091     0130  3000               	movlw	0
  1092     0131  00CD               	movwf	___lmul@multiplicand+2
  1093     0132  3000               	movlw	0
  1094     0133  00CC               	movwf	___lmul@multiplicand+1
  1095     0134  30EB               	movlw	235
  1096     0135  00CB               	movwf	___lmul@multiplicand
  1097     0136  118A  27A5  118A   	fcall	___lmul
  1098     0139  1283               	bcf	3,5	;RP0=0, select bank0
  1099     013A  1303               	bcf	3,6	;RP1=0, select bank0
  1100     013B  084A               	movf	?___lmul+3,w
  1101     013C  00D6               	movwf	___lldiv@dividend+3
  1102     013D  0849               	movf	?___lmul+2,w
  1103     013E  00D5               	movwf	___lldiv@dividend+2
  1104     013F  0848               	movf	?___lmul+1,w
  1105     0140  00D4               	movwf	___lldiv@dividend+1
  1106     0141  0847               	movf	?___lmul,w
  1107     0142  00D3               	movwf	___lldiv@dividend
  1108     0143  118A  2697  118A   	fcall	___lldiv
  1109     0146  1283               	bcf	3,5	;RP0=0, select bank0
  1110     0147  1303               	bcf	3,6	;RP1=0, select bank0
  1111     0148  084F               	movf	?___lldiv,w
  1112     0149  3E55               	addlw	85
  1113     014A  00C0               	movwf	_voltage
  1114     014B                     l1832:
  1115                           
  1116                           ;main.c: 200:     if(voltage < minvoltagelimit){
  1117     014B  0840               	movf	_voltage,w
  1118     014C  1683               	bsf	3,5	;RP0=1, select bank1
  1119     014D  1303               	bcf	3,6	;RP1=0, select bank1
  1120     014E  00CE               	movwf	??_main^(0+128)
  1121     014F  1283               	bcf	3,5	;RP0=0, select bank0
  1122     0150  1303               	bcf	3,6	;RP1=0, select bank0
  1123     0151  0869               	movf	_minvoltagelimit+1,w
  1124     0152  1D03               	skipz
  1125     0153  2958               	goto	u2315
  1126     0154  0868               	movf	_minvoltagelimit,w
  1127     0155  1683               	bsf	3,5	;RP0=1, select bank1
  1128     0156  1303               	bcf	3,6	;RP1=0, select bank1
  1129     0157  024E               	subwf	??_main^(0+128),w
  1130     0158                     u2315:
  1131     0158  1803               	skipnc
  1132     0159  295B               	goto	u2311
  1133     015A  295C               	goto	u2310
  1134     015B                     u2311:
  1135     015B  296F               	goto	l1838
  1136     015C                     u2310:
  1137     015C                     l1834:
  1138                           
  1139                           ;main.c: 201:       if(seconds_counter %2 ==0){
  1140     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1141     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1142     015E  182C               	btfsc	_seconds_counter,0	;volatile
  1143     015F  2961               	goto	u2321
  1144     0160  2962               	goto	u2320
  1145     0161                     u2321:
  1146     0161  296F               	goto	l1838
  1147     0162                     u2320:
  1148     0162                     l1836:
  1149                           
  1150                           ;main.c: 202:         PORTAbits.RA4 = ~PORTAbits.RA4;
  1151     0162  1003               	clrc
  1152     0163  1E05               	btfss	5,4	;volatile
  1153     0164  1403               	setc
  1154     0165  1803               	btfsc	3,0
  1155     0166  2968               	goto	u2331
  1156     0167  296C               	goto	u2330
  1157     0168                     u2331:
  1158     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1159     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1160     016A  1605               	bsf	5,4	;volatile
  1161     016B  296F               	goto	u2344
  1162     016C                     u2330:
  1163     016C  1283               	bcf	3,5	;RP0=0, select bank0
  1164     016D  1303               	bcf	3,6	;RP1=0, select bank0
  1165     016E  1205               	bcf	5,4	;volatile
  1166     016F                     u2344:
  1167     016F                     l1838:
  1168     016F  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0170  083C               	movf	_sensors_reading_in_progress,w	;volatile
  1170     0171  1D03               	btfss	3,2
  1171     0172  2974               	goto	u2351
  1172     0173  2975               	goto	u2350
  1173     0174                     u2351:
  1174     0174  2980               	goto	l1844
  1175     0175                     u2350:
  1176     0175                     l1840:
  1177     0175  083D               	movf	_sensors_reading_complete,w	;volatile
  1178     0176  1D03               	btfss	3,2
  1179     0177  2979               	goto	u2361
  1180     0178  297A               	goto	u2360
  1181     0179                     u2361:
  1182     0179  2980               	goto	l1844
  1183     017A                     u2360:
  1184     017A                     l1842:
  1185                           
  1186                           ;main.c: 207:       setupTimer0();
  1187     017A  158A  2599  118A   	fcall	_setupTimer0
  1188                           
  1189                           ;main.c: 208:       startSensorReading();
  1190     017D  158A  25B6  118A   	fcall	_startSensorReading
  1191     0180                     l1844:
  1192                           
  1193                           ;main.c: 211:     if (getSensorResults(&low_sensor_active, &high_sensor_active, &flow_se
      +                          nsor_active)) {
  1194     0180  3046               	movlw	(low (_low_sensor_active| 0))& (0+255)
  1195     0181  00F3               	movwf	getSensorResults@low_active
  1196     0182  3045               	movlw	(low (_high_sensor_active| 0))& (0+255)
  1197     0183  00F4               	movwf	getSensorResults@high_active
  1198     0184  3044               	movlw	(low (_flow_sensor_active| 0))& (0+255)
  1199     0185  00F5               	movwf	getSensorResults@flow_active
  1200     0186  158A  269C  118A   	fcall	_getSensorResults
  1201     0189  3A00               	xorlw	0
  1202     018A  1903               	skipnz
  1203     018B  298D               	goto	u2371
  1204     018C  298E               	goto	u2370
  1205     018D                     u2371:
  1206     018D  29A2               	goto	l1856
  1207     018E                     u2370:
  1208     018E                     l1846:
  1209                           
  1210                           ;main.c: 213:       if (high_sensor_active) {
  1211     018E  1283               	bcf	3,5	;RP0=0, select bank0
  1212     018F  1303               	bcf	3,6	;RP1=0, select bank0
  1213     0190  0845               	movf	_high_sensor_active,w
  1214     0191  1903               	btfsc	3,2
  1215     0192  2994               	goto	u2381
  1216     0193  2995               	goto	u2380
  1217     0194                     u2381:
  1218     0194  2996               	goto	l1850
  1219     0195                     u2380:
  1220     0195                     l1848:
  1221                           
  1222                           ;main.c: 215:         pretankempty = 0;
  1223     0195  01B5               	clrf	_pretankempty
  1224     0196                     l1850:
  1225                           
  1226                           ;main.c: 217:       if (!low_sensor_active && !high_sensor_active) {
  1227     0196  0846               	movf	_low_sensor_active,w
  1228     0197  1D03               	btfss	3,2
  1229     0198  299A               	goto	u2391
  1230     0199  299B               	goto	u2390
  1231     019A                     u2391:
  1232     019A  29A2               	goto	l1856
  1233     019B                     u2390:
  1234     019B                     l1852:
  1235     019B  0845               	movf	_high_sensor_active,w
  1236     019C  1D03               	btfss	3,2
  1237     019D  299F               	goto	u2401
  1238     019E  29A0               	goto	u2400
  1239     019F                     u2401:
  1240     019F  29A2               	goto	l1856
  1241     01A0                     u2400:
  1242     01A0                     l1854:
  1243                           
  1244                           ;main.c: 219:         pretankempty = 1;
  1245     01A0  3001               	movlw	1
  1246     01A1  00B5               	movwf	_pretankempty
  1247     01A2                     l1856:
  1248                           
  1249                           ;main.c: 224:     if(pretankempty !=tankempty){
  1250     01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1251     01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1252     01A4  0835               	movf	_pretankempty,w
  1253     01A5  0636               	xorwf	_tankempty,w
  1254     01A6  1903               	skipnz
  1255     01A7  29A9               	goto	u2411
  1256     01A8  29AA               	goto	u2410
  1257     01A9                     u2411:
  1258     01A9  2A18               	goto	l1866
  1259     01AA                     u2410:
  1260     01AA                     l1858:
  1261                           
  1262                           ;main.c: 225:       if(lastsensorcheck == 0){
  1263     01AA  0823               	movf	_lastsensorcheck+3,w
  1264     01AB  0422               	iorwf	_lastsensorcheck+2,w
  1265     01AC  0421               	iorwf	_lastsensorcheck+1,w
  1266     01AD  0420               	iorwf	_lastsensorcheck,w
  1267     01AE  1D03               	skipz
  1268     01AF  29B1               	goto	u2421
  1269     01B0  29B2               	goto	u2420
  1270     01B1                     u2421:
  1271     01B1  29BB               	goto	l1862
  1272     01B2                     u2420:
  1273     01B2                     l1860:
  1274                           
  1275                           ;main.c: 226:         lastsensorcheck = millis;
  1276     01B2  082B               	movf	_millis+3,w	;volatile
  1277     01B3  00A3               	movwf	_lastsensorcheck+3
  1278     01B4  082A               	movf	_millis+2,w	;volatile
  1279     01B5  00A2               	movwf	_lastsensorcheck+2
  1280     01B6  0829               	movf	_millis+1,w	;volatile
  1281     01B7  00A1               	movwf	_lastsensorcheck+1
  1282     01B8  0828               	movf	_millis,w	;volatile
  1283     01B9  00A0               	movwf	_lastsensorcheck
  1284                           
  1285                           ;main.c: 227:       }else if(millis - lastsensorcheck >= sensorbuffer){
  1286     01BA  2A7A               	goto	l198
  1287     01BB                     l1862:
  1288     01BB  0828               	movf	_millis,w	;volatile
  1289     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1290     01BD  1303               	bcf	3,6	;RP1=0, select bank1
  1291     01BE  00CE               	movwf	??_main^(0+128)
  1292     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1293     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1294     01C1  0829               	movf	_millis+1,w	;volatile
  1295     01C2  1683               	bsf	3,5	;RP0=1, select bank1
  1296     01C3  1303               	bcf	3,6	;RP1=0, select bank1
  1297     01C4  00CF               	movwf	(??_main^(0+128)+1)
  1298     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1299     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1300     01C7  082A               	movf	_millis+2,w	;volatile
  1301     01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1302     01C9  1303               	bcf	3,6	;RP1=0, select bank1
  1303     01CA  00D0               	movwf	(??_main^(0+128)+2)
  1304     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1305     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1306     01CD  082B               	movf	_millis+3,w	;volatile
  1307     01CE  1683               	bsf	3,5	;RP0=1, select bank1
  1308     01CF  1303               	bcf	3,6	;RP1=0, select bank1
  1309     01D0  00D1               	movwf	(??_main^(0+128)+3)
  1310     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  1311     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  1312     01D3  0820               	movf	_lastsensorcheck,w
  1313     01D4  1683               	bsf	3,5	;RP0=1, select bank1
  1314     01D5  1303               	bcf	3,6	;RP1=0, select bank1
  1315     01D6  02CE               	subwf	??_main^(0+128),f
  1316     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1317     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1318     01D9  0821               	movf	_lastsensorcheck+1,w
  1319     01DA  1C03               	skipc
  1320     01DB  0F21               	incfsz	_lastsensorcheck+1,w
  1321     01DC  29DE               	goto	u2431
  1322     01DD  29E1               	goto	u2432
  1323     01DE                     u2431:
  1324     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1325     01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1326     01E0  02CF               	subwf	(??_main^(0+128)+1),f
  1327     01E1                     u2432:
  1328     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1329     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1330     01E3  0822               	movf	_lastsensorcheck+2,w
  1331     01E4  1C03               	skipc
  1332     01E5  0F22               	incfsz	_lastsensorcheck+2,w
  1333     01E6  29E8               	goto	u2433
  1334     01E7  29EB               	goto	u2434
  1335     01E8                     u2433:
  1336     01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1337     01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1338     01EA  02D0               	subwf	(??_main^(0+128)+2),f
  1339     01EB                     u2434:
  1340     01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1341     01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1342     01ED  0823               	movf	_lastsensorcheck+3,w
  1343     01EE  1C03               	skipc
  1344     01EF  0F23               	incfsz	_lastsensorcheck+3,w
  1345     01F0  29F2               	goto	u2435
  1346     01F1  29F5               	goto	u2436
  1347     01F2                     u2435:
  1348     01F2  1683               	bsf	3,5	;RP0=1, select bank1
  1349     01F3  1303               	bcf	3,6	;RP1=0, select bank1
  1350     01F4  02D1               	subwf	(??_main^(0+128)+3),f
  1351     01F5                     u2436:
  1352     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1353     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1354     01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1355     01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1356     01F9  0851               	movf	(??_main^(0+128)+3),w
  1357     01FA  1D03               	btfss	3,2
  1358     01FB  2A0B               	goto	u2440
  1359     01FC  0850               	movf	(??_main^(0+128)+2),w
  1360     01FD  1D03               	btfss	3,2
  1361     01FE  2A0B               	goto	u2440
  1362     01FF  3027               	movlw	39
  1363     0200  024F               	subwf	(??_main^(0+128)+1),w
  1364     0201  1D03               	skipz
  1365     0202  2A07               	goto	u2443
  1366     0203  3010               	movlw	16
  1367     0204  024E               	subwf	??_main^(0+128),w
  1368     0205  1D03               	skipz
  1369     0206  2A07               	goto	u2443
  1370     0207                     u2443:
  1371     0207  1C03               	btfss	3,0
  1372     0208  2A0A               	goto	u2441
  1373     0209  2A0B               	goto	u2440
  1374     020A                     u2441:
  1375     020A  2A7A               	goto	l198
  1376     020B                     u2440:
  1377     020B                     l1864:
  1378                           
  1379                           ;main.c: 228:         lastsensorcheck = 0;
  1380     020B  3000               	movlw	0
  1381     020C  1283               	bcf	3,5	;RP0=0, select bank0
  1382     020D  1303               	bcf	3,6	;RP1=0, select bank0
  1383     020E  00A3               	movwf	_lastsensorcheck+3
  1384     020F  3000               	movlw	0
  1385     0210  00A2               	movwf	_lastsensorcheck+2
  1386     0211  3000               	movlw	0
  1387     0212  00A1               	movwf	_lastsensorcheck+1
  1388     0213  3000               	movlw	0
  1389     0214  00A0               	movwf	_lastsensorcheck
  1390                           
  1391                           ;main.c: 229:         tankempty = pretankempty;
  1392     0215  0835               	movf	_pretankempty,w
  1393     0216  00B6               	movwf	_tankempty
  1394     0217  2A7A               	goto	l198
  1395     0218                     l1866:
  1396     0218  0823               	movf	_lastsensorcheck+3,w
  1397     0219  0422               	iorwf	_lastsensorcheck+2,w
  1398     021A  0421               	iorwf	_lastsensorcheck+1,w
  1399     021B  0420               	iorwf	_lastsensorcheck,w
  1400     021C  1903               	skipnz
  1401     021D  2A1F               	goto	u2451
  1402     021E  2A20               	goto	u2450
  1403     021F                     u2451:
  1404     021F  2A7A               	goto	l198
  1405     0220                     u2450:
  1406     0220                     l1868:
  1407     0220  0828               	movf	_millis,w	;volatile
  1408     0221  1683               	bsf	3,5	;RP0=1, select bank1
  1409     0222  1303               	bcf	3,6	;RP1=0, select bank1
  1410     0223  00CE               	movwf	??_main^(0+128)
  1411     0224  1283               	bcf	3,5	;RP0=0, select bank0
  1412     0225  1303               	bcf	3,6	;RP1=0, select bank0
  1413     0226  0829               	movf	_millis+1,w	;volatile
  1414     0227  1683               	bsf	3,5	;RP0=1, select bank1
  1415     0228  1303               	bcf	3,6	;RP1=0, select bank1
  1416     0229  00CF               	movwf	(??_main^(0+128)+1)
  1417     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1418     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1419     022C  082A               	movf	_millis+2,w	;volatile
  1420     022D  1683               	bsf	3,5	;RP0=1, select bank1
  1421     022E  1303               	bcf	3,6	;RP1=0, select bank1
  1422     022F  00D0               	movwf	(??_main^(0+128)+2)
  1423     0230  1283               	bcf	3,5	;RP0=0, select bank0
  1424     0231  1303               	bcf	3,6	;RP1=0, select bank0
  1425     0232  082B               	movf	_millis+3,w	;volatile
  1426     0233  1683               	bsf	3,5	;RP0=1, select bank1
  1427     0234  1303               	bcf	3,6	;RP1=0, select bank1
  1428     0235  00D1               	movwf	(??_main^(0+128)+3)
  1429     0236  1283               	bcf	3,5	;RP0=0, select bank0
  1430     0237  1303               	bcf	3,6	;RP1=0, select bank0
  1431     0238  0820               	movf	_lastsensorcheck,w
  1432     0239  1683               	bsf	3,5	;RP0=1, select bank1
  1433     023A  1303               	bcf	3,6	;RP1=0, select bank1
  1434     023B  02CE               	subwf	??_main^(0+128),f
  1435     023C  1283               	bcf	3,5	;RP0=0, select bank0
  1436     023D  1303               	bcf	3,6	;RP1=0, select bank0
  1437     023E  0821               	movf	_lastsensorcheck+1,w
  1438     023F  1C03               	skipc
  1439     0240  0F21               	incfsz	_lastsensorcheck+1,w
  1440     0241  2A43               	goto	u2461
  1441     0242  2A46               	goto	u2462
  1442     0243                     u2461:
  1443     0243  1683               	bsf	3,5	;RP0=1, select bank1
  1444     0244  1303               	bcf	3,6	;RP1=0, select bank1
  1445     0245  02CF               	subwf	(??_main^(0+128)+1),f
  1446     0246                     u2462:
  1447     0246  1283               	bcf	3,5	;RP0=0, select bank0
  1448     0247  1303               	bcf	3,6	;RP1=0, select bank0
  1449     0248  0822               	movf	_lastsensorcheck+2,w
  1450     0249  1C03               	skipc
  1451     024A  0F22               	incfsz	_lastsensorcheck+2,w
  1452     024B  2A4D               	goto	u2463
  1453     024C  2A50               	goto	u2464
  1454     024D                     u2463:
  1455     024D  1683               	bsf	3,5	;RP0=1, select bank1
  1456     024E  1303               	bcf	3,6	;RP1=0, select bank1
  1457     024F  02D0               	subwf	(??_main^(0+128)+2),f
  1458     0250                     u2464:
  1459     0250  1283               	bcf	3,5	;RP0=0, select bank0
  1460     0251  1303               	bcf	3,6	;RP1=0, select bank0
  1461     0252  0823               	movf	_lastsensorcheck+3,w
  1462     0253  1C03               	skipc
  1463     0254  0F23               	incfsz	_lastsensorcheck+3,w
  1464     0255  2A57               	goto	u2465
  1465     0256  2A5A               	goto	u2466
  1466     0257                     u2465:
  1467     0257  1683               	bsf	3,5	;RP0=1, select bank1
  1468     0258  1303               	bcf	3,6	;RP1=0, select bank1
  1469     0259  02D1               	subwf	(??_main^(0+128)+3),f
  1470     025A                     u2466:
  1471     025A  1283               	bcf	3,5	;RP0=0, select bank0
  1472     025B  1303               	bcf	3,6	;RP1=0, select bank0
  1473     025C  1683               	bsf	3,5	;RP0=1, select bank1
  1474     025D  1303               	bcf	3,6	;RP1=0, select bank1
  1475     025E  0851               	movf	(??_main^(0+128)+3),w
  1476     025F  1D03               	btfss	3,2
  1477     0260  2A70               	goto	u2470
  1478     0261  0850               	movf	(??_main^(0+128)+2),w
  1479     0262  1D03               	btfss	3,2
  1480     0263  2A70               	goto	u2470
  1481     0264  3027               	movlw	39
  1482     0265  024F               	subwf	(??_main^(0+128)+1),w
  1483     0266  1D03               	skipz
  1484     0267  2A6C               	goto	u2473
  1485     0268  3010               	movlw	16
  1486     0269  024E               	subwf	??_main^(0+128),w
  1487     026A  1D03               	skipz
  1488     026B  2A6C               	goto	u2473
  1489     026C                     u2473:
  1490     026C  1C03               	btfss	3,0
  1491     026D  2A6F               	goto	u2471
  1492     026E  2A70               	goto	u2470
  1493     026F                     u2471:
  1494     026F  2A7A               	goto	l198
  1495     0270                     u2470:
  1496     0270                     l1870:
  1497                           
  1498                           ;main.c: 232:       lastsensorcheck = 0;
  1499     0270  3000               	movlw	0
  1500     0271  1283               	bcf	3,5	;RP0=0, select bank0
  1501     0272  1303               	bcf	3,6	;RP1=0, select bank0
  1502     0273  00A3               	movwf	_lastsensorcheck+3
  1503     0274  3000               	movlw	0
  1504     0275  00A2               	movwf	_lastsensorcheck+2
  1505     0276  3000               	movlw	0
  1506     0277  00A1               	movwf	_lastsensorcheck+1
  1507     0278  3000               	movlw	0
  1508     0279  00A0               	movwf	_lastsensorcheck
  1509     027A                     l198:
  1510                           
  1511                           ;main.c: 235:     if(flow_sensor_active != flowactive){
  1512     027A  1283               	bcf	3,5	;RP0=0, select bank0
  1513     027B  1303               	bcf	3,6	;RP1=0, select bank0
  1514     027C  0844               	movf	_flow_sensor_active,w
  1515     027D  0634               	xorwf	_flowactive,w
  1516     027E  1903               	skipnz
  1517     027F  2A81               	goto	u2481
  1518     0280  2A82               	goto	u2480
  1519     0281                     u2481:
  1520     0281  2ADE               	goto	l1882
  1521     0282                     u2480:
  1522     0282                     l1872:
  1523                           
  1524                           ;main.c: 236:         if (lastflowcheck == 0) {
  1525     0282  0830               	movf	_lastflowcheck,w
  1526     0283  0431               	iorwf	_lastflowcheck+1,w
  1527     0284  1D03               	btfss	3,2
  1528     0285  2A87               	goto	u2491
  1529     0286  2A88               	goto	u2490
  1530     0287                     u2491:
  1531     0287  2A8D               	goto	l1876
  1532     0288                     u2490:
  1533     0288                     l1874:
  1534                           
  1535                           ;main.c: 237:           lastflowcheck = millis;
  1536     0288  0829               	movf	_millis+1,w	;volatile
  1537     0289  00B1               	movwf	_lastflowcheck+1
  1538     028A  0828               	movf	_millis,w	;volatile
  1539     028B  00B0               	movwf	_lastflowcheck
  1540                           
  1541                           ;main.c: 238:         } else if (millis - lastflowcheck >= sensorbuffer) {
  1542     028C  2B32               	goto	l1888
  1543     028D                     l1876:
  1544     028D  0830               	movf	_lastflowcheck,w
  1545     028E  1683               	bsf	3,5	;RP0=1, select bank1
  1546     028F  1303               	bcf	3,6	;RP1=0, select bank1
  1547     0290  00CE               	movwf	??_main^(0+128)
  1548     0291  1283               	bcf	3,5	;RP0=0, select bank0
  1549     0292  1303               	bcf	3,6	;RP1=0, select bank0
  1550     0293  0831               	movf	_lastflowcheck+1,w
  1551     0294  1683               	bsf	3,5	;RP0=1, select bank1
  1552     0295  1303               	bcf	3,6	;RP1=0, select bank1
  1553     0296  00CF               	movwf	(??_main^(0+128)+1)
  1554     0297  01D0               	clrf	(??_main^(0+128)+2)
  1555     0298  01D1               	clrf	(??_main^(0+128)+3)
  1556     0299  1283               	bcf	3,5	;RP0=0, select bank0
  1557     029A  1303               	bcf	3,6	;RP1=0, select bank0
  1558     029B  0828               	movf	_millis,w	;volatile
  1559     029C  1683               	bsf	3,5	;RP0=1, select bank1
  1560     029D  1303               	bcf	3,6	;RP1=0, select bank1
  1561     029E  00D2               	movwf	(??_main+4)^(0+128)
  1562     029F  1283               	bcf	3,5	;RP0=0, select bank0
  1563     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1564     02A1  0829               	movf	_millis+1,w	;volatile
  1565     02A2  1683               	bsf	3,5	;RP0=1, select bank1
  1566     02A3  1303               	bcf	3,6	;RP1=0, select bank1
  1567     02A4  00D3               	movwf	((??_main+4)^(0+128)+1)
  1568     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1569     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1570     02A7  082A               	movf	_millis+2,w	;volatile
  1571     02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1572     02A9  1303               	bcf	3,6	;RP1=0, select bank1
  1573     02AA  00D4               	movwf	((??_main+4)^(0+128)+2)
  1574     02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1575     02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1576     02AD  082B               	movf	_millis+3,w	;volatile
  1577     02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1578     02AF  1303               	bcf	3,6	;RP1=0, select bank1
  1579     02B0  00D5               	movwf	((??_main+4)^(0+128)+3)
  1580     02B1  084E               	movf	??_main^(0+128),w
  1581     02B2  02D2               	subwf	(??_main+4)^(0+128),f
  1582     02B3  084F               	movf	(??_main+1)^(0+128),w
  1583     02B4  1C03               	skipc
  1584     02B5  0F4F               	incfsz	(??_main+1)^(0+128),w
  1585     02B6  2AB8               	goto	u2501
  1586     02B7  2AB9               	goto	u2502
  1587     02B8                     u2501:
  1588     02B8  02D3               	subwf	((??_main+4)^(0+128)+1),f
  1589     02B9                     u2502:
  1590     02B9  0850               	movf	(??_main+2)^(0+128),w
  1591     02BA  1C03               	skipc
  1592     02BB  0F50               	incfsz	(??_main+2)^(0+128),w
  1593     02BC  2ABE               	goto	u2503
  1594     02BD  2ABF               	goto	u2504
  1595     02BE                     u2503:
  1596     02BE  02D4               	subwf	((??_main+4)^(0+128)+2),f
  1597     02BF                     u2504:
  1598     02BF  0851               	movf	(??_main+3)^(0+128),w
  1599     02C0  1C03               	skipc
  1600     02C1  0F51               	incfsz	(??_main+3)^(0+128),w
  1601     02C2  2AC4               	goto	u2505
  1602     02C3  2AC5               	goto	u2506
  1603     02C4                     u2505:
  1604     02C4  02D5               	subwf	((??_main+4)^(0+128)+3),f
  1605     02C5                     u2506:
  1606     02C5  0855               	movf	((??_main+4)^(0+128)+3),w
  1607     02C6  1D03               	btfss	3,2
  1608     02C7  2AD7               	goto	u2510
  1609     02C8  0854               	movf	((??_main+4)^(0+128)+2),w
  1610     02C9  1D03               	btfss	3,2
  1611     02CA  2AD7               	goto	u2510
  1612     02CB  3027               	movlw	39
  1613     02CC  0253               	subwf	((??_main+4)^(0+128)+1),w
  1614     02CD  1D03               	skipz
  1615     02CE  2AD3               	goto	u2513
  1616     02CF  3010               	movlw	16
  1617     02D0  0252               	subwf	(??_main+4)^(0+128),w
  1618     02D1  1D03               	skipz
  1619     02D2  2AD3               	goto	u2513
  1620     02D3                     u2513:
  1621     02D3  1C03               	btfss	3,0
  1622     02D4  2AD6               	goto	u2511
  1623     02D5  2AD7               	goto	u2510
  1624     02D6                     u2511:
  1625     02D6  2B32               	goto	l1888
  1626     02D7                     u2510:
  1627     02D7                     l1878:
  1628                           
  1629                           ;main.c: 239:           lastflowcheck = 0;
  1630     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1631     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1632     02D9  01B0               	clrf	_lastflowcheck
  1633     02DA  01B1               	clrf	_lastflowcheck+1
  1634     02DB                     l1880:
  1635                           
  1636                           ;main.c: 240:           flowactive = flow_sensor_active;
  1637     02DB  0844               	movf	_flow_sensor_active,w
  1638     02DC  00B4               	movwf	_flowactive
  1639     02DD  2B32               	goto	l1888
  1640     02DE                     l1882:
  1641     02DE  0830               	movf	_lastflowcheck,w
  1642     02DF  0431               	iorwf	_lastflowcheck+1,w
  1643     02E0  1903               	btfsc	3,2
  1644     02E1  2AE3               	goto	u2521
  1645     02E2  2AE4               	goto	u2520
  1646     02E3                     u2521:
  1647     02E3  2B32               	goto	l1888
  1648     02E4                     u2520:
  1649     02E4                     l1884:
  1650     02E4  0830               	movf	_lastflowcheck,w
  1651     02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1652     02E6  1303               	bcf	3,6	;RP1=0, select bank1
  1653     02E7  00CE               	movwf	??_main^(0+128)
  1654     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1655     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1656     02EA  0831               	movf	_lastflowcheck+1,w
  1657     02EB  1683               	bsf	3,5	;RP0=1, select bank1
  1658     02EC  1303               	bcf	3,6	;RP1=0, select bank1
  1659     02ED  00CF               	movwf	(??_main^(0+128)+1)
  1660     02EE  01D0               	clrf	(??_main^(0+128)+2)
  1661     02EF  01D1               	clrf	(??_main^(0+128)+3)
  1662     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1663     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1664     02F2  0828               	movf	_millis,w	;volatile
  1665     02F3  1683               	bsf	3,5	;RP0=1, select bank1
  1666     02F4  1303               	bcf	3,6	;RP1=0, select bank1
  1667     02F5  00D2               	movwf	(??_main+4)^(0+128)
  1668     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  1669     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  1670     02F8  0829               	movf	_millis+1,w	;volatile
  1671     02F9  1683               	bsf	3,5	;RP0=1, select bank1
  1672     02FA  1303               	bcf	3,6	;RP1=0, select bank1
  1673     02FB  00D3               	movwf	((??_main+4)^(0+128)+1)
  1674     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1675     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1676     02FE  082A               	movf	_millis+2,w	;volatile
  1677     02FF  1683               	bsf	3,5	;RP0=1, select bank1
  1678     0300  1303               	bcf	3,6	;RP1=0, select bank1
  1679     0301  00D4               	movwf	((??_main+4)^(0+128)+2)
  1680     0302  1283               	bcf	3,5	;RP0=0, select bank0
  1681     0303  1303               	bcf	3,6	;RP1=0, select bank0
  1682     0304  082B               	movf	_millis+3,w	;volatile
  1683     0305  1683               	bsf	3,5	;RP0=1, select bank1
  1684     0306  1303               	bcf	3,6	;RP1=0, select bank1
  1685     0307  00D5               	movwf	((??_main+4)^(0+128)+3)
  1686     0308  084E               	movf	??_main^(0+128),w
  1687     0309  02D2               	subwf	(??_main+4)^(0+128),f
  1688     030A  084F               	movf	(??_main+1)^(0+128),w
  1689     030B  1C03               	skipc
  1690     030C  0F4F               	incfsz	(??_main+1)^(0+128),w
  1691     030D  2B0F               	goto	u2531
  1692     030E  2B10               	goto	u2532
  1693     030F                     u2531:
  1694     030F  02D3               	subwf	((??_main+4)^(0+128)+1),f
  1695     0310                     u2532:
  1696     0310  0850               	movf	(??_main+2)^(0+128),w
  1697     0311  1C03               	skipc
  1698     0312  0F50               	incfsz	(??_main+2)^(0+128),w
  1699     0313  2B15               	goto	u2533
  1700     0314  2B16               	goto	u2534
  1701     0315                     u2533:
  1702     0315  02D4               	subwf	((??_main+4)^(0+128)+2),f
  1703     0316                     u2534:
  1704     0316  0851               	movf	(??_main+3)^(0+128),w
  1705     0317  1C03               	skipc
  1706     0318  0F51               	incfsz	(??_main+3)^(0+128),w
  1707     0319  2B1B               	goto	u2535
  1708     031A  2B1C               	goto	u2536
  1709     031B                     u2535:
  1710     031B  02D5               	subwf	((??_main+4)^(0+128)+3),f
  1711     031C                     u2536:
  1712     031C  0855               	movf	((??_main+4)^(0+128)+3),w
  1713     031D  1D03               	btfss	3,2
  1714     031E  2B2E               	goto	u2540
  1715     031F  0854               	movf	((??_main+4)^(0+128)+2),w
  1716     0320  1D03               	btfss	3,2
  1717     0321  2B2E               	goto	u2540
  1718     0322  3027               	movlw	39
  1719     0323  0253               	subwf	((??_main+4)^(0+128)+1),w
  1720     0324  1D03               	skipz
  1721     0325  2B2A               	goto	u2543
  1722     0326  3010               	movlw	16
  1723     0327  0252               	subwf	(??_main+4)^(0+128),w
  1724     0328  1D03               	skipz
  1725     0329  2B2A               	goto	u2543
  1726     032A                     u2543:
  1727     032A  1C03               	btfss	3,0
  1728     032B  2B2D               	goto	u2541
  1729     032C  2B2E               	goto	u2540
  1730     032D                     u2541:
  1731     032D  2B32               	goto	l1888
  1732     032E                     u2540:
  1733     032E                     l1886:
  1734                           
  1735                           ;main.c: 243:         lastflowcheck = 0;
  1736     032E  1283               	bcf	3,5	;RP0=0, select bank0
  1737     032F  1303               	bcf	3,6	;RP1=0, select bank0
  1738     0330  01B0               	clrf	_lastflowcheck
  1739     0331  01B1               	clrf	_lastflowcheck+1
  1740     0332                     l1888:
  1741                           
  1742                           ;main.c: 247:     if (tankempty) {
  1743     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1744     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1745     0334  0836               	movf	_tankempty,w
  1746     0335  1903               	btfsc	3,2
  1747     0336  2B38               	goto	u2551
  1748     0337  2B39               	goto	u2550
  1749     0338                     u2551:
  1750     0338  2C49               	goto	l1930
  1751     0339                     u2550:
  1752     0339                     l1890:
  1753                           
  1754                           ;main.c: 248:       if (!timeouterror && !voltageerror && !dryrunerror && !motorrunning)
      +                           {
  1755     0339  0838               	movf	_timeouterror,w
  1756     033A  1D03               	btfss	3,2
  1757     033B  2B3D               	goto	u2561
  1758     033C  2B3E               	goto	u2560
  1759     033D                     u2561:
  1760     033D  2B6F               	goto	l1906
  1761     033E                     u2560:
  1762     033E                     l1892:
  1763     033E  083A               	movf	_voltageerror,w
  1764     033F  1D03               	btfss	3,2
  1765     0340  2B42               	goto	u2571
  1766     0341  2B43               	goto	u2570
  1767     0342                     u2571:
  1768     0342  2B6F               	goto	l1906
  1769     0343                     u2570:
  1770     0343                     l1894:
  1771     0343  0839               	movf	_dryrunerror,w
  1772     0344  1D03               	btfss	3,2
  1773     0345  2B47               	goto	u2581
  1774     0346  2B48               	goto	u2580
  1775     0347                     u2581:
  1776     0347  2B6F               	goto	l1906
  1777     0348                     u2580:
  1778     0348                     l1896:
  1779     0348  0837               	movf	_motorrunning,w
  1780     0349  1D03               	btfss	3,2
  1781     034A  2B4C               	goto	u2591
  1782     034B  2B4D               	goto	u2590
  1783     034C                     u2591:
  1784     034C  2B6F               	goto	l1906
  1785     034D                     u2590:
  1786     034D                     l1898:
  1787                           
  1788                           ;main.c: 250:         PORTCbits.RC3 = 1;
  1789     034D  1587               	bsf	7,3	;volatile
  1790     034E                     l1900:
  1791                           
  1792                           ;main.c: 251:         motorstarttime = seconds_counter;
  1793     034E  082F               	movf	_seconds_counter+3,w	;volatile
  1794     034F  1683               	bsf	3,5	;RP0=1, select bank1
  1795     0350  1303               	bcf	3,6	;RP1=0, select bank1
  1796     0351  00AB               	movwf	(_motorstarttime+3)^(0+128)
  1797     0352  1283               	bcf	3,5	;RP0=0, select bank0
  1798     0353  1303               	bcf	3,6	;RP1=0, select bank0
  1799     0354  082E               	movf	_seconds_counter+2,w	;volatile
  1800     0355  1683               	bsf	3,5	;RP0=1, select bank1
  1801     0356  1303               	bcf	3,6	;RP1=0, select bank1
  1802     0357  00AA               	movwf	(_motorstarttime+2)^(0+128)
  1803     0358  1283               	bcf	3,5	;RP0=0, select bank0
  1804     0359  1303               	bcf	3,6	;RP1=0, select bank0
  1805     035A  082D               	movf	_seconds_counter+1,w	;volatile
  1806     035B  1683               	bsf	3,5	;RP0=1, select bank1
  1807     035C  1303               	bcf	3,6	;RP1=0, select bank1
  1808     035D  00A9               	movwf	(_motorstarttime+1)^(0+128)
  1809     035E  1283               	bcf	3,5	;RP0=0, select bank0
  1810     035F  1303               	bcf	3,6	;RP1=0, select bank0
  1811     0360  082C               	movf	_seconds_counter,w	;volatile
  1812     0361  1683               	bsf	3,5	;RP0=1, select bank1
  1813     0362  1303               	bcf	3,6	;RP1=0, select bank1
  1814     0363  00A8               	movwf	_motorstarttime^(0+128)
  1815     0364                     l1902:
  1816                           
  1817                           ;main.c: 252:         motorrunning = 1;
  1818     0364  3001               	movlw	1
  1819     0365  1283               	bcf	3,5	;RP0=0, select bank0
  1820     0366  1303               	bcf	3,6	;RP1=0, select bank0
  1821     0367  00B7               	movwf	_motorrunning
  1822     0368                     l1904:
  1823                           
  1824                           ;main.c: 253:         trigger_buzzer(1000);
  1825     0368  30E8               	movlw	232
  1826     0369  00F3               	movwf	trigger_buzzer@duration_seconds
  1827     036A  3003               	movlw	3
  1828     036B  00F4               	movwf	trigger_buzzer@duration_seconds+1
  1829     036C  158A  264D  118A   	fcall	_trigger_buzzer
  1830     036F                     l1906:
  1831                           
  1832                           ;main.c: 255:       if (motorrunning) {
  1833     036F  1283               	bcf	3,5	;RP0=0, select bank0
  1834     0370  1303               	bcf	3,6	;RP1=0, select bank0
  1835     0371  0837               	movf	_motorrunning,w
  1836     0372  1903               	btfsc	3,2
  1837     0373  2B75               	goto	u2601
  1838     0374  2B76               	goto	u2600
  1839     0375                     u2601:
  1840     0375  2C51               	goto	l1936
  1841     0376                     u2600:
  1842     0376                     l1908:
  1843                           
  1844                           ;main.c: 256:         if (seconds_counter - motorstarttime >= maxruntime[4]) {
  1845     0376  1683               	bsf	3,5	;RP0=1, select bank1
  1846     0377  1303               	bcf	3,6	;RP1=0, select bank1
  1847     0378  0846               	movf	(_maxruntime^(0+128)+8),w
  1848     0379  00CE               	movwf	??_main^(0+128)
  1849     037A  0847               	movf	((_maxruntime+1)^(0+128)+8),w
  1850     037B  00CF               	movwf	(??_main^(0+128)+1)
  1851     037C  01D0               	clrf	(??_main^(0+128)+2)
  1852     037D  01D1               	clrf	(??_main^(0+128)+3)
  1853     037E  1283               	bcf	3,5	;RP0=0, select bank0
  1854     037F  1303               	bcf	3,6	;RP1=0, select bank0
  1855     0380  082C               	movf	_seconds_counter,w	;volatile
  1856     0381  1683               	bsf	3,5	;RP0=1, select bank1
  1857     0382  1303               	bcf	3,6	;RP1=0, select bank1
  1858     0383  00D2               	movwf	(??_main+4)^(0+128)
  1859     0384  1283               	bcf	3,5	;RP0=0, select bank0
  1860     0385  1303               	bcf	3,6	;RP1=0, select bank0
  1861     0386  082D               	movf	_seconds_counter+1,w	;volatile
  1862     0387  1683               	bsf	3,5	;RP0=1, select bank1
  1863     0388  1303               	bcf	3,6	;RP1=0, select bank1
  1864     0389  00D3               	movwf	((??_main+4)^(0+128)+1)
  1865     038A  1283               	bcf	3,5	;RP0=0, select bank0
  1866     038B  1303               	bcf	3,6	;RP1=0, select bank0
  1867     038C  082E               	movf	_seconds_counter+2,w	;volatile
  1868     038D  1683               	bsf	3,5	;RP0=1, select bank1
  1869     038E  1303               	bcf	3,6	;RP1=0, select bank1
  1870     038F  00D4               	movwf	((??_main+4)^(0+128)+2)
  1871     0390  1283               	bcf	3,5	;RP0=0, select bank0
  1872     0391  1303               	bcf	3,6	;RP1=0, select bank0
  1873     0392  082F               	movf	_seconds_counter+3,w	;volatile
  1874     0393  1683               	bsf	3,5	;RP0=1, select bank1
  1875     0394  1303               	bcf	3,6	;RP1=0, select bank1
  1876     0395  00D5               	movwf	((??_main+4)^(0+128)+3)
  1877     0396  0828               	movf	_motorstarttime^(0+128),w
  1878     0397  02D2               	subwf	(??_main+4)^(0+128),f
  1879     0398  0829               	movf	(_motorstarttime+1)^(0+128),w
  1880     0399  1C03               	skipc
  1881     039A  0F29               	incfsz	(_motorstarttime+1)^(0+128),w
  1882     039B  2B9D               	goto	u2611
  1883     039C  2B9E               	goto	u2612
  1884     039D                     u2611:
  1885     039D  02D3               	subwf	((??_main+4)^(0+128)+1),f
  1886     039E                     u2612:
  1887     039E  082A               	movf	(_motorstarttime+2)^(0+128),w
  1888     039F  1C03               	skipc
  1889     03A0  0F2A               	incfsz	(_motorstarttime+2)^(0+128),w
  1890     03A1  2BA3               	goto	u2613
  1891     03A2  2BA4               	goto	u2614
  1892     03A3                     u2613:
  1893     03A3  02D4               	subwf	((??_main+4)^(0+128)+2),f
  1894     03A4                     u2614:
  1895     03A4  082B               	movf	(_motorstarttime+3)^(0+128),w
  1896     03A5  1C03               	skipc
  1897     03A6  0F2B               	incfsz	(_motorstarttime+3)^(0+128),w
  1898     03A7  2BA9               	goto	u2615
  1899     03A8  2BAA               	goto	u2616
  1900     03A9                     u2615:
  1901     03A9  02D5               	subwf	((??_main+4)^(0+128)+3),f
  1902     03AA                     u2616:
  1903     03AA  0851               	movf	(??_main+3)^(0+128),w
  1904     03AB  0255               	subwf	(??_main+7)^(0+128),w
  1905     03AC  1D03               	skipz
  1906     03AD  2BB8               	goto	u2625
  1907     03AE  0850               	movf	(??_main+2)^(0+128),w
  1908     03AF  0254               	subwf	(??_main+6)^(0+128),w
  1909     03B0  1D03               	skipz
  1910     03B1  2BB8               	goto	u2625
  1911     03B2  084F               	movf	(??_main+1)^(0+128),w
  1912     03B3  0253               	subwf	(??_main+5)^(0+128),w
  1913     03B4  1D03               	skipz
  1914     03B5  2BB8               	goto	u2625
  1915     03B6  084E               	movf	??_main^(0+128),w
  1916     03B7  0252               	subwf	(??_main+4)^(0+128),w
  1917     03B8                     u2625:
  1918     03B8  1C03               	skipc
  1919     03B9  2BBB               	goto	u2621
  1920     03BA  2BBC               	goto	u2620
  1921     03BB                     u2621:
  1922     03BB  2BC0               	goto	l1912
  1923     03BC                     u2620:
  1924     03BC                     l1910:
  1925                           
  1926                           ;main.c: 257:           timeouterror = 1;
  1927     03BC  3001               	movlw	1
  1928     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1929     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1930     03BF  00B8               	movwf	_timeouterror
  1931     03C0                     l1912:
  1932                           
  1933                           ;main.c: 259:         if (!flowactive) {
  1934     03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1935     03C1  0834               	movf	_flowactive,w
  1936     03C2  1D03               	btfss	3,2
  1937     03C3  2BC5               	goto	u2631
  1938     03C4  2BC6               	goto	u2630
  1939     03C5                     u2631:
  1940     03C5  2C3A               	goto	l1926
  1941     03C6                     u2630:
  1942     03C6                     l1914:
  1943                           
  1944                           ;main.c: 260:           if (seconds_counter % 2 == 0) {
  1945     03C6  182C               	btfsc	_seconds_counter,0	;volatile
  1946     03C7  2BC9               	goto	u2641
  1947     03C8  2BCA               	goto	u2640
  1948     03C9                     u2641:
  1949     03C9  2BCC               	goto	l211
  1950     03CA                     u2640:
  1951     03CA                     l1916:
  1952                           
  1953                           ;main.c: 262:             PORTAbits.RA2 = 1;
  1954     03CA  1505               	bsf	5,2	;volatile
  1955                           
  1956                           ;main.c: 263:           } else {
  1957     03CB  2BCD               	goto	l1918
  1958     03CC                     l211:
  1959                           
  1960                           ;main.c: 265:             PORTAbits.RA2 = 0;
  1961     03CC  1105               	bcf	5,2	;volatile
  1962     03CD                     l1918:
  1963                           
  1964                           ;main.c: 267:           if (lastdryruncheck == 0) {
  1965     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  1966     03CE  1303               	bcf	3,6	;RP1=0, select bank1
  1967     03CF  082F               	movf	(_lastdryruncheck+3)^(0+128),w
  1968     03D0  042E               	iorwf	(_lastdryruncheck+2)^(0+128),w
  1969     03D1  042D               	iorwf	(_lastdryruncheck+1)^(0+128),w
  1970     03D2  042C               	iorwf	_lastdryruncheck^(0+128),w
  1971     03D3  1D03               	skipz
  1972     03D4  2BD6               	goto	u2651
  1973     03D5  2BD7               	goto	u2650
  1974     03D6                     u2651:
  1975     03D6  2BF0               	goto	l1922
  1976     03D7                     u2650:
  1977     03D7                     l1920:
  1978                           
  1979                           ;main.c: 268:             lastdryruncheck = millis;
  1980     03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1981     03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1982     03D9  082B               	movf	_millis+3,w	;volatile
  1983     03DA  1683               	bsf	3,5	;RP0=1, select bank1
  1984     03DB  1303               	bcf	3,6	;RP1=0, select bank1
  1985     03DC  00AF               	movwf	(_lastdryruncheck+3)^(0+128)
  1986     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1987     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1988     03DF  082A               	movf	_millis+2,w	;volatile
  1989     03E0  1683               	bsf	3,5	;RP0=1, select bank1
  1990     03E1  1303               	bcf	3,6	;RP1=0, select bank1
  1991     03E2  00AE               	movwf	(_lastdryruncheck+2)^(0+128)
  1992     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1993     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1994     03E5  0829               	movf	_millis+1,w	;volatile
  1995     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1996     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1997     03E8  00AD               	movwf	(_lastdryruncheck+1)^(0+128)
  1998     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1999     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2000     03EB  0828               	movf	_millis,w	;volatile
  2001     03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2002     03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2003     03EE  00AC               	movwf	_lastdryruncheck^(0+128)
  2004                           
  2005                           ;main.c: 269:           } else if (millis - lastdryruncheck >= dryruntime) {
  2006     03EF  2C51               	goto	l1936
  2007     03F0                     l1922:
  2008     03F0  0838               	movf	_dryruntime^(0+128),w
  2009     03F1  00CE               	movwf	??_main^(0+128)
  2010     03F2  0839               	movf	(_dryruntime+1)^(0+128),w
  2011     03F3  00CF               	movwf	(??_main^(0+128)+1)
  2012     03F4  01D0               	clrf	(??_main^(0+128)+2)
  2013     03F5  01D1               	clrf	(??_main^(0+128)+3)
  2014     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2015     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2016     03F8  0828               	movf	_millis,w	;volatile
  2017     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2018     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2019     03FB  00D2               	movwf	(??_main+4)^(0+128)
  2020     03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2021     03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2022     03FE  0829               	movf	_millis+1,w	;volatile
  2023     03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2024     0400  1303               	bcf	3,6	;RP1=0, select bank1
  2025     0401  00D3               	movwf	((??_main+4)^(0+128)+1)
  2026     0402  1283               	bcf	3,5	;RP0=0, select bank0
  2027     0403  1303               	bcf	3,6	;RP1=0, select bank0
  2028     0404  082A               	movf	_millis+2,w	;volatile
  2029     0405  1683               	bsf	3,5	;RP0=1, select bank1
  2030     0406  1303               	bcf	3,6	;RP1=0, select bank1
  2031     0407  00D4               	movwf	((??_main+4)^(0+128)+2)
  2032     0408  1283               	bcf	3,5	;RP0=0, select bank0
  2033     0409  1303               	bcf	3,6	;RP1=0, select bank0
  2034     040A  082B               	movf	_millis+3,w	;volatile
  2035     040B  1683               	bsf	3,5	;RP0=1, select bank1
  2036     040C  1303               	bcf	3,6	;RP1=0, select bank1
  2037     040D  00D5               	movwf	((??_main+4)^(0+128)+3)
  2038     040E  082C               	movf	_lastdryruncheck^(0+128),w
  2039     040F  02D2               	subwf	(??_main+4)^(0+128),f
  2040     0410  082D               	movf	(_lastdryruncheck+1)^(0+128),w
  2041     0411  1C03               	skipc
  2042     0412  0F2D               	incfsz	(_lastdryruncheck+1)^(0+128),w
  2043     0413  2C15               	goto	u2661
  2044     0414  2C16               	goto	u2662
  2045     0415                     u2661:
  2046     0415  02D3               	subwf	((??_main+4)^(0+128)+1),f
  2047     0416                     u2662:
  2048     0416  082E               	movf	(_lastdryruncheck+2)^(0+128),w
  2049     0417  1C03               	skipc
  2050     0418  0F2E               	incfsz	(_lastdryruncheck+2)^(0+128),w
  2051     0419  2C1B               	goto	u2663
  2052     041A  2C1C               	goto	u2664
  2053     041B                     u2663:
  2054     041B  02D4               	subwf	((??_main+4)^(0+128)+2),f
  2055     041C                     u2664:
  2056     041C  082F               	movf	(_lastdryruncheck+3)^(0+128),w
  2057     041D  1C03               	skipc
  2058     041E  0F2F               	incfsz	(_lastdryruncheck+3)^(0+128),w
  2059     041F  2C21               	goto	u2665
  2060     0420  2C22               	goto	u2666
  2061     0421                     u2665:
  2062     0421  02D5               	subwf	((??_main+4)^(0+128)+3),f
  2063     0422                     u2666:
  2064     0422  0851               	movf	(??_main+3)^(0+128),w
  2065     0423  0255               	subwf	(??_main+7)^(0+128),w
  2066     0424  1D03               	skipz
  2067     0425  2C30               	goto	u2675
  2068     0426  0850               	movf	(??_main+2)^(0+128),w
  2069     0427  0254               	subwf	(??_main+6)^(0+128),w
  2070     0428  1D03               	skipz
  2071     0429  2C30               	goto	u2675
  2072     042A  084F               	movf	(??_main+1)^(0+128),w
  2073     042B  0253               	subwf	(??_main+5)^(0+128),w
  2074     042C  1D03               	skipz
  2075     042D  2C30               	goto	u2675
  2076     042E  084E               	movf	??_main^(0+128),w
  2077     042F  0252               	subwf	(??_main+4)^(0+128),w
  2078     0430                     u2675:
  2079     0430  1C03               	skipc
  2080     0431  2C33               	goto	u2671
  2081     0432  2C34               	goto	u2670
  2082     0433                     u2671:
  2083     0433  2C48               	goto	l208
  2084     0434                     u2670:
  2085     0434                     l1924:
  2086                           
  2087                           ;main.c: 270:             dryrunerror = 1;
  2088     0434  3001               	movlw	1
  2089     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2090     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2091     0437  00B9               	movwf	_dryrunerror
  2092                           
  2093                           ;main.c: 271:             PORTAbits.RA2 = 1;
  2094     0438  1505               	bsf	5,2	;volatile
  2095     0439  2C51               	goto	l1936
  2096     043A                     l1926:
  2097                           
  2098                           ;main.c: 274:           lastdryruncheck = 0;
  2099     043A  3000               	movlw	0
  2100     043B  1683               	bsf	3,5	;RP0=1, select bank1
  2101     043C  1303               	bcf	3,6	;RP1=0, select bank1
  2102     043D  00AF               	movwf	(_lastdryruncheck+3)^(0+128)
  2103     043E  3000               	movlw	0
  2104     043F  00AE               	movwf	(_lastdryruncheck+2)^(0+128)
  2105     0440  3000               	movlw	0
  2106     0441  00AD               	movwf	(_lastdryruncheck+1)^(0+128)
  2107     0442  3000               	movlw	0
  2108     0443  00AC               	movwf	_lastdryruncheck^(0+128)
  2109     0444                     l1928:
  2110                           
  2111                           ;main.c: 275:           PORTAbits.RA2 = 0;
  2112     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2113     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2114     0446  1105               	bcf	5,2	;volatile
  2115     0447  2C51               	goto	l1936
  2116     0448                     l208:	
  2117                           ;main.c: 283:       }
  2118                           
  2119                           
  2120                           ;main.c: 284:     } else {
  2121     0448  2C51               	goto	l1936
  2122     0449                     l1930:
  2123                           
  2124                           ;main.c: 285:       if (motorrunning) {
  2125     0449  0837               	movf	_motorrunning,w
  2126     044A  1903               	btfsc	3,2
  2127     044B  2C4D               	goto	u2681
  2128     044C  2C4E               	goto	u2680
  2129     044D                     u2681:
  2130     044D  2C51               	goto	l1936
  2131     044E                     u2680:
  2132     044E                     l1932:
  2133                           
  2134                           ;main.c: 286:         motorrunning = 0;
  2135     044E  01B7               	clrf	_motorrunning
  2136                           
  2137                           ;main.c: 287:         mannualon = 0;
  2138     044F  01BB               	clrf	_mannualon
  2139     0450                     l1934:
  2140                           
  2141                           ;main.c: 288:         PORTCbits.RC3 = 0;
  2142     0450  1187               	bcf	7,3	;volatile
  2143     0451                     l1936:
  2144                           
  2145                           ;main.c: 291:     if (timeouterror) {
  2146     0451  1283               	bcf	3,5	;RP0=0, select bank0
  2147     0452  0838               	movf	_timeouterror,w
  2148     0453  1903               	btfsc	3,2
  2149     0454  2C56               	goto	u2691
  2150     0455  2C57               	goto	u2690
  2151     0456                     u2691:
  2152     0456  2C58               	goto	l1940
  2153     0457                     u2690:
  2154     0457                     l1938:
  2155                           
  2156                           ;main.c: 292:       motorrunning = 0;
  2157     0457  01B7               	clrf	_motorrunning
  2158     0458                     l1940:
  2159                           
  2160                           ;main.c: 294:     if (dryrunerror) {
  2161     0458  0839               	movf	_dryrunerror,w
  2162     0459  1903               	btfsc	3,2
  2163     045A  2C5C               	goto	u2701
  2164     045B  2C5D               	goto	u2700
  2165     045C                     u2701:
  2166     045C  2C5E               	goto	l1944
  2167     045D                     u2700:
  2168     045D                     l1942:
  2169                           
  2170                           ;main.c: 295:       motorrunning = 0;
  2171     045D  01B7               	clrf	_motorrunning
  2172     045E                     l1944:
  2173                           
  2174                           ;main.c: 297:     if (voltageerror) {
  2175     045E  083A               	movf	_voltageerror,w
  2176     045F  1903               	btfsc	3,2
  2177     0460  2C62               	goto	u2711
  2178     0461  2C63               	goto	u2710
  2179     0462                     u2711:
  2180     0462  2CD2               	goto	l1958
  2181     0463                     u2710:
  2182     0463                     l1946:
  2183                           
  2184                           ;main.c: 298:       if (lastvoltageerror == 0) {
  2185     0463  0827               	movf	_lastvoltageerror+3,w
  2186     0464  0426               	iorwf	_lastvoltageerror+2,w
  2187     0465  0425               	iorwf	_lastvoltageerror+1,w
  2188     0466  0424               	iorwf	_lastvoltageerror,w
  2189     0467  1D03               	skipz
  2190     0468  2C6A               	goto	u2721
  2191     0469  2C6B               	goto	u2720
  2192     046A                     u2721:
  2193     046A  2C74               	goto	l1950
  2194     046B                     u2720:
  2195     046B                     l1948:
  2196                           
  2197                           ;main.c: 299:         lastvoltageerror = seconds_counter;
  2198     046B  082F               	movf	_seconds_counter+3,w	;volatile
  2199     046C  00A7               	movwf	_lastvoltageerror+3
  2200     046D  082E               	movf	_seconds_counter+2,w	;volatile
  2201     046E  00A6               	movwf	_lastvoltageerror+2
  2202     046F  082D               	movf	_seconds_counter+1,w	;volatile
  2203     0470  00A5               	movwf	_lastvoltageerror+1
  2204     0471  082C               	movf	_seconds_counter,w	;volatile
  2205     0472  00A4               	movwf	_lastvoltageerror
  2206                           
  2207                           ;main.c: 300:       } else if (seconds_counter - lastvoltageerror >= maxvoltageerrortime
      +                          ) {
  2208     0473  2CCE               	goto	l1956
  2209     0474                     l1950:
  2210     0474  082C               	movf	_seconds_counter,w	;volatile
  2211     0475  1683               	bsf	3,5	;RP0=1, select bank1
  2212     0476  1303               	bcf	3,6	;RP1=0, select bank1
  2213     0477  00CE               	movwf	??_main^(0+128)
  2214     0478  1283               	bcf	3,5	;RP0=0, select bank0
  2215     0479  1303               	bcf	3,6	;RP1=0, select bank0
  2216     047A  082D               	movf	_seconds_counter+1,w	;volatile
  2217     047B  1683               	bsf	3,5	;RP0=1, select bank1
  2218     047C  1303               	bcf	3,6	;RP1=0, select bank1
  2219     047D  00CF               	movwf	(??_main^(0+128)+1)
  2220     047E  1283               	bcf	3,5	;RP0=0, select bank0
  2221     047F  1303               	bcf	3,6	;RP1=0, select bank0
  2222     0480  082E               	movf	_seconds_counter+2,w	;volatile
  2223     0481  1683               	bsf	3,5	;RP0=1, select bank1
  2224     0482  1303               	bcf	3,6	;RP1=0, select bank1
  2225     0483  00D0               	movwf	(??_main^(0+128)+2)
  2226     0484  1283               	bcf	3,5	;RP0=0, select bank0
  2227     0485  1303               	bcf	3,6	;RP1=0, select bank0
  2228     0486  082F               	movf	_seconds_counter+3,w	;volatile
  2229     0487  1683               	bsf	3,5	;RP0=1, select bank1
  2230     0488  1303               	bcf	3,6	;RP1=0, select bank1
  2231     0489  00D1               	movwf	(??_main^(0+128)+3)
  2232     048A  1283               	bcf	3,5	;RP0=0, select bank0
  2233     048B  1303               	bcf	3,6	;RP1=0, select bank0
  2234     048C  0824               	movf	_lastvoltageerror,w
  2235     048D  1683               	bsf	3,5	;RP0=1, select bank1
  2236     048E  1303               	bcf	3,6	;RP1=0, select bank1
  2237     048F  02CE               	subwf	??_main^(0+128),f
  2238     0490  1283               	bcf	3,5	;RP0=0, select bank0
  2239     0491  1303               	bcf	3,6	;RP1=0, select bank0
  2240     0492  0825               	movf	_lastvoltageerror+1,w
  2241     0493  1C03               	skipc
  2242     0494  0F25               	incfsz	_lastvoltageerror+1,w
  2243     0495  2C97               	goto	u2731
  2244     0496  2C9A               	goto	u2732
  2245     0497                     u2731:
  2246     0497  1683               	bsf	3,5	;RP0=1, select bank1
  2247     0498  1303               	bcf	3,6	;RP1=0, select bank1
  2248     0499  02CF               	subwf	(??_main^(0+128)+1),f
  2249     049A                     u2732:
  2250     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2251     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2252     049C  0826               	movf	_lastvoltageerror+2,w
  2253     049D  1C03               	skipc
  2254     049E  0F26               	incfsz	_lastvoltageerror+2,w
  2255     049F  2CA1               	goto	u2733
  2256     04A0  2CA4               	goto	u2734
  2257     04A1                     u2733:
  2258     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2259     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2260     04A3  02D0               	subwf	(??_main^(0+128)+2),f
  2261     04A4                     u2734:
  2262     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2263     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2264     04A6  0827               	movf	_lastvoltageerror+3,w
  2265     04A7  1C03               	skipc
  2266     04A8  0F27               	incfsz	_lastvoltageerror+3,w
  2267     04A9  2CAB               	goto	u2735
  2268     04AA  2CAE               	goto	u2736
  2269     04AB                     u2735:
  2270     04AB  1683               	bsf	3,5	;RP0=1, select bank1
  2271     04AC  1303               	bcf	3,6	;RP1=0, select bank1
  2272     04AD  02D1               	subwf	(??_main^(0+128)+3),f
  2273     04AE                     u2736:
  2274     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2275     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2276     04B0  1683               	bsf	3,5	;RP0=1, select bank1
  2277     04B1  1303               	bcf	3,6	;RP1=0, select bank1
  2278     04B2  0851               	movf	(??_main^(0+128)+3),w
  2279     04B3  1D03               	btfss	3,2
  2280     04B4  2CC3               	goto	u2740
  2281     04B5  0850               	movf	(??_main^(0+128)+2),w
  2282     04B6  1D03               	btfss	3,2
  2283     04B7  2CC3               	goto	u2740
  2284     04B8  084F               	movf	(??_main^(0+128)+1),w
  2285     04B9  1D03               	btfss	3,2
  2286     04BA  2CC3               	goto	u2740
  2287     04BB  300A               	movlw	10
  2288     04BC  024E               	subwf	??_main^(0+128),w
  2289     04BD  1D03               	skipz
  2290     04BE  2CBF               	goto	u2743
  2291     04BF                     u2743:
  2292     04BF  1C03               	btfss	3,0
  2293     04C0  2CC2               	goto	u2741
  2294     04C1  2CC3               	goto	u2740
  2295     04C2                     u2741:
  2296     04C2  2CCE               	goto	l1956
  2297     04C3                     u2740:
  2298     04C3                     l1952:
  2299                           
  2300                           ;main.c: 301:         voltageerror = 0;
  2301     04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2302     04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2303     04C5  01BA               	clrf	_voltageerror
  2304     04C6                     l1954:
  2305                           
  2306                           ;main.c: 302:         lastvoltageerror = 0;
  2307     04C6  3000               	movlw	0
  2308     04C7  00A7               	movwf	_lastvoltageerror+3
  2309     04C8  3000               	movlw	0
  2310     04C9  00A6               	movwf	_lastvoltageerror+2
  2311     04CA  3000               	movlw	0
  2312     04CB  00A5               	movwf	_lastvoltageerror+1
  2313     04CC  3000               	movlw	0
  2314     04CD  00A4               	movwf	_lastvoltageerror
  2315     04CE                     l1956:
  2316                           
  2317                           ;main.c: 305:       motorrunning = 0;
  2318     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2319     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2320     04D0  01B7               	clrf	_motorrunning
  2321                           
  2322                           ;main.c: 306:     }else if (lastvoltageerror !=0 && (seconds_counter - lastvoltageerror 
      +                          >= maxvoltageerrortime)){
  2323     04D1  2D33               	goto	l1964
  2324     04D2                     l1958:
  2325     04D2  0827               	movf	_lastvoltageerror+3,w
  2326     04D3  0426               	iorwf	_lastvoltageerror+2,w
  2327     04D4  0425               	iorwf	_lastvoltageerror+1,w
  2328     04D5  0424               	iorwf	_lastvoltageerror,w
  2329     04D6  1903               	skipnz
  2330     04D7  2CD9               	goto	u2751
  2331     04D8  2CDA               	goto	u2750
  2332     04D9                     u2751:
  2333     04D9  2D33               	goto	l1964
  2334     04DA                     u2750:
  2335     04DA                     l1960:
  2336     04DA  082C               	movf	_seconds_counter,w	;volatile
  2337     04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2338     04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2339     04DD  00CE               	movwf	??_main^(0+128)
  2340     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2341     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2342     04E0  082D               	movf	_seconds_counter+1,w	;volatile
  2343     04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2344     04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2345     04E3  00CF               	movwf	(??_main^(0+128)+1)
  2346     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2347     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2348     04E6  082E               	movf	_seconds_counter+2,w	;volatile
  2349     04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2350     04E8  1303               	bcf	3,6	;RP1=0, select bank1
  2351     04E9  00D0               	movwf	(??_main^(0+128)+2)
  2352     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2353     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2354     04EC  082F               	movf	_seconds_counter+3,w	;volatile
  2355     04ED  1683               	bsf	3,5	;RP0=1, select bank1
  2356     04EE  1303               	bcf	3,6	;RP1=0, select bank1
  2357     04EF  00D1               	movwf	(??_main^(0+128)+3)
  2358     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2359     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2360     04F2  0824               	movf	_lastvoltageerror,w
  2361     04F3  1683               	bsf	3,5	;RP0=1, select bank1
  2362     04F4  1303               	bcf	3,6	;RP1=0, select bank1
  2363     04F5  02CE               	subwf	??_main^(0+128),f
  2364     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2365     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2366     04F8  0825               	movf	_lastvoltageerror+1,w
  2367     04F9  1C03               	skipc
  2368     04FA  0F25               	incfsz	_lastvoltageerror+1,w
  2369     04FB  2CFD               	goto	u2761
  2370     04FC  2D00               	goto	u2762
  2371     04FD                     u2761:
  2372     04FD  1683               	bsf	3,5	;RP0=1, select bank1
  2373     04FE  1303               	bcf	3,6	;RP1=0, select bank1
  2374     04FF  02CF               	subwf	(??_main^(0+128)+1),f
  2375     0500                     u2762:
  2376     0500  1283               	bcf	3,5	;RP0=0, select bank0
  2377     0501  1303               	bcf	3,6	;RP1=0, select bank0
  2378     0502  0826               	movf	_lastvoltageerror+2,w
  2379     0503  1C03               	skipc
  2380     0504  0F26               	incfsz	_lastvoltageerror+2,w
  2381     0505  2D07               	goto	u2763
  2382     0506  2D0A               	goto	u2764
  2383     0507                     u2763:
  2384     0507  1683               	bsf	3,5	;RP0=1, select bank1
  2385     0508  1303               	bcf	3,6	;RP1=0, select bank1
  2386     0509  02D0               	subwf	(??_main^(0+128)+2),f
  2387     050A                     u2764:
  2388     050A  1283               	bcf	3,5	;RP0=0, select bank0
  2389     050B  1303               	bcf	3,6	;RP1=0, select bank0
  2390     050C  0827               	movf	_lastvoltageerror+3,w
  2391     050D  1C03               	skipc
  2392     050E  0F27               	incfsz	_lastvoltageerror+3,w
  2393     050F  2D11               	goto	u2765
  2394     0510  2D14               	goto	u2766
  2395     0511                     u2765:
  2396     0511  1683               	bsf	3,5	;RP0=1, select bank1
  2397     0512  1303               	bcf	3,6	;RP1=0, select bank1
  2398     0513  02D1               	subwf	(??_main^(0+128)+3),f
  2399     0514                     u2766:
  2400     0514  1283               	bcf	3,5	;RP0=0, select bank0
  2401     0515  1303               	bcf	3,6	;RP1=0, select bank0
  2402     0516  1683               	bsf	3,5	;RP0=1, select bank1
  2403     0517  1303               	bcf	3,6	;RP1=0, select bank1
  2404     0518  0851               	movf	(??_main^(0+128)+3),w
  2405     0519  1D03               	btfss	3,2
  2406     051A  2D29               	goto	u2770
  2407     051B  0850               	movf	(??_main^(0+128)+2),w
  2408     051C  1D03               	btfss	3,2
  2409     051D  2D29               	goto	u2770
  2410     051E  084F               	movf	(??_main^(0+128)+1),w
  2411     051F  1D03               	btfss	3,2
  2412     0520  2D29               	goto	u2770
  2413     0521  300A               	movlw	10
  2414     0522  024E               	subwf	??_main^(0+128),w
  2415     0523  1D03               	skipz
  2416     0524  2D25               	goto	u2773
  2417     0525                     u2773:
  2418     0525  1C03               	btfss	3,0
  2419     0526  2D28               	goto	u2771
  2420     0527  2D29               	goto	u2770
  2421     0528                     u2771:
  2422     0528  2D33               	goto	l1964
  2423     0529                     u2770:
  2424     0529                     l1962:
  2425                           
  2426                           ;main.c: 307:       lastvoltageerror = 0;
  2427     0529  3000               	movlw	0
  2428     052A  1283               	bcf	3,5	;RP0=0, select bank0
  2429     052B  1303               	bcf	3,6	;RP1=0, select bank0
  2430     052C  00A7               	movwf	_lastvoltageerror+3
  2431     052D  3000               	movlw	0
  2432     052E  00A6               	movwf	_lastvoltageerror+2
  2433     052F  3000               	movlw	0
  2434     0530  00A5               	movwf	_lastvoltageerror+1
  2435     0531  3000               	movlw	0
  2436     0532  00A4               	movwf	_lastvoltageerror
  2437     0533                     l1964:
  2438                           
  2439                           ;main.c: 309:     if (!motorrunning) {
  2440     0533  1283               	bcf	3,5	;RP0=0, select bank0
  2441     0534  1303               	bcf	3,6	;RP1=0, select bank0
  2442     0535  0837               	movf	_motorrunning,w
  2443     0536  1D03               	btfss	3,2
  2444     0537  2D39               	goto	u2781
  2445     0538  2D3A               	goto	u2780
  2446     0539                     u2781:
  2447     0539  2D67               	goto	l227
  2448     053A                     u2780:
  2449     053A                     l1966:
  2450                           
  2451                           ;main.c: 310:       if (voltage > maxvoltagelimit || voltage < minvoltagelimit) {
  2452     053A  0840               	movf	_voltage,w
  2453     053B  1683               	bsf	3,5	;RP0=1, select bank1
  2454     053C  1303               	bcf	3,6	;RP1=0, select bank1
  2455     053D  00CE               	movwf	??_main^(0+128)
  2456     053E  01CF               	clrf	(??_main^(0+128)+1)
  2457     053F  084F               	movf	(??_main+1)^(0+128),w
  2458     0540  1283               	bcf	3,5	;RP0=0, select bank0
  2459     0541  1303               	bcf	3,6	;RP1=0, select bank0
  2460     0542  0267               	subwf	_maxvoltagelimit+1,w
  2461     0543  1D03               	skipz
  2462     0544  2D4B               	goto	u2795
  2463     0545  1683               	bsf	3,5	;RP0=1, select bank1
  2464     0546  1303               	bcf	3,6	;RP1=0, select bank1
  2465     0547  084E               	movf	??_main^(0+128),w
  2466     0548  1283               	bcf	3,5	;RP0=0, select bank0
  2467     0549  1303               	bcf	3,6	;RP1=0, select bank0
  2468     054A  0266               	subwf	_maxvoltagelimit,w
  2469     054B                     u2795:
  2470     054B  1C03               	skipc
  2471     054C  2D4E               	goto	u2791
  2472     054D  2D4F               	goto	u2790
  2473     054E                     u2791:
  2474     054E  2D60               	goto	l230
  2475     054F                     u2790:
  2476     054F                     l1968:
  2477     054F  0840               	movf	_voltage,w
  2478     0550  1683               	bsf	3,5	;RP0=1, select bank1
  2479     0551  1303               	bcf	3,6	;RP1=0, select bank1
  2480     0552  00CE               	movwf	??_main^(0+128)
  2481     0553  1283               	bcf	3,5	;RP0=0, select bank0
  2482     0554  1303               	bcf	3,6	;RP1=0, select bank0
  2483     0555  0869               	movf	_minvoltagelimit+1,w
  2484     0556  1D03               	skipz
  2485     0557  2D5C               	goto	u2805
  2486     0558  0868               	movf	_minvoltagelimit,w
  2487     0559  1683               	bsf	3,5	;RP0=1, select bank1
  2488     055A  1303               	bcf	3,6	;RP1=0, select bank1
  2489     055B  024E               	subwf	??_main^(0+128),w
  2490     055C                     u2805:
  2491     055C  1803               	skipnc
  2492     055D  2D5F               	goto	u2801
  2493     055E  2D60               	goto	u2800
  2494     055F                     u2801:
  2495     055F  2D63               	goto	l228
  2496     0560                     u2800:
  2497     0560                     l230:
  2498                           
  2499                           ;main.c: 311:           voltageerror = 1;
  2500     0560  3001               	movlw	1
  2501     0561  1283               	bcf	3,5	;RP0=0, select bank0
  2502     0562  00BA               	movwf	_voltageerror
  2503     0563                     l228:	
  2504                           ;main.c: 312:         }
  2505                           
  2506                           
  2507                           ;main.c: 313:       PORTCbits.RC3 = 0;
  2508     0563  1283               	bcf	3,5	;RP0=0, select bank0
  2509     0564  1187               	bcf	7,3	;volatile
  2510                           
  2511                           ;main.c: 314:       PORTAbits.RA1 = 0;
  2512     0565  1085               	bcf	5,1	;volatile
  2513                           
  2514                           ;main.c: 315:     } else {
  2515     0566  2DC4               	goto	l1976
  2516     0567                     l227:
  2517                           
  2518                           ;main.c: 316:       PORTAbits.RA1 = 1;
  2519     0567  1485               	bsf	5,1	;volatile
  2520                           
  2521                           ;main.c: 317:       PORTCbits.RC3 = 1;
  2522     0568  1587               	bsf	7,3	;volatile
  2523     0569                     l1970:
  2524                           
  2525                           ;main.c: 318:       if (millis - lt >= 20000) {
  2526     0569  0828               	movf	_millis,w	;volatile
  2527     056A  1683               	bsf	3,5	;RP0=1, select bank1
  2528     056B  1303               	bcf	3,6	;RP1=0, select bank1
  2529     056C  00CE               	movwf	??_main^(0+128)
  2530     056D  1283               	bcf	3,5	;RP0=0, select bank0
  2531     056E  1303               	bcf	3,6	;RP1=0, select bank0
  2532     056F  0829               	movf	_millis+1,w	;volatile
  2533     0570  1683               	bsf	3,5	;RP0=1, select bank1
  2534     0571  1303               	bcf	3,6	;RP1=0, select bank1
  2535     0572  00CF               	movwf	(??_main^(0+128)+1)
  2536     0573  1283               	bcf	3,5	;RP0=0, select bank0
  2537     0574  1303               	bcf	3,6	;RP1=0, select bank0
  2538     0575  082A               	movf	_millis+2,w	;volatile
  2539     0576  1683               	bsf	3,5	;RP0=1, select bank1
  2540     0577  1303               	bcf	3,6	;RP1=0, select bank1
  2541     0578  00D0               	movwf	(??_main^(0+128)+2)
  2542     0579  1283               	bcf	3,5	;RP0=0, select bank0
  2543     057A  1303               	bcf	3,6	;RP1=0, select bank0
  2544     057B  082B               	movf	_millis+3,w	;volatile
  2545     057C  1683               	bsf	3,5	;RP0=1, select bank1
  2546     057D  1303               	bcf	3,6	;RP1=0, select bank1
  2547     057E  00D1               	movwf	(??_main^(0+128)+3)
  2548     057F  0820               	movf	_lt^(0+128),w
  2549     0580  02CE               	subwf	??_main^(0+128),f
  2550     0581  0821               	movf	(_lt+1)^(0+128),w
  2551     0582  1C03               	skipc
  2552     0583  0F21               	incfsz	(_lt+1)^(0+128),w
  2553     0584  2D86               	goto	u2811
  2554     0585  2D87               	goto	u2812
  2555     0586                     u2811:
  2556     0586  02CF               	subwf	(??_main^(0+128)+1),f
  2557     0587                     u2812:
  2558     0587  0822               	movf	(_lt+2)^(0+128),w
  2559     0588  1C03               	skipc
  2560     0589  0F22               	incfsz	(_lt+2)^(0+128),w
  2561     058A  2D8C               	goto	u2813
  2562     058B  2D8D               	goto	u2814
  2563     058C                     u2813:
  2564     058C  02D0               	subwf	(??_main^(0+128)+2),f
  2565     058D                     u2814:
  2566     058D  0823               	movf	(_lt+3)^(0+128),w
  2567     058E  1C03               	skipc
  2568     058F  0F23               	incfsz	(_lt+3)^(0+128),w
  2569     0590  2D92               	goto	u2815
  2570     0591  2D93               	goto	u2816
  2571     0592                     u2815:
  2572     0592  02D1               	subwf	(??_main^(0+128)+3),f
  2573     0593                     u2816:
  2574     0593  0851               	movf	(??_main^(0+128)+3),w
  2575     0594  1D03               	btfss	3,2
  2576     0595  2DA5               	goto	u2820
  2577     0596  0850               	movf	(??_main^(0+128)+2),w
  2578     0597  1D03               	btfss	3,2
  2579     0598  2DA5               	goto	u2820
  2580     0599  304E               	movlw	78
  2581     059A  024F               	subwf	(??_main^(0+128)+1),w
  2582     059B  1D03               	skipz
  2583     059C  2DA1               	goto	u2823
  2584     059D  3020               	movlw	32
  2585     059E  024E               	subwf	??_main^(0+128),w
  2586     059F  1D03               	skipz
  2587     05A0  2DA1               	goto	u2823
  2588     05A1                     u2823:
  2589     05A1  1C03               	btfss	3,0
  2590     05A2  2DA4               	goto	u2821
  2591     05A3  2DA5               	goto	u2820
  2592     05A4                     u2821:
  2593     05A4  2DC4               	goto	l1976
  2594     05A5                     u2820:
  2595     05A5                     l1972:
  2596                           
  2597                           ;main.c: 319:         lt = millis;
  2598     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2599     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2600     05A7  082B               	movf	_millis+3,w	;volatile
  2601     05A8  1683               	bsf	3,5	;RP0=1, select bank1
  2602     05A9  1303               	bcf	3,6	;RP1=0, select bank1
  2603     05AA  00A3               	movwf	(_lt+3)^(0+128)
  2604     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  2605     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  2606     05AD  082A               	movf	_millis+2,w	;volatile
  2607     05AE  1683               	bsf	3,5	;RP0=1, select bank1
  2608     05AF  1303               	bcf	3,6	;RP1=0, select bank1
  2609     05B0  00A2               	movwf	(_lt+2)^(0+128)
  2610     05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2611     05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2612     05B3  0829               	movf	_millis+1,w	;volatile
  2613     05B4  1683               	bsf	3,5	;RP0=1, select bank1
  2614     05B5  1303               	bcf	3,6	;RP1=0, select bank1
  2615     05B6  00A1               	movwf	(_lt+1)^(0+128)
  2616     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  2617     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  2618     05B9  0828               	movf	_millis,w	;volatile
  2619     05BA  1683               	bsf	3,5	;RP0=1, select bank1
  2620     05BB  1303               	bcf	3,6	;RP1=0, select bank1
  2621     05BC  00A0               	movwf	_lt^(0+128)
  2622     05BD                     l1974:
  2623                           
  2624                           ;main.c: 321:         trigger_buzzer(200);
  2625     05BD  30C8               	movlw	200
  2626     05BE  00F3               	movwf	trigger_buzzer@duration_seconds
  2627     05BF  3000               	movlw	0
  2628     05C0  00F4               	movwf	trigger_buzzer@duration_seconds+1
  2629     05C1  158A  264D  118A   	fcall	_trigger_buzzer
  2630     05C4                     l1976:
  2631                           
  2632                           ;main.c: 326:     if ((millis - last_millis) >= 1000) {
  2633     05C4  1283               	bcf	3,5	;RP0=0, select bank0
  2634     05C5  1303               	bcf	3,6	;RP1=0, select bank0
  2635     05C6  0828               	movf	_millis,w	;volatile
  2636     05C7  1683               	bsf	3,5	;RP0=1, select bank1
  2637     05C8  1303               	bcf	3,6	;RP1=0, select bank1
  2638     05C9  00CE               	movwf	??_main^(0+128)
  2639     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2640     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2641     05CC  0829               	movf	_millis+1,w	;volatile
  2642     05CD  1683               	bsf	3,5	;RP0=1, select bank1
  2643     05CE  1303               	bcf	3,6	;RP1=0, select bank1
  2644     05CF  00CF               	movwf	(??_main^(0+128)+1)
  2645     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2646     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2647     05D2  082A               	movf	_millis+2,w	;volatile
  2648     05D3  1683               	bsf	3,5	;RP0=1, select bank1
  2649     05D4  1303               	bcf	3,6	;RP1=0, select bank1
  2650     05D5  00D0               	movwf	(??_main^(0+128)+2)
  2651     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2652     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2653     05D8  082B               	movf	_millis+3,w	;volatile
  2654     05D9  1683               	bsf	3,5	;RP0=1, select bank1
  2655     05DA  1303               	bcf	3,6	;RP1=0, select bank1
  2656     05DB  00D1               	movwf	(??_main^(0+128)+3)
  2657     05DC  0830               	movf	_last_millis^(0+128),w
  2658     05DD  02CE               	subwf	??_main^(0+128),f
  2659     05DE  0831               	movf	(_last_millis+1)^(0+128),w
  2660     05DF  1C03               	skipc
  2661     05E0  0F31               	incfsz	(_last_millis+1)^(0+128),w
  2662     05E1  2DE3               	goto	u2831
  2663     05E2  2DE4               	goto	u2832
  2664     05E3                     u2831:
  2665     05E3  02CF               	subwf	(??_main^(0+128)+1),f
  2666     05E4                     u2832:
  2667     05E4  0832               	movf	(_last_millis+2)^(0+128),w
  2668     05E5  1C03               	skipc
  2669     05E6  0F32               	incfsz	(_last_millis+2)^(0+128),w
  2670     05E7  2DE9               	goto	u2833
  2671     05E8  2DEA               	goto	u2834
  2672     05E9                     u2833:
  2673     05E9  02D0               	subwf	(??_main^(0+128)+2),f
  2674     05EA                     u2834:
  2675     05EA  0833               	movf	(_last_millis+3)^(0+128),w
  2676     05EB  1C03               	skipc
  2677     05EC  0F33               	incfsz	(_last_millis+3)^(0+128),w
  2678     05ED  2DEF               	goto	u2835
  2679     05EE  2DF0               	goto	u2836
  2680     05EF                     u2835:
  2681     05EF  02D1               	subwf	(??_main^(0+128)+3),f
  2682     05F0                     u2836:
  2683     05F0  0851               	movf	(??_main^(0+128)+3),w
  2684     05F1  1D03               	btfss	3,2
  2685     05F2  2E02               	goto	u2840
  2686     05F3  0850               	movf	(??_main^(0+128)+2),w
  2687     05F4  1D03               	btfss	3,2
  2688     05F5  2E02               	goto	u2840
  2689     05F6  3003               	movlw	3
  2690     05F7  024F               	subwf	(??_main^(0+128)+1),w
  2691     05F8  1D03               	skipz
  2692     05F9  2DFE               	goto	u2843
  2693     05FA  30E8               	movlw	232
  2694     05FB  024E               	subwf	??_main^(0+128),w
  2695     05FC  1D03               	skipz
  2696     05FD  2DFE               	goto	u2843
  2697     05FE                     u2843:
  2698     05FE  1C03               	btfss	3,0
  2699     05FF  2E01               	goto	u2841
  2700     0600  2E02               	goto	u2840
  2701     0601                     u2841:
  2702     0601  28C8               	goto	l1802
  2703     0602                     u2840:
  2704     0602                     l1978:
  2705                           
  2706                           ;main.c: 327:         seconds_counter ++;
  2707     0602  3001               	movlw	1
  2708     0603  1283               	bcf	3,5	;RP0=0, select bank0
  2709     0604  1303               	bcf	3,6	;RP1=0, select bank0
  2710     0605  07AC               	addwf	_seconds_counter,f	;volatile
  2711     0606  3000               	movlw	0
  2712     0607  1803               	skipnc
  2713     0608  3001               	movlw	1
  2714     0609  07AD               	addwf	_seconds_counter+1,f	;volatile
  2715     060A  3000               	movlw	0
  2716     060B  1803               	skipnc
  2717     060C  3001               	movlw	1
  2718     060D  07AE               	addwf	_seconds_counter+2,f	;volatile
  2719     060E  3000               	movlw	0
  2720     060F  1803               	skipnc
  2721     0610  3001               	movlw	1
  2722     0611  07AF               	addwf	_seconds_counter+3,f	;volatile
  2723                           
  2724                           ;main.c: 328:         last_millis = millis;
  2725     0612  082B               	movf	_millis+3,w	;volatile
  2726     0613  1683               	bsf	3,5	;RP0=1, select bank1
  2727     0614  1303               	bcf	3,6	;RP1=0, select bank1
  2728     0615  00B3               	movwf	(_last_millis+3)^(0+128)
  2729     0616  1283               	bcf	3,5	;RP0=0, select bank0
  2730     0617  1303               	bcf	3,6	;RP1=0, select bank0
  2731     0618  082A               	movf	_millis+2,w	;volatile
  2732     0619  1683               	bsf	3,5	;RP0=1, select bank1
  2733     061A  1303               	bcf	3,6	;RP1=0, select bank1
  2734     061B  00B2               	movwf	(_last_millis+2)^(0+128)
  2735     061C  1283               	bcf	3,5	;RP0=0, select bank0
  2736     061D  1303               	bcf	3,6	;RP1=0, select bank0
  2737     061E  0829               	movf	_millis+1,w	;volatile
  2738     061F  1683               	bsf	3,5	;RP0=1, select bank1
  2739     0620  1303               	bcf	3,6	;RP1=0, select bank1
  2740     0621  00B1               	movwf	(_last_millis+1)^(0+128)
  2741     0622  1283               	bcf	3,5	;RP0=0, select bank0
  2742     0623  1303               	bcf	3,6	;RP1=0, select bank0
  2743     0624  0828               	movf	_millis,w	;volatile
  2744     0625  1683               	bsf	3,5	;RP0=1, select bank1
  2745     0626  1303               	bcf	3,6	;RP1=0, select bank1
  2746     0627  00B0               	movwf	_last_millis^(0+128)
  2747     0628  28C8               	goto	l1802
  2748     0629  118A  280B         	ljmp	start
  2749     062B                     __end_of_main:
  2750                           
  2751                           	psect	text1
  2752     0E4D                     __ptext1:	
  2753 ;; *************** function _trigger_buzzer *****************
  2754 ;; Defined at:
  2755 ;;		line 521 in file "main.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  duration_sec    2    2[COMMON] unsigned int 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;		None
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2769 ;;      Params:         2       0       0       0
  2770 ;;      Locals:         0       0       0       0
  2771 ;;      Temps:          0       0       0       0
  2772 ;;      Totals:         2       0       0       0
  2773 ;;Total ram usage:        2 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 1
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_main
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783     0E4D                     _trigger_buzzer:	
  2784                           ;psect for function _trigger_buzzer
  2785                           
  2786     0E4D                     l1372:	
  2787                           ;incstack = 0
  2788                           ; Regs used in _trigger_buzzer: [wreg+status,2+status,0]
  2789                           
  2790                           
  2791                           ;main.c: 522:   if (!buzzer_active) {
  2792     0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  2793     0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  2794     0E4F  0832               	movf	_buzzer_active,w
  2795     0E50  1D03               	btfss	3,2
  2796     0E51  2E53               	goto	u1111
  2797     0E52  2E54               	goto	u1110
  2798     0E53                     u1111:
  2799     0E53  2E73               	goto	l303
  2800     0E54                     u1110:
  2801     0E54                     l1374:
  2802                           
  2803                           ;main.c: 523:     PORTCbits.RC4 = 1;
  2804     0E54  1607               	bsf	7,4	;volatile
  2805     0E55                     l1376:
  2806                           
  2807                           ;main.c: 524:     buzzer_start_time = millis;
  2808     0E55  082B               	movf	_millis+3,w	;volatile
  2809     0E56  1683               	bsf	3,5	;RP0=1, select bank1
  2810     0E57  1303               	bcf	3,6	;RP1=0, select bank1
  2811     0E58  00A7               	movwf	(_buzzer_start_time+3)^(0+128)
  2812     0E59  1283               	bcf	3,5	;RP0=0, select bank0
  2813     0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  2814     0E5B  082A               	movf	_millis+2,w	;volatile
  2815     0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  2816     0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  2817     0E5E  00A6               	movwf	(_buzzer_start_time+2)^(0+128)
  2818     0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  2819     0E60  1303               	bcf	3,6	;RP1=0, select bank0
  2820     0E61  0829               	movf	_millis+1,w	;volatile
  2821     0E62  1683               	bsf	3,5	;RP0=1, select bank1
  2822     0E63  1303               	bcf	3,6	;RP1=0, select bank1
  2823     0E64  00A5               	movwf	(_buzzer_start_time+1)^(0+128)
  2824     0E65  1283               	bcf	3,5	;RP0=0, select bank0
  2825     0E66  1303               	bcf	3,6	;RP1=0, select bank0
  2826     0E67  0828               	movf	_millis,w	;volatile
  2827     0E68  1683               	bsf	3,5	;RP0=1, select bank1
  2828     0E69  1303               	bcf	3,6	;RP1=0, select bank1
  2829     0E6A  00A4               	movwf	_buzzer_start_time^(0+128)
  2830                           
  2831                           ;main.c: 525:     buzzer_duration = duration_seconds;
  2832     0E6B  0874               	movf	trigger_buzzer@duration_seconds+1,w
  2833     0E6C  00B5               	movwf	(_buzzer_duration+1)^(0+128)
  2834     0E6D  0873               	movf	trigger_buzzer@duration_seconds,w
  2835     0E6E  00B4               	movwf	_buzzer_duration^(0+128)
  2836     0E6F                     l1378:
  2837                           
  2838                           ;main.c: 526:     buzzer_active = 1;
  2839     0E6F  3001               	movlw	1
  2840     0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2841     0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2842     0E72  00B2               	movwf	_buzzer_active
  2843     0E73                     l303:
  2844     0E73  0008               	return
  2845     0E74                     __end_of_trigger_buzzer:
  2846                           
  2847                           	psect	text2
  2848     0DB6                     __ptext2:	
  2849 ;; *************** function _startSensorReading *****************
  2850 ;; Defined at:
  2851 ;;		line 380 in file "main.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2865 ;;      Params:         0       0       0       0
  2866 ;;      Locals:         0       0       0       0
  2867 ;;      Temps:          0       0       0       0
  2868 ;;      Totals:         0       0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_main
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879     0DB6                     _startSensorReading:	
  2880                           ;psect for function _startSensorReading
  2881                           
  2882     0DB6                     l1434:	
  2883                           ;incstack = 0
  2884                           ; Regs used in _startSensorReading: [wreg+status,2+status,0]
  2885                           
  2886                           
  2887                           ;main.c: 381:   if (!sensors_reading_in_progress) {
  2888     0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  2889     0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  2890     0DB8  083C               	movf	_sensors_reading_in_progress,w	;volatile
  2891     0DB9  1D03               	btfss	3,2
  2892     0DBA  2DBC               	goto	u1211
  2893     0DBB  2DBD               	goto	u1210
  2894     0DBC                     u1211:
  2895     0DBC  2DC4               	goto	l252
  2896     0DBD                     u1210:
  2897     0DBD                     l1436:
  2898                           
  2899                           ;main.c: 382:     reading_count = 0;
  2900     0DBD  01FB               	clrf	_reading_count	;volatile
  2901                           
  2902                           ;main.c: 383:     low_sensor_high_count = 0;
  2903     0DBE  01FA               	clrf	_low_sensor_high_count	;volatile
  2904                           
  2905                           ;main.c: 384:     high_sensor_high_count = 0;
  2906     0DBF  01BF               	clrf	_high_sensor_high_count	;volatile
  2907                           
  2908                           ;main.c: 385:     flow_sensor_high_count = 0;
  2909     0DC0  01BE               	clrf	_flow_sensor_high_count	;volatile
  2910                           
  2911                           ;main.c: 386:     sensors_reading_complete = 0;
  2912     0DC1  01BD               	clrf	_sensors_reading_complete	;volatile
  2913     0DC2                     l1438:
  2914                           
  2915                           ;main.c: 387:     sensors_reading_in_progress = 1;
  2916     0DC2  3001               	movlw	1
  2917     0DC3  00BC               	movwf	_sensors_reading_in_progress	;volatile
  2918     0DC4                     l252:
  2919     0DC4  0008               	return
  2920     0DC5                     __end_of_startSensorReading:
  2921                           
  2922                           	psect	text3
  2923     0D99                     __ptext3:	
  2924 ;; *************** function _setupTimer0 *****************
  2925 ;; Defined at:
  2926 ;;		line 365 in file "main.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2940 ;;      Params:         0       0       0       0
  2941 ;;      Locals:         0       0       0       0
  2942 ;;      Temps:          0       0       0       0
  2943 ;;      Totals:         0       0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 1
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_main
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954     0D99                     _setupTimer0:	
  2955                           ;psect for function _setupTimer0
  2956                           
  2957     0D99                     l1426:	
  2958                           ;incstack = 0
  2959                           ; Regs used in _setupTimer0: [wreg+status,2+status,0]
  2960                           
  2961                           
  2962                           ;main.c: 366:   OPTION_REGbits.T0CS = 0;
  2963     0D99  1683               	bsf	3,5	;RP0=1, select bank1
  2964     0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  2965     0D9B  1281               	bcf	1,5	;volatile
  2966                           
  2967                           ;main.c: 367:   OPTION_REGbits.PSA = 0;
  2968     0D9C  1181               	bcf	1,3	;volatile
  2969     0D9D                     l1428:
  2970                           
  2971                           ;main.c: 368:   OPTION_REGbits.PS = 0b011;
  2972     0D9D  0801               	movf	1,w	;volatile
  2973     0D9E  39F8               	andlw	-8
  2974     0D9F  3803               	iorlw	3
  2975     0DA0  0081               	movwf	1	;volatile
  2976     0DA1                     l1430:
  2977                           
  2978                           ;main.c: 376:   TMR0 = 6;
  2979     0DA1  3006               	movlw	6
  2980     0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  2981     0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  2982     0DA4  0081               	movwf	1	;volatile
  2983     0DA5                     l1432:
  2984                           
  2985                           ;main.c: 377:   INTCONbits.TMR0IE = 1;
  2986     0DA5  168B               	bsf	11,5	;volatile
  2987     0DA6                     l248:
  2988     0DA6  0008               	return
  2989     0DA7                     __end_of_setupTimer0:
  2990                           
  2991                           	psect	text4
  2992     0ECA                     __ptext4:	
  2993 ;; *************** function _saveSettings *****************
  2994 ;; Defined at:
  2995 ;;		line 509 in file "main.c"
  2996 ;; Parameters:    Size  Location     Type
  2997 ;;  value8bit       1    wreg     unsigned char 
  2998 ;;  value16bit1     2    0[BANK0 ] unsigned int 
  2999 ;;  value16bit2     2    2[BANK0 ] unsigned int 
  3000 ;;  value16bit3     2    4[BANK0 ] unsigned int 
  3001 ;;  value16bit4     2    6[BANK0 ] unsigned int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  value8bit       1    7[COMMON] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3013 ;;      Params:         0       8       0       0
  3014 ;;      Locals:         1       0       0       0
  3015 ;;      Temps:          0       0       0       0
  3016 ;;      Totals:         1       8       0       0
  3017 ;;Total ram usage:        9 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 3
  3020 ;; This function calls:
  3021 ;;		_EEPROM_Write
  3022 ;;		_EEPROM_Write16
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028     0ECA                     _saveSettings:	
  3029                           ;psect for function _saveSettings
  3030                           
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _saveSettings: [wreg+status,2+status,0+pclath+cstack]
  3034                           ;saveSettings@value8bit stored from wreg
  3035     0ECA  00F8               	movwf	saveSettings@value8bit
  3036     0ECB                     l1360:
  3037                           
  3038                           ;main.c: 509: void saveSettings(unsigned char value8bit, unsigned int value16bit1,;main.
      +                          c: 510:                   unsigned int value16bit2, unsigned int value16bit3,;main.c: 51
      +                          1:                   unsigned int value16bit4) {;main.c: 513:   EEPROM_Write(0x01, value
      +                          8bit);
  3039     0ECB  0878               	movf	saveSettings@value8bit,w
  3040     0ECC  00F3               	movwf	EEPROM_Write@data
  3041     0ECD  3001               	movlw	1
  3042     0ECE  158A  25E6  158A   	fcall	_EEPROM_Write
  3043                           
  3044                           ;main.c: 514:   EEPROM_Write16(0x02, value16bit1);
  3045     0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  3046     0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  3047     0ED3  0848               	movf	saveSettings@value16bit1+1,w
  3048     0ED4  00F6               	movwf	EEPROM_Write16@data+1
  3049     0ED5  0847               	movf	saveSettings@value16bit1,w
  3050     0ED6  00F5               	movwf	EEPROM_Write16@data
  3051     0ED7  3002               	movlw	2
  3052     0ED8  158A  25A7  158A   	fcall	_EEPROM_Write16
  3053                           
  3054                           ;main.c: 515:   EEPROM_Write16(0x04, value16bit2);
  3055     0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  3056     0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  3057     0EDD  084A               	movf	saveSettings@value16bit2+1,w
  3058     0EDE  00F6               	movwf	EEPROM_Write16@data+1
  3059     0EDF  0849               	movf	saveSettings@value16bit2,w
  3060     0EE0  00F5               	movwf	EEPROM_Write16@data
  3061     0EE1  3004               	movlw	4
  3062     0EE2  158A  25A7  158A   	fcall	_EEPROM_Write16
  3063                           
  3064                           ;main.c: 516:   EEPROM_Write16(0x06, value16bit3);
  3065     0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  3066     0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  3067     0EE7  084C               	movf	saveSettings@value16bit3+1,w
  3068     0EE8  00F6               	movwf	EEPROM_Write16@data+1
  3069     0EE9  084B               	movf	saveSettings@value16bit3,w
  3070     0EEA  00F5               	movwf	EEPROM_Write16@data
  3071     0EEB  3006               	movlw	6
  3072     0EEC  158A  25A7  158A   	fcall	_EEPROM_Write16
  3073                           
  3074                           ;main.c: 517:   EEPROM_Write16(0x08, value16bit4);
  3075     0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  3076     0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  3077     0EF1  084E               	movf	saveSettings@value16bit4+1,w
  3078     0EF2  00F6               	movwf	EEPROM_Write16@data+1
  3079     0EF3  084D               	movf	saveSettings@value16bit4,w
  3080     0EF4  00F5               	movwf	EEPROM_Write16@data
  3081     0EF5  3008               	movlw	8
  3082     0EF6  158A  25A7  158A   	fcall	_EEPROM_Write16
  3083                           
  3084                           ;main.c: 518:   EEPROM_Write(0x00, 0xAA);
  3085     0EF9  30AA               	movlw	170
  3086     0EFA  00F3               	movwf	EEPROM_Write@data
  3087     0EFB  3000               	movlw	0
  3088     0EFC  158A  25E6  158A   	fcall	_EEPROM_Write
  3089     0EFF                     l299:
  3090     0EFF  0008               	return
  3091     0F00                     __end_of_saveSettings:
  3092                           
  3093                           	psect	text5
  3094     0DA7                     __ptext5:	
  3095 ;; *************** function _EEPROM_Write16 *****************
  3096 ;; Defined at:
  3097 ;;		line 483 in file "main.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  address         1    wreg     unsigned char 
  3100 ;;  data            2    4[COMMON] unsigned int 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  address         1    6[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3112 ;;      Params:         2       0       0       0
  3113 ;;      Locals:         1       0       0       0
  3114 ;;      Temps:          0       0       0       0
  3115 ;;      Totals:         3       0       0       0
  3116 ;;Total ram usage:        3 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 2
  3119 ;; This function calls:
  3120 ;;		_EEPROM_Write
  3121 ;; This function is called by:
  3122 ;;		_saveSettings
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126     0DA7                     _EEPROM_Write16:	
  3127                           ;psect for function _EEPROM_Write16
  3128                           
  3129                           
  3130                           ;incstack = 0
  3131                           ; Regs used in _EEPROM_Write16: [wreg+status,2+status,0+pclath+cstack]
  3132                           ;EEPROM_Write16@address stored from wreg
  3133     0DA7  00F7               	movwf	EEPROM_Write16@address
  3134     0DA8                     l1334:
  3135                           
  3136                           ;main.c: 484:   EEPROM_Write(address, data & 0xFF);
  3137     0DA8  0875               	movf	EEPROM_Write16@data,w
  3138     0DA9  00F3               	movwf	EEPROM_Write@data
  3139     0DAA  0877               	movf	EEPROM_Write16@address,w
  3140     0DAB  158A  25E6  158A   	fcall	_EEPROM_Write
  3141                           
  3142                           ;main.c: 485:   EEPROM_Write(address + 1, data >> 8);
  3143     0DAE  0876               	movf	EEPROM_Write16@data+1,w
  3144     0DAF  00F3               	movwf	EEPROM_Write@data
  3145     0DB0  0877               	movf	EEPROM_Write16@address,w
  3146     0DB1  3E01               	addlw	1
  3147     0DB2  158A  25E6  158A   	fcall	_EEPROM_Write
  3148     0DB5                     l289:
  3149     0DB5  0008               	return
  3150     0DB6                     __end_of_EEPROM_Write16:
  3151                           
  3152                           	psect	text6
  3153     0DE6                     __ptext6:	
  3154 ;; *************** function _EEPROM_Write *****************
  3155 ;; Defined at:
  3156 ;;		line 452 in file "main.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  address         1    wreg     unsigned char 
  3159 ;;  data            1    2[COMMON] unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  address         1    3[COMMON] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3171 ;;      Params:         1       0       0       0
  3172 ;;      Locals:         1       0       0       0
  3173 ;;      Temps:          0       0       0       0
  3174 ;;      Totals:         2       0       0       0
  3175 ;;Total ram usage:        2 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_EEPROM_Write16
  3182 ;;		_saveSettings
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186     0DE6                     _EEPROM_Write:	
  3187                           ;psect for function _EEPROM_Write
  3188                           
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in _EEPROM_Write: [wreg]
  3192                           ;EEPROM_Write@address stored from wreg
  3193     0DE6  00F4               	movwf	EEPROM_Write@address
  3194     0DE7                     l1318:
  3195     0DE7                     l274:	
  3196                           ;main.c: 454:     ;
  3197                           
  3198                           
  3199                           ;main.c: 453:   while (EECON1bits.WR)
  3200     0DE7  1683               	bsf	3,5	;RP0=1, select bank3
  3201     0DE8  1703               	bsf	3,6	;RP1=1, select bank3
  3202     0DE9  188C               	btfsc	12,1	;volsfr
  3203     0DEA  2DEC               	goto	u1071
  3204     0DEB  2DED               	goto	u1070
  3205     0DEC                     u1071:
  3206     0DEC  2DE7               	goto	l274
  3207     0DED                     u1070:
  3208     0DED                     l1320:
  3209                           
  3210                           ;main.c: 456:   EEADR = address;
  3211     0DED  0874               	movf	EEPROM_Write@address,w
  3212     0DEE  1283               	bcf	3,5	;RP0=0, select bank2
  3213     0DEF  1703               	bsf	3,6	;RP1=1, select bank2
  3214     0DF0  008D               	movwf	13	;volatile
  3215                           
  3216                           ;main.c: 457:   EEDATA = data;
  3217     0DF1  0873               	movf	EEPROM_Write@data,w
  3218     0DF2  008C               	movwf	12	;volatile
  3219     0DF3                     l1322:
  3220                           
  3221                           ;main.c: 459:   EECON1bits.EEPGD = 0;
  3222     0DF3  1683               	bsf	3,5	;RP0=1, select bank3
  3223     0DF4  1703               	bsf	3,6	;RP1=1, select bank3
  3224     0DF5  138C               	bcf	12,7	;volsfr
  3225     0DF6                     l1324:
  3226                           
  3227                           ;main.c: 460:   EECON1bits.WREN = 1;
  3228     0DF6  150C               	bsf	12,2	;volsfr
  3229     0DF7                     l1326:
  3230                           
  3231                           ;main.c: 462:   INTCONbits.GIE = 0;
  3232     0DF7  138B               	bcf	11,7	;volatile
  3233     0DF8                     l1328:
  3234                           
  3235                           ;main.c: 463:   EECON2 = 0x55;
  3236     0DF8  3055               	movlw	85
  3237     0DF9  008D               	movwf	13	;volsfr
  3238     0DFA                     l1330:
  3239                           
  3240                           ;main.c: 464:   EECON2 = 0xAA;
  3241     0DFA  30AA               	movlw	170
  3242     0DFB  008D               	movwf	13	;volsfr
  3243     0DFC                     l1332:
  3244                           
  3245                           ;main.c: 465:   EECON1bits.WR = 1;
  3246     0DFC  148C               	bsf	12,1	;volsfr
  3247     0DFD                     l277:	
  3248                           ;main.c: 468:     ;
  3249                           
  3250                           
  3251                           ;main.c: 467:   while (EECON1bits.WR)
  3252     0DFD  188C               	btfsc	12,1	;volsfr
  3253     0DFE  2E00               	goto	u1081
  3254     0DFF  2E01               	goto	u1080
  3255     0E00                     u1081:
  3256     0E00  2DFD               	goto	l277
  3257     0E01                     u1080:
  3258     0E01                     l279:
  3259                           
  3260                           ;main.c: 470:   EECON1bits.WREN = 0;
  3261     0E01  110C               	bcf	12,2	;volsfr
  3262                           
  3263                           ;main.c: 471:   INTCONbits.GIE = 1;
  3264     0E02  178B               	bsf	11,7	;volatile
  3265     0E03                     l280:
  3266     0E03  0008               	return
  3267     0E04                     __end_of_EEPROM_Write:
  3268                           
  3269                           	psect	text7
  3270     0E04                     __ptext7:	
  3271 ;; *************** function _readADC *****************
  3272 ;; Defined at:
  3273 ;;		line 351 in file "main.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  channel         1    wreg     unsigned char 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  channel         1    5[COMMON] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  2    2[COMMON] unsigned int 
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3287 ;;      Params:         2       0       0       0
  3288 ;;      Locals:         1       0       0       0
  3289 ;;      Temps:          1       0       0       0
  3290 ;;      Totals:         4       0       0       0
  3291 ;;Total ram usage:        4 bytes
  3292 ;; Hardware stack levels used: 1
  3293 ;; Hardware stack levels required when called: 1
  3294 ;; This function calls:
  3295 ;;		Nothing
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301     0E04                     _readADC:	
  3302                           ;psect for function _readADC
  3303                           
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _readADC: [wreg+status,2+status,0]
  3307                           ;readADC@channel stored from wreg
  3308     0E04  00F6               	movwf	readADC@channel
  3309     0E05                     l1362:
  3310                           
  3311                           ;main.c: 353:   ADCON0 = (ADCON0 & 0b11000011) | ((uint8_t)(channel << 2));
  3312     0E05  0876               	movf	readADC@channel,w
  3313     0E06  00F5               	movwf	??_readADC
  3314     0E07  3002               	movlw	2
  3315     0E08                     u1095:
  3316     0E08  1003               	clrc
  3317     0E09  0DF5               	rlf	??_readADC,f
  3318     0E0A  3EFF               	addlw	-1
  3319     0E0B  1D03               	skipz
  3320     0E0C  2E08               	goto	u1095
  3321     0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  3322     0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  3323     0E0F  081F               	movf	31,w	;volatile
  3324     0E10  39C3               	andlw	195
  3325     0E11  0475               	iorwf	??_readADC,w
  3326     0E12  009F               	movwf	31	;volatile
  3327     0E13                     l1364:
  3328                           
  3329                           ;main.c: 354:   _delay((unsigned long)((10)*(8000000/4000000.0)));
  3330     0E13  3006               	movlw	6
  3331     0E14  00F5               	movwf	??_readADC
  3332     0E15                     u2857:
  3333     0E15  0BF5               	decfsz	??_readADC,f
  3334     0E16  2E15               	goto	u2857
  3335     0E17  0000               	nop
  3336     0E18                     l1366:
  3337                           
  3338                           ;main.c: 355:   ADCON0bits.GO = 1;
  3339     0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3340     0E19  1303               	bcf	3,6	;RP1=0, select bank0
  3341     0E1A  149F               	bsf	31,1	;volatile
  3342     0E1B                     l242:	
  3343                           ;main.c: 359:     ;
  3344                           
  3345                           
  3346                           ;main.c: 358:   while (ADCON0bits.GO)
  3347     0E1B  189F               	btfsc	31,1	;volatile
  3348     0E1C  2E1E               	goto	u1101
  3349     0E1D  2E1F               	goto	u1100
  3350     0E1E                     u1101:
  3351     0E1E  2E1B               	goto	l242
  3352     0E1F                     u1100:
  3353     0E1F                     l1368:
  3354                           
  3355                           ;main.c: 362:   return ((unsigned int)ADRESH << 8) | ADRESL;
  3356     0E1F  081E               	movf	30,w	;volatile
  3357     0E20  00F4               	movwf	?_readADC+1
  3358     0E21  1683               	bsf	3,5	;RP0=1, select bank1
  3359     0E22  1303               	bcf	3,6	;RP1=0, select bank1
  3360     0E23  081E               	movf	30,w	;volatile
  3361     0E24  00F3               	movwf	?_readADC
  3362     0E25                     l245:
  3363     0E25  0008               	return
  3364     0E26                     __end_of_readADC:
  3365                           
  3366                           	psect	text8
  3367     0DD5                     __ptext8:	
  3368 ;; *************** function _init_timer *****************
  3369 ;; Defined at:
  3370 ;;		line 439 in file "main.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		None
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3384 ;;      Params:         0       0       0       0
  3385 ;;      Locals:         0       0       0       0
  3386 ;;      Temps:          0       0       0       0
  3387 ;;      Totals:         0       0       0       0
  3388 ;;Total ram usage:        0 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 1
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398     0DD5                     _init_timer:	
  3399                           ;psect for function _init_timer
  3400                           
  3401     0DD5                     l1388:	
  3402                           ;incstack = 0
  3403                           ; Regs used in _init_timer: []
  3404                           
  3405                           
  3406                           ;main.c: 440:   T1CON = 0b00110000;
  3407     0DD5  3030               	movlw	48
  3408     0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  3409     0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  3410     0DD8  0090               	movwf	16	;volatile
  3411                           
  3412                           ;main.c: 442:   TMR1H = 255;
  3413     0DD9  30FF               	movlw	255
  3414     0DDA  008F               	movwf	15	;volatile
  3415                           
  3416                           ;main.c: 443:   TMR1L = 14;
  3417     0DDB  300E               	movlw	14
  3418     0DDC  008E               	movwf	14	;volatile
  3419                           
  3420                           ;main.c: 445:   PIE1bits.TMR1IE = 1;
  3421     0DDD  1683               	bsf	3,5	;RP0=1, select bank1
  3422     0DDE  1303               	bcf	3,6	;RP1=0, select bank1
  3423     0DDF  140C               	bsf	12,0	;volatile
  3424                           
  3425                           ;main.c: 446:   INTCONbits.PEIE = 1;
  3426     0DE0  170B               	bsf	11,6	;volatile
  3427                           
  3428                           ;main.c: 447:   INTCONbits.GIE = 1;
  3429     0DE1  178B               	bsf	11,7	;volatile
  3430                           
  3431                           ;main.c: 449:   T1CONbits.TMR1ON = 1;
  3432     0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  3433     0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  3434     0DE4  1410               	bsf	16,0	;volatile
  3435     0DE5                     l271:
  3436     0DE5  0008               	return
  3437     0DE6                     __end_of_init_timer:
  3438                           
  3439                           	psect	text9
  3440     0E74                     __ptext9:	
  3441 ;; *************** function _initSystem *****************
  3442 ;; Defined at:
  3443 ;;		line 333 in file "main.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3457 ;;      Params:         0       0       0       0
  3458 ;;      Locals:         0       0       0       0
  3459 ;;      Temps:          2       0       0       0
  3460 ;;      Totals:         2       0       0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 1
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471     0E74                     _initSystem:	
  3472                           ;psect for function _initSystem
  3473                           
  3474     0E74                     l1336:	
  3475                           ;incstack = 0
  3476                           ; Regs used in _initSystem: [wreg+status,2+status,0]
  3477                           
  3478                           
  3479                           ;main.c: 335:   OSCCONbits.IRCF = 0b111;
  3480     0E74  3070               	movlw	112
  3481     0E75  1683               	bsf	3,5	;RP0=1, select bank1
  3482     0E76  1303               	bcf	3,6	;RP1=0, select bank1
  3483     0E77  048F               	iorwf	15,f	;volatile
  3484     0E78                     l1338:
  3485                           
  3486                           ;main.c: 336:   ANSEL = 0b00011000;
  3487     0E78  3018               	movlw	24
  3488     0E79  1683               	bsf	3,5	;RP0=1, select bank3
  3489     0E7A  1703               	bsf	3,6	;RP1=1, select bank3
  3490     0E7B  0088               	movwf	8	;volatile
  3491     0E7C                     l1340:
  3492                           
  3493                           ;main.c: 337:   ANSELH = 0x00;
  3494     0E7C  0189               	clrf	9	;volatile
  3495     0E7D                     l1342:
  3496                           
  3497                           ;main.c: 338:   TRISA = 0b11101000;
  3498     0E7D  30E8               	movlw	232
  3499     0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  3500     0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  3501     0E80  0085               	movwf	5	;volatile
  3502     0E81                     l1344:
  3503                           
  3504                           ;main.c: 339:   TRISB = 0b00111000;
  3505     0E81  3038               	movlw	56
  3506     0E82  0086               	movwf	6	;volatile
  3507     0E83                     l1346:
  3508                           
  3509                           ;main.c: 340:   TRISC = 0b00000011;
  3510     0E83  3003               	movlw	3
  3511     0E84  0087               	movwf	7	;volatile
  3512     0E85                     l1348:
  3513                           
  3514                           ;main.c: 342:   ADCON0 = 0b00001101;
  3515     0E85  300D               	movlw	13
  3516     0E86  1283               	bcf	3,5	;RP0=0, select bank0
  3517     0E87  1303               	bcf	3,6	;RP1=0, select bank0
  3518     0E88  009F               	movwf	31	;volatile
  3519     0E89                     l1350:
  3520                           
  3521                           ;main.c: 343:   ADCON1 = 0b10000000;
  3522     0E89  3080               	movlw	128
  3523     0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  3524     0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  3525     0E8C  009F               	movwf	31	;volatile
  3526     0E8D                     l1352:
  3527                           
  3528                           ;main.c: 345:   _delay((unsigned long)((10)*(8000000/4000.0)));
  3529     0E8D  301A               	movlw	26
  3530     0E8E  00F4               	movwf	??_initSystem+1
  3531     0E8F  30F8               	movlw	248
  3532     0E90  00F3               	movwf	??_initSystem
  3533     0E91                     u2867:
  3534     0E91  0BF3               	decfsz	??_initSystem,f
  3535     0E92  2E91               	goto	u2867
  3536     0E93  0BF4               	decfsz	??_initSystem+1,f
  3537     0E94  2E91               	goto	u2867
  3538     0E95  0000               	nop
  3539     0E96                     l1354:
  3540                           
  3541                           ;main.c: 346:   PORTA = 0x00;
  3542     0E96  1283               	bcf	3,5	;RP0=0, select bank0
  3543     0E97  1303               	bcf	3,6	;RP1=0, select bank0
  3544     0E98  0185               	clrf	5	;volatile
  3545     0E99                     l1356:
  3546                           
  3547                           ;main.c: 347:   PORTB = 0x00;
  3548     0E99  0186               	clrf	6	;volatile
  3549     0E9A                     l1358:
  3550                           
  3551                           ;main.c: 348:   PORTC = 0x00;
  3552     0E9A  0187               	clrf	7	;volatile
  3553     0E9B                     l239:
  3554     0E9B  0008               	return
  3555     0E9C                     __end_of_initSystem:
  3556                           
  3557                           	psect	text10
  3558     0E9C                     __ptext10:	
  3559 ;; *************** function _getSensorResults *****************
  3560 ;; Defined at:
  3561 ;;		line 391 in file "main.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  low_active      1    2[COMMON] PTR _Bool 
  3564 ;;		 -> low_sensor_active(1), 
  3565 ;;  high_active     1    3[COMMON] PTR _Bool 
  3566 ;;		 -> high_sensor_active(1), 
  3567 ;;  flow_active     1    4[COMMON] PTR _Bool 
  3568 ;;		 -> flow_sensor_active(1), 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      _Bool 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3580 ;;      Params:         3       0       0       0
  3581 ;;      Locals:         0       0       0       0
  3582 ;;      Temps:          0       0       0       0
  3583 ;;      Totals:         3       0       0       0
  3584 ;;Total ram usage:        3 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594     0E9C                     _getSensorResults:	
  3595                           ;psect for function _getSensorResults
  3596                           
  3597     0E9C                     l1440:	
  3598                           ;incstack = 0
  3599                           ; Regs used in _getSensorResults: [wreg-fsr0h+status,2+status,0]
  3600                           
  3601                           
  3602                           ;main.c: 392:   if (sensors_reading_complete) {
  3603     0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  3604     0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  3605     0E9E  083D               	movf	_sensors_reading_complete,w	;volatile
  3606     0E9F  1903               	btfsc	3,2
  3607     0EA0  2EA2               	goto	u1221
  3608     0EA1  2EA3               	goto	u1220
  3609     0EA2                     u1221:
  3610     0EA2  2EC8               	goto	l1450
  3611     0EA3                     u1220:
  3612     0EA3                     l1442:
  3613                           
  3614                           ;main.c: 393:     *low_active = (low_sensor_high_count < 45);
  3615     0EA3  0873               	movf	getSensorResults@low_active,w
  3616     0EA4  0084               	movwf	4
  3617     0EA5  302D               	movlw	45
  3618     0EA6  027A               	subwf	_low_sensor_high_count,w	;volatile
  3619     0EA7  1C03               	skipc
  3620     0EA8  2EAA               	goto	u1231
  3621     0EA9  2EAC               	goto	u1230
  3622     0EAA                     u1231:
  3623     0EAA  3001               	movlw	1
  3624     0EAB  2EAD               	goto	u1240
  3625     0EAC                     u1230:
  3626     0EAC  3000               	movlw	0
  3627     0EAD                     u1240:
  3628     0EAD  1383               	bcf	3,7	;select IRP bank0
  3629     0EAE  0080               	movwf	0
  3630                           
  3631                           ;main.c: 394:     *high_active = (high_sensor_high_count < 45);
  3632     0EAF  0874               	movf	getSensorResults@high_active,w
  3633     0EB0  0084               	movwf	4
  3634     0EB1  302D               	movlw	45
  3635     0EB2  023F               	subwf	_high_sensor_high_count,w	;volatile
  3636     0EB3  1C03               	skipc
  3637     0EB4  2EB6               	goto	u1251
  3638     0EB5  2EB8               	goto	u1250
  3639     0EB6                     u1251:
  3640     0EB6  3001               	movlw	1
  3641     0EB7  2EB9               	goto	u1260
  3642     0EB8                     u1250:
  3643     0EB8  3000               	movlw	0
  3644     0EB9                     u1260:
  3645     0EB9  0080               	movwf	0
  3646                           
  3647                           ;main.c: 395:     *flow_active = (flow_sensor_high_count < 45);
  3648     0EBA  0875               	movf	getSensorResults@flow_active,w
  3649     0EBB  0084               	movwf	4
  3650     0EBC  302D               	movlw	45
  3651     0EBD  023E               	subwf	_flow_sensor_high_count,w	;volatile
  3652     0EBE  1C03               	skipc
  3653     0EBF  2EC1               	goto	u1271
  3654     0EC0  2EC3               	goto	u1270
  3655     0EC1                     u1271:
  3656     0EC1  3001               	movlw	1
  3657     0EC2  2EC4               	goto	u1280
  3658     0EC3                     u1270:
  3659     0EC3  3000               	movlw	0
  3660     0EC4                     u1280:
  3661     0EC4  0080               	movwf	0
  3662     0EC5                     l1444:
  3663                           
  3664                           ;main.c: 396:     sensors_reading_complete = 0;
  3665     0EC5  01BD               	clrf	_sensors_reading_complete	;volatile
  3666     0EC6                     l1446:
  3667                           
  3668                           ;main.c: 397:     return 1;
  3669     0EC6  3001               	movlw	1
  3670     0EC7  2EC9               	goto	l256
  3671     0EC8                     l1450:
  3672                           
  3673                           ;main.c: 399:   return 0;
  3674     0EC8  3000               	movlw	0
  3675     0EC9                     l256:
  3676     0EC9  0008               	return
  3677     0ECA                     __end_of_getSensorResults:
  3678                           
  3679                           	psect	text11
  3680     062B                     __ptext11:	
  3681 ;; *************** function _check_button_press *****************
  3682 ;; Defined at:
  3683 ;;		line 539 in file "main.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;		None
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  hold_count      2    6[COMMON] unsigned int 
  3688 ;;  long_press_t    2    4[COMMON] unsigned int 
  3689 ;;  long_press      1    8[COMMON] _Bool 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      _Bool 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3699 ;;      Params:         0       0       0       0
  3700 ;;      Locals:         5       0       0       0
  3701 ;;      Temps:          2       0       0       0
  3702 ;;      Totals:         7       0       0       0
  3703 ;;Total ram usage:        7 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713     062B                     _check_button_press:	
  3714                           ;psect for function _check_button_press
  3715                           
  3716     062B                     l1390:	
  3717                           ;incstack = 0
  3718                           ; Regs used in _check_button_press: [wreg+status,2+status,0]
  3719                           
  3720                           
  3721                           ;main.c: 540:   _Bool long_press = 0;
  3722     062B  01F9               	clrf	check_button_press@long_press
  3723     062C                     l1392:
  3724                           
  3725                           ;main.c: 543:   if (PORTCbits.RC1 == 0) {
  3726     062C  1283               	bcf	3,5	;RP0=0, select bank0
  3727     062D  1303               	bcf	3,6	;RP1=0, select bank0
  3728     062E  1887               	btfsc	7,1	;volatile
  3729     062F  2E31               	goto	u1151
  3730     0630  2E32               	goto	u1150
  3731     0631                     u1151:
  3732     0631  2E95               	goto	l1422
  3733     0632                     u1150:
  3734     0632                     l1394:
  3735                           
  3736                           ;main.c: 545:     _delay((unsigned long)((50)*(8000000/4000.0)));
  3737     0632  3082               	movlw	130
  3738     0633  00F4               	movwf	??_check_button_press+1
  3739     0634  30DD               	movlw	221
  3740     0635  00F3               	movwf	??_check_button_press
  3741     0636                     u2877:
  3742     0636  0BF3               	decfsz	??_check_button_press,f
  3743     0637  2E36               	goto	u2877
  3744     0638  0BF4               	decfsz	??_check_button_press+1,f
  3745     0639  2E36               	goto	u2877
  3746     063A  2E3B               	nop2
  3747     063B                     l1396:
  3748                           
  3749                           ;main.c: 548:     if (PORTCbits.RC1 == 0) {
  3750     063B  1283               	bcf	3,5	;RP0=0, select bank0
  3751     063C  1303               	bcf	3,6	;RP1=0, select bank0
  3752     063D  1887               	btfsc	7,1	;volatile
  3753     063E  2E40               	goto	u1161
  3754     063F  2E41               	goto	u1160
  3755     0640                     u1161:
  3756     0640  2E95               	goto	l1422
  3757     0641                     u1160:
  3758     0641                     l1398:
  3759                           
  3760                           ;main.c: 550:       unsigned int hold_count = 0;
  3761     0641  01F7               	clrf	check_button_press@hold_count
  3762     0642  01F8               	clrf	check_button_press@hold_count+1
  3763     0643                     l1400:
  3764                           
  3765                           ;main.c: 551:       unsigned int long_press_threshold = 20;
  3766     0643  3014               	movlw	20
  3767     0644  00F5               	movwf	check_button_press@long_press_threshold
  3768     0645  3000               	movlw	0
  3769     0646  00F6               	movwf	check_button_press@long_press_threshold+1
  3770                           
  3771                           ;main.c: 554:       while (PORTCbits.RC1 == 0) {
  3772     0647  2E7D               	goto	l312
  3773     0648                     l1402:
  3774                           
  3775                           ;main.c: 555:         _delay((unsigned long)((10)*(8000000/4000.0)));
  3776     0648  301A               	movlw	26
  3777     0649  00F4               	movwf	??_check_button_press+1
  3778     064A  30F8               	movlw	248
  3779     064B  00F3               	movwf	??_check_button_press
  3780     064C                     u2887:
  3781     064C  0BF3               	decfsz	??_check_button_press,f
  3782     064D  2E4C               	goto	u2887
  3783     064E  0BF4               	decfsz	??_check_button_press+1,f
  3784     064F  2E4C               	goto	u2887
  3785     0650  0000               	nop
  3786                           
  3787                           ;main.c: 556:         hold_count++;
  3788     0651  3001               	movlw	1
  3789     0652  07F7               	addwf	check_button_press@hold_count,f
  3790     0653  1803               	skipnc
  3791     0654  0AF8               	incf	check_button_press@hold_count+1,f
  3792     0655  3000               	movlw	0
  3793     0656  07F8               	addwf	check_button_press@hold_count+1,f
  3794                           
  3795                           ;main.c: 559:         if (hold_count >= long_press_threshold) {
  3796     0657  0876               	movf	check_button_press@long_press_threshold+1,w
  3797     0658  0278               	subwf	check_button_press@hold_count+1,w
  3798     0659  1D03               	skipz
  3799     065A  2E5D               	goto	u1175
  3800     065B  0875               	movf	check_button_press@long_press_threshold,w
  3801     065C  0277               	subwf	check_button_press@hold_count,w
  3802     065D                     u1175:
  3803     065D  1C03               	skipc
  3804     065E  2E60               	goto	u1171
  3805     065F  2E61               	goto	u1170
  3806     0660                     u1171:
  3807     0660  2E7D               	goto	l312
  3808     0661                     u1170:
  3809     0661                     l1404:
  3810                           
  3811                           ;main.c: 560:           long_press = 1;
  3812     0661  3001               	movlw	1
  3813     0662  00F9               	movwf	check_button_press@long_press
  3814                           
  3815                           ;main.c: 565:           while (PORTCbits.RC1 == 0) {
  3816     0663  2E6D               	goto	l1408
  3817     0664                     l1406:
  3818                           
  3819                           ;main.c: 566:             _delay((unsigned long)((10)*(8000000/4000.0)));
  3820     0664  301A               	movlw	26
  3821     0665  00F4               	movwf	??_check_button_press+1
  3822     0666  30F8               	movlw	248
  3823     0667  00F3               	movwf	??_check_button_press
  3824     0668                     u2897:
  3825     0668  0BF3               	decfsz	??_check_button_press,f
  3826     0669  2E68               	goto	u2897
  3827     066A  0BF4               	decfsz	??_check_button_press+1,f
  3828     066B  2E68               	goto	u2897
  3829     066C  0000               	nop
  3830     066D                     l1408:
  3831                           
  3832                           ;main.c: 565:           while (PORTCbits.RC1 == 0) {
  3833     066D  1283               	bcf	3,5	;RP0=0, select bank0
  3834     066E  1303               	bcf	3,6	;RP1=0, select bank0
  3835     066F  1C87               	btfss	7,1	;volatile
  3836     0670  2E72               	goto	u1181
  3837     0671  2E73               	goto	u1180
  3838     0672                     u1181:
  3839     0672  2E64               	goto	l1406
  3840     0673                     u1180:
  3841     0673                     l1410:
  3842                           
  3843                           ;main.c: 570:           _delay((unsigned long)((50)*(8000000/4000.0)));
  3844     0673  3082               	movlw	130
  3845     0674  00F4               	movwf	??_check_button_press+1
  3846     0675  30DD               	movlw	221
  3847     0676  00F3               	movwf	??_check_button_press
  3848     0677                     u2907:
  3849     0677  0BF3               	decfsz	??_check_button_press,f
  3850     0678  2E77               	goto	u2907
  3851     0679  0BF4               	decfsz	??_check_button_press+1,f
  3852     067A  2E77               	goto	u2907
  3853     067B  2E7C               	nop2
  3854                           
  3855                           ;main.c: 571:           break;
  3856     067C  2E83               	goto	l1412
  3857     067D                     l312:	
  3858                           ;main.c: 573:       }
  3859                           
  3860                           
  3861                           ;main.c: 554:       while (PORTCbits.RC1 == 0) {
  3862     067D  1283               	bcf	3,5	;RP0=0, select bank0
  3863     067E  1303               	bcf	3,6	;RP1=0, select bank0
  3864     067F  1C87               	btfss	7,1	;volatile
  3865     0680  2E82               	goto	u1191
  3866     0681  2E83               	goto	u1190
  3867     0682                     u1191:
  3868     0682  2E48               	goto	l1402
  3869     0683                     u1190:
  3870     0683                     l1412:
  3871                           
  3872                           ;main.c: 576:       if (!long_press) {
  3873     0683  0879               	movf	check_button_press@long_press,w
  3874     0684  1D03               	btfss	3,2
  3875     0685  2E87               	goto	u1201
  3876     0686  2E88               	goto	u1200
  3877     0687                     u1201:
  3878     0687  2E93               	goto	l1418
  3879     0688                     u1200:
  3880     0688                     l1414:
  3881                           
  3882                           ;main.c: 578:         _delay((unsigned long)((50)*(8000000/4000.0)));
  3883     0688  3082               	movlw	130
  3884     0689  00F4               	movwf	??_check_button_press+1
  3885     068A  30DD               	movlw	221
  3886     068B  00F3               	movwf	??_check_button_press
  3887     068C                     u2917:
  3888     068C  0BF3               	decfsz	??_check_button_press,f
  3889     068D  2E8C               	goto	u2917
  3890     068E  0BF4               	decfsz	??_check_button_press+1,f
  3891     068F  2E8C               	goto	u2917
  3892     0690  2E91               	nop2
  3893                           
  3894                           ;main.c: 579:         return 0;
  3895     0691  3000               	movlw	0
  3896     0692  2E96               	goto	l320
  3897     0693                     l1418:
  3898                           
  3899                           ;main.c: 582:       return 1;
  3900     0693  3001               	movlw	1
  3901     0694  2E96               	goto	l320
  3902     0695                     l1422:
  3903                           
  3904                           ;main.c: 586:   return 0;
  3905     0695  3000               	movlw	0
  3906     0696                     l320:
  3907     0696  0008               	return
  3908     0697                     __end_of_check_button_press:
  3909                           
  3910                           	psect	text12
  3911     06FD                     __ptext12:	
  3912 ;; *************** function _buzzer_update *****************
  3913 ;; Defined at:
  3914 ;;		line 530 in file "main.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3928 ;;      Params:         0       0       0       0
  3929 ;;      Locals:         0       0       0       0
  3930 ;;      Temps:          0       8       0       0
  3931 ;;      Totals:         0       8       0       0
  3932 ;;Total ram usage:        8 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942     06FD                     _buzzer_update:	
  3943                           ;psect for function _buzzer_update
  3944                           
  3945     06FD                     l1738:	
  3946                           ;incstack = 0
  3947                           ; Regs used in _buzzer_update: [wreg+status,2+status,0]
  3948                           
  3949                           
  3950                           ;main.c: 531:   if (buzzer_active &&
  3951     06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3952     06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3953     06FF  0832               	movf	_buzzer_active,w
  3954     0700  1903               	btfsc	3,2
  3955     0701  2F03               	goto	u2111
  3956     0702  2F04               	goto	u2110
  3957     0703                     u2111:
  3958     0703  2F5A               	goto	l307
  3959     0704                     u2110:
  3960     0704                     l1740:
  3961     0704  1683               	bsf	3,5	;RP0=1, select bank1
  3962     0705  1303               	bcf	3,6	;RP1=0, select bank1
  3963     0706  0834               	movf	_buzzer_duration^(0+128),w
  3964     0707  1283               	bcf	3,5	;RP0=0, select bank0
  3965     0708  1303               	bcf	3,6	;RP1=0, select bank0
  3966     0709  00C7               	movwf	??_buzzer_update
  3967     070A  1683               	bsf	3,5	;RP0=1, select bank1
  3968     070B  1303               	bcf	3,6	;RP1=0, select bank1
  3969     070C  0835               	movf	(_buzzer_duration+1)^(0+128),w
  3970     070D  1283               	bcf	3,5	;RP0=0, select bank0
  3971     070E  1303               	bcf	3,6	;RP1=0, select bank0
  3972     070F  00C8               	movwf	??_buzzer_update+1
  3973     0710  01C9               	clrf	??_buzzer_update+2
  3974     0711  01CA               	clrf	??_buzzer_update+3
  3975     0712  0828               	movf	_millis,w	;volatile
  3976     0713  00CB               	movwf	??_buzzer_update+4
  3977     0714  0829               	movf	_millis+1,w	;volatile
  3978     0715  00CC               	movwf	??_buzzer_update+5
  3979     0716  082A               	movf	_millis+2,w	;volatile
  3980     0717  00CD               	movwf	??_buzzer_update+6
  3981     0718  082B               	movf	_millis+3,w	;volatile
  3982     0719  00CE               	movwf	??_buzzer_update+7
  3983     071A  1683               	bsf	3,5	;RP0=1, select bank1
  3984     071B  1303               	bcf	3,6	;RP1=0, select bank1
  3985     071C  0824               	movf	_buzzer_start_time^(0+128),w
  3986     071D  1283               	bcf	3,5	;RP0=0, select bank0
  3987     071E  1303               	bcf	3,6	;RP1=0, select bank0
  3988     071F  02CB               	subwf	??_buzzer_update+4,f
  3989     0720  1683               	bsf	3,5	;RP0=1, select bank1
  3990     0721  1303               	bcf	3,6	;RP1=0, select bank1
  3991     0722  0825               	movf	(_buzzer_start_time+1)^(0+128),w
  3992     0723  1C03               	skipc
  3993     0724  0F25               	incfsz	(_buzzer_start_time+1)^(0+128),w
  3994     0725  2F27               	goto	u2121
  3995     0726  2F2A               	goto	u2122
  3996     0727                     u2121:
  3997     0727  1283               	bcf	3,5	;RP0=0, select bank0
  3998     0728  1303               	bcf	3,6	;RP1=0, select bank0
  3999     0729  02CC               	subwf	??_buzzer_update+5,f
  4000     072A                     u2122:
  4001     072A  1683               	bsf	3,5	;RP0=1, select bank1
  4002     072B  1303               	bcf	3,6	;RP1=0, select bank1
  4003     072C  0826               	movf	(_buzzer_start_time+2)^(0+128),w
  4004     072D  1C03               	skipc
  4005     072E  0F26               	incfsz	(_buzzer_start_time+2)^(0+128),w
  4006     072F  2F31               	goto	u2123
  4007     0730  2F34               	goto	u2124
  4008     0731                     u2123:
  4009     0731  1283               	bcf	3,5	;RP0=0, select bank0
  4010     0732  1303               	bcf	3,6	;RP1=0, select bank0
  4011     0733  02CD               	subwf	??_buzzer_update+6,f
  4012     0734                     u2124:
  4013     0734  1683               	bsf	3,5	;RP0=1, select bank1
  4014     0735  1303               	bcf	3,6	;RP1=0, select bank1
  4015     0736  0827               	movf	(_buzzer_start_time+3)^(0+128),w
  4016     0737  1C03               	skipc
  4017     0738  0F27               	incfsz	(_buzzer_start_time+3)^(0+128),w
  4018     0739  2F3B               	goto	u2125
  4019     073A  2F3E               	goto	u2126
  4020     073B                     u2125:
  4021     073B  1283               	bcf	3,5	;RP0=0, select bank0
  4022     073C  1303               	bcf	3,6	;RP1=0, select bank0
  4023     073D  02CE               	subwf	??_buzzer_update+7,f
  4024     073E                     u2126:
  4025     073E  1683               	bsf	3,5	;RP0=1, select bank1
  4026     073F  1303               	bcf	3,6	;RP1=0, select bank1
  4027     0740  1283               	bcf	3,5	;RP0=0, select bank0
  4028     0741  1303               	bcf	3,6	;RP1=0, select bank0
  4029     0742  084A               	movf	??_buzzer_update+3,w
  4030     0743  024E               	subwf	??_buzzer_update+7,w
  4031     0744  1D03               	skipz
  4032     0745  2F50               	goto	u2135
  4033     0746  0849               	movf	??_buzzer_update+2,w
  4034     0747  024D               	subwf	??_buzzer_update+6,w
  4035     0748  1D03               	skipz
  4036     0749  2F50               	goto	u2135
  4037     074A  0848               	movf	??_buzzer_update+1,w
  4038     074B  024C               	subwf	??_buzzer_update+5,w
  4039     074C  1D03               	skipz
  4040     074D  2F50               	goto	u2135
  4041     074E  0847               	movf	??_buzzer_update,w
  4042     074F  024B               	subwf	??_buzzer_update+4,w
  4043     0750                     u2135:
  4044     0750  1C03               	skipc
  4045     0751  2F53               	goto	u2131
  4046     0752  2F54               	goto	u2130
  4047     0753                     u2131:
  4048     0753  2F5A               	goto	l307
  4049     0754                     u2130:
  4050     0754                     l1742:
  4051                           
  4052                           ;main.c: 532:       (millis - buzzer_start_time >= buzzer_duration)) {;main.c: 533:     
      +                          PORTCbits.RC4 = 0;
  4053     0754  1207               	bcf	7,4	;volatile
  4054     0755                     l1744:
  4055                           
  4056                           ;main.c: 534:     buzzer_active = 0;
  4057     0755  01B2               	clrf	_buzzer_active
  4058                           
  4059                           ;main.c: 535:     buzzer_duration = 0;
  4060     0756  1683               	bsf	3,5	;RP0=1, select bank1
  4061     0757  1303               	bcf	3,6	;RP1=0, select bank1
  4062     0758  01B4               	clrf	_buzzer_duration^(0+128)
  4063     0759  01B5               	clrf	(_buzzer_duration+1)^(0+128)
  4064     075A                     l307:
  4065     075A  0008               	return
  4066     075B                     __end_of_buzzer_update:
  4067                           
  4068                           	psect	text13
  4069     0E26                     __ptext13:	
  4070 ;; *************** function ___wmul *****************
  4071 ;; Defined at:
  4072 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul16.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;  multiplier      2   21[BANK0 ] unsigned int 
  4075 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  product         2   25[BANK0 ] unsigned int 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  2   21[BANK0 ] unsigned int 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4087 ;;      Params:         0       4       0       0
  4088 ;;      Locals:         0       2       0       0
  4089 ;;      Temps:          0       0       0       0
  4090 ;;      Totals:         0       6       0       0
  4091 ;;Total ram usage:        6 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 1
  4094 ;; This function calls:
  4095 ;;		Nothing
  4096 ;; This function is called by:
  4097 ;;		_main
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101     0E26                     ___wmul:	
  4102                           ;psect for function ___wmul
  4103                           
  4104     0E26                     l1454:	
  4105                           ;incstack = 0
  4106                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4107                           
  4108     0E26  1283               	bcf	3,5	;RP0=0, select bank0
  4109     0E27  1303               	bcf	3,6	;RP1=0, select bank0
  4110     0E28  01E0               	clrf	___wmul@product
  4111     0E29  01E1               	clrf	___wmul@product+1
  4112     0E2A                     l1456:
  4113     0E2A  1C5C               	btfss	___wmul@multiplier,0
  4114     0E2B  2E2D               	goto	u1291
  4115     0E2C  2E2E               	goto	u1290
  4116     0E2D                     u1291:
  4117     0E2D  2E34               	goto	l406
  4118     0E2E                     u1290:
  4119     0E2E                     l1458:
  4120     0E2E  085E               	movf	___wmul@multiplicand,w
  4121     0E2F  07E0               	addwf	___wmul@product,f
  4122     0E30  1803               	skipnc
  4123     0E31  0AE1               	incf	___wmul@product+1,f
  4124     0E32  085F               	movf	___wmul@multiplicand+1,w
  4125     0E33  07E1               	addwf	___wmul@product+1,f
  4126     0E34                     l406:
  4127     0E34  3001               	movlw	1
  4128     0E35                     u1305:
  4129     0E35  1003               	clrc
  4130     0E36  0DDE               	rlf	___wmul@multiplicand,f
  4131     0E37  0DDF               	rlf	___wmul@multiplicand+1,f
  4132     0E38  3EFF               	addlw	-1
  4133     0E39  1D03               	skipz
  4134     0E3A  2E35               	goto	u1305
  4135     0E3B                     l1460:
  4136     0E3B  3001               	movlw	1
  4137     0E3C                     u1315:
  4138     0E3C  1003               	clrc
  4139     0E3D  0CDD               	rrf	___wmul@multiplier+1,f
  4140     0E3E  0CDC               	rrf	___wmul@multiplier,f
  4141     0E3F  3EFF               	addlw	-1
  4142     0E40  1D03               	skipz
  4143     0E41  2E3C               	goto	u1315
  4144     0E42                     l1462:
  4145     0E42  085C               	movf	___wmul@multiplier,w
  4146     0E43  045D               	iorwf	___wmul@multiplier+1,w
  4147     0E44  1D03               	btfss	3,2
  4148     0E45  2E47               	goto	u1321
  4149     0E46  2E48               	goto	u1320
  4150     0E47                     u1321:
  4151     0E47  2E2A               	goto	l1456
  4152     0E48                     u1320:
  4153     0E48                     l1464:
  4154     0E48  0861               	movf	___wmul@product+1,w
  4155     0E49  00DD               	movwf	?___wmul+1
  4156     0E4A  0860               	movf	___wmul@product,w
  4157     0E4B  00DC               	movwf	?___wmul
  4158     0E4C                     l408:
  4159     0E4C  0008               	return
  4160     0E4D                     __end_of___wmul:
  4161                           
  4162                           	psect	text14
  4163     07A5                     __ptext14:	
  4164 ;; *************** function ___lmul *****************
  4165 ;; Defined at:
  4166 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul32.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4169 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  product         4    3[COMMON] unsigned long 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  4    0[BANK0 ] unsigned long 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4181 ;;      Params:         0       8       0       0
  4182 ;;      Locals:         4       0       0       0
  4183 ;;      Temps:          1       0       0       0
  4184 ;;      Totals:         5       8       0       0
  4185 ;;Total ram usage:       13 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; Hardware stack levels required when called: 1
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_main
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195     07A5                     ___lmul:	
  4196                           ;psect for function ___lmul
  4197                           
  4198     07A5                     l1746:	
  4199                           ;incstack = 0
  4200                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4201                           
  4202     07A5  3000               	movlw	0
  4203     07A6  00F7               	movwf	___lmul@product+3
  4204     07A7  3000               	movlw	0
  4205     07A8  00F6               	movwf	___lmul@product+2
  4206     07A9  3000               	movlw	0
  4207     07AA  00F5               	movwf	___lmul@product+1
  4208     07AB  3000               	movlw	0
  4209     07AC  00F4               	movwf	___lmul@product
  4210     07AD                     l1748:
  4211     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  4212     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  4213     07AF  1C47               	btfss	___lmul@multiplier,0
  4214     07B0  2FB2               	goto	u2141
  4215     07B1  2FB3               	goto	u2140
  4216     07B2                     u2141:
  4217     07B2  2FCA               	goto	l1752
  4218     07B3                     u2140:
  4219     07B3                     l1750:
  4220     07B3  084B               	movf	___lmul@multiplicand,w
  4221     07B4  07F4               	addwf	___lmul@product,f
  4222     07B5  084C               	movf	___lmul@multiplicand+1,w
  4223     07B6  1103               	clrz
  4224     07B7  1803               	skipnc
  4225     07B8  3E01               	addlw	1
  4226     07B9  1903               	skipnz
  4227     07BA  2FBC               	goto	u2151
  4228     07BB  07F5               	addwf	___lmul@product+1,f
  4229     07BC                     u2151:
  4230     07BC  084D               	movf	___lmul@multiplicand+2,w
  4231     07BD  1103               	clrz
  4232     07BE  1803               	skipnc
  4233     07BF  3E01               	addlw	1
  4234     07C0  1903               	skipnz
  4235     07C1  2FC3               	goto	u2152
  4236     07C2  07F6               	addwf	___lmul@product+2,f
  4237     07C3                     u2152:
  4238     07C3  084E               	movf	___lmul@multiplicand+3,w
  4239     07C4  1103               	clrz
  4240     07C5  1803               	skipnc
  4241     07C6  3E01               	addlw	1
  4242     07C7  1903               	skipnz
  4243     07C8  2FCA               	goto	u2153
  4244     07C9  07F7               	addwf	___lmul@product+3,f
  4245     07CA                     u2153:
  4246     07CA                     l1752:
  4247     07CA  3001               	movlw	1
  4248     07CB  00F3               	movwf	??___lmul
  4249     07CC                     u2165:
  4250     07CC  1003               	clrc
  4251     07CD  0DCB               	rlf	___lmul@multiplicand,f
  4252     07CE  0DCC               	rlf	___lmul@multiplicand+1,f
  4253     07CF  0DCD               	rlf	___lmul@multiplicand+2,f
  4254     07D0  0DCE               	rlf	___lmul@multiplicand+3,f
  4255     07D1  0BF3               	decfsz	??___lmul,f
  4256     07D2  2FCC               	goto	u2165
  4257     07D3                     l1754:
  4258     07D3  3001               	movlw	1
  4259     07D4                     u2175:
  4260     07D4  1003               	clrc
  4261     07D5  0CCA               	rrf	___lmul@multiplier+3,f
  4262     07D6  0CC9               	rrf	___lmul@multiplier+2,f
  4263     07D7  0CC8               	rrf	___lmul@multiplier+1,f
  4264     07D8  0CC7               	rrf	___lmul@multiplier,f
  4265     07D9  3EFF               	addlw	-1
  4266     07DA  1D03               	skipz
  4267     07DB  2FD4               	goto	u2175
  4268     07DC  084A               	movf	___lmul@multiplier+3,w
  4269     07DD  0449               	iorwf	___lmul@multiplier+2,w
  4270     07DE  0448               	iorwf	___lmul@multiplier+1,w
  4271     07DF  0447               	iorwf	___lmul@multiplier,w
  4272     07E0  1D03               	skipz
  4273     07E1  2FE3               	goto	u2181
  4274     07E2  2FE4               	goto	u2180
  4275     07E3                     u2181:
  4276     07E3  2FAD               	goto	l1748
  4277     07E4                     u2180:
  4278     07E4                     l1756:
  4279     07E4  0877               	movf	___lmul@product+3,w
  4280     07E5  00CA               	movwf	?___lmul+3
  4281     07E6  0876               	movf	___lmul@product+2,w
  4282     07E7  00C9               	movwf	?___lmul+2
  4283     07E8  0875               	movf	___lmul@product+1,w
  4284     07E9  00C8               	movwf	?___lmul+1
  4285     07EA  0874               	movf	___lmul@product,w
  4286     07EB  00C7               	movwf	?___lmul
  4287     07EC                     l420:
  4288     07EC  0008               	return
  4289     07ED                     __end_of___lmul:
  4290                           
  4291                           	psect	text15
  4292     0697                     __ptext15:	
  4293 ;; *************** function ___lldiv *****************
  4294 ;; Defined at:
  4295 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  divisor         4    8[BANK0 ] unsigned long 
  4298 ;;  dividend        4   12[BANK0 ] unsigned long 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  quotient        4   16[BANK0 ] unsigned long 
  4301 ;;  counter         1   20[BANK0 ] unsigned char 
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  4    8[BANK0 ] unsigned long 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2, status,0
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4311 ;;      Params:         0       8       0       0
  4312 ;;      Locals:         0       5       0       0
  4313 ;;      Temps:          1       0       0       0
  4314 ;;      Totals:         1      13       0       0
  4315 ;;Total ram usage:       14 bytes
  4316 ;; Hardware stack levels used: 1
  4317 ;; Hardware stack levels required when called: 1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325     0697                     ___lldiv:	
  4326                           ;psect for function ___lldiv
  4327                           
  4328     0697                     l1760:	
  4329                           ;incstack = 0
  4330                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4331                           
  4332     0697  3000               	movlw	0
  4333     0698  1283               	bcf	3,5	;RP0=0, select bank0
  4334     0699  1303               	bcf	3,6	;RP1=0, select bank0
  4335     069A  00DA               	movwf	___lldiv@quotient+3
  4336     069B  3000               	movlw	0
  4337     069C  00D9               	movwf	___lldiv@quotient+2
  4338     069D  3000               	movlw	0
  4339     069E  00D8               	movwf	___lldiv@quotient+1
  4340     069F  3000               	movlw	0
  4341     06A0  00D7               	movwf	___lldiv@quotient
  4342     06A1  0852               	movf	___lldiv@divisor+3,w
  4343     06A2  0451               	iorwf	___lldiv@divisor+2,w
  4344     06A3  0450               	iorwf	___lldiv@divisor+1,w
  4345     06A4  044F               	iorwf	___lldiv@divisor,w
  4346     06A5  1903               	skipnz
  4347     06A6  2EA8               	goto	u2191
  4348     06A7  2EA9               	goto	u2190
  4349     06A8                     u2191:
  4350     06A8  2EF4               	goto	l1780
  4351     06A9                     u2190:
  4352     06A9                     l1762:
  4353     06A9  3001               	movlw	1
  4354     06AA  00DB               	movwf	___lldiv@counter
  4355     06AB  2EB7               	goto	l1766
  4356     06AC                     l1764:
  4357     06AC  3001               	movlw	1
  4358     06AD  00F8               	movwf	??___lldiv
  4359     06AE                     u2205:
  4360     06AE  1003               	clrc
  4361     06AF  0DCF               	rlf	___lldiv@divisor,f
  4362     06B0  0DD0               	rlf	___lldiv@divisor+1,f
  4363     06B1  0DD1               	rlf	___lldiv@divisor+2,f
  4364     06B2  0DD2               	rlf	___lldiv@divisor+3,f
  4365     06B3  0BF8               	decfsz	??___lldiv,f
  4366     06B4  2EAE               	goto	u2205
  4367     06B5  3001               	movlw	1
  4368     06B6  07DB               	addwf	___lldiv@counter,f
  4369     06B7                     l1766:
  4370     06B7  1FD2               	btfss	___lldiv@divisor+3,7
  4371     06B8  2EBA               	goto	u2211
  4372     06B9  2EBB               	goto	u2210
  4373     06BA                     u2211:
  4374     06BA  2EAC               	goto	l1764
  4375     06BB                     u2210:
  4376     06BB                     l1768:
  4377     06BB  3001               	movlw	1
  4378     06BC  00F8               	movwf	??___lldiv
  4379     06BD                     u2225:
  4380     06BD  1003               	clrc
  4381     06BE  0DD7               	rlf	___lldiv@quotient,f
  4382     06BF  0DD8               	rlf	___lldiv@quotient+1,f
  4383     06C0  0DD9               	rlf	___lldiv@quotient+2,f
  4384     06C1  0DDA               	rlf	___lldiv@quotient+3,f
  4385     06C2  0BF8               	decfsz	??___lldiv,f
  4386     06C3  2EBD               	goto	u2225
  4387     06C4                     l1770:
  4388     06C4  0852               	movf	___lldiv@divisor+3,w
  4389     06C5  0256               	subwf	___lldiv@dividend+3,w
  4390     06C6  1D03               	skipz
  4391     06C7  2ED2               	goto	u2235
  4392     06C8  0851               	movf	___lldiv@divisor+2,w
  4393     06C9  0255               	subwf	___lldiv@dividend+2,w
  4394     06CA  1D03               	skipz
  4395     06CB  2ED2               	goto	u2235
  4396     06CC  0850               	movf	___lldiv@divisor+1,w
  4397     06CD  0254               	subwf	___lldiv@dividend+1,w
  4398     06CE  1D03               	skipz
  4399     06CF  2ED2               	goto	u2235
  4400     06D0  084F               	movf	___lldiv@divisor,w
  4401     06D1  0253               	subwf	___lldiv@dividend,w
  4402     06D2                     u2235:
  4403     06D2  1C03               	skipc
  4404     06D3  2ED5               	goto	u2231
  4405     06D4  2ED6               	goto	u2230
  4406     06D5                     u2231:
  4407     06D5  2EE5               	goto	l1776
  4408     06D6                     u2230:
  4409     06D6                     l1772:
  4410     06D6  084F               	movf	___lldiv@divisor,w
  4411     06D7  02D3               	subwf	___lldiv@dividend,f
  4412     06D8  0850               	movf	___lldiv@divisor+1,w
  4413     06D9  1C03               	skipc
  4414     06DA  0F50               	incfsz	___lldiv@divisor+1,w
  4415     06DB  02D4               	subwf	___lldiv@dividend+1,f
  4416     06DC  0851               	movf	___lldiv@divisor+2,w
  4417     06DD  1C03               	skipc
  4418     06DE  0F51               	incfsz	___lldiv@divisor+2,w
  4419     06DF  02D5               	subwf	___lldiv@dividend+2,f
  4420     06E0  0852               	movf	___lldiv@divisor+3,w
  4421     06E1  1C03               	skipc
  4422     06E2  0F52               	incfsz	___lldiv@divisor+3,w
  4423     06E3  02D6               	subwf	___lldiv@dividend+3,f
  4424     06E4                     l1774:
  4425     06E4  1457               	bsf	___lldiv@quotient,0
  4426     06E5                     l1776:
  4427     06E5  3001               	movlw	1
  4428     06E6                     u2245:
  4429     06E6  1003               	clrc
  4430     06E7  0CD2               	rrf	___lldiv@divisor+3,f
  4431     06E8  0CD1               	rrf	___lldiv@divisor+2,f
  4432     06E9  0CD0               	rrf	___lldiv@divisor+1,f
  4433     06EA  0CCF               	rrf	___lldiv@divisor,f
  4434     06EB  3EFF               	addlw	-1
  4435     06EC  1D03               	skipz
  4436     06ED  2EE6               	goto	u2245
  4437     06EE                     l1778:
  4438     06EE  3001               	movlw	1
  4439     06EF  02DB               	subwf	___lldiv@counter,f
  4440     06F0  1D03               	btfss	3,2
  4441     06F1  2EF3               	goto	u2251
  4442     06F2  2EF4               	goto	u2250
  4443     06F3                     u2251:
  4444     06F3  2EBB               	goto	l1768
  4445     06F4                     u2250:
  4446     06F4                     l1780:
  4447     06F4  085A               	movf	___lldiv@quotient+3,w
  4448     06F5  00D2               	movwf	?___lldiv+3
  4449     06F6  0859               	movf	___lldiv@quotient+2,w
  4450     06F7  00D1               	movwf	?___lldiv+2
  4451     06F8  0858               	movf	___lldiv@quotient+1,w
  4452     06F9  00D0               	movwf	?___lldiv+1
  4453     06FA  0857               	movf	___lldiv@quotient,w
  4454     06FB  00CF               	movwf	?___lldiv
  4455     06FC                     l442:
  4456     06FC  0008               	return
  4457     06FD                     __end_of___lldiv:
  4458                           
  4459                           	psect	text16
  4460     075B                     __ptext16:	
  4461 ;; *************** function _isr *****************
  4462 ;; Defined at:
  4463 ;;		line 402 in file "main.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;		None
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4477 ;;      Params:         0       0       0       0
  4478 ;;      Locals:         0       0       0       0
  4479 ;;      Temps:          2       0       0       0
  4480 ;;      Totals:         2       0       0       0
  4481 ;;Total ram usage:        2 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		Interrupt level 1
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490     075B                     _isr:	
  4491                           ;psect for function _isr
  4492                           
  4493     075B                     i1l1702:
  4494                           
  4495                           ;main.c: 404:   if (PIR1bits.TMR1IF) {
  4496     075B  1283               	bcf	3,5	;RP0=0, select bank0
  4497     075C  1303               	bcf	3,6	;RP1=0, select bank0
  4498     075D  1C0C               	btfss	12,0	;volatile
  4499     075E  2F60               	goto	u204_21
  4500     075F  2F61               	goto	u204_20
  4501     0760                     u204_21:
  4502     0760  2F74               	goto	i1l1712
  4503     0761                     u204_20:
  4504     0761                     i1l1704:
  4505                           
  4506                           ;main.c: 405:     millis ++;
  4507     0761  3001               	movlw	1
  4508     0762  07A8               	addwf	_millis,f	;volatile
  4509     0763  3000               	movlw	0
  4510     0764  1803               	skipnc
  4511     0765  3001               	movlw	1
  4512     0766  07A9               	addwf	_millis+1,f	;volatile
  4513     0767  3000               	movlw	0
  4514     0768  1803               	skipnc
  4515     0769  3001               	movlw	1
  4516     076A  07AA               	addwf	_millis+2,f	;volatile
  4517     076B  3000               	movlw	0
  4518     076C  1803               	skipnc
  4519     076D  3001               	movlw	1
  4520     076E  07AB               	addwf	_millis+3,f	;volatile
  4521     076F                     i1l1706:
  4522                           
  4523                           ;main.c: 406:     PIR1bits.TMR1IF = 0;
  4524     076F  100C               	bcf	12,0	;volatile
  4525     0770                     i1l1708:
  4526                           
  4527                           ;main.c: 407:     TMR1H = 255;
  4528     0770  30FF               	movlw	255
  4529     0771  008F               	movwf	15	;volatile
  4530     0772                     i1l1710:
  4531                           
  4532                           ;main.c: 408:     TMR1L = 14;
  4533     0772  300E               	movlw	14
  4534     0773  008E               	movwf	14	;volatile
  4535     0774                     i1l1712:
  4536                           
  4537                           ;main.c: 411:   if (INTCONbits.TMR0IF) {
  4538     0774  1D0B               	btfss	11,2	;volatile
  4539     0775  2F77               	goto	u205_21
  4540     0776  2F78               	goto	u205_20
  4541     0777                     u205_21:
  4542     0777  2F9E               	goto	i1l268
  4543     0778                     u205_20:
  4544     0778                     i1l1714:
  4545                           
  4546                           ;main.c: 413:     TMR0 = 6;
  4547     0778  3006               	movlw	6
  4548     0779  0081               	movwf	1	;volatile
  4549                           
  4550                           ;main.c: 414:     INTCONbits.TMR0IF = 0;
  4551     077A  110B               	bcf	11,2	;volatile
  4552     077B                     i1l1716:
  4553                           
  4554                           ;main.c: 417:     if (sensors_reading_in_progress) {
  4555     077B  083C               	movf	_sensors_reading_in_progress,w	;volatile
  4556     077C  1903               	btfsc	3,2
  4557     077D  2F7F               	goto	u206_21
  4558     077E  2F80               	goto	u206_20
  4559     077F                     u206_21:
  4560     077F  2F9E               	goto	i1l268
  4561     0780                     u206_20:
  4562     0780                     i1l1718:
  4563                           
  4564                           ;main.c: 419:       if (PORTBbits.RB5)
  4565     0780  1E86               	btfss	6,5	;volatile
  4566     0781  2F83               	goto	u207_21
  4567     0782  2F84               	goto	u207_20
  4568     0783                     u207_21:
  4569     0783  2F86               	goto	i1l1722
  4570     0784                     u207_20:
  4571     0784                     i1l1720:
  4572                           
  4573                           ;main.c: 420:         low_sensor_high_count++;
  4574     0784  3001               	movlw	1
  4575     0785  07FA               	addwf	_low_sensor_high_count,f	;volatile
  4576     0786                     i1l1722:
  4577                           
  4578                           ;main.c: 421:       if (PORTBbits.RB4)
  4579     0786  1E06               	btfss	6,4	;volatile
  4580     0787  2F89               	goto	u208_21
  4581     0788  2F8A               	goto	u208_20
  4582     0789                     u208_21:
  4583     0789  2F8C               	goto	i1l1726
  4584     078A                     u208_20:
  4585     078A                     i1l1724:
  4586                           
  4587                           ;main.c: 422:         high_sensor_high_count++;
  4588     078A  3001               	movlw	1
  4589     078B  07BF               	addwf	_high_sensor_high_count,f	;volatile
  4590     078C                     i1l1726:
  4591                           
  4592                           ;main.c: 423:       if (PORTBbits.RB3)
  4593     078C  1D86               	btfss	6,3	;volatile
  4594     078D  2F8F               	goto	u209_21
  4595     078E  2F90               	goto	u209_20
  4596     078F                     u209_21:
  4597     078F  2F92               	goto	i1l266
  4598     0790                     u209_20:
  4599     0790                     i1l1728:
  4600                           
  4601                           ;main.c: 424:         flow_sensor_high_count++;
  4602     0790  3001               	movlw	1
  4603     0791  07BE               	addwf	_flow_sensor_high_count,f	;volatile
  4604     0792                     i1l266:
  4605                           
  4606                           ;main.c: 426:       reading_count++;
  4607     0792  3001               	movlw	1
  4608     0793  07FB               	addwf	_reading_count,f	;volatile
  4609     0794                     i1l1730:
  4610                           
  4611                           ;main.c: 429:       if (reading_count >= 50) {
  4612     0794  3032               	movlw	50
  4613     0795  027B               	subwf	_reading_count,w	;volatile
  4614     0796  1C03               	skipc
  4615     0797  2F99               	goto	u210_21
  4616     0798  2F9A               	goto	u210_20
  4617     0799                     u210_21:
  4618     0799  2F9E               	goto	i1l268
  4619     079A                     u210_20:
  4620     079A                     i1l1732:
  4621                           
  4622                           ;main.c: 430:         sensors_reading_in_progress = 0;
  4623     079A  01BC               	clrf	_sensors_reading_in_progress	;volatile
  4624     079B                     i1l1734:
  4625                           
  4626                           ;main.c: 431:         sensors_reading_complete = 1;
  4627     079B  3001               	movlw	1
  4628     079C  00BD               	movwf	_sensors_reading_complete	;volatile
  4629     079D                     i1l1736:
  4630                           
  4631                           ;main.c: 432:         INTCONbits.TMR0IE =
  4632     079D  128B               	bcf	11,5	;volatile
  4633     079E                     i1l268:
  4634     079E  0872               	movf	??_isr+1,w
  4635     079F  008A               	movwf	10
  4636     07A0  0E71               	swapf	??_isr,w
  4637     07A1  0083               	movwf	3
  4638     07A2  0EFE               	swapf	btemp,f
  4639     07A3  0E7E               	swapf	btemp,w
  4640     07A4  0009               	retfie
  4641     07A5                     __end_of_isr:
  4642     0001                     ___latbits      equ	1
  4643     007E                     btemp           set	126	;btemp
  4644     007E                     wtemp0          set	126
  4645                           
  4646                           	psect	intentry
  4647     0004                     __pintentry:	
  4648                           ;incstack = 0
  4649                           ; Regs used in _isr: [wreg+status,2+status,0]
  4650                           
  4651     0004                     interrupt_function:
  4652     007E                     saved_w         set	btemp
  4653     0004  00FE               	movwf	btemp
  4654     0005  0E03               	swapf	3,w
  4655     0006  00F1               	movwf	??_isr
  4656     0007  080A               	movf	10,w
  4657     0008  00F2               	movwf	??_isr+1
  4658     0009  118A  2F5B         	ljmp	_isr
  4659                           
  4660                           	psect	config
  4661                           
  4662                           ;Config register CONFIG1 @ 0x2007
  4663                           ;	Oscillator Selection bits
  4664                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4665                           ;	Watchdog Timer Enable bit
  4666                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4667                           ;	Power-up Timer Enable bit
  4668                           ;	PWRTE = ON, PWRT enabled
  4669                           ;	RE3/MCLR pin function select bit
  4670                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4671                           ;	Code Protection bit
  4672                           ;	CP = OFF, Program memory code protection is disabled
  4673                           ;	Data Code Protection bit
  4674                           ;	CPD = OFF, Data memory code protection is disabled
  4675                           ;	Brown Out Reset Selection bits
  4676                           ;	BOREN = ON, BOR enabled
  4677                           ;	Internal External Switchover bit
  4678                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4679                           ;	Fail-Safe Clock Monitor Enabled bit
  4680                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4681                           ;	Low Voltage Programming Enable bit
  4682                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4683                           ;	In-Circuit Debugger Mode bit
  4684                           ;	DEBUG = 0x1, unprogrammed default
  4685     2007                     	org	8199
  4686     2007  23E4               	dw	9188

Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      9      11
    BANK0            80     29      75
    BANK1            80      8      54
    BANK2            69      0       0

Pointer List with Targets:

    getSensorResults@flow_active	PTR _Bool  size(1) Largest target is 1
		 -> flow_sensor_active(BANK0[1]), 

    getSensorResults@high_active	PTR _Bool  size(1) Largest target is 1
		 -> high_sensor_active(BANK0[1]), 

    getSensorResults@low_active	PTR _Bool  size(1) Largest target is 1
		 -> low_sensor_active(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_check_button_press
    _saveSettings->_EEPROM_Write16
    _EEPROM_Write16->_EEPROM_Write
    ___wmul->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___wmul
    ___wmul->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1128
                                             27 BANK0      2     2      0
                                              0 BANK1      8     8      0
                            ___lldiv
                             ___lmul
                             ___wmul
                      _buzzer_update
                 _check_button_press
                   _getSensorResults
                         _initSystem
                         _init_timer
                            _readADC
                       _saveSettings
                        _setupTimer0
                 _startSensorReading
                     _trigger_buzzer
 ---------------------------------------------------------------------------------
 (1) _trigger_buzzer                                       2     0      2      25
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _startSensorReading                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _saveSettings                                         9     1      8     337
                                              7 COMMON     1     1      0
                                              0 BANK0      8     0      8
                       _EEPROM_Write
                     _EEPROM_Write16
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write16                                       3     1      2     161
                                              4 COMMON     3     1      2
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         2     1      1      55
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      29
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _getSensorResults                                     3     0      3      69
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _check_button_press                                   7     7      0      71
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_update                                        8     8      0       0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      94
                                             21 BANK0      6     2      4
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     148
                                              2 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     253
                                              7 COMMON     1     1      0
                                              8 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___wmul
     ___lldiv (ARG)
     ___lmul (ARG)
   _buzzer_update
   _check_button_press
   _getSensorResults
   _initSystem
   _init_timer
   _readADC
   _saveSettings
     _EEPROM_Write
     _EEPROM_Write16
       _EEPROM_Write
   _setupTimer0
   _startSensorReading
   _trigger_buzzer

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               69      0       0      0.0%
BITBANK2            69      0       0      0.0%
BANK1               80      8      54     67.5%
BITBANK1            80      0       0      0.0%
BANK0               80     29      75     93.8%
BITBANK0            80      0       0      0.0%
COMMON              13      9      11     84.6%
BITCOMMON           13      0       0      0.0%
DATA                 0      0     139      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Apr 24 11:20:28 2025

                                     pc 0002                                      _lt 00A0  
                                    _to 0043                                      fsr 0004  
                   ___wmul@multiplicand 005E                                     l211 03CC  
                                   l230 0560                                     l303 0E73  
                                   l320 0696                                     l312 067D  
                                   l208 0448                                     l242 0E1B  
                                   l307 075A                                     l227 0567  
                                   l420 07EC                                     l252 0DC4  
                                   l228 0563                                     l245 0E25  
                                   l406 0E34                                     l239 0E9B  
                                   l271 0DE5                                     l408 0E4C  
                                   l256 0EC9                                     l280 0E03  
                                   l248 0DA6                                     l442 06FC  
                                   l274 0DE7                                     l277 0DFD  
                                   l198 027A                                     l279 0E01  
                                   l289 0DB5                                     l299 0EFF  
                     _low_sensor_active 0046                                     _isr 075B  
                                   _smc 0042                                     fsr0 0004  
                                   indf 0000                       main@is_long_press 0062  
                                  l1400 0643                                    l1320 0DED  
                                  l1410 0673                                    l1402 0648  
                                  l1330 0DFA                                    l1322 0DF3  
                                  l1412 0683                                    l1404 0661  
                                  l1340 0E7C                                    l1332 0DFC  
                                  l1324 0DF6                                    l1414 0688  
                                  l1406 0664                                    l1422 0695  
                                  l1350 0E89                                    l1342 0E7D  
                                  l1326 0DF7                                    l1318 0DE7  
                                  l1334 0DA8                                    l1430 0DA1  
                                  l1408 066D                                    l1440 0E9C  
                                  l1352 0E8D                                    l1344 0E81  
                                  l1336 0E74                                    l1328 0DF8  
                                  l1360 0ECB                                    l1432 0DA5  
                                  l1418 0693                                    l1442 0EA3  
                                  l1450 0EC8                                    l1354 0E96  
                                  l1346 0E83                                    l1338 0E78  
                                  l1362 0E05                                    l1426 0D99  
                                  l1434 0DB6                                    l1460 0E3B  
                                  l1444 0EC5                                    l1356 0E99  
                                  l1348 0E85                                    l1364 0E13  
                                  l1428 0D9D                                    l1436 0DBD  
                                  l1372 0E4D                                    l1462 0E42  
                                  l1454 0E26                                    l1390 062B  
                                  l1446 0EC6                                    l1358 0E9A  
                                  l1366 0E18                                    l1438 0DC2  
                                  l1374 0E54                                    l1464 0E48  
                                  l1456 0E2A                                    l1392 062C  
                                  l1368 0E1F                                    l1376 0E55  
                                  l1458 0E2E                                    l1394 0632  
                                  l1378 0E6F                                    l1810 00DE  
                                  l1802 00C8                                    l1740 0704  
                                  l1396 063B                                    l1388 0DD5  
                                  l1900 034E                                    l1820 00F8  
                                  l1804 00CE                                    l1812 00EB  
                                  l1750 07B3                                    l1742 0754  
                                  l1398 0641                                    l1910 03BC  
                                  l1902 0364                                    l1830 0116  
                                  l1822 0104                                    l1814 00EE  
                                  l1806 00D4                                    l1760 0697  
                                  l1752 07CA                                    l1744 0755  
                                  l1920 03D7                                    l1912 03C0  
                                  l1904 0368                                    l1840 0175  
                                  l1832 014B                                    l1816 00F1  
                                  l1808 00D9                                    l1770 06C4  
                                  l1762 06A9                                    l1754 07D3  
                                  l1746 07A5                                    l1738 06FD  
                                  l1922 03F0                                    l1914 03C6  
                                  l1906 036F                                    l1930 0449  
                                  l1850 0196                                    l1842 017A  
                                  l1834 015C                                    l1826 0109  
                                  l1772 06D6                                    l1764 06AC  
                                  l1780 06F4                                    l1756 07E4  
                                  l1748 07AD                                    l1940 0458  
                                  l1932 044E                                    l1924 0434  
                                  l1916 03CA                                    l1908 0376  
                                  l1860 01B2                                    l1852 019B  
                                  l1844 0180                                    l1836 0162  
                                  l1828 0114                                    l1774 06E4  
                                  l1766 06B7                                    l1950 0474  
                                  l1942 045D                                    l1934 0450  
                                  l1918 03CD                                    l1926 043A  
                                  l1870 0270                                    l1862 01BB  
                                  l1854 01A0                                    l1846 018E  
                                  l1838 016F                                    l1790 0040  
                                  l1776 06E5                                    l1768 06BB  
                                  l1960 04DA                                    l1952 04C3  
                                  l1944 045E                                    l1928 0444  
                                  l1936 0451                                    l1880 02DB  
                                  l1872 0282                                    l1864 020B  
                                  l1848 0195                                    l1856 01A2  
                                  l1792 0044                                    l1784 0035  
                                  l1778 06EE                                    l1970 0569  
                                  l1962 0529                                    l1954 04C6  
                                  l1946 0463                                    l1938 0457  
                                  l1890 0339                                    l1874 0288  
                                  l1882 02DE                                    l1858 01AA  
                                  l1866 0218                                    l1794 0048  
                                  l1786 0038                                    l1972 05A5  
                                  l1964 0533                                    l1956 04CE  
                                  l1948 046B                                    l1892 033E  
                                  l1884 02E4                                    l1876 028D  
                                  l1868 0220                                    l1796 00C5  
                                  l1788 003C                                    l1974 05BD  
                                  l1966 053A                                    l1958 04D2  
                                  l1894 0343                                    l1886 032E  
                                  l1878 02D7                                    l1976 05C4  
                                  l1968 054F                                    l1896 0348  
                                  l1888 0332                                    l1978 0602  
                                  l1898 034D                                    ?_isr 0071  
                                  u1100 0E1F                                    u1101 0E1E  
                                  u1110 0E54                                    u1111 0E53  
                                  u1200 0688                                    u1201 0687  
                                  u1210 0DBD                                    u1211 0DBC  
                                  u1220 0EA3                                    u1221 0EA2  
                                  u2110 0704                                    u1150 0632  
                                  u1230 0EAC                                    u1070 0DED  
                                  u2111 0703                                    u1151 0631  
                                  u1231 0EAA                                    u1071 0DEC  
                                  u1320 0E48                                    u1160 0641  
                                  u1240 0EAD                                    u1080 0E01  
                                  u1321 0E47                                    u1305 0E35  
                                  u2121 0727                                    u1161 0640  
                                  u1081 0E00                                    u2210 06BB  
                                  u2130 0754                                    u2122 072A  
                                  u1170 0661                                    u1250 0EB8  
                                  u2211 06BA                                    u1315 0E3C  
                                  u2131 0753                                    u2123 0731  
                                  u1171 0660                                    u1251 0EB6  
                                  u2140 07B3                                    u2124 0734  
                                  u1180 0673                                    u1260 0EB9  
                                  u2300 00F7                                    u2205 06AE  
                                  u2141 07B2                                    u2125 073B  
                                  u1181 0672                                    u2301 00F6  
                                  u2230 06D6                                    u2126 073E  
                                  u1190 0683                                    u1270 0EC3  
                                  u2310 015C                                    u2231 06D5  
                                  u2151 07BC                                    u2135 0750  
                                  u1191 0682                                    u1175 065D  
                                  u1271 0EC1                                    u1095 0E08  
                                  u2311 015B                                    u2152 07C3  
                                  u1280 0EC4                                    u2400 01A0  
                                  u2320 0162                                    u2225 06BD  
                                  u2153 07CA                                    u2401 019F  
                                  u2321 0161                                    u2250 06F4  
                                  u1290 0E2E                                    u2410 01AA  
                                  u2330 016C                                    u2251 06F3  
                                  u2235 06D2                                    u1291 0E2D  
                                  u2411 01A9                                    u2331 0168  
                                  u2315 0158                                    u2180 07E4  
                                  u2420 01B2                                    u2260 00CE  
                                  u2245 06E6                                    u2181 07E3  
                                  u2165 07CC                                    u2501 02B8  
                                  u2421 01B1                                    u2261 00CD  
                                  u2190 06A9                                    u2510 02D7  
                                  u2502 02B9                                    u2350 0175  
                                  u2270 00D9                                    u2191 06A8  
                                  u2175 07D4                                    u2511 02D6  
                                  u2503 02BE                                    u2431 01DE  
                                  u2351 0174                                    u2271 00D8  
                                  u2600 0376                                    u2520 02E4  
                                  u2504 02BF                                    u2440 020B  
                                  u2432 01E1                                    u2360 017A  
                                  u2344 016F                                    u2280 00E8  
                                  u2601 0375                                    u2521 02E3  
                                  u2513 02D3                                    u2505 02C4  
                                  u2441 020A                                    u2433 01E8  
                                  u2361 0179                                    u2281 00E4  
                                  u2506 02C5                                    u2450 0220  
                                  u2434 01EB                                    u2370 018E  
                                  u2611 039D                                    u2531 030F  
                                  u2451 021F                                    u2443 0207  
                                  u2435 01F2                                    u2371 018D  
                                  u2700 045D                                    u2620 03BC  
                                  u2612 039E                                    u2540 032E  
                                  u2532 0310                                    u2436 01F5  
                                  u2380 0195                                    u2701 045C  
                                  u2621 03BB                                    u2613 03A3  
                                  u2541 032D                                    u2533 0315  
                                  u2461 0243                                    u2381 0194  
                                  u2710 0463                                    u2630 03C6  
                                  u2614 03A4                                    u2550 0339  
                                  u2534 0316                                    u2470 0270  
                                  u2462 0246                                    u2390 019B  
                                  u2294 00EB                                    u2711 0462  
                                  u2631 03C5                                    u2615 03A9  
                                  u2551 0338                                    u2543 032A  
                                  u2535 031B                                    u2471 026F  
                                  u2463 024D                                    u2391 019A  
                                  u2800 0560                                    u2720 046B  
                                  u2640 03CA                                    u2616 03AA  
                                  u2560 033E                                    u2536 031C  
                                  u2480 0282                                    u2464 0250  
                                  u2801 055F                                    u2721 046A  
                                  u2641 03C9                                    u2625 03B8  
                                  u2561 033D                                    u2481 0281  
                                  u2473 026C                                    u2465 0257  
                                  u2650 03D7                                    u2570 0343  
                                  u2490 0288                                    u2466 025A  
                                  u2811 0586                                    u2731 0497  
                                  u2651 03D6                                    u2571 0342  
                                  u2491 0287                                    u2820 05A5  
                                  u2812 0587                                    u2740 04C3  
                                  u2732 049A                                    u2580 0348  
                                  u2821 05A4                                    u2813 058C  
                                  u2805 055C                                    u2741 04C2  
                                  u2733 04A1                                    u2661 0415  
                                  u2581 0347                                    u2814 058D  
                                  u2750 04DA                                    u2734 04A4  
                                  u2670 0434                                    u2662 0416  
                                  u2590 034D                                    u2831 05E3  
                                  u2823 05A1                                    u2815 0592  
                                  u2751 04D9                                    u2743 04BF  
                                  u2735 04AB                                    u2671 0433  
                                  u2663 041B                                    u2591 034C  
                                  u2840 0602                                    u2832 05E4  
                                  u2816 0593                                    u2736 04AE  
                                  u2680 044E                                    u2664 041C  
                                  u2841 0601                                    u2833 05E9  
                                  u2761 04FD                                    u2681 044D  
                                  u2665 0421                                    u2834 05EA  
                                  u2770 0529                                    u2762 0500  
                                  u2690 0457                                    u2666 0422  
                                  u2907 0677                                    u2843 05FE  
                                  u2835 05EF                                    u2771 0528  
                                  u2763 0507                                    u2691 0456  
                                  u2675 0430                                    u2836 05F0  
                                  u2780 053A                                    u2764 050A  
                                  u2917 068C                                    u2781 0539  
                                  u2773 0525                                    u2765 0511  
                                  u2790 054F                                    u2766 0514  
                                  u2791 054E                                    u2857 0E15  
                                  u2867 0E91                                    u2795 054B  
                                  u2877 0636                                    u2887 064C  
                                  u2897 0668                                    _TMR0 0001  
                                  _main 0035                                    btemp 007E  
                                  start 000B                       ?_getSensorResults 0073  
           _sensors_reading_in_progress 003C                      ??_getSensorResults 0076  
                  __end_of_EEPROM_Write 0E04                                   ??_isr 0071  
                                 ?_main 0071                                   _EEADR 010D  
                                 _ANSEL 0188                         __end_of___lldiv 06FD  
                                 _T1CON 0010                                   i1l266 0792  
                                 i1l268 079E                                   _TMR1H 000F  
                                 _TMR1L 000E                                   _PORTA 0005  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _TRISA 0085                                   _TRISB 0086  
                                 _TRISC 0087                     ___lmul@multiplicand 004B  
                       __end_of_readADC 0E26                                   main@i 0063  
                                 pclath 000A                                   status 0003  
                                 wtemp0 007E                        EEPROM_Write@data 0073  
                   _maxvoltageerrortime 00CC                         __initialization 000D  
                          _voltageerror 003A              __end_of_startSensorReading 0DC5  
                          __end_of_main 062B                                  ??_main 00CE  
                     _buzzer_start_time 00A4                                  _ADCON0 001F  
                                _ADCON1 009F                                  _ADRESH 001E  
                                _ADRESL 009E                                  _EEDATA 010C  
                                _EECON2 018D                                  _ANSELH 0189  
                                i1l1710 0772                                  i1l1702 075B  
                                i1l1720 0784                                  i1l1704 0761  
                                i1l1712 0774                                  i1l1730 0794  
                                i1l1722 0786                                  i1l1714 0778  
                                i1l1706 076F                                  i1l1732 079A  
                                i1l1724 078A                                  i1l1716 077B  
                                i1l1708 0770                                  i1l1734 079B  
                                i1l1726 078C                                  i1l1718 0780  
                                i1l1736 079D                                  u210_20 079A  
                                i1l1728 0790                                  u210_21 0799  
                                u204_20 0761                                  u204_21 0760  
                                u205_20 0778                                  u205_21 0777  
                                u206_20 0780                                  u206_21 077F  
                                u207_20 0784                                  u207_21 0783  
                                u208_20 078A                                  u208_21 0789  
                                u209_20 0790                                  u209_21 078F  
                                ___lmul 07A5                                  ___wmul 0E26  
                       _lastdryruncheck 00AC                               ??___lldiv 0078  
                        _trigger_buzzer 0E4D                                  _millis 0028  
                                _potraw 00BC                               ??_readADC 0075  
                                saved_w 007E              __end_of_check_button_press 0697  
                          ?_setupTimer0 0071                          _EEPROM_Write16 0DA7  
               __end_of__initialization 0032                          __pcstackCOMMON 0071  
                __end_of_trigger_buzzer 0E74                            __pidataBANK0 0D8A  
                          __pidataBANK1 0DC5                           _lastflowcheck 0030  
                        _OPTION_REGbits 0081          trigger_buzzer@duration_seconds 0073  
                       _lastsensorcheck 0020                  __end_of_EEPROM_Write16 0DB6  
                          _EEPROM_Write 0DE6                              __pbssBANK0 0020  
                            __pbssBANK1 00A0                           ?_saveSettings 0047  
                            __pmaintext 0035                         ?_trigger_buzzer 0073  
                               ?___lmul 0047                                 ?___wmul 005C  
                            __pintentry 0004                          ___lmul@product 0074  
                       _minvoltagelimit 0068                         _seconds_counter 002C  
                       ?_EEPROM_Write16 0075                           _reading_count 007B  
                        ??_saveSettings 0078                              _flowactive 0034  
                               ___lldiv 0697                              _initSystem 0E74  
                            _init_timer 0DD5                                 __ptext1 0E4D  
                               __ptext2 0DB6                                 __ptext3 0D99  
                               __ptext4 0ECA                                 __ptext5 0DA7  
                               __ptext6 0DE6                                 __ptext7 0E04  
                               __ptext8 0DD5                                 __ptext9 0E74  
                               _readADC 0E04                               _T1CONbits 0010  
                    _startSensorReading 0DB6                              _dryruntime 00B8  
                         _buzzer_active 0032                              _maxruntime 00BE  
                 _low_sensor_high_count 007A                                 clrloop0 0D92  
                               _voltage 0040                    end_of_initialization 0032  
                   ?_startSensorReading 0071                           _buzzer_update 06FD  
                    EEPROM_Write16@data 0075                         ___lldiv@divisor 004F  
                       ___lldiv@counter 005B             getSensorResults@high_active 0074  
                  ??_startSensorReading 0073                 saveSettings@value16bit1 0047  
               saveSettings@value16bit2 0049                 saveSettings@value16bit3 004B  
               saveSettings@value16bit4 004D                               _PORTAbits 0005  
                             _PORTBbits 0006                               _PORTCbits 0007  
                        ?_buzzer_update 0071             getSensorResults@flow_active 0075  
                    _check_button_press 062B                              _voltageraw 00BA  
                            _voltagesum 00B6                          __end_of___lmul 07ED  
                           ?_initSystem 0071                          __end_of___wmul 0E4D  
                   ?_check_button_press 0071                             ?_init_timer 0071  
                    _high_sensor_active 0045                _sensors_reading_complete 003D  
                  __end_of_saveSettings 0F00                     start_initialization 000D  
                      _getSensorResults 0E9C                             __end_of_isr 07A5  
                  ??_check_button_press 0073                        ??_trigger_buzzer 0075  
                 EEPROM_Write16@address 0077                                ??___lmul 0073  
                              ??___wmul 0079                              init_fetch0 07ED  
                           __pdataBANK0 0064                             __pdataBANK1 00BE  
                      ??_EEPROM_Write16 0077                   saveSettings@value8bit 0078  
                           __pbssCOMMON 007A                               ___latbits 0001  
                         __pcstackBANK0 0047                           __pcstackBANK1 00CE  
                       ??_buzzer_update 0047                                ?___lldiv 004F  
                              ?_readADC 0073                               _mannualon 003B  
                     interrupt_function 0004                          ___wmul@product 0060  
                             clear_ram0 0D91                                _PIE1bits 008C  
                             _tankempty 0036                                _PIR1bits 000C  
                        _motorstarttime 00A8                              _ADCON0bits 001F  
                     ___wmul@multiplier 005C                         _buzzer_duration 00B4  
                         ??_setupTimer0 0073                       ___lmul@multiplier 0047  
                 _minimumrunningvoltage 0064                              _EECON1bits 018C  
check_button_press@long_press_threshold 0075                            _saveSettings 0ECA  
              __end_of_getSensorResults 0ECA                           _preflowactive 0033  
                          ??_initSystem 0073                             _last_millis 00B0  
                          ??_init_timer 0073                          readADC@channel 0076  
            getSensorResults@low_active 0073                        _lastvoltageerror 0024  
                              __ptext10 0E9C                                __ptext11 062B  
                              __ptext12 06FD                                __ptext13 0E26  
                              __ptext14 07A5                                __ptext15 0697  
                              __ptext16 075B                           ?_EEPROM_Write 0073  
                    __end_of_initSystem 0E9C                     __end_of_setupTimer0 0DA7  
                    __end_of_init_timer 0DE6                             _dryrunerror 0039  
                    _flow_sensor_active 0044                              _INTCONbits 000B  
                              init_ram0 07F1                          ??_EEPROM_Write 0074  
                              intlevel1 0000                            _sensorbuffer 00C8  
                      ___lldiv@dividend 0053                              _OSCCONbits 008F  
                          _pretankempty 0035                            _motorrunning 0037  
          check_button_press@hold_count 0077                         _maxvoltagelimit 0066  
                       _maxruntimeindex 006A                            _settingsmode 0041  
                      ___lldiv@quotient 0057                   _maximumrinningvoltage 00CA  
                          _timeouterror 0038                  _high_sensor_high_count 003F  
                _flow_sensor_high_count 003E                             _setupTimer0 0D99  
                 __end_of_buzzer_update 075B            check_button_press@long_press 0079  
                   EEPROM_Write@address 0074  
