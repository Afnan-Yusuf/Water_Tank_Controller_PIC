

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Apr 17 13:19:30 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,space=0,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 12/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F883 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0004                     fsr             equ	4
    74     0004                     fsr0            equ	4
    75     0000                     indf            equ	0
    76     0000                     indf0           equ	0
    77     0002                     pc              equ	2
    78     0002                     pcl             equ	2
    79     000A                     pclath          equ	10
    80     0003                     status          equ	3
    81     0000                     INDF            equ	0	;# 
    82     0001                     TMR0            equ	1	;# 
    83     0002                     PCL             equ	2	;# 
    84     0003                     STATUS          equ	3	;# 
    85     0004                     FSR             equ	4	;# 
    86     0005                     PORTA           equ	5	;# 
    87     0006                     PORTB           equ	6	;# 
    88     0007                     PORTC           equ	7	;# 
    89     0009                     PORTE           equ	9	;# 
    90     000A                     PCLATH          equ	10	;# 
    91     000B                     INTCON          equ	11	;# 
    92     000C                     PIR1            equ	12	;# 
    93     000D                     PIR2            equ	13	;# 
    94     000E                     TMR1            equ	14	;# 
    95     000E                     TMR1L           equ	14	;# 
    96     000F                     TMR1H           equ	15	;# 
    97     0010                     T1CON           equ	16	;# 
    98     0011                     TMR2            equ	17	;# 
    99     0012                     T2CON           equ	18	;# 
   100     0013                     SSPBUF          equ	19	;# 
   101     0014                     SSPCON          equ	20	;# 
   102     0015                     CCPR1           equ	21	;# 
   103     0015                     CCPR1L          equ	21	;# 
   104     0016                     CCPR1H          equ	22	;# 
   105     0017                     CCP1CON         equ	23	;# 
   106     0018                     RCSTA           equ	24	;# 
   107     0019                     TXREG           equ	25	;# 
   108     001A                     RCREG           equ	26	;# 
   109     001B                     CCPR2           equ	27	;# 
   110     001B                     CCPR2L          equ	27	;# 
   111     001C                     CCPR2H          equ	28	;# 
   112     001D                     CCP2CON         equ	29	;# 
   113     001E                     ADRESH          equ	30	;# 
   114     001F                     ADCON0          equ	31	;# 
   115     0081                     OPTION_REG      equ	129	;# 
   116     0085                     TRISA           equ	133	;# 
   117     0086                     TRISB           equ	134	;# 
   118     0087                     TRISC           equ	135	;# 
   119     0089                     TRISE           equ	137	;# 
   120     008C                     PIE1            equ	140	;# 
   121     008D                     PIE2            equ	141	;# 
   122     008E                     PCON            equ	142	;# 
   123     008F                     OSCCON          equ	143	;# 
   124     0090                     OSCTUNE         equ	144	;# 
   125     0091                     SSPCON2         equ	145	;# 
   126     0092                     PR2             equ	146	;# 
   127     0093                     SSPADD          equ	147	;# 
   128     0093                     SSPMSK          equ	147	;# 
   129     0093                     MSK             equ	147	;# 
   130     0094                     SSPSTAT         equ	148	;# 
   131     0095                     WPUB            equ	149	;# 
   132     0096                     IOCB            equ	150	;# 
   133     0097                     VRCON           equ	151	;# 
   134     0098                     TXSTA           equ	152	;# 
   135     0099                     SPBRG           equ	153	;# 
   136     009A                     SPBRGH          equ	154	;# 
   137     009B                     PWM1CON         equ	155	;# 
   138     009C                     ECCPAS          equ	156	;# 
   139     009D                     PSTRCON         equ	157	;# 
   140     009E                     ADRESL          equ	158	;# 
   141     009F                     ADCON1          equ	159	;# 
   142     0105                     WDTCON          equ	261	;# 
   143     0107                     CM1CON0         equ	263	;# 
   144     0108                     CM2CON0         equ	264	;# 
   145     0109                     CM2CON1         equ	265	;# 
   146     010C                     EEDATA          equ	268	;# 
   147     010C                     EEDAT           equ	268	;# 
   148     010D                     EEADR           equ	269	;# 
   149     010E                     EEDATH          equ	270	;# 
   150     010F                     EEADRH          equ	271	;# 
   151     0185                     SRCON           equ	389	;# 
   152     0187                     BAUDCTL         equ	391	;# 
   153     0188                     ANSEL           equ	392	;# 
   154     0189                     ANSELH          equ	393	;# 
   155     018C                     EECON1          equ	396	;# 
   156     018D                     EECON2          equ	397	;# 
   157     0000                     INDF            equ	0	;# 
   158     0001                     TMR0            equ	1	;# 
   159     0002                     PCL             equ	2	;# 
   160     0003                     STATUS          equ	3	;# 
   161     0004                     FSR             equ	4	;# 
   162     0005                     PORTA           equ	5	;# 
   163     0006                     PORTB           equ	6	;# 
   164     0007                     PORTC           equ	7	;# 
   165     0009                     PORTE           equ	9	;# 
   166     000A                     PCLATH          equ	10	;# 
   167     000B                     INTCON          equ	11	;# 
   168     000C                     PIR1            equ	12	;# 
   169     000D                     PIR2            equ	13	;# 
   170     000E                     TMR1            equ	14	;# 
   171     000E                     TMR1L           equ	14	;# 
   172     000F                     TMR1H           equ	15	;# 
   173     0010                     T1CON           equ	16	;# 
   174     0011                     TMR2            equ	17	;# 
   175     0012                     T2CON           equ	18	;# 
   176     0013                     SSPBUF          equ	19	;# 
   177     0014                     SSPCON          equ	20	;# 
   178     0015                     CCPR1           equ	21	;# 
   179     0015                     CCPR1L          equ	21	;# 
   180     0016                     CCPR1H          equ	22	;# 
   181     0017                     CCP1CON         equ	23	;# 
   182     0018                     RCSTA           equ	24	;# 
   183     0019                     TXREG           equ	25	;# 
   184     001A                     RCREG           equ	26	;# 
   185     001B                     CCPR2           equ	27	;# 
   186     001B                     CCPR2L          equ	27	;# 
   187     001C                     CCPR2H          equ	28	;# 
   188     001D                     CCP2CON         equ	29	;# 
   189     001E                     ADRESH          equ	30	;# 
   190     001F                     ADCON0          equ	31	;# 
   191     0081                     OPTION_REG      equ	129	;# 
   192     0085                     TRISA           equ	133	;# 
   193     0086                     TRISB           equ	134	;# 
   194     0087                     TRISC           equ	135	;# 
   195     0089                     TRISE           equ	137	;# 
   196     008C                     PIE1            equ	140	;# 
   197     008D                     PIE2            equ	141	;# 
   198     008E                     PCON            equ	142	;# 
   199     008F                     OSCCON          equ	143	;# 
   200     0090                     OSCTUNE         equ	144	;# 
   201     0091                     SSPCON2         equ	145	;# 
   202     0092                     PR2             equ	146	;# 
   203     0093                     SSPADD          equ	147	;# 
   204     0093                     SSPMSK          equ	147	;# 
   205     0093                     MSK             equ	147	;# 
   206     0094                     SSPSTAT         equ	148	;# 
   207     0095                     WPUB            equ	149	;# 
   208     0096                     IOCB            equ	150	;# 
   209     0097                     VRCON           equ	151	;# 
   210     0098                     TXSTA           equ	152	;# 
   211     0099                     SPBRG           equ	153	;# 
   212     009A                     SPBRGH          equ	154	;# 
   213     009B                     PWM1CON         equ	155	;# 
   214     009C                     ECCPAS          equ	156	;# 
   215     009D                     PSTRCON         equ	157	;# 
   216     009E                     ADRESL          equ	158	;# 
   217     009F                     ADCON1          equ	159	;# 
   218     0105                     WDTCON          equ	261	;# 
   219     0107                     CM1CON0         equ	263	;# 
   220     0108                     CM2CON0         equ	264	;# 
   221     0109                     CM2CON1         equ	265	;# 
   222     010C                     EEDATA          equ	268	;# 
   223     010C                     EEDAT           equ	268	;# 
   224     010D                     EEADR           equ	269	;# 
   225     010E                     EEDATH          equ	270	;# 
   226     010F                     EEADRH          equ	271	;# 
   227     0185                     SRCON           equ	389	;# 
   228     0187                     BAUDCTL         equ	391	;# 
   229     0188                     ANSEL           equ	392	;# 
   230     0189                     ANSELH          equ	393	;# 
   231     018C                     EECON1          equ	396	;# 
   232     018D                     EECON2          equ	397	;# 
   233                           
   234                           	psect	idataBANK0
   235     06C6                     __pidataBANK0:
   236                           
   237                           ;initializer for _maxvoltageerrortime
   238     06C6  340A               	retlw	10
   239     06C7  3400               	retlw	0
   240                           
   241                           ;initializer for _maximumrinningvoltage
   242     06C8  341D               	retlw	29
   243     06C9  3401               	retlw	1
   244                           
   245                           ;initializer for _minimumrunningvoltage
   246     06CA  34AA               	retlw	170
   247     06CB  3400               	retlw	0
   248                           
   249                           ;initializer for _maxvoltagelimit
   250     06CC  34FF               	retlw	255
   251     06CD  3400               	retlw	0
   252                           
   253                           ;initializer for _minvoltagelimit
   254     06CE  3488               	retlw	136
   255     06CF  3404               	retlw	4
   256                           
   257                           ;initializer for _maxruntimeindex
   258     06D0  3403               	retlw	3
   259                           
   260                           	psect	idataBANK1
   261     06D1                     __pidataBANK1:
   262                           
   263                           ;initializer for _maxruntime
   264     06D1  341E               	retlw	30
   265     06D2  3400               	retlw	0
   266     06D3  342D               	retlw	45
   267     06D4  3400               	retlw	0
   268     06D5  343C               	retlw	60
   269     06D6  3400               	retlw	0
   270     06D7  3478               	retlw	120
   271     06D8  3400               	retlw	0
   272     06D9  34FF               	retlw	255
   273     06DA  34FF               	retlw	255
   274     0010                     _T1CONbits      set	16
   275     0010                     _T1CON          set	16
   276     0006                     _PORTBbits      set	6
   277     000E                     _TMR1L          set	14
   278     000F                     _TMR1H          set	15
   279     000C                     _PIR1bits       set	12
   280     000B                     _INTCONbits     set	11
   281     0001                     _TMR0           set	1
   282     001E                     _ADRESH         set	30
   283     001F                     _ADCON0bits     set	31
   284     0007                     _PORTC          set	7
   285     0006                     _PORTB          set	6
   286     0005                     _PORTA          set	5
   287     001F                     _ADCON0         set	31
   288     0007                     _PORTCbits      set	7
   289     0005                     _PORTAbits      set	5
   290     008C                     _PIE1bits       set	140
   291     0081                     _OPTION_REGbits set	129
   292     009E                     _ADRESL         set	158
   293     009F                     _ADCON1         set	159
   294     0087                     _TRISC          set	135
   295     0086                     _TRISB          set	134
   296     0085                     _TRISA          set	133
   297     008F                     _OSCCONbits     set	143
   298     010C                     _EEDATA         set	268
   299     010D                     _EEADR          set	269
   300     018D                     _EECON2         set	397
   301     018C                     _EECON1bits     set	396
   302     0189                     _ANSELH         set	393
   303     0188                     _ANSEL          set	392
   304                           
   305                           	psect	cinit
   306     000E                     start_initialization:	
   307                           ; #config settings
   308                           
   309     000E                     __initialization:
   310                           
   311                           ; Initialize objects allocated to BANK1
   312     000E  1383               	bcf	3,7	;select IRP bank0
   313     000F  30AA               	movlw	low (__pdataBANK1+10)
   314     0010  00FD               	movwf	btemp+-1
   315     0011  3006               	movlw	high __pidataBANK1
   316     0012  00FE               	movwf	btemp
   317     0013  30D1               	movlw	low __pidataBANK1
   318     0014  00FF               	movwf	btemp+1
   319     0015  30A0               	movlw	low __pdataBANK1
   320     0016  0084               	movwf	4
   321     0017  118A  267C  118A   	fcall	init_ram0
   322                           
   323                           ; Initialize objects allocated to BANK0
   324     001A  306E               	movlw	low (__pdataBANK0+11)
   325     001B  00FD               	movwf	btemp+-1
   326     001C  3006               	movlw	high __pidataBANK0
   327     001D  00FE               	movwf	btemp
   328     001E  30C6               	movlw	low __pidataBANK0
   329     001F  00FF               	movwf	btemp+1
   330     0020  3063               	movlw	low __pdataBANK0
   331     0021  0084               	movwf	4
   332     0022  118A  267C  118A   	fcall	init_ram0
   333                           
   334                           ; Clear objects allocated to BANK1
   335     0025  30AA               	movlw	low __pbssBANK1
   336     0026  0084               	movwf	4
   337     0027  30B2               	movlw	low (__pbssBANK1+8)
   338     0028  118A  26DB  118A   	fcall	clear_ram0
   339                           
   340                           ; Clear objects allocated to BANK0
   341     002B  3020               	movlw	low __pbssBANK0
   342     002C  0084               	movwf	4
   343     002D  3046               	movlw	low (__pbssBANK0+38)
   344     002E  118A  26DB  118A   	fcall	clear_ram0
   345                           
   346                           ; Clear objects allocated to COMMON
   347     0031  01F9               	clrf	__pbssCOMMON& (0+127)
   348     0032  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   349     0033                     end_of_initialization:	
   350                           ;End of C runtime variable initialization code
   351                           
   352     0033                     __end_of__initialization:
   353     0033  0183               	clrf	3
   354     0034  118A  2836         	ljmp	_main	;jump to C main() function
   355                           
   356                           	psect	bssCOMMON
   357     0079                     __pbssCOMMON:
   358     0079                     _low_sensor_high_count:
   359     0079                     	ds	1
   360     007A                     _reading_count:
   361     007A                     	ds	1
   362                           
   363                           	psect	bssBANK0
   364     0020                     __pbssBANK0:
   365     0020                     _lastvoltageerror:
   366     0020                     	ds	4
   367     0024                     _lastdryruncheck:
   368     0024                     	ds	4
   369     0028                     _seconds_counter:
   370     0028                     	ds	4
   371     002C                     _buzzer_duration:
   372     002C                     	ds	2
   373     002E                     _voltagesum:
   374     002E                     	ds	2
   375     0030                     _dryruntime:
   376     0030                     	ds	2
   377     0032                     _voltageraw:
   378     0032                     	ds	2
   379     0034                     _potraw:
   380     0034                     	ds	2
   381     0036                     _buzzer_active:
   382     0036                     	ds	1
   383     0037                     _waterreached:
   384     0037                     	ds	1
   385     0038                     _taknkfull:
   386     0038                     	ds	1
   387     0039                     _tankempty:
   388     0039                     	ds	1
   389     003A                     _motorrunning:
   390     003A                     	ds	1
   391     003B                     _timeouterror:
   392     003B                     	ds	1
   393     003C                     _dryrunerror:
   394     003C                     	ds	1
   395     003D                     _voltageerror:
   396     003D                     	ds	1
   397     003E                     _sensors_reading_in_progress:
   398     003E                     	ds	1
   399     003F                     _sensors_reading_complete:
   400     003F                     	ds	1
   401     0040                     _flow_sensor_high_count:
   402     0040                     	ds	1
   403     0041                     _high_sensor_high_count:
   404     0041                     	ds	1
   405     0042                     _voltage:
   406     0042                     	ds	1
   407     0043                     _settingsmode:
   408     0043                     	ds	1
   409     0044                     _smc:
   410     0044                     	ds	1
   411     0045                     _to:
   412     0045                     	ds	1
   413                           
   414                           	psect	dataBANK0
   415     0063                     __pdataBANK0:
   416     0063                     _maxvoltageerrortime:
   417     0063                     	ds	2
   418     0065                     _maximumrinningvoltage:
   419     0065                     	ds	2
   420     0067                     _minimumrunningvoltage:
   421     0067                     	ds	2
   422     0069                     _maxvoltagelimit:
   423     0069                     	ds	2
   424     006B                     _minvoltagelimit:
   425     006B                     	ds	2
   426     006D                     _maxruntimeindex:
   427     006D                     	ds	1
   428                           
   429                           	psect	bssBANK1
   430     00AA                     __pbssBANK1:
   431     00AA                     _buzzer_start_time:
   432     00AA                     	ds	4
   433     00AE                     _motorstarttime:
   434     00AE                     	ds	4
   435                           
   436                           	psect	dataBANK1
   437     00A0                     __pdataBANK1:
   438     00A0                     _maxruntime:
   439     00A0                     	ds	10
   440                           
   441                           	psect	inittext
   442     0678                     init_fetch0:	
   443                           ;	Called with low address in FSR and high address in W
   444                           
   445     0678  087E               	movf	btemp,w
   446     0679  008A               	movwf	10
   447     067A  087F               	movf	btemp+1,w
   448     067B  0082               	movwf	2
   449     067C                     init_ram0:	
   450                           ;Called with:
   451                           ;	high address of idata address in btemp 
   452                           ;	low address of idata address in btemp+1 
   453                           ;	low address of data in FSR
   454                           ;	high address + 1 of data in btemp-1
   455                           
   456     067C  118A  2678  118A   	fcall	init_fetch0
   457     067F  0080               	movwf	0
   458     0680  0A84               	incf	4,f
   459     0681  0804               	movf	4,w
   460     0682  067D               	xorwf	btemp+-1,w
   461     0683  1903               	btfsc	3,2
   462     0684  3400               	retlw	0
   463     0685  0AFF               	incf	btemp+1,f
   464     0686  1903               	btfsc	3,2
   465     0687  0AFE               	incf	btemp,f
   466     0688  2E7C               	goto	init_ram0
   467                           
   468                           	psect	clrtext
   469     06DB                     clear_ram0:	
   470                           ;	Called with FSR containing the base address, and
   471                           ;	W with the last address+1
   472                           
   473     06DB  0064               	clrwdt	;clear the watchdog before getting into this loop
   474     06DC                     clrloop0:
   475     06DC  0180               	clrf	0	;clear RAM location pointed to by FSR
   476     06DD  0A84               	incf	4,f	;increment pointer
   477     06DE  0604               	xorwf	4,w	;XOR with final address
   478     06DF  1903               	btfsc	3,2	;have we reached the end yet?
   479     06E0  3400               	retlw	0	;all done for this memory range, return
   480     06E1  0604               	xorwf	4,w	;XOR again to restore value
   481     06E2  2EDC               	goto	clrloop0	;do the next byte
   482                           
   483                           	psect	cstackBANK1
   484     00B2                     __pcstackBANK1:
   485     00B2                     main@i_450:
   486                           
   487                           ; 1 bytes @ 0x0
   488     00B2                     	ds	1
   489     00B3                     main@flow_sensor_active:
   490                           
   491                           ; 1 bytes @ 0x1
   492     00B3                     	ds	1
   493     00B4                     main@low_sensor_active:
   494                           
   495                           ; 1 bytes @ 0x2
   496     00B4                     	ds	1
   497     00B5                     main@high_sensor_active:
   498                           
   499                           ; 1 bytes @ 0x3
   500     00B5                     	ds	1
   501     00B6                     main@i:
   502                           
   503                           ; 1 bytes @ 0x4
   504     00B6                     	ds	1
   505                           
   506                           	psect	cstackCOMMON
   507     0071                     __pcstackCOMMON:
   508     0071                     ?_initSystem:
   509     0071                     ?_init_timer:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0071                     ?_buzzer_update:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0071                     ?_setupTimer0:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0071                     ?_startSensorReading:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0071                     ?_buzzer_beep:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0071                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0071                     ?_isr:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0071                     ?_EEPROM_Read:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0071                     _buzzer_beep$0:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0071                     ??_buzzer_beep:	
   537                           ; 2 bytes @ 0x0
   538                           
   539     0071                     ??_isr:	
   540                           ; 1 bytes @ 0x0
   541                           
   542                           
   543                           ; 1 bytes @ 0x0
   544     0071                     	ds	2
   545     0073                     ?_getSensorResults:
   546     0073                     ?_EEPROM_Write:	
   547                           ; 1 bytes @ 0x2
   548                           
   549     0073                     ?_readADC:	
   550                           ; 1 bytes @ 0x2
   551                           
   552     0073                     getSensorResults@low_active:	
   553                           ; 2 bytes @ 0x2
   554                           
   555     0073                     EEPROM_Write@data:	
   556                           ; 1 bytes @ 0x2
   557                           
   558     0073                     EEPROM_Read@address:	
   559                           ; 1 bytes @ 0x2
   560                           
   561     0073                     ??_initSystem:	
   562                           ; 1 bytes @ 0x2
   563                           
   564     0073                     ??_init_timer:	
   565                           ; 1 bytes @ 0x2
   566                           
   567     0073                     ??_setupTimer0:	
   568                           ; 1 bytes @ 0x2
   569                           
   570     0073                     ??_startSensorReading:	
   571                           ; 1 bytes @ 0x2
   572                           
   573     0073                     ??_EEPROM_Read:	
   574                           ; 1 bytes @ 0x2
   575                           
   576     0073                     ??___lmul:	
   577                           ; 1 bytes @ 0x2
   578                           
   579     0073                     ??___llmod:	
   580                           ; 1 bytes @ 0x2
   581                           
   582                           
   583                           ; 1 bytes @ 0x2
   584     0073                     	ds	1
   585     0074                     ?_EEPROM_Read16:
   586     0074                     getSensorResults@high_active:	
   587                           ; 2 bytes @ 0x3
   588                           
   589     0074                     EEPROM_Write@address:	
   590                           ; 1 bytes @ 0x3
   591                           
   592     0074                     ___llmod@counter:	
   593                           ; 1 bytes @ 0x3
   594                           
   595     0074                     ___lmul@product:	
   596                           ; 1 bytes @ 0x3
   597                           
   598     0074                     ??_EEPROM_Write:	
   599                           ; 4 bytes @ 0x3
   600                           
   601                           
   602                           ; 1 bytes @ 0x3
   603     0074                     	ds	1
   604     0075                     ?_EEPROM_Write16:
   605     0075                     getSensorResults@flow_active:	
   606                           ; 1 bytes @ 0x4
   607                           
   608     0075                     EEPROM_Write16@data:	
   609                           ; 1 bytes @ 0x4
   610                           
   611     0075                     ??_readADC:	
   612                           ; 2 bytes @ 0x4
   613                           
   614                           
   615                           ; 1 bytes @ 0x4
   616     0075                     	ds	1
   617     0076                     readADC@channel:
   618     0076                     ??_getSensorResults:	
   619                           ; 1 bytes @ 0x5
   620                           
   621     0076                     ??_EEPROM_Read16:	
   622                           ; 1 bytes @ 0x5
   623                           
   624                           
   625                           ; 1 bytes @ 0x5
   626     0076                     	ds	1
   627     0077                     EEPROM_Write16@address:
   628     0077                     ??_EEPROM_Write16:	
   629                           ; 1 bytes @ 0x6
   630                           
   631                           
   632                           ; 1 bytes @ 0x6
   633     0077                     	ds	1
   634     0078                     saveSettings@value8bit:
   635     0078                     ??_loadSettings:	
   636                           ; 1 bytes @ 0x7
   637                           
   638     0078                     ??_saveSettings:	
   639                           ; 1 bytes @ 0x7
   640                           
   641     0078                     ??___lldiv:	
   642                           ; 1 bytes @ 0x7
   643                           
   644                           
   645                           ; 1 bytes @ 0x7
   646     0078                     	ds	1
   647                           
   648                           	psect	cstackBANK0
   649     0046                     __pcstackBANK0:
   650     0046                     ?_saveSettings:
   651     0046                     ?___lmul:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0046                     ?___llmod:	
   655                           ; 4 bytes @ 0x0
   656                           
   657     0046                     EEPROM_Read16@result:	
   658                           ; 4 bytes @ 0x0
   659                           
   660     0046                     saveSettings@value16bit1:	
   661                           ; 2 bytes @ 0x0
   662                           
   663     0046                     ___lmul@multiplier:	
   664                           ; 2 bytes @ 0x0
   665                           
   666     0046                     ___llmod@divisor:	
   667                           ; 4 bytes @ 0x0
   668                           
   669     0046                     ??_buzzer_update:	
   670                           ; 4 bytes @ 0x0
   671                           
   672                           
   673                           ; 1 bytes @ 0x0
   674     0046                     	ds	2
   675     0048                     EEPROM_Read16@address:
   676     0048                     saveSettings@value16bit2:	
   677                           ; 1 bytes @ 0x2
   678                           
   679                           
   680                           ; 2 bytes @ 0x2
   681     0048                     	ds	1
   682     0049                     ?_loadSettings:
   683     0049                     loadSettings@value8bit:	
   684                           ; 1 bytes @ 0x3
   685                           
   686                           
   687                           ; 1 bytes @ 0x3
   688     0049                     	ds	1
   689     004A                     loadSettings@value16bit1:
   690     004A                     saveSettings@value16bit3:	
   691                           ; 1 bytes @ 0x4
   692                           
   693     004A                     ___lmul@multiplicand:	
   694                           ; 2 bytes @ 0x4
   695                           
   696     004A                     ___llmod@dividend:	
   697                           ; 4 bytes @ 0x4
   698                           
   699                           
   700                           ; 4 bytes @ 0x4
   701     004A                     	ds	1
   702     004B                     loadSettings@value16bit2:
   703                           
   704                           ; 1 bytes @ 0x5
   705     004B                     	ds	1
   706     004C                     loadSettings@value16bit3:
   707     004C                     saveSettings@value16bit4:	
   708                           ; 1 bytes @ 0x6
   709                           
   710                           
   711                           ; 2 bytes @ 0x6
   712     004C                     	ds	1
   713     004D                     loadSettings@value16bit4:
   714                           
   715                           ; 1 bytes @ 0x7
   716     004D                     	ds	1
   717     004E                     ?___lldiv:
   718     004E                     ___lldiv@divisor:	
   719                           ; 4 bytes @ 0x8
   720                           
   721                           
   722                           ; 4 bytes @ 0x8
   723     004E                     	ds	4
   724     0052                     ___lldiv@dividend:
   725                           
   726                           ; 4 bytes @ 0xC
   727     0052                     	ds	4
   728     0056                     ___lldiv@quotient:
   729                           
   730                           ; 4 bytes @ 0x10
   731     0056                     	ds	4
   732     005A                     ___lldiv@counter:
   733                           
   734                           ; 1 bytes @ 0x14
   735     005A                     	ds	1
   736     005B                     ??_main:
   737                           
   738                           ; 1 bytes @ 0x15
   739     005B                     	ds	8
   740                           
   741                           	psect	maintext
   742     0036                     __pmaintext:	
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 105 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  i               1    0[BANK1 ] unsigned char 
   753 ;;  high_sensor_    1    3[BANK1 ] _Bool 
   754 ;;  low_sensor_a    1    2[BANK1 ] _Bool 
   755 ;;  flow_sensor_    1    1[BANK1 ] _Bool 
   756 ;;  i               1    4[BANK1 ] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : B00/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   766 ;;      Params:         0       0       0       0
   767 ;;      Locals:         0       0       5       0
   768 ;;      Temps:          0       8       0       0
   769 ;;      Totals:         0       8       5       0
   770 ;;Total ram usage:       13 bytes
   771 ;; Hardware stack levels required when called: 4
   772 ;; This function calls:
   773 ;;		___lldiv
   774 ;;		___llmod
   775 ;;		___lmul
   776 ;;		_buzzer_beep
   777 ;;		_buzzer_update
   778 ;;		_getSensorResults
   779 ;;		_initSystem
   780 ;;		_init_timer
   781 ;;		_loadSettings
   782 ;;		_readADC
   783 ;;		_saveSettings
   784 ;;		_setupTimer0
   785 ;;		_startSensorReading
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791     0036                     _main:	
   792                           ;psect for function _main
   793                           
   794     0036                     l1863:	
   795                           ;incstack = 0
   796                           ; Regs used in _main: [allreg]
   797                           
   798                           
   799                           ;main.c: 108:   initSystem();
   800     0036  118A  25D8  118A   	fcall	_initSystem
   801     0039                     l1865:
   802                           
   803                           ;main.c: 110:   if (!loadSettings(&maxruntimeindex, &minvoltagelimit, &maxvoltagelimit,
   804     0039  306D               	movlw	(low (_maxruntimeindex| 0))& (0+255)
   805     003A  1283               	bcf	3,5	;RP0=0, select bank0
   806     003B  1303               	bcf	3,6	;RP1=0, select bank0
   807     003C  00C9               	movwf	loadSettings@value8bit
   808     003D  306B               	movlw	(low (_minvoltagelimit| 0))& (0+255)
   809     003E  00CA               	movwf	loadSettings@value16bit1
   810     003F  3069               	movlw	(low (_maxvoltagelimit| 0))& (0+255)
   811     0040  00CB               	movwf	loadSettings@value16bit2
   812     0041  3067               	movlw	(low (_minimumrunningvoltage| 0))& (0+255)
   813     0042  00CC               	movwf	loadSettings@value16bit3
   814     0043  3065               	movlw	(low (_maximumrinningvoltage| 0))& (0+255)
   815     0044  00CD               	movwf	loadSettings@value16bit4
   816     0045  118A  24DD  118A   	fcall	_loadSettings
   817     0048  3A00               	xorlw	0
   818     0049  1D03               	skipz
   819     004A  284C               	goto	u2081
   820     004B  284D               	goto	u2080
   821     004C                     u2081:
   822     004C  2874               	goto	l1879
   823     004D                     u2080:
   824     004D                     l1867:
   825                           
   826                           ;main.c: 111:                     &minimumrunningvoltage, &maximumrinningvoltage)) {;mai
      +                          n.c: 113:     maxruntimeindex = 0;
   827     004D  1283               	bcf	3,5	;RP0=0, select bank0
   828     004E  1303               	bcf	3,6	;RP1=0, select bank0
   829     004F  01ED               	clrf	_maxruntimeindex
   830     0050                     l1869:
   831                           
   832                           ;main.c: 114:     minvoltagelimit = 1160;
   833     0050  3088               	movlw	136
   834     0051  00EB               	movwf	_minvoltagelimit
   835     0052  3004               	movlw	4
   836     0053  00EC               	movwf	_minvoltagelimit+1
   837     0054                     l1871:
   838                           
   839                           ;main.c: 115:     maxvoltagelimit = 255;
   840     0054  30FF               	movlw	255
   841     0055  00E9               	movwf	_maxvoltagelimit
   842     0056  3000               	movlw	0
   843     0057  00EA               	movwf	_maxvoltagelimit+1
   844     0058                     l1873:
   845                           
   846                           ;main.c: 116:     minimumrunningvoltage = 170;
   847     0058  30AA               	movlw	170
   848     0059  00E7               	movwf	_minimumrunningvoltage
   849     005A  3000               	movlw	0
   850     005B  00E8               	movwf	_minimumrunningvoltage+1
   851     005C                     l1875:
   852                           
   853                           ;main.c: 117:     maximumrinningvoltage = 285;
   854     005C  301D               	movlw	29
   855     005D  00E5               	movwf	_maximumrinningvoltage
   856     005E  3001               	movlw	1
   857     005F  00E6               	movwf	_maximumrinningvoltage+1
   858     0060                     l1877:
   859                           
   860                           ;main.c: 120:     saveSettings(maxruntimeindex, minvoltagelimit, maxvoltagelimit,
   861     0060  086C               	movf	_minvoltagelimit+1,w
   862     0061  00C7               	movwf	saveSettings@value16bit1+1
   863     0062  086B               	movf	_minvoltagelimit,w
   864     0063  00C6               	movwf	saveSettings@value16bit1
   865     0064  086A               	movf	_maxvoltagelimit+1,w
   866     0065  00C9               	movwf	saveSettings@value16bit2+1
   867     0066  0869               	movf	_maxvoltagelimit,w
   868     0067  00C8               	movwf	saveSettings@value16bit2
   869     0068  0868               	movf	_minimumrunningvoltage+1,w
   870     0069  00CB               	movwf	saveSettings@value16bit3+1
   871     006A  0867               	movf	_minimumrunningvoltage,w
   872     006B  00CA               	movwf	saveSettings@value16bit3
   873     006C  0866               	movf	_maximumrinningvoltage+1,w
   874     006D  00CD               	movwf	saveSettings@value16bit4+1
   875     006E  0865               	movf	_maximumrinningvoltage,w
   876     006F  00CC               	movwf	saveSettings@value16bit4
   877     0070  086D               	movf	_maxruntimeindex,w
   878     0071  118A  2574  118A   	fcall	_saveSettings
   879     0074                     l1879:
   880                           
   881                           ;main.c: 123:   potraw = readADC(4);
   882     0074  3004               	movlw	4
   883     0075  118A  2626  118A   	fcall	_readADC
   884     0078  0874               	movf	?_readADC+1,w
   885     0079  1283               	bcf	3,5	;RP0=0, select bank0
   886     007A  1303               	bcf	3,6	;RP1=0, select bank0
   887     007B  00B5               	movwf	_potraw+1
   888     007C  0873               	movf	?_readADC,w
   889     007D  00B4               	movwf	_potraw
   890     007E                     l1881:
   891                           
   892                           ;main.c: 124:   dryruntime = (((uint32_t)potraw * 360) / 1023) + 120;
   893     007E  3000               	movlw	0
   894     007F  00D1               	movwf	___lldiv@divisor+3
   895     0080  3000               	movlw	0
   896     0081  00D0               	movwf	___lldiv@divisor+2
   897     0082  3003               	movlw	3
   898     0083  00CF               	movwf	___lldiv@divisor+1
   899     0084  30FF               	movlw	255
   900     0085  00CE               	movwf	___lldiv@divisor
   901     0086  0834               	movf	_potraw,w
   902     0087  00C6               	movwf	___lmul@multiplier
   903     0088  0835               	movf	_potraw+1,w
   904     0089  00C7               	movwf	___lmul@multiplier+1
   905     008A  01C8               	clrf	___lmul@multiplier+2
   906     008B  01C9               	clrf	___lmul@multiplier+3
   907     008C  3000               	movlw	0
   908     008D  00CD               	movwf	___lmul@multiplicand+3
   909     008E  3000               	movlw	0
   910     008F  00CC               	movwf	___lmul@multiplicand+2
   911     0090  3001               	movlw	1
   912     0091  00CB               	movwf	___lmul@multiplicand+1
   913     0092  3068               	movlw	104
   914     0093  00CA               	movwf	___lmul@multiplicand
   915     0094  118A  252C  118A   	fcall	___lmul
   916     0097  1283               	bcf	3,5	;RP0=0, select bank0
   917     0098  1303               	bcf	3,6	;RP1=0, select bank0
   918     0099  0849               	movf	?___lmul+3,w
   919     009A  00D5               	movwf	___lldiv@dividend+3
   920     009B  0848               	movf	?___lmul+2,w
   921     009C  00D4               	movwf	___lldiv@dividend+2
   922     009D  0847               	movf	?___lmul+1,w
   923     009E  00D3               	movwf	___lldiv@dividend+1
   924     009F  0846               	movf	?___lmul,w
   925     00A0  00D2               	movwf	___lldiv@dividend
   926     00A1  118A  237C  118A   	fcall	___lldiv
   927     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   928     00A5  1303               	bcf	3,6	;RP1=0, select bank0
   929     00A6  084E               	movf	?___lldiv,w
   930     00A7  3E78               	addlw	120
   931     00A8  00B0               	movwf	_dryruntime
   932     00A9  084F               	movf	?___lldiv+1,w
   933     00AA  1803               	skipnc
   934     00AB  3E01               	addlw	1
   935     00AC  3E00               	addlw	0
   936     00AD  00B1               	movwf	_dryruntime+1
   937     00AE                     l1883:
   938                           
   939                           ;main.c: 125:   for (uint8_t i = 0; i < 10; i++) {
   940     00AE  1683               	bsf	3,5	;RP0=1, select bank1
   941     00AF  1303               	bcf	3,6	;RP1=0, select bank1
   942     00B0  01B6               	clrf	main@i^(0+128)
   943     00B1                     l1885:
   944     00B1  300A               	movlw	10
   945     00B2  0236               	subwf	main@i^(0+128),w
   946     00B3  1C03               	skipc
   947     00B4  28B6               	goto	u2091
   948     00B5  28B7               	goto	u2090
   949     00B6                     u2091:
   950     00B6  28B8               	goto	l158
   951     00B7                     u2090:
   952     00B7  290E               	goto	l1917
   953     00B8                     l158:
   954                           
   955                           ;main.c: 126:     PORTAbits.RA0 = 1;
   956     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   957     00B9  1303               	bcf	3,6	;RP1=0, select bank0
   958     00BA  1405               	bsf	5,0	;volatile
   959                           
   960                           ;main.c: 127:     PORTAbits.RA1 = 1;
   961     00BB  1485               	bsf	5,1	;volatile
   962                           
   963                           ;main.c: 128:     PORTAbits.RA2 = 1;
   964     00BC  1505               	bsf	5,2	;volatile
   965                           
   966                           ;main.c: 129:     PORTAbits.RA4 = 1;
   967     00BD  1605               	bsf	5,4	;volatile
   968     00BE                     l1889:
   969                           
   970                           ;main.c: 130:     if (i == 0) {
   971     00BE  1683               	bsf	3,5	;RP0=1, select bank1
   972     00BF  1303               	bcf	3,6	;RP1=0, select bank1
   973     00C0  0836               	movf	main@i^(0+128),w
   974     00C1  1D03               	btfss	3,2
   975     00C2  28C4               	goto	u2101
   976     00C3  28C5               	goto	u2100
   977     00C4                     u2101:
   978     00C4  28CE               	goto	l1895
   979     00C5                     u2100:
   980     00C5                     l1891:
   981                           
   982                           ;main.c: 131:       if (PORTCbits.RC1 == 0) {
   983     00C5  1283               	bcf	3,5	;RP0=0, select bank0
   984     00C6  1303               	bcf	3,6	;RP1=0, select bank0
   985     00C7  1887               	btfsc	7,1	;volatile
   986     00C8  28CA               	goto	u2111
   987     00C9  28CB               	goto	u2110
   988     00CA                     u2111:
   989     00CA  28E5               	goto	l1903
   990     00CB                     u2110:
   991     00CB                     l1893:
   992                           
   993                           ;main.c: 132:         smc = 1;
   994     00CB  3001               	movlw	1
   995     00CC  00C4               	movwf	_smc
   996     00CD  28E5               	goto	l1903
   997     00CE                     l1895:
   998     00CE  3003               	movlw	3
   999     00CF  0636               	xorwf	main@i^(0+128),w
  1000     00D0  1D03               	btfss	3,2
  1001     00D1  28D3               	goto	u2121
  1002     00D2  28D4               	goto	u2120
  1003     00D3                     u2121:
  1004     00D3  28E5               	goto	l1903
  1005     00D4                     u2120:
  1006     00D4                     l1897:
  1007                           
  1008                           ;main.c: 135:       if (smc == 1) {
  1009     00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1010     00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1011     00D6  0344               	decf	_smc,w
  1012     00D7  1D03               	btfss	3,2
  1013     00D8  28DA               	goto	u2131
  1014     00D9  28DB               	goto	u2130
  1015     00DA                     u2131:
  1016     00DA  28E5               	goto	l1903
  1017     00DB                     u2130:
  1018     00DB                     l1899:
  1019                           
  1020                           ;main.c: 136:         if (PORTCbits.RC1 == 0) {
  1021     00DB  1887               	btfsc	7,1	;volatile
  1022     00DC  28DE               	goto	u2141
  1023     00DD  28DF               	goto	u2140
  1024     00DE                     u2141:
  1025     00DE  28E5               	goto	l1903
  1026     00DF                     u2140:
  1027     00DF                     l1901:
  1028                           
  1029                           ;main.c: 137:           settingsmode = 1;
  1030     00DF  3001               	movlw	1
  1031     00E0  00C3               	movwf	_settingsmode
  1032                           
  1033                           ;main.c: 138:           i = 10;
  1034     00E1  300A               	movlw	10
  1035     00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1036     00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1037     00E4  00B6               	movwf	main@i^(0+128)
  1038     00E5                     l1903:
  1039                           
  1040                           ;main.c: 142:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1041     00E5  3006               	movlw	6
  1042     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1043     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1044     00E8  00DD               	movwf	??_main+2
  1045     00E9  3013               	movlw	19
  1046     00EA  00DC               	movwf	??_main+1
  1047     00EB  30AD               	movlw	173
  1048     00EC  00DB               	movwf	??_main
  1049     00ED                     u2507:
  1050     00ED  0BDB               	decfsz	??_main,f
  1051     00EE  28ED               	goto	u2507
  1052     00EF  0BDC               	decfsz	??_main+1,f
  1053     00F0  28ED               	goto	u2507
  1054     00F1  0BDD               	decfsz	??_main+2,f
  1055     00F2  28ED               	goto	u2507
  1056     00F3  0000               	nop
  1057     00F4                     l1905:
  1058                           
  1059                           ;main.c: 143:     PORTAbits.RA0 = 0;
  1060     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1061     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1062     00F6  1005               	bcf	5,0	;volatile
  1063     00F7                     l1907:
  1064                           
  1065                           ;main.c: 144:     PORTAbits.RA1 = 0;
  1066     00F7  1085               	bcf	5,1	;volatile
  1067     00F8                     l1909:
  1068                           
  1069                           ;main.c: 145:     PORTAbits.RA2 = 0;
  1070     00F8  1105               	bcf	5,2	;volatile
  1071     00F9                     l1911:
  1072                           
  1073                           ;main.c: 146:     PORTAbits.RA4 = 0;
  1074     00F9  1205               	bcf	5,4	;volatile
  1075                           
  1076                           ;main.c: 147:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1077     00FA  3006               	movlw	6
  1078     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1079     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1080     00FD  00DD               	movwf	??_main+2
  1081     00FE  3013               	movlw	19
  1082     00FF  00DC               	movwf	??_main+1
  1083     0100  30AD               	movlw	173
  1084     0101  00DB               	movwf	??_main
  1085     0102                     u2517:
  1086     0102  0BDB               	decfsz	??_main,f
  1087     0103  2902               	goto	u2517
  1088     0104  0BDC               	decfsz	??_main+1,f
  1089     0105  2902               	goto	u2517
  1090     0106  0BDD               	decfsz	??_main+2,f
  1091     0107  2902               	goto	u2517
  1092     0108  0000               	nop
  1093     0109                     l1913:
  1094                           
  1095                           ;main.c: 148:   }
  1096     0109  3001               	movlw	1
  1097     010A  1683               	bsf	3,5	;RP0=1, select bank1
  1098     010B  1303               	bcf	3,6	;RP1=0, select bank1
  1099     010C  07B6               	addwf	main@i^(0+128),f
  1100     010D  28B1               	goto	l1885
  1101     010E                     l1917:
  1102                           
  1103                           ;main.c: 149:   init_timer();
  1104     010E  118A  2689  118A   	fcall	_init_timer
  1105                           
  1106                           ;main.c: 151:   while (settingsmode) {
  1107     0111  2934               	goto	l1923
  1108     0112                     l167:
  1109                           
  1110                           ;main.c: 152:     PORTAbits.RA0 = 0;
  1111     0112  1005               	bcf	5,0	;volatile
  1112     0113                     l1919:
  1113                           
  1114                           ;main.c: 153:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1115     0113  3006               	movlw	6
  1116     0114  1283               	bcf	3,5	;RP0=0, select bank0
  1117     0115  1303               	bcf	3,6	;RP1=0, select bank0
  1118     0116  00DD               	movwf	??_main+2
  1119     0117  3013               	movlw	19
  1120     0118  00DC               	movwf	??_main+1
  1121     0119  30AD               	movlw	173
  1122     011A  00DB               	movwf	??_main
  1123     011B                     u2527:
  1124     011B  0BDB               	decfsz	??_main,f
  1125     011C  291B               	goto	u2527
  1126     011D  0BDC               	decfsz	??_main+1,f
  1127     011E  291B               	goto	u2527
  1128     011F  0BDD               	decfsz	??_main+2,f
  1129     0120  291B               	goto	u2527
  1130     0121  0000               	nop
  1131     0122                     l1921:
  1132                           
  1133                           ;main.c: 154:     PORTAbits.RA0 = 1;
  1134     0122  1283               	bcf	3,5	;RP0=0, select bank0
  1135     0123  1303               	bcf	3,6	;RP1=0, select bank0
  1136     0124  1405               	bsf	5,0	;volatile
  1137                           
  1138                           ;main.c: 155:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1139     0125  3006               	movlw	6
  1140     0126  1283               	bcf	3,5	;RP0=0, select bank0
  1141     0127  1303               	bcf	3,6	;RP1=0, select bank0
  1142     0128  00DD               	movwf	??_main+2
  1143     0129  3013               	movlw	19
  1144     012A  00DC               	movwf	??_main+1
  1145     012B  30AD               	movlw	173
  1146     012C  00DB               	movwf	??_main
  1147     012D                     u2537:
  1148     012D  0BDB               	decfsz	??_main,f
  1149     012E  292D               	goto	u2537
  1150     012F  0BDC               	decfsz	??_main+1,f
  1151     0130  292D               	goto	u2537
  1152     0131  0BDD               	decfsz	??_main+2,f
  1153     0132  292D               	goto	u2537
  1154     0133  0000               	nop
  1155     0134                     l1923:
  1156                           
  1157                           ;main.c: 151:   while (settingsmode) {
  1158     0134  1283               	bcf	3,5	;RP0=0, select bank0
  1159     0135  1303               	bcf	3,6	;RP1=0, select bank0
  1160     0136  0843               	movf	_settingsmode,w
  1161     0137  1D03               	btfss	3,2
  1162     0138  293A               	goto	u2151
  1163     0139  293B               	goto	u2150
  1164     013A                     u2151:
  1165     013A  2912               	goto	l167
  1166     013B                     u2150:
  1167     013B                     l1925:
  1168                           
  1169                           ;main.c: 158:     buzzer_update();
  1170     013B  118A  23E2  118A   	fcall	_buzzer_update
  1171     013E                     l1927:
  1172                           
  1173                           ;main.c: 160:     for (uint8_t i = 0; i < 16; i++) {
  1174     013E  1683               	bsf	3,5	;RP0=1, select bank1
  1175     013F  1303               	bcf	3,6	;RP1=0, select bank1
  1176     0140  01B2               	clrf	main@i_450^(0+128)
  1177     0141                     l1929:
  1178     0141  3010               	movlw	16
  1179     0142  0232               	subwf	main@i_450^(0+128),w
  1180     0143  1C03               	skipc
  1181     0144  2946               	goto	u2161
  1182     0145  2947               	goto	u2160
  1183     0146                     u2161:
  1184     0146  2948               	goto	l1933
  1185     0147                     u2160:
  1186     0147  2959               	goto	l1939
  1187     0148                     l1933:
  1188                           
  1189                           ;main.c: 161:       voltagesum += readADC(3);
  1190     0148  3003               	movlw	3
  1191     0149  118A  2626  118A   	fcall	_readADC
  1192     014C  0873               	movf	?_readADC,w
  1193     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1194     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1195     014F  07AE               	addwf	_voltagesum,f
  1196     0150  1803               	skipnc
  1197     0151  0AAF               	incf	_voltagesum+1,f
  1198     0152  0874               	movf	?_readADC+1,w
  1199     0153  07AF               	addwf	_voltagesum+1,f
  1200     0154                     l1935:
  1201                           
  1202                           ;main.c: 162:     }
  1203     0154  3001               	movlw	1
  1204     0155  1683               	bsf	3,5	;RP0=1, select bank1
  1205     0156  1303               	bcf	3,6	;RP1=0, select bank1
  1206     0157  07B2               	addwf	main@i_450^(0+128),f
  1207     0158  2941               	goto	l1929
  1208     0159                     l1939:
  1209                           
  1210                           ;main.c: 163:     voltageraw = voltagesum >> 4;
  1211     0159  1283               	bcf	3,5	;RP0=0, select bank0
  1212     015A  1303               	bcf	3,6	;RP1=0, select bank0
  1213     015B  0E2E               	swapf	_voltagesum,w
  1214     015C  390F               	andlw	15
  1215     015D  00B2               	movwf	_voltageraw
  1216     015E  0E2F               	swapf	_voltagesum+1,w
  1217     015F  39F0               	andlw	240
  1218     0160  04B2               	iorwf	_voltageraw,f
  1219     0161  0E2F               	swapf	_voltagesum+1,w
  1220     0162  390F               	andlw	15
  1221     0163  00B3               	movwf	_voltageraw+1
  1222     0164                     l1941:
  1223                           
  1224                           ;main.c: 164:     voltagesum = 0;
  1225     0164  01AE               	clrf	_voltagesum
  1226     0165  01AF               	clrf	_voltagesum+1
  1227     0166                     l1943:
  1228                           
  1229                           ;main.c: 165:     voltage = (((uint32_t)voltageraw * 235) / 1023) + 85;
  1230     0166  3000               	movlw	0
  1231     0167  00D1               	movwf	___lldiv@divisor+3
  1232     0168  3000               	movlw	0
  1233     0169  00D0               	movwf	___lldiv@divisor+2
  1234     016A  3003               	movlw	3
  1235     016B  00CF               	movwf	___lldiv@divisor+1
  1236     016C  30FF               	movlw	255
  1237     016D  00CE               	movwf	___lldiv@divisor
  1238     016E  0832               	movf	_voltageraw,w
  1239     016F  00C6               	movwf	___lmul@multiplier
  1240     0170  0833               	movf	_voltageraw+1,w
  1241     0171  00C7               	movwf	___lmul@multiplier+1
  1242     0172  01C8               	clrf	___lmul@multiplier+2
  1243     0173  01C9               	clrf	___lmul@multiplier+3
  1244     0174  3000               	movlw	0
  1245     0175  00CD               	movwf	___lmul@multiplicand+3
  1246     0176  3000               	movlw	0
  1247     0177  00CC               	movwf	___lmul@multiplicand+2
  1248     0178  3000               	movlw	0
  1249     0179  00CB               	movwf	___lmul@multiplicand+1
  1250     017A  30EB               	movlw	235
  1251     017B  00CA               	movwf	___lmul@multiplicand
  1252     017C  118A  252C  118A   	fcall	___lmul
  1253     017F  1283               	bcf	3,5	;RP0=0, select bank0
  1254     0180  1303               	bcf	3,6	;RP1=0, select bank0
  1255     0181  0849               	movf	?___lmul+3,w
  1256     0182  00D5               	movwf	___lldiv@dividend+3
  1257     0183  0848               	movf	?___lmul+2,w
  1258     0184  00D4               	movwf	___lldiv@dividend+2
  1259     0185  0847               	movf	?___lmul+1,w
  1260     0186  00D3               	movwf	___lldiv@dividend+1
  1261     0187  0846               	movf	?___lmul,w
  1262     0188  00D2               	movwf	___lldiv@dividend
  1263     0189  118A  237C  118A   	fcall	___lldiv
  1264     018C  1283               	bcf	3,5	;RP0=0, select bank0
  1265     018D  1303               	bcf	3,6	;RP1=0, select bank0
  1266     018E  084E               	movf	?___lldiv,w
  1267     018F  3E55               	addlw	85
  1268     0190  00C2               	movwf	_voltage
  1269     0191                     l1945:
  1270                           
  1271                           ;main.c: 167:     if (seconds_counter % 2 == 0) {
  1272     0191  1828               	btfsc	_seconds_counter,0	;volatile
  1273     0192  2994               	goto	u2171
  1274     0193  2995               	goto	u2170
  1275     0194                     u2171:
  1276     0194  2997               	goto	l172
  1277     0195                     u2170:
  1278     0195                     l1947:
  1279                           
  1280                           ;main.c: 169:       PORTAbits.RA0 = 1;
  1281     0195  1405               	bsf	5,0	;volatile
  1282                           
  1283                           ;main.c: 170:     } else {
  1284     0196  2998               	goto	l1949
  1285     0197                     l172:
  1286                           
  1287                           ;main.c: 172:       PORTAbits.RA0 = 0;
  1288     0197  1005               	bcf	5,0	;volatile
  1289     0198                     l1949:
  1290     0198  083E               	movf	_sensors_reading_in_progress,w	;volatile
  1291     0199  1D03               	btfss	3,2
  1292     019A  299C               	goto	u2181
  1293     019B  299D               	goto	u2180
  1294     019C                     u2181:
  1295     019C  29A8               	goto	l1955
  1296     019D                     u2180:
  1297     019D                     l1951:
  1298     019D  083F               	movf	_sensors_reading_complete,w	;volatile
  1299     019E  1D03               	btfss	3,2
  1300     019F  29A1               	goto	u2191
  1301     01A0  29A2               	goto	u2190
  1302     01A1                     u2191:
  1303     01A1  29A8               	goto	l1955
  1304     01A2                     u2190:
  1305     01A2                     l1953:
  1306                           
  1307                           ;main.c: 176:         !sensors_reading_complete) {;main.c: 177:       setupTimer0();
  1308     01A2  118A  26B8  118A   	fcall	_setupTimer0
  1309                           
  1310                           ;main.c: 178:       startSensorReading();
  1311     01A5  118A  269A  118A   	fcall	_startSensorReading
  1312     01A8                     l1955:
  1313                           
  1314                           ;main.c: 180:     _Bool low_sensor_active, high_sensor_active, flow_sensor_active;;main.
      +                          c: 181:     if (getSensorResults(&low_sensor_active, &high_sensor_active,
  1315     01A8  30B4               	movlw	(low (main@low_sensor_active| 0))& (0+255)
  1316     01A9  00F3               	movwf	getSensorResults@low_active
  1317     01AA  30B5               	movlw	(low (main@high_sensor_active| 0))& (0+255)
  1318     01AB  00F4               	movwf	getSensorResults@high_active
  1319     01AC  30B3               	movlw	(low (main@flow_sensor_active| 0))& (0+255)
  1320     01AD  00F5               	movwf	getSensorResults@flow_active
  1321     01AE  118A  25AA  118A   	fcall	_getSensorResults
  1322     01B1  3A00               	xorlw	0
  1323     01B2  1903               	skipnz
  1324     01B3  29B5               	goto	u2201
  1325     01B4  29B6               	goto	u2200
  1326     01B5                     u2201:
  1327     01B5  29D5               	goto	l1969
  1328     01B6                     u2200:
  1329     01B6                     l1957:
  1330                           
  1331                           ;main.c: 182:                          &flow_sensor_active)) {;main.c: 197:       if (lo
      +                          w_sensor_active && high_sensor_active) {
  1332     01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1333     01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1334     01B8  0834               	movf	main@low_sensor_active^(0+128),w
  1335     01B9  1903               	btfsc	3,2
  1336     01BA  29BC               	goto	u2211
  1337     01BB  29BD               	goto	u2210
  1338     01BC                     u2211:
  1339     01BC  29C5               	goto	l1963
  1340     01BD                     u2210:
  1341     01BD                     l1959:
  1342     01BD  0835               	movf	main@high_sensor_active^(0+128),w
  1343     01BE  1903               	btfsc	3,2
  1344     01BF  29C1               	goto	u2221
  1345     01C0  29C2               	goto	u2220
  1346     01C1                     u2221:
  1347     01C1  29C5               	goto	l1963
  1348     01C2                     u2220:
  1349     01C2                     l1961:
  1350                           
  1351                           ;main.c: 199:         tankempty = 0;
  1352     01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1353     01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1354     01C4  01B9               	clrf	_tankempty
  1355     01C5                     l1963:
  1356                           
  1357                           ;main.c: 201:       if (!low_sensor_active && !high_sensor_active) {
  1358     01C5  1683               	bsf	3,5	;RP0=1, select bank1
  1359     01C6  1303               	bcf	3,6	;RP1=0, select bank1
  1360     01C7  0834               	movf	main@low_sensor_active^(0+128),w
  1361     01C8  1D03               	btfss	3,2
  1362     01C9  29CB               	goto	u2231
  1363     01CA  29CC               	goto	u2230
  1364     01CB                     u2231:
  1365     01CB  29D5               	goto	l1969
  1366     01CC                     u2230:
  1367     01CC                     l1965:
  1368     01CC  0835               	movf	main@high_sensor_active^(0+128),w
  1369     01CD  1D03               	btfss	3,2
  1370     01CE  29D0               	goto	u2241
  1371     01CF  29D1               	goto	u2240
  1372     01D0                     u2241:
  1373     01D0  29D5               	goto	l1969
  1374     01D1                     u2240:
  1375     01D1                     l1967:
  1376                           
  1377                           ;main.c: 203:         tankempty = 1;
  1378     01D1  3001               	movlw	1
  1379     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1380     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1381     01D4  00B9               	movwf	_tankempty
  1382     01D5                     l1969:
  1383                           
  1384                           ;main.c: 207:     if (tankempty) {
  1385     01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1386     01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1387     01D7  0839               	movf	_tankempty,w
  1388     01D8  1903               	btfsc	3,2
  1389     01D9  29DB               	goto	u2251
  1390     01DA  29DC               	goto	u2250
  1391     01DB                     u2251:
  1392     01DB  2AE7               	goto	l2015
  1393     01DC                     u2250:
  1394     01DC                     l1971:
  1395                           
  1396                           ;main.c: 208:       if (!timeouterror && !voltageerror && !dryrunerror && !motorrunning)
      +                           {
  1397     01DC  083B               	movf	_timeouterror,w
  1398     01DD  1D03               	btfss	3,2
  1399     01DE  29E0               	goto	u2261
  1400     01DF  29E1               	goto	u2260
  1401     01E0                     u2261:
  1402     01E0  2A0B               	goto	l1985
  1403     01E1                     u2260:
  1404     01E1                     l1973:
  1405     01E1  083D               	movf	_voltageerror,w
  1406     01E2  1D03               	btfss	3,2
  1407     01E3  29E5               	goto	u2271
  1408     01E4  29E6               	goto	u2270
  1409     01E5                     u2271:
  1410     01E5  2A0B               	goto	l1985
  1411     01E6                     u2270:
  1412     01E6                     l1975:
  1413     01E6  083C               	movf	_dryrunerror,w
  1414     01E7  1D03               	btfss	3,2
  1415     01E8  29EA               	goto	u2281
  1416     01E9  29EB               	goto	u2280
  1417     01EA                     u2281:
  1418     01EA  2A0B               	goto	l1985
  1419     01EB                     u2280:
  1420     01EB                     l1977:
  1421     01EB  083A               	movf	_motorrunning,w
  1422     01EC  1D03               	btfss	3,2
  1423     01ED  29EF               	goto	u2291
  1424     01EE  29F0               	goto	u2290
  1425     01EF                     u2291:
  1426     01EF  2A0B               	goto	l1985
  1427     01F0                     u2290:
  1428     01F0                     l1979:
  1429                           
  1430                           ;main.c: 210:         PORTCbits.RC3 = 1;
  1431     01F0  1587               	bsf	7,3	;volatile
  1432     01F1                     l1981:
  1433                           
  1434                           ;main.c: 211:         motorstarttime = seconds_counter;
  1435     01F1  082B               	movf	_seconds_counter+3,w	;volatile
  1436     01F2  1683               	bsf	3,5	;RP0=1, select bank1
  1437     01F3  1303               	bcf	3,6	;RP1=0, select bank1
  1438     01F4  00B1               	movwf	(_motorstarttime+3)^(0+128)
  1439     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1440     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1441     01F7  082A               	movf	_seconds_counter+2,w	;volatile
  1442     01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1443     01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1444     01FA  00B0               	movwf	(_motorstarttime+2)^(0+128)
  1445     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1446     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1447     01FD  0829               	movf	_seconds_counter+1,w	;volatile
  1448     01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1449     01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1450     0200  00AF               	movwf	(_motorstarttime+1)^(0+128)
  1451     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1452     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1453     0203  0828               	movf	_seconds_counter,w	;volatile
  1454     0204  1683               	bsf	3,5	;RP0=1, select bank1
  1455     0205  1303               	bcf	3,6	;RP1=0, select bank1
  1456     0206  00AE               	movwf	_motorstarttime^(0+128)
  1457     0207                     l1983:
  1458                           
  1459                           ;main.c: 212:         motorrunning = 1;
  1460     0207  3001               	movlw	1
  1461     0208  1283               	bcf	3,5	;RP0=0, select bank0
  1462     0209  1303               	bcf	3,6	;RP1=0, select bank0
  1463     020A  00BA               	movwf	_motorrunning
  1464     020B                     l1985:
  1465                           
  1466                           ;main.c: 214:       if (motorrunning) {
  1467     020B  083A               	movf	_motorrunning,w
  1468     020C  1903               	btfsc	3,2
  1469     020D  2A0F               	goto	u2301
  1470     020E  2A10               	goto	u2300
  1471     020F                     u2301:
  1472     020F  2AEE               	goto	l2021
  1473     0210                     u2300:
  1474     0210                     l1987:
  1475                           
  1476                           ;main.c: 215:         if (seconds_counter - motorstarttime >= maxruntime[4]) {
  1477     0210  1683               	bsf	3,5	;RP0=1, select bank1
  1478     0211  1303               	bcf	3,6	;RP1=0, select bank1
  1479     0212  0828               	movf	(_maxruntime^(0+128)+8),w
  1480     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1481     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1482     0215  00DB               	movwf	??_main
  1483     0216  1683               	bsf	3,5	;RP0=1, select bank1
  1484     0217  1303               	bcf	3,6	;RP1=0, select bank1
  1485     0218  0829               	movf	((_maxruntime+1)^(0+128)+8),w
  1486     0219  1283               	bcf	3,5	;RP0=0, select bank0
  1487     021A  1303               	bcf	3,6	;RP1=0, select bank0
  1488     021B  00DC               	movwf	??_main+1
  1489     021C  01DD               	clrf	??_main+2
  1490     021D  01DE               	clrf	??_main+3
  1491     021E  0828               	movf	_seconds_counter,w	;volatile
  1492     021F  00DF               	movwf	??_main+4
  1493     0220  0829               	movf	_seconds_counter+1,w	;volatile
  1494     0221  00E0               	movwf	??_main+5
  1495     0222  082A               	movf	_seconds_counter+2,w	;volatile
  1496     0223  00E1               	movwf	??_main+6
  1497     0224  082B               	movf	_seconds_counter+3,w	;volatile
  1498     0225  00E2               	movwf	??_main+7
  1499     0226  1683               	bsf	3,5	;RP0=1, select bank1
  1500     0227  1303               	bcf	3,6	;RP1=0, select bank1
  1501     0228  082E               	movf	_motorstarttime^(0+128),w
  1502     0229  1283               	bcf	3,5	;RP0=0, select bank0
  1503     022A  1303               	bcf	3,6	;RP1=0, select bank0
  1504     022B  02DF               	subwf	??_main+4,f
  1505     022C  1683               	bsf	3,5	;RP0=1, select bank1
  1506     022D  1303               	bcf	3,6	;RP1=0, select bank1
  1507     022E  082F               	movf	(_motorstarttime+1)^(0+128),w
  1508     022F  1C03               	skipc
  1509     0230  0F2F               	incfsz	(_motorstarttime+1)^(0+128),w
  1510     0231  2A33               	goto	u2311
  1511     0232  2A36               	goto	u2312
  1512     0233                     u2311:
  1513     0233  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0234  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0235  02E0               	subwf	??_main+5,f
  1516     0236                     u2312:
  1517     0236  1683               	bsf	3,5	;RP0=1, select bank1
  1518     0237  1303               	bcf	3,6	;RP1=0, select bank1
  1519     0238  0830               	movf	(_motorstarttime+2)^(0+128),w
  1520     0239  1C03               	skipc
  1521     023A  0F30               	incfsz	(_motorstarttime+2)^(0+128),w
  1522     023B  2A3D               	goto	u2313
  1523     023C  2A40               	goto	u2314
  1524     023D                     u2313:
  1525     023D  1283               	bcf	3,5	;RP0=0, select bank0
  1526     023E  1303               	bcf	3,6	;RP1=0, select bank0
  1527     023F  02E1               	subwf	??_main+6,f
  1528     0240                     u2314:
  1529     0240  1683               	bsf	3,5	;RP0=1, select bank1
  1530     0241  1303               	bcf	3,6	;RP1=0, select bank1
  1531     0242  0831               	movf	(_motorstarttime+3)^(0+128),w
  1532     0243  1C03               	skipc
  1533     0244  0F31               	incfsz	(_motorstarttime+3)^(0+128),w
  1534     0245  2A47               	goto	u2315
  1535     0246  2A4A               	goto	u2316
  1536     0247                     u2315:
  1537     0247  1283               	bcf	3,5	;RP0=0, select bank0
  1538     0248  1303               	bcf	3,6	;RP1=0, select bank0
  1539     0249  02E2               	subwf	??_main+7,f
  1540     024A                     u2316:
  1541     024A  1683               	bsf	3,5	;RP0=1, select bank1
  1542     024B  1303               	bcf	3,6	;RP1=0, select bank1
  1543     024C  1283               	bcf	3,5	;RP0=0, select bank0
  1544     024D  1303               	bcf	3,6	;RP1=0, select bank0
  1545     024E  085E               	movf	??_main+3,w
  1546     024F  0262               	subwf	??_main+7,w
  1547     0250  1D03               	skipz
  1548     0251  2A5C               	goto	u2325
  1549     0252  085D               	movf	??_main+2,w
  1550     0253  0261               	subwf	??_main+6,w
  1551     0254  1D03               	skipz
  1552     0255  2A5C               	goto	u2325
  1553     0256  085C               	movf	??_main+1,w
  1554     0257  0260               	subwf	??_main+5,w
  1555     0258  1D03               	skipz
  1556     0259  2A5C               	goto	u2325
  1557     025A  085B               	movf	??_main,w
  1558     025B  025F               	subwf	??_main+4,w
  1559     025C                     u2325:
  1560     025C  1C03               	skipc
  1561     025D  2A5F               	goto	u2321
  1562     025E  2A60               	goto	u2320
  1563     025F                     u2321:
  1564     025F  2A62               	goto	l1991
  1565     0260                     u2320:
  1566     0260                     l1989:
  1567                           
  1568                           ;main.c: 216:           timeouterror = 1;
  1569     0260  3001               	movlw	1
  1570     0261  00BB               	movwf	_timeouterror
  1571     0262                     l1991:
  1572                           
  1573                           ;main.c: 218:         if (!flow_sensor_active) {
  1574     0262  1683               	bsf	3,5	;RP0=1, select bank1
  1575     0263  1303               	bcf	3,6	;RP1=0, select bank1
  1576     0264  0833               	movf	main@flow_sensor_active^(0+128),w
  1577     0265  1D03               	btfss	3,2
  1578     0266  2A68               	goto	u2331
  1579     0267  2A69               	goto	u2330
  1580     0268                     u2331:
  1581     0268  2AB4               	goto	l2003
  1582     0269                     u2330:
  1583     0269                     l1993:
  1584                           
  1585                           ;main.c: 219:           waterreached = 0;
  1586     0269  1283               	bcf	3,5	;RP0=0, select bank0
  1587     026A  1303               	bcf	3,6	;RP1=0, select bank0
  1588     026B  01B7               	clrf	_waterreached
  1589     026C                     l1995:
  1590                           
  1591                           ;main.c: 220:           if (lastdryruncheck == 0) {
  1592     026C  0827               	movf	_lastdryruncheck+3,w
  1593     026D  0426               	iorwf	_lastdryruncheck+2,w
  1594     026E  0425               	iorwf	_lastdryruncheck+1,w
  1595     026F  0424               	iorwf	_lastdryruncheck,w
  1596     0270  1D03               	skipz
  1597     0271  2A73               	goto	u2341
  1598     0272  2A74               	goto	u2340
  1599     0273                     u2341:
  1600     0273  2A7D               	goto	l1999
  1601     0274                     u2340:
  1602     0274                     l1997:
  1603                           
  1604                           ;main.c: 221:             lastdryruncheck = seconds_counter;
  1605     0274  082B               	movf	_seconds_counter+3,w	;volatile
  1606     0275  00A7               	movwf	_lastdryruncheck+3
  1607     0276  082A               	movf	_seconds_counter+2,w	;volatile
  1608     0277  00A6               	movwf	_lastdryruncheck+2
  1609     0278  0829               	movf	_seconds_counter+1,w	;volatile
  1610     0279  00A5               	movwf	_lastdryruncheck+1
  1611     027A  0828               	movf	_seconds_counter,w	;volatile
  1612     027B  00A4               	movwf	_lastdryruncheck
  1613                           
  1614                           ;main.c: 222:           } else if (seconds_counter - lastdryruncheck >= dryruntime) {
  1615     027C  2AC0               	goto	l186
  1616     027D                     l1999:
  1617     027D  0830               	movf	_dryruntime,w
  1618     027E  00DB               	movwf	??_main
  1619     027F  0831               	movf	_dryruntime+1,w
  1620     0280  00DC               	movwf	??_main+1
  1621     0281  01DD               	clrf	??_main+2
  1622     0282  01DE               	clrf	??_main+3
  1623     0283  0828               	movf	_seconds_counter,w	;volatile
  1624     0284  00DF               	movwf	??_main+4
  1625     0285  0829               	movf	_seconds_counter+1,w	;volatile
  1626     0286  00E0               	movwf	??_main+5
  1627     0287  082A               	movf	_seconds_counter+2,w	;volatile
  1628     0288  00E1               	movwf	??_main+6
  1629     0289  082B               	movf	_seconds_counter+3,w	;volatile
  1630     028A  00E2               	movwf	??_main+7
  1631     028B  0824               	movf	_lastdryruncheck,w
  1632     028C  02DF               	subwf	??_main+4,f
  1633     028D  0825               	movf	_lastdryruncheck+1,w
  1634     028E  1C03               	skipc
  1635     028F  0F25               	incfsz	_lastdryruncheck+1,w
  1636     0290  2A92               	goto	u2351
  1637     0291  2A93               	goto	u2352
  1638     0292                     u2351:
  1639     0292  02E0               	subwf	??_main+5,f
  1640     0293                     u2352:
  1641     0293  0826               	movf	_lastdryruncheck+2,w
  1642     0294  1C03               	skipc
  1643     0295  0F26               	incfsz	_lastdryruncheck+2,w
  1644     0296  2A98               	goto	u2353
  1645     0297  2A99               	goto	u2354
  1646     0298                     u2353:
  1647     0298  02E1               	subwf	??_main+6,f
  1648     0299                     u2354:
  1649     0299  0827               	movf	_lastdryruncheck+3,w
  1650     029A  1C03               	skipc
  1651     029B  0F27               	incfsz	_lastdryruncheck+3,w
  1652     029C  2A9E               	goto	u2355
  1653     029D  2A9F               	goto	u2356
  1654     029E                     u2355:
  1655     029E  02E2               	subwf	??_main+7,f
  1656     029F                     u2356:
  1657     029F  085E               	movf	??_main+3,w
  1658     02A0  0262               	subwf	??_main+7,w
  1659     02A1  1D03               	skipz
  1660     02A2  2AAD               	goto	u2365
  1661     02A3  085D               	movf	??_main+2,w
  1662     02A4  0261               	subwf	??_main+6,w
  1663     02A5  1D03               	skipz
  1664     02A6  2AAD               	goto	u2365
  1665     02A7  085C               	movf	??_main+1,w
  1666     02A8  0260               	subwf	??_main+5,w
  1667     02A9  1D03               	skipz
  1668     02AA  2AAD               	goto	u2365
  1669     02AB  085B               	movf	??_main,w
  1670     02AC  025F               	subwf	??_main+4,w
  1671     02AD                     u2365:
  1672     02AD  1C03               	skipc
  1673     02AE  2AB0               	goto	u2361
  1674     02AF  2AB1               	goto	u2360
  1675     02B0                     u2361:
  1676     02B0  2AC0               	goto	l186
  1677     02B1                     u2360:
  1678     02B1                     l2001:
  1679                           
  1680                           ;main.c: 223:             dryrunerror = 1;
  1681     02B1  3001               	movlw	1
  1682     02B2  00BC               	movwf	_dryrunerror
  1683     02B3  2AC0               	goto	l186
  1684     02B4                     l2003:
  1685                           
  1686                           ;main.c: 226:           lastdryruncheck = 0;
  1687     02B4  3000               	movlw	0
  1688     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1689     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1690     02B7  00A7               	movwf	_lastdryruncheck+3
  1691     02B8  3000               	movlw	0
  1692     02B9  00A6               	movwf	_lastdryruncheck+2
  1693     02BA  3000               	movlw	0
  1694     02BB  00A5               	movwf	_lastdryruncheck+1
  1695     02BC  3000               	movlw	0
  1696     02BD  00A4               	movwf	_lastdryruncheck
  1697     02BE                     l2005:
  1698                           
  1699                           ;main.c: 227:           waterreached = 1;
  1700     02BE  3001               	movlw	1
  1701     02BF  00B7               	movwf	_waterreached
  1702     02C0                     l186:	
  1703                           ;main.c: 228:         }
  1704                           
  1705                           
  1706                           ;main.c: 230:         if(voltage > maximumrinningvoltage || voltage < minimumrunningvolt
      +                          age){
  1707     02C0  0842               	movf	_voltage,w
  1708     02C1  00DB               	movwf	??_main
  1709     02C2  01DC               	clrf	??_main+1
  1710     02C3  085C               	movf	??_main+1,w
  1711     02C4  0266               	subwf	_maximumrinningvoltage+1,w
  1712     02C5  1D03               	skipz
  1713     02C6  2AC9               	goto	u2375
  1714     02C7  085B               	movf	??_main,w
  1715     02C8  0265               	subwf	_maximumrinningvoltage,w
  1716     02C9                     u2375:
  1717     02C9  1C03               	skipc
  1718     02CA  2ACC               	goto	u2371
  1719     02CB  2ACD               	goto	u2370
  1720     02CC                     u2371:
  1721     02CC  2AD8               	goto	l189
  1722     02CD                     u2370:
  1723     02CD                     l2007:
  1724     02CD  0842               	movf	_voltage,w
  1725     02CE  00DB               	movwf	??_main
  1726     02CF  0868               	movf	_minimumrunningvoltage+1,w
  1727     02D0  1D03               	skipz
  1728     02D1  2AD4               	goto	u2385
  1729     02D2  0867               	movf	_minimumrunningvoltage,w
  1730     02D3  025B               	subwf	??_main,w
  1731     02D4                     u2385:
  1732     02D4  1803               	skipnc
  1733     02D5  2AD7               	goto	u2381
  1734     02D6  2AD8               	goto	u2380
  1735     02D7                     u2381:
  1736     02D7  2ADA               	goto	l2009
  1737     02D8                     u2380:
  1738     02D8                     l189:
  1739                           
  1740                           ;main.c: 231:           voltageerror = 1;
  1741     02D8  3001               	movlw	1
  1742     02D9  00BD               	movwf	_voltageerror
  1743     02DA                     l2009:
  1744                           
  1745                           ;main.c: 234:         if (!waterreached) {
  1746     02DA  0837               	movf	_waterreached,w
  1747     02DB  1D03               	btfss	3,2
  1748     02DC  2ADE               	goto	u2391
  1749     02DD  2ADF               	goto	u2390
  1750     02DE                     u2391:
  1751     02DE  2AEE               	goto	l2021
  1752     02DF                     u2390:
  1753     02DF                     l2011:
  1754                           
  1755                           ;main.c: 235:           if (seconds_counter % 2 == 0) {
  1756     02DF  1828               	btfsc	_seconds_counter,0	;volatile
  1757     02E0  2AE2               	goto	u2401
  1758     02E1  2AE3               	goto	u2400
  1759     02E2                     u2401:
  1760     02E2  2AE5               	goto	l191
  1761     02E3                     u2400:
  1762     02E3                     l2013:
  1763                           
  1764                           ;main.c: 237:             PORTAbits.RA2 = 1;
  1765     02E3  1505               	bsf	5,2	;volatile
  1766                           
  1767                           ;main.c: 238:           } else {
  1768     02E4  2AEE               	goto	l2021
  1769     02E5                     l191:
  1770                           
  1771                           ;main.c: 240:             PORTAbits.RA2 = 0;
  1772     02E5  1105               	bcf	5,2	;volatile
  1773     02E6  2AEE               	goto	l2021
  1774     02E7                     l2015:
  1775                           
  1776                           ;main.c: 247:         if(motorrunning){
  1777     02E7  083A               	movf	_motorrunning,w
  1778     02E8  1903               	btfsc	3,2
  1779     02E9  2AEB               	goto	u2411
  1780     02EA  2AEC               	goto	u2410
  1781     02EB                     u2411:
  1782     02EB  2AEE               	goto	l2021
  1783     02EC                     u2410:
  1784     02EC                     l2017:
  1785                           
  1786                           ;main.c: 248:             motorrunning = 0;
  1787     02EC  01BA               	clrf	_motorrunning
  1788     02ED                     l2019:
  1789                           
  1790                           ;main.c: 249:             PORTCbits.RC3 = 0;
  1791     02ED  1187               	bcf	7,3	;volatile
  1792     02EE                     l2021:
  1793                           
  1794                           ;main.c: 253:     if(timeouterror){
  1795     02EE  083B               	movf	_timeouterror,w
  1796     02EF  1903               	btfsc	3,2
  1797     02F0  2AF2               	goto	u2421
  1798     02F1  2AF3               	goto	u2420
  1799     02F2                     u2421:
  1800     02F2  2AF4               	goto	l2025
  1801     02F3                     u2420:
  1802     02F3                     l2023:
  1803                           
  1804                           ;main.c: 254:         motorrunning = 0;
  1805     02F3  01BA               	clrf	_motorrunning
  1806     02F4                     l2025:
  1807                           
  1808                           ;main.c: 256:     if(dryrunerror){
  1809     02F4  083C               	movf	_dryrunerror,w
  1810     02F5  1903               	btfsc	3,2
  1811     02F6  2AF8               	goto	u2431
  1812     02F7  2AF9               	goto	u2430
  1813     02F8                     u2431:
  1814     02F8  2AFA               	goto	l2029
  1815     02F9                     u2430:
  1816     02F9                     l2027:
  1817                           
  1818                           ;main.c: 257:         motorrunning = 0;
  1819     02F9  01BA               	clrf	_motorrunning
  1820     02FA                     l2029:
  1821                           
  1822                           ;main.c: 259:     if(voltageerror){
  1823     02FA  083D               	movf	_voltageerror,w
  1824     02FB  1903               	btfsc	3,2
  1825     02FC  2AFE               	goto	u2441
  1826     02FD  2AFF               	goto	u2440
  1827     02FE                     u2441:
  1828     02FE  2B4B               	goto	l2043
  1829     02FF                     u2440:
  1830     02FF                     l2031:
  1831                           
  1832                           ;main.c: 260:         if(lastvoltageerror ==0){
  1833     02FF  0823               	movf	_lastvoltageerror+3,w
  1834     0300  0422               	iorwf	_lastvoltageerror+2,w
  1835     0301  0421               	iorwf	_lastvoltageerror+1,w
  1836     0302  0420               	iorwf	_lastvoltageerror,w
  1837     0303  1D03               	skipz
  1838     0304  2B06               	goto	u2451
  1839     0305  2B07               	goto	u2450
  1840     0306                     u2451:
  1841     0306  2B10               	goto	l2035
  1842     0307                     u2450:
  1843     0307                     l2033:
  1844                           
  1845                           ;main.c: 261:             lastvoltageerror = seconds_counter;
  1846     0307  082B               	movf	_seconds_counter+3,w	;volatile
  1847     0308  00A3               	movwf	_lastvoltageerror+3
  1848     0309  082A               	movf	_seconds_counter+2,w	;volatile
  1849     030A  00A2               	movwf	_lastvoltageerror+2
  1850     030B  0829               	movf	_seconds_counter+1,w	;volatile
  1851     030C  00A1               	movwf	_lastvoltageerror+1
  1852     030D  0828               	movf	_seconds_counter,w	;volatile
  1853     030E  00A0               	movwf	_lastvoltageerror
  1854                           
  1855                           ;main.c: 262:         }else if(seconds_counter - lastvoltageerror >= maxvoltageerrortime
      +                          ){
  1856     030F  2B48               	goto	l2041
  1857     0310                     l2035:
  1858     0310  0828               	movf	_seconds_counter,w	;volatile
  1859     0311  00DB               	movwf	??_main
  1860     0312  0829               	movf	_seconds_counter+1,w	;volatile
  1861     0313  00DC               	movwf	??_main+1
  1862     0314  082A               	movf	_seconds_counter+2,w	;volatile
  1863     0315  00DD               	movwf	??_main+2
  1864     0316  082B               	movf	_seconds_counter+3,w	;volatile
  1865     0317  00DE               	movwf	??_main+3
  1866     0318  0820               	movf	_lastvoltageerror,w
  1867     0319  02DB               	subwf	??_main,f
  1868     031A  0821               	movf	_lastvoltageerror+1,w
  1869     031B  1C03               	skipc
  1870     031C  0F21               	incfsz	_lastvoltageerror+1,w
  1871     031D  2B1F               	goto	u2461
  1872     031E  2B20               	goto	u2462
  1873     031F                     u2461:
  1874     031F  02DC               	subwf	??_main+1,f
  1875     0320                     u2462:
  1876     0320  0822               	movf	_lastvoltageerror+2,w
  1877     0321  1C03               	skipc
  1878     0322  0F22               	incfsz	_lastvoltageerror+2,w
  1879     0323  2B25               	goto	u2463
  1880     0324  2B26               	goto	u2464
  1881     0325                     u2463:
  1882     0325  02DD               	subwf	??_main+2,f
  1883     0326                     u2464:
  1884     0326  0823               	movf	_lastvoltageerror+3,w
  1885     0327  1C03               	skipc
  1886     0328  0F23               	incfsz	_lastvoltageerror+3,w
  1887     0329  2B2B               	goto	u2465
  1888     032A  2B2C               	goto	u2466
  1889     032B                     u2465:
  1890     032B  02DE               	subwf	??_main+3,f
  1891     032C                     u2466:
  1892     032C  085E               	movf	??_main+3,w
  1893     032D  1D03               	btfss	3,2
  1894     032E  2B3D               	goto	u2470
  1895     032F  085D               	movf	??_main+2,w
  1896     0330  1D03               	btfss	3,2
  1897     0331  2B3D               	goto	u2470
  1898     0332  085C               	movf	??_main+1,w
  1899     0333  1D03               	btfss	3,2
  1900     0334  2B3D               	goto	u2470
  1901     0335  300A               	movlw	10
  1902     0336  025B               	subwf	??_main,w
  1903     0337  1D03               	skipz
  1904     0338  2B39               	goto	u2473
  1905     0339                     u2473:
  1906     0339  1C03               	btfss	3,0
  1907     033A  2B3C               	goto	u2471
  1908     033B  2B3D               	goto	u2470
  1909     033C                     u2471:
  1910     033C  2B48               	goto	l2041
  1911     033D                     u2470:
  1912     033D                     l2037:
  1913                           
  1914                           ;main.c: 263:             voltageerror = 0;
  1915     033D  1283               	bcf	3,5	;RP0=0, select bank0
  1916     033E  1303               	bcf	3,6	;RP1=0, select bank0
  1917     033F  01BD               	clrf	_voltageerror
  1918     0340                     l2039:
  1919                           
  1920                           ;main.c: 264:             lastvoltageerror = 0;
  1921     0340  3000               	movlw	0
  1922     0341  00A3               	movwf	_lastvoltageerror+3
  1923     0342  3000               	movlw	0
  1924     0343  00A2               	movwf	_lastvoltageerror+2
  1925     0344  3000               	movlw	0
  1926     0345  00A1               	movwf	_lastvoltageerror+1
  1927     0346  3000               	movlw	0
  1928     0347  00A0               	movwf	_lastvoltageerror
  1929     0348                     l2041:
  1930                           
  1931                           ;main.c: 267:         motorrunning = 0;
  1932     0348  1283               	bcf	3,5	;RP0=0, select bank0
  1933     0349  1303               	bcf	3,6	;RP1=0, select bank0
  1934     034A  01BA               	clrf	_motorrunning
  1935     034B                     l2043:
  1936                           
  1937                           ;main.c: 269:     if(!motorrunning){
  1938     034B  083A               	movf	_motorrunning,w
  1939     034C  1D03               	btfss	3,2
  1940     034D  2B4F               	goto	u2481
  1941     034E  2B50               	goto	u2480
  1942     034F                     u2481:
  1943     034F  2B53               	goto	l201
  1944     0350                     u2480:
  1945     0350                     l2045:
  1946                           
  1947                           ;main.c: 270:         PORTCbits.RC3 = 0;
  1948     0350  1187               	bcf	7,3	;volatile
  1949                           
  1950                           ;main.c: 271:         PORTAbits.RA1 = 0;
  1951     0351  1085               	bcf	5,1	;volatile
  1952                           
  1953                           ;main.c: 272:     }else{
  1954     0352  293B               	goto	l1925
  1955     0353                     l201:
  1956                           
  1957                           ;main.c: 273:         PORTAbits.RA1 = 1;
  1958     0353  1485               	bsf	5,1	;volatile
  1959                           
  1960                           ;main.c: 274:         PORTCbits.RC3 = 1;
  1961     0354  1587               	bsf	7,3	;volatile
  1962     0355                     l2047:
  1963                           
  1964                           ;main.c: 275:         if(seconds_counter % 10 == 0){
  1965     0355  3000               	movlw	0
  1966     0356  00C9               	movwf	___llmod@divisor+3
  1967     0357  3000               	movlw	0
  1968     0358  00C8               	movwf	___llmod@divisor+2
  1969     0359  3000               	movlw	0
  1970     035A  00C7               	movwf	___llmod@divisor+1
  1971     035B  300A               	movlw	10
  1972     035C  00C6               	movwf	___llmod@divisor
  1973     035D  082B               	movf	_seconds_counter+3,w	;volatile
  1974     035E  00CD               	movwf	___llmod@dividend+3
  1975     035F  082A               	movf	_seconds_counter+2,w	;volatile
  1976     0360  00CC               	movwf	___llmod@dividend+2
  1977     0361  0829               	movf	_seconds_counter+1,w	;volatile
  1978     0362  00CB               	movwf	___llmod@dividend+1
  1979     0363  0828               	movf	_seconds_counter,w	;volatile
  1980     0364  00CA               	movwf	___llmod@dividend
  1981     0365  118A  2436  118A   	fcall	___llmod
  1982     0368  1283               	bcf	3,5	;RP0=0, select bank0
  1983     0369  1303               	bcf	3,6	;RP1=0, select bank0
  1984     036A  0849               	movf	?___llmod+3,w
  1985     036B  0448               	iorwf	?___llmod+2,w
  1986     036C  0447               	iorwf	?___llmod+1,w
  1987     036D  0446               	iorwf	?___llmod,w
  1988     036E  1D03               	skipz
  1989     036F  2B71               	goto	u2491
  1990     0370  2B72               	goto	u2490
  1991     0371                     u2491:
  1992     0371  293B               	goto	l1925
  1993     0372                     u2490:
  1994     0372                     l2049:
  1995                           
  1996                           ;main.c: 276:             buzzer_beep(2);
  1997     0372  3002               	movlw	2
  1998     0373  00F1               	movwf	_buzzer_beep$0
  1999     0374  3000               	movlw	0
  2000     0375  00F2               	movwf	_buzzer_beep$0+1
  2001     0376  118A  2000  118A   	fcall	_buzzer_beep
  2002     0379  293B               	goto	l1925
  2003     037A  118A  280B         	ljmp	start
  2004     037C                     __end_of_main:
  2005                           
  2006                           	psect	text1
  2007     069A                     __ptext1:	
  2008 ;; *************** function _startSensorReading *****************
  2009 ;; Defined at:
  2010 ;;		line 329 in file "main.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2024 ;;      Params:         0       0       0       0
  2025 ;;      Locals:         0       0       0       0
  2026 ;;      Temps:          0       0       0       0
  2027 ;;      Totals:         0       0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 1
  2031 ;; This function calls:
  2032 ;;		Nothing
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038     069A                     _startSensorReading:	
  2039                           ;psect for function _startSensorReading
  2040                           
  2041     069A                     l1785:	
  2042                           ;incstack = 0
  2043                           ; Regs used in _startSensorReading: [wreg+status,2+status,0]
  2044                           
  2045                           
  2046                           ;main.c: 330:   if (!sensors_reading_in_progress) {
  2047     069A  1283               	bcf	3,5	;RP0=0, select bank0
  2048     069B  1303               	bcf	3,6	;RP1=0, select bank0
  2049     069C  083E               	movf	_sensors_reading_in_progress,w	;volatile
  2050     069D  1D03               	btfss	3,2
  2051     069E  2EA0               	goto	u1821
  2052     069F  2EA1               	goto	u1820
  2053     06A0                     u1821:
  2054     06A0  2EA8               	goto	l222
  2055     06A1                     u1820:
  2056     06A1                     l1787:
  2057                           
  2058                           ;main.c: 331:     reading_count = 0;
  2059     06A1  01FA               	clrf	_reading_count	;volatile
  2060                           
  2061                           ;main.c: 332:     low_sensor_high_count = 0;
  2062     06A2  01F9               	clrf	_low_sensor_high_count	;volatile
  2063                           
  2064                           ;main.c: 333:     high_sensor_high_count = 0;
  2065     06A3  01C1               	clrf	_high_sensor_high_count	;volatile
  2066                           
  2067                           ;main.c: 334:     flow_sensor_high_count = 0;
  2068     06A4  01C0               	clrf	_flow_sensor_high_count	;volatile
  2069                           
  2070                           ;main.c: 335:     sensors_reading_complete = 0;
  2071     06A5  01BF               	clrf	_sensors_reading_complete	;volatile
  2072     06A6                     l1789:
  2073                           
  2074                           ;main.c: 336:     sensors_reading_in_progress = 1;
  2075     06A6  3001               	movlw	1
  2076     06A7  00BE               	movwf	_sensors_reading_in_progress	;volatile
  2077     06A8                     l222:
  2078     06A8  0008               	return
  2079     06A9                     __end_of_startSensorReading:
  2080                           
  2081                           	psect	text2
  2082     06B8                     __ptext2:	
  2083 ;; *************** function _setupTimer0 *****************
  2084 ;; Defined at:
  2085 ;;		line 315 in file "main.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2099 ;;      Params:         0       0       0       0
  2100 ;;      Locals:         0       0       0       0
  2101 ;;      Temps:          0       0       0       0
  2102 ;;      Totals:         0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113     06B8                     _setupTimer0:	
  2114                           ;psect for function _setupTimer0
  2115                           
  2116     06B8                     l1777:	
  2117                           ;incstack = 0
  2118                           ; Regs used in _setupTimer0: [wreg+status,2+status,0]
  2119                           
  2120                           
  2121                           ;main.c: 316:   OPTION_REGbits.T0CS = 0;
  2122     06B8  1683               	bsf	3,5	;RP0=1, select bank1
  2123     06B9  1303               	bcf	3,6	;RP1=0, select bank1
  2124     06BA  1281               	bcf	1,5	;volatile
  2125                           
  2126                           ;main.c: 317:   OPTION_REGbits.PSA = 0;
  2127     06BB  1181               	bcf	1,3	;volatile
  2128     06BC                     l1779:
  2129                           
  2130                           ;main.c: 318:   OPTION_REGbits.PS = 0b010;
  2131     06BC  0801               	movf	1,w	;volatile
  2132     06BD  39F8               	andlw	-8
  2133     06BE  3802               	iorlw	2
  2134     06BF  0081               	movwf	1	;volatile
  2135     06C0                     l1781:
  2136                           
  2137                           ;main.c: 325:   TMR0 = 6;
  2138     06C0  3006               	movlw	6
  2139     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2140     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2141     06C3  0081               	movwf	1	;volatile
  2142     06C4                     l1783:
  2143                           
  2144                           ;main.c: 326:   INTCONbits.TMR0IE = 1;
  2145     06C4  168B               	bsf	11,5	;volatile
  2146     06C5                     l218:
  2147     06C5  0008               	return
  2148     06C6                     __end_of_setupTimer0:
  2149                           
  2150                           	psect	text3
  2151     0574                     __ptext3:	
  2152 ;; *************** function _saveSettings *****************
  2153 ;; Defined at:
  2154 ;;		line 460 in file "main.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  value8bit       1    wreg     unsigned char 
  2157 ;;  value16bit1     2    0[BANK0 ] unsigned int 
  2158 ;;  value16bit2     2    2[BANK0 ] unsigned int 
  2159 ;;  value16bit3     2    4[BANK0 ] unsigned int 
  2160 ;;  value16bit4     2    6[BANK0 ] unsigned int 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  value8bit       1    7[COMMON] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2172 ;;      Params:         0       8       0       0
  2173 ;;      Locals:         1       0       0       0
  2174 ;;      Temps:          0       0       0       0
  2175 ;;      Totals:         1       8       0       0
  2176 ;;Total ram usage:        9 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 3
  2179 ;; This function calls:
  2180 ;;		_EEPROM_Write
  2181 ;;		_EEPROM_Write16
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187     0574                     _saveSettings:	
  2188                           ;psect for function _saveSettings
  2189                           
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _saveSettings: [wreg+status,2+status,0+pclath+cstack]
  2193                           ;saveSettings@value8bit stored from wreg
  2194     0574  00F8               	movwf	saveSettings@value8bit
  2195     0575                     l1755:
  2196                           
  2197                           ;main.c: 460: void saveSettings(unsigned char value8bit, unsigned int value16bit1,;main.
      +                          c: 461:                   unsigned int value16bit2, unsigned int value16bit3,;main.c: 46
      +                          2:                   unsigned int value16bit4) {;main.c: 464:   EEPROM_Write(0x01, value
      +                          8bit);
  2198     0575  0878               	movf	saveSettings@value8bit,w
  2199     0576  00F3               	movwf	EEPROM_Write@data
  2200     0577  3001               	movlw	1
  2201     0578  118A  2647  118A   	fcall	_EEPROM_Write
  2202                           
  2203                           ;main.c: 465:   EEPROM_Write16(0x02, value16bit1);
  2204     057B  1283               	bcf	3,5	;RP0=0, select bank0
  2205     057C  1303               	bcf	3,6	;RP1=0, select bank0
  2206     057D  0847               	movf	saveSettings@value16bit1+1,w
  2207     057E  00F6               	movwf	EEPROM_Write16@data+1
  2208     057F  0846               	movf	saveSettings@value16bit1,w
  2209     0580  00F5               	movwf	EEPROM_Write16@data
  2210     0581  3002               	movlw	2
  2211     0582  118A  26A9  118A   	fcall	_EEPROM_Write16
  2212                           
  2213                           ;main.c: 466:   EEPROM_Write16(0x04, value16bit2);
  2214     0585  1283               	bcf	3,5	;RP0=0, select bank0
  2215     0586  1303               	bcf	3,6	;RP1=0, select bank0
  2216     0587  0849               	movf	saveSettings@value16bit2+1,w
  2217     0588  00F6               	movwf	EEPROM_Write16@data+1
  2218     0589  0848               	movf	saveSettings@value16bit2,w
  2219     058A  00F5               	movwf	EEPROM_Write16@data
  2220     058B  3004               	movlw	4
  2221     058C  118A  26A9  118A   	fcall	_EEPROM_Write16
  2222                           
  2223                           ;main.c: 467:   EEPROM_Write16(0x06, value16bit3);
  2224     058F  1283               	bcf	3,5	;RP0=0, select bank0
  2225     0590  1303               	bcf	3,6	;RP1=0, select bank0
  2226     0591  084B               	movf	saveSettings@value16bit3+1,w
  2227     0592  00F6               	movwf	EEPROM_Write16@data+1
  2228     0593  084A               	movf	saveSettings@value16bit3,w
  2229     0594  00F5               	movwf	EEPROM_Write16@data
  2230     0595  3006               	movlw	6
  2231     0596  118A  26A9  118A   	fcall	_EEPROM_Write16
  2232                           
  2233                           ;main.c: 468:   EEPROM_Write16(0x08, value16bit4);
  2234     0599  1283               	bcf	3,5	;RP0=0, select bank0
  2235     059A  1303               	bcf	3,6	;RP1=0, select bank0
  2236     059B  084D               	movf	saveSettings@value16bit4+1,w
  2237     059C  00F6               	movwf	EEPROM_Write16@data+1
  2238     059D  084C               	movf	saveSettings@value16bit4,w
  2239     059E  00F5               	movwf	EEPROM_Write16@data
  2240     059F  3008               	movlw	8
  2241     05A0  118A  26A9  118A   	fcall	_EEPROM_Write16
  2242                           
  2243                           ;main.c: 469:   EEPROM_Write(0x00, 0xAA);
  2244     05A3  30AA               	movlw	170
  2245     05A4  00F3               	movwf	EEPROM_Write@data
  2246     05A5  3000               	movlw	0
  2247     05A6  118A  2647  118A   	fcall	_EEPROM_Write
  2248     05A9                     l271:
  2249     05A9  0008               	return
  2250     05AA                     __end_of_saveSettings:
  2251                           
  2252                           	psect	text4
  2253     06A9                     __ptext4:	
  2254 ;; *************** function _EEPROM_Write16 *****************
  2255 ;; Defined at:
  2256 ;;		line 434 in file "main.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  address         1    wreg     unsigned char 
  2259 ;;  data            2    4[COMMON] unsigned int 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  address         1    6[COMMON] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, pclath, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2271 ;;      Params:         2       0       0       0
  2272 ;;      Locals:         1       0       0       0
  2273 ;;      Temps:          0       0       0       0
  2274 ;;      Totals:         3       0       0       0
  2275 ;;Total ram usage:        3 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 2
  2278 ;; This function calls:
  2279 ;;		_EEPROM_Write
  2280 ;; This function is called by:
  2281 ;;		_saveSettings
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285     06A9                     _EEPROM_Write16:	
  2286                           ;psect for function _EEPROM_Write16
  2287                           
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in _EEPROM_Write16: [wreg+status,2+status,0+pclath+cstack]
  2291                           ;EEPROM_Write16@address stored from wreg
  2292     06A9  00F7               	movwf	EEPROM_Write16@address
  2293     06AA                     l1701:
  2294                           
  2295                           ;main.c: 435:   EEPROM_Write(address, data & 0xFF);
  2296     06AA  0875               	movf	EEPROM_Write16@data,w
  2297     06AB  00F3               	movwf	EEPROM_Write@data
  2298     06AC  0877               	movf	EEPROM_Write16@address,w
  2299     06AD  118A  2647  118A   	fcall	_EEPROM_Write
  2300                           
  2301                           ;main.c: 436:   EEPROM_Write(address + 1, data >> 8);
  2302     06B0  0876               	movf	EEPROM_Write16@data+1,w
  2303     06B1  00F3               	movwf	EEPROM_Write@data
  2304     06B2  0877               	movf	EEPROM_Write16@address,w
  2305     06B3  3E01               	addlw	1
  2306     06B4  118A  2647  118A   	fcall	_EEPROM_Write
  2307     06B7                     l261:
  2308     06B7  0008               	return
  2309     06B8                     __end_of_EEPROM_Write16:
  2310                           
  2311                           	psect	text5
  2312     0647                     __ptext5:	
  2313 ;; *************** function _EEPROM_Write *****************
  2314 ;; Defined at:
  2315 ;;		line 406 in file "main.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  address         1    wreg     unsigned char 
  2318 ;;  data            1    2[COMMON] unsigned char 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  address         1    3[COMMON] unsigned char 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2330 ;;      Params:         1       0       0       0
  2331 ;;      Locals:         1       0       0       0
  2332 ;;      Temps:          0       0       0       0
  2333 ;;      Totals:         2       0       0       0
  2334 ;;Total ram usage:        2 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 1
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_EEPROM_Write16
  2341 ;;		_saveSettings
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345     0647                     _EEPROM_Write:	
  2346                           ;psect for function _EEPROM_Write
  2347                           
  2348                           
  2349                           ;incstack = 0
  2350                           ; Regs used in _EEPROM_Write: [wreg]
  2351                           ;EEPROM_Write@address stored from wreg
  2352     0647  00F4               	movwf	EEPROM_Write@address
  2353     0648                     l1675:
  2354     0648                     l246:	
  2355                           ;main.c: 407:   while (EECON1bits.WR);
  2356                           
  2357     0648  1683               	bsf	3,5	;RP0=1, select bank3
  2358     0649  1703               	bsf	3,6	;RP1=1, select bank3
  2359     064A  188C               	btfsc	12,1	;volsfr
  2360     064B  2E4D               	goto	u1731
  2361     064C  2E4E               	goto	u1730
  2362     064D                     u1731:
  2363     064D  2E48               	goto	l246
  2364     064E                     u1730:
  2365     064E                     l1677:
  2366                           
  2367                           ;main.c: 409:   EEADR = address;
  2368     064E  0874               	movf	EEPROM_Write@address,w
  2369     064F  1283               	bcf	3,5	;RP0=0, select bank2
  2370     0650  1703               	bsf	3,6	;RP1=1, select bank2
  2371     0651  008D               	movwf	13	;volatile
  2372                           
  2373                           ;main.c: 410:   EEDATA = data;
  2374     0652  0873               	movf	EEPROM_Write@data,w
  2375     0653  008C               	movwf	12	;volatile
  2376     0654                     l1679:
  2377                           
  2378                           ;main.c: 412:   EECON1bits.EEPGD = 0;
  2379     0654  1683               	bsf	3,5	;RP0=1, select bank3
  2380     0655  1703               	bsf	3,6	;RP1=1, select bank3
  2381     0656  138C               	bcf	12,7	;volsfr
  2382     0657                     l1681:
  2383                           
  2384                           ;main.c: 413:   EECON1bits.WREN = 1;
  2385     0657  150C               	bsf	12,2	;volsfr
  2386     0658                     l1683:
  2387                           
  2388                           ;main.c: 415:   INTCONbits.GIE = 0;
  2389     0658  138B               	bcf	11,7	;volatile
  2390     0659                     l1685:
  2391                           
  2392                           ;main.c: 416:   EECON2 = 0x55;
  2393     0659  3055               	movlw	85
  2394     065A  008D               	movwf	13	;volsfr
  2395     065B                     l1687:
  2396                           
  2397                           ;main.c: 417:   EECON2 = 0xAA;
  2398     065B  30AA               	movlw	170
  2399     065C  008D               	movwf	13	;volsfr
  2400     065D                     l1689:
  2401                           
  2402                           ;main.c: 418:   EECON1bits.WR = 1;
  2403     065D  148C               	bsf	12,1	;volsfr
  2404     065E                     l249:	
  2405                           ;main.c: 420:   while (EECON1bits.WR);
  2406                           
  2407     065E  188C               	btfsc	12,1	;volsfr
  2408     065F  2E61               	goto	u1741
  2409     0660  2E62               	goto	u1740
  2410     0661                     u1741:
  2411     0661  2E5E               	goto	l249
  2412     0662                     u1740:
  2413     0662                     l251:
  2414                           
  2415                           ;main.c: 422:   EECON1bits.WREN = 0;
  2416     0662  110C               	bcf	12,2	;volsfr
  2417                           
  2418                           ;main.c: 423:   INTCONbits.GIE = 1;
  2419     0663  178B               	bsf	11,7	;volatile
  2420     0664                     l252:
  2421     0664  0008               	return
  2422     0665                     __end_of_EEPROM_Write:
  2423                           
  2424                           	psect	text6
  2425     0626                     __ptext6:	
  2426 ;; *************** function _readADC *****************
  2427 ;; Defined at:
  2428 ;;		line 301 in file "main.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  channel         1    wreg     unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  channel         1    5[COMMON] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  2    2[COMMON] unsigned int 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2442 ;;      Params:         2       0       0       0
  2443 ;;      Locals:         1       0       0       0
  2444 ;;      Temps:          1       0       0       0
  2445 ;;      Totals:         4       0       0       0
  2446 ;;Total ram usage:        4 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 1
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_main
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456     0626                     _readADC:	
  2457                           ;psect for function _readADC
  2458                           
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _readADC: [wreg+status,2+status,0]
  2462                           ;readADC@channel stored from wreg
  2463     0626  00F6               	movwf	readADC@channel
  2464     0627                     l1757:
  2465                           
  2466                           ;main.c: 303:   ADCON0 = (ADCON0 & 0b11000011) | ((uint8_t)(channel << 2));
  2467     0627  0876               	movf	readADC@channel,w
  2468     0628  00F5               	movwf	??_readADC
  2469     0629  3002               	movlw	2
  2470     062A                     u1775:
  2471     062A  1003               	clrc
  2472     062B  0DF5               	rlf	??_readADC,f
  2473     062C  3EFF               	addlw	-1
  2474     062D  1D03               	skipz
  2475     062E  2E2A               	goto	u1775
  2476     062F  1283               	bcf	3,5	;RP0=0, select bank0
  2477     0630  1303               	bcf	3,6	;RP1=0, select bank0
  2478     0631  081F               	movf	31,w	;volatile
  2479     0632  39C3               	andlw	195
  2480     0633  0475               	iorwf	??_readADC,w
  2481     0634  009F               	movwf	31	;volatile
  2482     0635                     l1759:
  2483                           
  2484                           ;main.c: 304:   _delay((unsigned long)((10)*(4000000/4000000.0)));
  2485     0635  3003               	movlw	3
  2486     0636  00F5               	movwf	??_readADC
  2487     0637                     u2547:
  2488     0637  0BF5               	decfsz	??_readADC,f
  2489     0638  2E37               	goto	u2547
  2490     0639                     l1761:
  2491                           
  2492                           ;main.c: 305:   ADCON0bits.GO = 1;
  2493     0639  1283               	bcf	3,5	;RP0=0, select bank0
  2494     063A  1303               	bcf	3,6	;RP1=0, select bank0
  2495     063B  149F               	bsf	31,1	;volatile
  2496     063C                     l212:	
  2497                           ;main.c: 309:     ;
  2498                           
  2499                           
  2500                           ;main.c: 308:   while (ADCON0bits.GO)
  2501     063C  189F               	btfsc	31,1	;volatile
  2502     063D  2E3F               	goto	u1781
  2503     063E  2E40               	goto	u1780
  2504     063F                     u1781:
  2505     063F  2E3C               	goto	l212
  2506     0640                     u1780:
  2507     0640                     l1763:
  2508                           
  2509                           ;main.c: 312:   return ((unsigned int)ADRESH << 8) | ADRESL;
  2510     0640  081E               	movf	30,w	;volatile
  2511     0641  00F4               	movwf	?_readADC+1
  2512     0642  1683               	bsf	3,5	;RP0=1, select bank1
  2513     0643  1303               	bcf	3,6	;RP1=0, select bank1
  2514     0644  081E               	movf	30,w	;volatile
  2515     0645  00F3               	movwf	?_readADC
  2516     0646                     l215:
  2517     0646  0008               	return
  2518     0647                     __end_of_readADC:
  2519                           
  2520                           	psect	text7
  2521     04DD                     __ptext7:	
  2522 ;; *************** function _loadSettings *****************
  2523 ;; Defined at:
  2524 ;;		line 446 in file "main.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  value8bit       1    3[BANK0 ] PTR unsigned char 
  2527 ;;		 -> maxruntimeindex(1), 
  2528 ;;  value16bit1     1    4[BANK0 ] PTR unsigned int 
  2529 ;;		 -> minvoltagelimit(2), 
  2530 ;;  value16bit2     1    5[BANK0 ] PTR unsigned int 
  2531 ;;		 -> maxvoltagelimit(2), 
  2532 ;;  value16bit3     1    6[BANK0 ] PTR unsigned int 
  2533 ;;		 -> minimumrunningvoltage(2), 
  2534 ;;  value16bit4     1    7[BANK0 ] PTR unsigned int 
  2535 ;;		 -> maximumrinningvoltage(2), 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      _Bool 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2547 ;;      Params:         0       5       0       0
  2548 ;;      Locals:         0       0       0       0
  2549 ;;      Temps:          0       0       0       0
  2550 ;;      Totals:         0       5       0       0
  2551 ;;Total ram usage:        5 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 3
  2554 ;; This function calls:
  2555 ;;		_EEPROM_Read
  2556 ;;		_EEPROM_Read16
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562     04DD                     _loadSettings:	
  2563                           ;psect for function _loadSettings
  2564                           
  2565     04DD                     l1735:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _loadSettings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2568                           
  2569                           
  2570                           ;main.c: 446: _Bool loadSettings(unsigned char *value8bit, unsigned int *value16bit1,;ma
      +                          in.c: 447:                   unsigned int *value16bit2, unsigned int *value16bit3,;main.
      +                          c: 448:                   unsigned int *value16bit4) {;main.c: 449:   if (EEPROM_Read(0x
      +                          00) != 0xAA) {
  2571     04DD  3000               	movlw	0
  2572     04DE  118A  2665  118A   	fcall	_EEPROM_Read
  2573     04E1  3AAA               	xorlw	170
  2574     04E2  1903               	skipnz
  2575     04E3  2CE5               	goto	u1761
  2576     04E4  2CE6               	goto	u1760
  2577     04E5                     u1761:
  2578     04E5  2CE8               	goto	l1741
  2579     04E6                     u1760:
  2580     04E6                     l1737:
  2581                           
  2582                           ;main.c: 450:     return 0;
  2583     04E6  3000               	movlw	0
  2584     04E7  2D2B               	goto	l268
  2585     04E8                     l1741:
  2586                           
  2587                           ;main.c: 452:   *value8bit = EEPROM_Read(0x01);
  2588     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2589     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2590     04EA  0849               	movf	loadSettings@value8bit,w
  2591     04EB  0084               	movwf	4
  2592     04EC  3001               	movlw	1
  2593     04ED  118A  2665  118A   	fcall	_EEPROM_Read
  2594     04F0  1383               	bcf	3,7	;select IRP bank0
  2595     04F1  0080               	movwf	0
  2596     04F2                     l1743:
  2597                           
  2598                           ;main.c: 453:   *value16bit1 = EEPROM_Read16(0x02);
  2599     04F2  3002               	movlw	2
  2600     04F3  118A  2602  118A   	fcall	_EEPROM_Read16
  2601     04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2602     04F7  1303               	bcf	3,6	;RP1=0, select bank0
  2603     04F8  084A               	movf	loadSettings@value16bit1,w
  2604     04F9  0084               	movwf	4
  2605     04FA  0874               	movf	?_EEPROM_Read16,w
  2606     04FB  1383               	bcf	3,7	;select IRP bank0
  2607     04FC  0080               	movwf	0
  2608     04FD  0A84               	incf	4,f
  2609     04FE  0875               	movf	?_EEPROM_Read16+1,w
  2610     04FF  0080               	movwf	0
  2611     0500                     l1745:
  2612                           
  2613                           ;main.c: 454:   *value16bit2 = EEPROM_Read16(0x04);
  2614     0500  3004               	movlw	4
  2615     0501  118A  2602  118A   	fcall	_EEPROM_Read16
  2616     0504  1283               	bcf	3,5	;RP0=0, select bank0
  2617     0505  1303               	bcf	3,6	;RP1=0, select bank0
  2618     0506  084B               	movf	loadSettings@value16bit2,w
  2619     0507  0084               	movwf	4
  2620     0508  0874               	movf	?_EEPROM_Read16,w
  2621     0509  1383               	bcf	3,7	;select IRP bank0
  2622     050A  0080               	movwf	0
  2623     050B  0A84               	incf	4,f
  2624     050C  0875               	movf	?_EEPROM_Read16+1,w
  2625     050D  0080               	movwf	0
  2626     050E                     l1747:
  2627                           
  2628                           ;main.c: 455:   *value16bit3 = EEPROM_Read16(0x06);
  2629     050E  3006               	movlw	6
  2630     050F  118A  2602  118A   	fcall	_EEPROM_Read16
  2631     0512  1283               	bcf	3,5	;RP0=0, select bank0
  2632     0513  1303               	bcf	3,6	;RP1=0, select bank0
  2633     0514  084C               	movf	loadSettings@value16bit3,w
  2634     0515  0084               	movwf	4
  2635     0516  0874               	movf	?_EEPROM_Read16,w
  2636     0517  1383               	bcf	3,7	;select IRP bank0
  2637     0518  0080               	movwf	0
  2638     0519  0A84               	incf	4,f
  2639     051A  0875               	movf	?_EEPROM_Read16+1,w
  2640     051B  0080               	movwf	0
  2641     051C                     l1749:
  2642                           
  2643                           ;main.c: 456:   *value16bit4 = EEPROM_Read16(0x08);
  2644     051C  3008               	movlw	8
  2645     051D  118A  2602  118A   	fcall	_EEPROM_Read16
  2646     0520  1283               	bcf	3,5	;RP0=0, select bank0
  2647     0521  1303               	bcf	3,6	;RP1=0, select bank0
  2648     0522  084D               	movf	loadSettings@value16bit4,w
  2649     0523  0084               	movwf	4
  2650     0524  0874               	movf	?_EEPROM_Read16,w
  2651     0525  1383               	bcf	3,7	;select IRP bank0
  2652     0526  0080               	movwf	0
  2653     0527  0A84               	incf	4,f
  2654     0528  0875               	movf	?_EEPROM_Read16+1,w
  2655     0529  0080               	movwf	0
  2656     052A                     l1751:
  2657                           
  2658                           ;main.c: 457:   return 1;
  2659     052A  3001               	movlw	1
  2660     052B                     l268:
  2661     052B  0008               	return
  2662     052C                     __end_of_loadSettings:
  2663                           
  2664                           	psect	text8
  2665     0602                     __ptext8:	
  2666 ;; *************** function _EEPROM_Read16 *****************
  2667 ;; Defined at:
  2668 ;;		line 439 in file "main.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  address         1    wreg     unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  address         1    2[BANK0 ] unsigned char 
  2673 ;;  result          2    0[BANK0 ] unsigned int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  2    3[COMMON] unsigned int 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2683 ;;      Params:         2       0       0       0
  2684 ;;      Locals:         0       3       0       0
  2685 ;;      Temps:          2       0       0       0
  2686 ;;      Totals:         4       3       0       0
  2687 ;;Total ram usage:        7 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 2
  2690 ;; This function calls:
  2691 ;;		_EEPROM_Read
  2692 ;; This function is called by:
  2693 ;;		_loadSettings
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697     0602                     _EEPROM_Read16:	
  2698                           ;psect for function _EEPROM_Read16
  2699                           
  2700                           
  2701                           ;incstack = 0
  2702                           ; Regs used in _EEPROM_Read16: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2703                           ;EEPROM_Read16@address stored from wreg
  2704     0602  1283               	bcf	3,5	;RP0=0, select bank0
  2705     0603  1303               	bcf	3,6	;RP1=0, select bank0
  2706     0604  00C8               	movwf	EEPROM_Read16@address
  2707     0605                     l1703:
  2708                           
  2709                           ;main.c: 440:   unsigned int result;;main.c: 441:   result = EEPROM_Read(address);
  2710     0605  0848               	movf	EEPROM_Read16@address,w
  2711     0606  118A  2665  118A   	fcall	_EEPROM_Read
  2712     0609  00F6               	movwf	??_EEPROM_Read16
  2713     060A  01F7               	clrf	??_EEPROM_Read16+1
  2714     060B  0876               	movf	??_EEPROM_Read16,w
  2715     060C  1283               	bcf	3,5	;RP0=0, select bank0
  2716     060D  1303               	bcf	3,6	;RP1=0, select bank0
  2717     060E  00C6               	movwf	EEPROM_Read16@result
  2718     060F  0877               	movf	??_EEPROM_Read16+1,w
  2719     0610  00C7               	movwf	EEPROM_Read16@result+1
  2720     0611                     l1705:
  2721                           
  2722                           ;main.c: 442:   result |= ((unsigned int)EEPROM_Read(address + 1)) << 8;
  2723     0611  0848               	movf	EEPROM_Read16@address,w
  2724     0612  3E01               	addlw	1
  2725     0613  118A  2665  118A   	fcall	_EEPROM_Read
  2726     0616  00F6               	movwf	??_EEPROM_Read16
  2727     0617  01F7               	clrf	??_EEPROM_Read16+1
  2728     0618  0876               	movf	??_EEPROM_Read16,w
  2729     0619  00F7               	movwf	??_EEPROM_Read16+1
  2730     061A  01F6               	clrf	??_EEPROM_Read16
  2731     061B  0876               	movf	??_EEPROM_Read16,w
  2732     061C  1283               	bcf	3,5	;RP0=0, select bank0
  2733     061D  1303               	bcf	3,6	;RP1=0, select bank0
  2734     061E  04C6               	iorwf	EEPROM_Read16@result,f
  2735     061F  0877               	movf	??_EEPROM_Read16+1,w
  2736     0620  04C7               	iorwf	EEPROM_Read16@result+1,f
  2737     0621                     l1707:
  2738                           
  2739                           ;main.c: 443:   return result;
  2740     0621  0847               	movf	EEPROM_Read16@result+1,w
  2741     0622  00F5               	movwf	?_EEPROM_Read16+1
  2742     0623  0846               	movf	EEPROM_Read16@result,w
  2743     0624  00F4               	movwf	?_EEPROM_Read16
  2744     0625                     l264:
  2745     0625  0008               	return
  2746     0626                     __end_of_EEPROM_Read16:
  2747                           
  2748                           	psect	text9
  2749     0665                     __ptext9:	
  2750 ;; *************** function _EEPROM_Read *****************
  2751 ;; Defined at:
  2752 ;;		line 426 in file "main.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  address         1    wreg     unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  address         1    2[COMMON] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      unsigned char 
  2759 ;; Registers used:
  2760 ;;		wreg
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2766 ;;      Params:         0       0       0       0
  2767 ;;      Locals:         1       0       0       0
  2768 ;;      Temps:          0       0       0       0
  2769 ;;      Totals:         1       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_EEPROM_Read16
  2777 ;;		_loadSettings
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781     0665                     _EEPROM_Read:	
  2782                           ;psect for function _EEPROM_Read
  2783                           
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in _EEPROM_Read: [wreg]
  2787                           ;EEPROM_Read@address stored from wreg
  2788     0665  00F3               	movwf	EEPROM_Read@address
  2789     0666                     l1691:
  2790     0666                     l255:	
  2791                           ;main.c: 427:   while (EECON1bits.WR);
  2792                           
  2793     0666  1683               	bsf	3,5	;RP0=1, select bank3
  2794     0667  1703               	bsf	3,6	;RP1=1, select bank3
  2795     0668  188C               	btfsc	12,1	;volsfr
  2796     0669  2E6B               	goto	u1751
  2797     066A  2E6C               	goto	u1750
  2798     066B                     u1751:
  2799     066B  2E66               	goto	l255
  2800     066C                     u1750:
  2801     066C                     l1693:
  2802                           
  2803                           ;main.c: 428:   EEADR = address;
  2804     066C  0873               	movf	EEPROM_Read@address,w
  2805     066D  1283               	bcf	3,5	;RP0=0, select bank2
  2806     066E  1703               	bsf	3,6	;RP1=1, select bank2
  2807     066F  008D               	movwf	13	;volatile
  2808     0670                     l1695:
  2809                           
  2810                           ;main.c: 429:   EECON1bits.EEPGD = 0;
  2811     0670  1683               	bsf	3,5	;RP0=1, select bank3
  2812     0671  1703               	bsf	3,6	;RP1=1, select bank3
  2813     0672  138C               	bcf	12,7	;volsfr
  2814     0673                     l1697:
  2815                           
  2816                           ;main.c: 430:   EECON1bits.RD = 1;
  2817     0673  140C               	bsf	12,0	;volsfr
  2818                           
  2819                           ;main.c: 431:   return EEDATA;
  2820     0674  1283               	bcf	3,5	;RP0=0, select bank2
  2821     0675  1703               	bsf	3,6	;RP1=1, select bank2
  2822     0676  080C               	movf	12,w	;volatile
  2823     0677                     l258:
  2824     0677  0008               	return
  2825     0678                     __end_of_EEPROM_Read:
  2826                           
  2827                           	psect	text10
  2828     0689                     __ptext10:	
  2829 ;; *************** function _init_timer *****************
  2830 ;; Defined at:
  2831 ;;		line 393 in file "main.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		None
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2845 ;;      Params:         0       0       0       0
  2846 ;;      Locals:         0       0       0       0
  2847 ;;      Temps:          0       0       0       0
  2848 ;;      Totals:         0       0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     0689                     _init_timer:	
  2860                           ;psect for function _init_timer
  2861                           
  2862     0689                     l1767:	
  2863                           ;incstack = 0
  2864                           ; Regs used in _init_timer: []
  2865                           
  2866                           
  2867                           ;main.c: 394:   T1CON = 0b00110000;
  2868     0689  3030               	movlw	48
  2869     068A  1283               	bcf	3,5	;RP0=0, select bank0
  2870     068B  1303               	bcf	3,6	;RP1=0, select bank0
  2871     068C  0090               	movwf	16	;volatile
  2872                           
  2873                           ;main.c: 396:   TMR1H = 0x12;
  2874     068D  3012               	movlw	18
  2875     068E  008F               	movwf	15	;volatile
  2876                           
  2877                           ;main.c: 397:   TMR1L = 0x38;
  2878     068F  3038               	movlw	56
  2879     0690  008E               	movwf	14	;volatile
  2880                           
  2881                           ;main.c: 399:   PIE1bits.TMR1IE = 1;
  2882     0691  1683               	bsf	3,5	;RP0=1, select bank1
  2883     0692  1303               	bcf	3,6	;RP1=0, select bank1
  2884     0693  140C               	bsf	12,0	;volatile
  2885                           
  2886                           ;main.c: 400:   INTCONbits.PEIE = 1;
  2887     0694  170B               	bsf	11,6	;volatile
  2888                           
  2889                           ;main.c: 401:   INTCONbits.GIE = 1;
  2890     0695  178B               	bsf	11,7	;volatile
  2891                           
  2892                           ;main.c: 403:   T1CONbits.TMR1ON = 1;
  2893     0696  1283               	bcf	3,5	;RP0=0, select bank0
  2894     0697  1303               	bcf	3,6	;RP1=0, select bank0
  2895     0698  1410               	bsf	16,0	;volatile
  2896     0699                     l243:
  2897     0699  0008               	return
  2898     069A                     __end_of_init_timer:
  2899                           
  2900                           	psect	text11
  2901     05D8                     __ptext11:	
  2902 ;; *************** function _initSystem *****************
  2903 ;; Defined at:
  2904 ;;		line 283 in file "main.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2918 ;;      Params:         0       0       0       0
  2919 ;;      Locals:         0       0       0       0
  2920 ;;      Temps:          2       0       0       0
  2921 ;;      Totals:         2       0       0       0
  2922 ;;Total ram usage:        2 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932     05D8                     _initSystem:	
  2933                           ;psect for function _initSystem
  2934                           
  2935     05D8                     l1711:	
  2936                           ;incstack = 0
  2937                           ; Regs used in _initSystem: [wreg+status,2+status,0]
  2938                           
  2939                           
  2940                           ;main.c: 285:   OSCCONbits.IRCF = 0b110;
  2941     05D8  1683               	bsf	3,5	;RP0=1, select bank1
  2942     05D9  1303               	bcf	3,6	;RP1=0, select bank1
  2943     05DA  080F               	movf	15,w	;volatile
  2944     05DB  398F               	andlw	-113
  2945     05DC  3860               	iorlw	96
  2946     05DD  008F               	movwf	15	;volatile
  2947     05DE                     l1713:
  2948                           
  2949                           ;main.c: 286:   ANSEL = 0b00011000;
  2950     05DE  3018               	movlw	24
  2951     05DF  1683               	bsf	3,5	;RP0=1, select bank3
  2952     05E0  1703               	bsf	3,6	;RP1=1, select bank3
  2953     05E1  0088               	movwf	8	;volatile
  2954     05E2                     l1715:
  2955                           
  2956                           ;main.c: 287:   ANSELH = 0x00;
  2957     05E2  0189               	clrf	9	;volatile
  2958     05E3                     l1717:
  2959                           
  2960                           ;main.c: 288:   TRISA = 0b11101000;
  2961     05E3  30E8               	movlw	232
  2962     05E4  1683               	bsf	3,5	;RP0=1, select bank1
  2963     05E5  1303               	bcf	3,6	;RP1=0, select bank1
  2964     05E6  0085               	movwf	5	;volatile
  2965     05E7                     l1719:
  2966                           
  2967                           ;main.c: 289:   TRISB = 0b00111000;
  2968     05E7  3038               	movlw	56
  2969     05E8  0086               	movwf	6	;volatile
  2970     05E9                     l1721:
  2971                           
  2972                           ;main.c: 290:   TRISC = 0b00000011;
  2973     05E9  3003               	movlw	3
  2974     05EA  0087               	movwf	7	;volatile
  2975     05EB                     l1723:
  2976                           
  2977                           ;main.c: 292:   ADCON0 = 0b00001101;
  2978     05EB  300D               	movlw	13
  2979     05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2980     05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2981     05EE  009F               	movwf	31	;volatile
  2982     05EF                     l1725:
  2983                           
  2984                           ;main.c: 293:   ADCON1 = 0b10000000;
  2985     05EF  3080               	movlw	128
  2986     05F0  1683               	bsf	3,5	;RP0=1, select bank1
  2987     05F1  1303               	bcf	3,6	;RP1=0, select bank1
  2988     05F2  009F               	movwf	31	;volatile
  2989     05F3                     l1727:
  2990                           
  2991                           ;main.c: 295:   _delay((unsigned long)((10)*(4000000/4000.0)));
  2992     05F3  300D               	movlw	13
  2993     05F4  00F4               	movwf	??_initSystem+1
  2994     05F5  30FB               	movlw	251
  2995     05F6  00F3               	movwf	??_initSystem
  2996     05F7                     u2557:
  2997     05F7  0BF3               	decfsz	??_initSystem,f
  2998     05F8  2DF7               	goto	u2557
  2999     05F9  0BF4               	decfsz	??_initSystem+1,f
  3000     05FA  2DF7               	goto	u2557
  3001     05FB  2DFC               	nop2
  3002     05FC                     l1729:
  3003                           
  3004                           ;main.c: 296:   PORTA = 0x00;
  3005     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  3006     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  3007     05FE  0185               	clrf	5	;volatile
  3008     05FF                     l1731:
  3009                           
  3010                           ;main.c: 297:   PORTB = 0x00;
  3011     05FF  0186               	clrf	6	;volatile
  3012     0600                     l1733:
  3013                           
  3014                           ;main.c: 298:   PORTC = 0x00;
  3015     0600  0187               	clrf	7	;volatile
  3016     0601                     l209:
  3017     0601  0008               	return
  3018     0602                     __end_of_initSystem:
  3019                           
  3020                           	psect	text12
  3021     05AA                     __ptext12:	
  3022 ;; *************** function _getSensorResults *****************
  3023 ;; Defined at:
  3024 ;;		line 340 in file "main.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  low_active      1    2[COMMON] PTR _Bool 
  3027 ;;		 -> main@low_sensor_active(1), 
  3028 ;;  high_active     1    3[COMMON] PTR _Bool 
  3029 ;;		 -> main@high_sensor_active(1), 
  3030 ;;  flow_active     1    4[COMMON] PTR _Bool 
  3031 ;;		 -> main@flow_sensor_active(1), 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      _Bool 
  3036 ;; Registers used:
  3037 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3043 ;;      Params:         3       0       0       0
  3044 ;;      Locals:         0       0       0       0
  3045 ;;      Temps:          0       0       0       0
  3046 ;;      Totals:         3       0       0       0
  3047 ;;Total ram usage:        3 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 1
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057     05AA                     _getSensorResults:	
  3058                           ;psect for function _getSensorResults
  3059                           
  3060     05AA                     l1791:	
  3061                           ;incstack = 0
  3062                           ; Regs used in _getSensorResults: [wreg-fsr0h+status,2+status,0]
  3063                           
  3064                           
  3065                           ;main.c: 341:   if (sensors_reading_complete) {
  3066     05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3067     05AB  1303               	bcf	3,6	;RP1=0, select bank0
  3068     05AC  083F               	movf	_sensors_reading_complete,w	;volatile
  3069     05AD  1903               	btfsc	3,2
  3070     05AE  2DB0               	goto	u1831
  3071     05AF  2DB1               	goto	u1830
  3072     05B0                     u1831:
  3073     05B0  2DD6               	goto	l1801
  3074     05B1                     u1830:
  3075     05B1                     l1793:
  3076                           
  3077                           ;main.c: 342:     *low_active = (low_sensor_high_count < 45);
  3078     05B1  0873               	movf	getSensorResults@low_active,w
  3079     05B2  0084               	movwf	4
  3080     05B3  302D               	movlw	45
  3081     05B4  0279               	subwf	_low_sensor_high_count,w	;volatile
  3082     05B5  1C03               	skipc
  3083     05B6  2DB8               	goto	u1841
  3084     05B7  2DBA               	goto	u1840
  3085     05B8                     u1841:
  3086     05B8  3001               	movlw	1
  3087     05B9  2DBB               	goto	u1850
  3088     05BA                     u1840:
  3089     05BA  3000               	movlw	0
  3090     05BB                     u1850:
  3091     05BB  1383               	bcf	3,7	;select IRP bank0
  3092     05BC  0080               	movwf	0
  3093                           
  3094                           ;main.c: 343:     *high_active = (high_sensor_high_count < 45);
  3095     05BD  0874               	movf	getSensorResults@high_active,w
  3096     05BE  0084               	movwf	4
  3097     05BF  302D               	movlw	45
  3098     05C0  0241               	subwf	_high_sensor_high_count,w	;volatile
  3099     05C1  1C03               	skipc
  3100     05C2  2DC4               	goto	u1861
  3101     05C3  2DC6               	goto	u1860
  3102     05C4                     u1861:
  3103     05C4  3001               	movlw	1
  3104     05C5  2DC7               	goto	u1870
  3105     05C6                     u1860:
  3106     05C6  3000               	movlw	0
  3107     05C7                     u1870:
  3108     05C7  0080               	movwf	0
  3109                           
  3110                           ;main.c: 344:     *flow_active = (flow_sensor_high_count < 45);
  3111     05C8  0875               	movf	getSensorResults@flow_active,w
  3112     05C9  0084               	movwf	4
  3113     05CA  302D               	movlw	45
  3114     05CB  0240               	subwf	_flow_sensor_high_count,w	;volatile
  3115     05CC  1C03               	skipc
  3116     05CD  2DCF               	goto	u1881
  3117     05CE  2DD1               	goto	u1880
  3118     05CF                     u1881:
  3119     05CF  3001               	movlw	1
  3120     05D0  2DD2               	goto	u1890
  3121     05D1                     u1880:
  3122     05D1  3000               	movlw	0
  3123     05D2                     u1890:
  3124     05D2  0080               	movwf	0
  3125     05D3                     l1795:
  3126                           
  3127                           ;main.c: 345:     sensors_reading_complete = 0;
  3128     05D3  01BF               	clrf	_sensors_reading_complete	;volatile
  3129     05D4                     l1797:
  3130                           
  3131                           ;main.c: 346:     return 1;
  3132     05D4  3001               	movlw	1
  3133     05D5  2DD7               	goto	l226
  3134     05D6                     l1801:
  3135                           
  3136                           ;main.c: 348:   return 0;
  3137     05D6  3000               	movlw	0
  3138     05D7                     l226:
  3139     05D7  0008               	return
  3140     05D8                     __end_of_getSensorResults:
  3141                           
  3142                           	psect	text13
  3143     03E2                     __ptext13:	
  3144 ;; *************** function _buzzer_update *****************
  3145 ;; Defined at:
  3146 ;;		line 481 in file "main.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3160 ;;      Params:         0       0       0       0
  3161 ;;      Locals:         0       0       0       0
  3162 ;;      Temps:          0       8       0       0
  3163 ;;      Totals:         0       8       0       0
  3164 ;;Total ram usage:        8 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 1
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174     03E2                     _buzzer_update:	
  3175                           ;psect for function _buzzer_update
  3176                           
  3177     03E2                     l1769:	
  3178                           ;incstack = 0
  3179                           ; Regs used in _buzzer_update: [wreg+status,2+status,0]
  3180                           
  3181                           
  3182                           ;main.c: 482:     if (buzzer_active && (seconds_counter - buzzer_start_time >= buzzer_du
      +                          ration)) {
  3183     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3184     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3185     03E4  0836               	movf	_buzzer_active,w
  3186     03E5  1903               	btfsc	3,2
  3187     03E6  2BE8               	goto	u1791
  3188     03E7  2BE9               	goto	u1790
  3189     03E8                     u1791:
  3190     03E8  2C35               	goto	l279
  3191     03E9                     u1790:
  3192     03E9                     l1771:
  3193     03E9  082C               	movf	_buzzer_duration,w
  3194     03EA  00C6               	movwf	??_buzzer_update
  3195     03EB  082D               	movf	_buzzer_duration+1,w
  3196     03EC  00C7               	movwf	??_buzzer_update+1
  3197     03ED  01C8               	clrf	??_buzzer_update+2
  3198     03EE  01C9               	clrf	??_buzzer_update+3
  3199     03EF  0828               	movf	_seconds_counter,w	;volatile
  3200     03F0  00CA               	movwf	??_buzzer_update+4
  3201     03F1  0829               	movf	_seconds_counter+1,w	;volatile
  3202     03F2  00CB               	movwf	??_buzzer_update+5
  3203     03F3  082A               	movf	_seconds_counter+2,w	;volatile
  3204     03F4  00CC               	movwf	??_buzzer_update+6
  3205     03F5  082B               	movf	_seconds_counter+3,w	;volatile
  3206     03F6  00CD               	movwf	??_buzzer_update+7
  3207     03F7  1683               	bsf	3,5	;RP0=1, select bank1
  3208     03F8  1303               	bcf	3,6	;RP1=0, select bank1
  3209     03F9  082A               	movf	_buzzer_start_time^(0+128),w
  3210     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3211     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3212     03FC  02CA               	subwf	??_buzzer_update+4,f
  3213     03FD  1683               	bsf	3,5	;RP0=1, select bank1
  3214     03FE  1303               	bcf	3,6	;RP1=0, select bank1
  3215     03FF  082B               	movf	(_buzzer_start_time+1)^(0+128),w
  3216     0400  1C03               	skipc
  3217     0401  0F2B               	incfsz	(_buzzer_start_time+1)^(0+128),w
  3218     0402  2C04               	goto	u1801
  3219     0403  2C07               	goto	u1802
  3220     0404                     u1801:
  3221     0404  1283               	bcf	3,5	;RP0=0, select bank0
  3222     0405  1303               	bcf	3,6	;RP1=0, select bank0
  3223     0406  02CB               	subwf	??_buzzer_update+5,f
  3224     0407                     u1802:
  3225     0407  1683               	bsf	3,5	;RP0=1, select bank1
  3226     0408  1303               	bcf	3,6	;RP1=0, select bank1
  3227     0409  082C               	movf	(_buzzer_start_time+2)^(0+128),w
  3228     040A  1C03               	skipc
  3229     040B  0F2C               	incfsz	(_buzzer_start_time+2)^(0+128),w
  3230     040C  2C0E               	goto	u1803
  3231     040D  2C11               	goto	u1804
  3232     040E                     u1803:
  3233     040E  1283               	bcf	3,5	;RP0=0, select bank0
  3234     040F  1303               	bcf	3,6	;RP1=0, select bank0
  3235     0410  02CC               	subwf	??_buzzer_update+6,f
  3236     0411                     u1804:
  3237     0411  1683               	bsf	3,5	;RP0=1, select bank1
  3238     0412  1303               	bcf	3,6	;RP1=0, select bank1
  3239     0413  082D               	movf	(_buzzer_start_time+3)^(0+128),w
  3240     0414  1C03               	skipc
  3241     0415  0F2D               	incfsz	(_buzzer_start_time+3)^(0+128),w
  3242     0416  2C18               	goto	u1805
  3243     0417  2C1B               	goto	u1806
  3244     0418                     u1805:
  3245     0418  1283               	bcf	3,5	;RP0=0, select bank0
  3246     0419  1303               	bcf	3,6	;RP1=0, select bank0
  3247     041A  02CD               	subwf	??_buzzer_update+7,f
  3248     041B                     u1806:
  3249     041B  1683               	bsf	3,5	;RP0=1, select bank1
  3250     041C  1303               	bcf	3,6	;RP1=0, select bank1
  3251     041D  1283               	bcf	3,5	;RP0=0, select bank0
  3252     041E  1303               	bcf	3,6	;RP1=0, select bank0
  3253     041F  0849               	movf	??_buzzer_update+3,w
  3254     0420  024D               	subwf	??_buzzer_update+7,w
  3255     0421  1D03               	skipz
  3256     0422  2C2D               	goto	u1815
  3257     0423  0848               	movf	??_buzzer_update+2,w
  3258     0424  024C               	subwf	??_buzzer_update+6,w
  3259     0425  1D03               	skipz
  3260     0426  2C2D               	goto	u1815
  3261     0427  0847               	movf	??_buzzer_update+1,w
  3262     0428  024B               	subwf	??_buzzer_update+5,w
  3263     0429  1D03               	skipz
  3264     042A  2C2D               	goto	u1815
  3265     042B  0846               	movf	??_buzzer_update,w
  3266     042C  024A               	subwf	??_buzzer_update+4,w
  3267     042D                     u1815:
  3268     042D  1C03               	skipc
  3269     042E  2C30               	goto	u1811
  3270     042F  2C31               	goto	u1810
  3271     0430                     u1811:
  3272     0430  2C35               	goto	l279
  3273     0431                     u1810:
  3274     0431                     l1773:
  3275                           
  3276                           ;main.c: 483:         PORTCbits.RC4 = 0;
  3277     0431  1207               	bcf	7,4	;volatile
  3278     0432                     l1775:
  3279                           
  3280                           ;main.c: 484:         buzzer_active = 0;
  3281     0432  01B6               	clrf	_buzzer_active
  3282                           
  3283                           ;main.c: 485:         buzzer_duration = 0;
  3284     0433  01AC               	clrf	_buzzer_duration
  3285     0434  01AD               	clrf	_buzzer_duration+1
  3286     0435                     l279:
  3287     0435  0008               	return
  3288     0436                     __end_of_buzzer_update:
  3289                           
  3290                           	psect	text14
  3291     052C                     __ptext14:	
  3292 ;; *************** function ___lmul *****************
  3293 ;; Defined at:
  3294 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul32.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3297 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  product         4    3[COMMON] unsigned long 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  4    0[BANK0 ] unsigned long 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3309 ;;      Params:         0       8       0       0
  3310 ;;      Locals:         4       0       0       0
  3311 ;;      Temps:          1       0       0       0
  3312 ;;      Totals:         5       8       0       0
  3313 ;;Total ram usage:       13 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 1
  3316 ;; This function calls:
  3317 ;;		Nothing
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323     052C                     ___lmul:	
  3324                           ;psect for function ___lmul
  3325                           
  3326     052C                     l1805:	
  3327                           ;incstack = 0
  3328                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3329                           
  3330     052C  3000               	movlw	0
  3331     052D  00F7               	movwf	___lmul@product+3
  3332     052E  3000               	movlw	0
  3333     052F  00F6               	movwf	___lmul@product+2
  3334     0530  3000               	movlw	0
  3335     0531  00F5               	movwf	___lmul@product+1
  3336     0532  3000               	movlw	0
  3337     0533  00F4               	movwf	___lmul@product
  3338     0534                     l1807:
  3339     0534  1283               	bcf	3,5	;RP0=0, select bank0
  3340     0535  1303               	bcf	3,6	;RP1=0, select bank0
  3341     0536  1C46               	btfss	___lmul@multiplier,0
  3342     0537  2D39               	goto	u1901
  3343     0538  2D3A               	goto	u1900
  3344     0539                     u1901:
  3345     0539  2D51               	goto	l1811
  3346     053A                     u1900:
  3347     053A                     l1809:
  3348     053A  084A               	movf	___lmul@multiplicand,w
  3349     053B  07F4               	addwf	___lmul@product,f
  3350     053C  084B               	movf	___lmul@multiplicand+1,w
  3351     053D  1103               	clrz
  3352     053E  1803               	skipnc
  3353     053F  3E01               	addlw	1
  3354     0540  1903               	skipnz
  3355     0541  2D43               	goto	u1911
  3356     0542  07F5               	addwf	___lmul@product+1,f
  3357     0543                     u1911:
  3358     0543  084C               	movf	___lmul@multiplicand+2,w
  3359     0544  1103               	clrz
  3360     0545  1803               	skipnc
  3361     0546  3E01               	addlw	1
  3362     0547  1903               	skipnz
  3363     0548  2D4A               	goto	u1912
  3364     0549  07F6               	addwf	___lmul@product+2,f
  3365     054A                     u1912:
  3366     054A  084D               	movf	___lmul@multiplicand+3,w
  3367     054B  1103               	clrz
  3368     054C  1803               	skipnc
  3369     054D  3E01               	addlw	1
  3370     054E  1903               	skipnz
  3371     054F  2D51               	goto	u1913
  3372     0550  07F7               	addwf	___lmul@product+3,f
  3373     0551                     u1913:
  3374     0551                     l1811:
  3375     0551  3001               	movlw	1
  3376     0552  00F3               	movwf	??___lmul
  3377     0553                     u1925:
  3378     0553  1003               	clrc
  3379     0554  0DCA               	rlf	___lmul@multiplicand,f
  3380     0555  0DCB               	rlf	___lmul@multiplicand+1,f
  3381     0556  0DCC               	rlf	___lmul@multiplicand+2,f
  3382     0557  0DCD               	rlf	___lmul@multiplicand+3,f
  3383     0558  0BF3               	decfsz	??___lmul,f
  3384     0559  2D53               	goto	u1925
  3385     055A                     l1813:
  3386     055A  3001               	movlw	1
  3387     055B                     u1935:
  3388     055B  1003               	clrc
  3389     055C  0CC9               	rrf	___lmul@multiplier+3,f
  3390     055D  0CC8               	rrf	___lmul@multiplier+2,f
  3391     055E  0CC7               	rrf	___lmul@multiplier+1,f
  3392     055F  0CC6               	rrf	___lmul@multiplier,f
  3393     0560  3EFF               	addlw	-1
  3394     0561  1D03               	skipz
  3395     0562  2D5B               	goto	u1935
  3396     0563  0849               	movf	___lmul@multiplier+3,w
  3397     0564  0448               	iorwf	___lmul@multiplier+2,w
  3398     0565  0447               	iorwf	___lmul@multiplier+1,w
  3399     0566  0446               	iorwf	___lmul@multiplier,w
  3400     0567  1D03               	skipz
  3401     0568  2D6A               	goto	u1941
  3402     0569  2D6B               	goto	u1940
  3403     056A                     u1941:
  3404     056A  2D34               	goto	l1807
  3405     056B                     u1940:
  3406     056B                     l1815:
  3407     056B  0877               	movf	___lmul@product+3,w
  3408     056C  00C9               	movwf	?___lmul+3
  3409     056D  0876               	movf	___lmul@product+2,w
  3410     056E  00C8               	movwf	?___lmul+2
  3411     056F  0875               	movf	___lmul@product+1,w
  3412     0570  00C7               	movwf	?___lmul+1
  3413     0571  0874               	movf	___lmul@product,w
  3414     0572  00C6               	movwf	?___lmul
  3415     0573                     l379:
  3416     0573  0008               	return
  3417     0574                     __end_of___lmul:
  3418                           
  3419                           	psect	text15
  3420     0436                     __ptext15:	
  3421 ;; *************** function ___llmod *****************
  3422 ;; Defined at:
  3423 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/llmod.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  divisor         4    0[BANK0 ] unsigned long 
  3426 ;;  dividend        4    4[BANK0 ] unsigned long 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  counter         1    3[COMMON] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  4    0[BANK0 ] unsigned long 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3438 ;;      Params:         0       8       0       0
  3439 ;;      Locals:         1       0       0       0
  3440 ;;      Temps:          1       0       0       0
  3441 ;;      Totals:         2       8       0       0
  3442 ;;Total ram usage:       10 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; Hardware stack levels required when called: 1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452     0436                     ___llmod:	
  3453                           ;psect for function ___llmod
  3454                           
  3455     0436                     l1843:	
  3456                           ;incstack = 0
  3457                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3458                           
  3459     0436  1283               	bcf	3,5	;RP0=0, select bank0
  3460     0437  1303               	bcf	3,6	;RP1=0, select bank0
  3461     0438  0849               	movf	___llmod@divisor+3,w
  3462     0439  0448               	iorwf	___llmod@divisor+2,w
  3463     043A  0447               	iorwf	___llmod@divisor+1,w
  3464     043B  0446               	iorwf	___llmod@divisor,w
  3465     043C  1903               	skipnz
  3466     043D  2C3F               	goto	u2021
  3467     043E  2C40               	goto	u2020
  3468     043F                     u2021:
  3469     043F  2C81               	goto	l1859
  3470     0440                     u2020:
  3471     0440                     l1845:
  3472     0440  3001               	movlw	1
  3473     0441  00F4               	movwf	___llmod@counter
  3474     0442  2C4E               	goto	l1849
  3475     0443                     l1847:
  3476     0443  3001               	movlw	1
  3477     0444  00F3               	movwf	??___llmod
  3478     0445                     u2035:
  3479     0445  1003               	clrc
  3480     0446  0DC6               	rlf	___llmod@divisor,f
  3481     0447  0DC7               	rlf	___llmod@divisor+1,f
  3482     0448  0DC8               	rlf	___llmod@divisor+2,f
  3483     0449  0DC9               	rlf	___llmod@divisor+3,f
  3484     044A  0BF3               	decfsz	??___llmod,f
  3485     044B  2C45               	goto	u2035
  3486     044C  3001               	movlw	1
  3487     044D  07F4               	addwf	___llmod@counter,f
  3488     044E                     l1849:
  3489     044E  1FC9               	btfss	___llmod@divisor+3,7
  3490     044F  2C51               	goto	u2041
  3491     0450  2C52               	goto	u2040
  3492     0451                     u2041:
  3493     0451  2C43               	goto	l1847
  3494     0452                     u2040:
  3495     0452                     l1851:
  3496     0452  0849               	movf	___llmod@divisor+3,w
  3497     0453  024D               	subwf	___llmod@dividend+3,w
  3498     0454  1D03               	skipz
  3499     0455  2C60               	goto	u2055
  3500     0456  0848               	movf	___llmod@divisor+2,w
  3501     0457  024C               	subwf	___llmod@dividend+2,w
  3502     0458  1D03               	skipz
  3503     0459  2C60               	goto	u2055
  3504     045A  0847               	movf	___llmod@divisor+1,w
  3505     045B  024B               	subwf	___llmod@dividend+1,w
  3506     045C  1D03               	skipz
  3507     045D  2C60               	goto	u2055
  3508     045E  0846               	movf	___llmod@divisor,w
  3509     045F  024A               	subwf	___llmod@dividend,w
  3510     0460                     u2055:
  3511     0460  1C03               	skipc
  3512     0461  2C63               	goto	u2051
  3513     0462  2C64               	goto	u2050
  3514     0463                     u2051:
  3515     0463  2C72               	goto	l1855
  3516     0464                     u2050:
  3517     0464                     l1853:
  3518     0464  0846               	movf	___llmod@divisor,w
  3519     0465  02CA               	subwf	___llmod@dividend,f
  3520     0466  0847               	movf	___llmod@divisor+1,w
  3521     0467  1C03               	skipc
  3522     0468  0F47               	incfsz	___llmod@divisor+1,w
  3523     0469  02CB               	subwf	___llmod@dividend+1,f
  3524     046A  0848               	movf	___llmod@divisor+2,w
  3525     046B  1C03               	skipc
  3526     046C  0F48               	incfsz	___llmod@divisor+2,w
  3527     046D  02CC               	subwf	___llmod@dividend+2,f
  3528     046E  0849               	movf	___llmod@divisor+3,w
  3529     046F  1C03               	skipc
  3530     0470  0F49               	incfsz	___llmod@divisor+3,w
  3531     0471  02CD               	subwf	___llmod@dividend+3,f
  3532     0472                     l1855:
  3533     0472  3001               	movlw	1
  3534     0473                     u2065:
  3535     0473  1003               	clrc
  3536     0474  0CC9               	rrf	___llmod@divisor+3,f
  3537     0475  0CC8               	rrf	___llmod@divisor+2,f
  3538     0476  0CC7               	rrf	___llmod@divisor+1,f
  3539     0477  0CC6               	rrf	___llmod@divisor,f
  3540     0478  3EFF               	addlw	-1
  3541     0479  1D03               	skipz
  3542     047A  2C73               	goto	u2065
  3543     047B                     l1857:
  3544     047B  3001               	movlw	1
  3545     047C  02F4               	subwf	___llmod@counter,f
  3546     047D  1D03               	btfss	3,2
  3547     047E  2C80               	goto	u2071
  3548     047F  2C81               	goto	u2070
  3549     0480                     u2071:
  3550     0480  2C52               	goto	l1851
  3551     0481                     u2070:
  3552     0481                     l1859:
  3553     0481  084D               	movf	___llmod@dividend+3,w
  3554     0482  00C9               	movwf	?___llmod+3
  3555     0483  084C               	movf	___llmod@dividend+2,w
  3556     0484  00C8               	movwf	?___llmod+2
  3557     0485  084B               	movf	___llmod@dividend+1,w
  3558     0486  00C7               	movwf	?___llmod+1
  3559     0487  084A               	movf	___llmod@dividend,w
  3560     0488  00C6               	movwf	?___llmod
  3561     0489                     l595:
  3562     0489  0008               	return
  3563     048A                     __end_of___llmod:
  3564                           
  3565                           	psect	text16
  3566     037C                     __ptext16:	
  3567 ;; *************** function ___lldiv *****************
  3568 ;; Defined at:
  3569 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  divisor         4    8[BANK0 ] unsigned long 
  3572 ;;  dividend        4   12[BANK0 ] unsigned long 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  quotient        4   16[BANK0 ] unsigned long 
  3575 ;;  counter         1   20[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  4    8[BANK0 ] unsigned long 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3585 ;;      Params:         0       8       0       0
  3586 ;;      Locals:         0       5       0       0
  3587 ;;      Temps:          1       0       0       0
  3588 ;;      Totals:         1      13       0       0
  3589 ;;Total ram usage:       14 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599     037C                     ___lldiv:	
  3600                           ;psect for function ___lldiv
  3601                           
  3602     037C                     l1819:	
  3603                           ;incstack = 0
  3604                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3605                           
  3606     037C  3000               	movlw	0
  3607     037D  1283               	bcf	3,5	;RP0=0, select bank0
  3608     037E  1303               	bcf	3,6	;RP1=0, select bank0
  3609     037F  00D9               	movwf	___lldiv@quotient+3
  3610     0380  3000               	movlw	0
  3611     0381  00D8               	movwf	___lldiv@quotient+2
  3612     0382  3000               	movlw	0
  3613     0383  00D7               	movwf	___lldiv@quotient+1
  3614     0384  3000               	movlw	0
  3615     0385  00D6               	movwf	___lldiv@quotient
  3616     0386  0851               	movf	___lldiv@divisor+3,w
  3617     0387  0450               	iorwf	___lldiv@divisor+2,w
  3618     0388  044F               	iorwf	___lldiv@divisor+1,w
  3619     0389  044E               	iorwf	___lldiv@divisor,w
  3620     038A  1903               	skipnz
  3621     038B  2B8D               	goto	u1951
  3622     038C  2B8E               	goto	u1950
  3623     038D                     u1951:
  3624     038D  2BD9               	goto	l1839
  3625     038E                     u1950:
  3626     038E                     l1821:
  3627     038E  3001               	movlw	1
  3628     038F  00DA               	movwf	___lldiv@counter
  3629     0390  2B9C               	goto	l1825
  3630     0391                     l1823:
  3631     0391  3001               	movlw	1
  3632     0392  00F8               	movwf	??___lldiv
  3633     0393                     u1965:
  3634     0393  1003               	clrc
  3635     0394  0DCE               	rlf	___lldiv@divisor,f
  3636     0395  0DCF               	rlf	___lldiv@divisor+1,f
  3637     0396  0DD0               	rlf	___lldiv@divisor+2,f
  3638     0397  0DD1               	rlf	___lldiv@divisor+3,f
  3639     0398  0BF8               	decfsz	??___lldiv,f
  3640     0399  2B93               	goto	u1965
  3641     039A  3001               	movlw	1
  3642     039B  07DA               	addwf	___lldiv@counter,f
  3643     039C                     l1825:
  3644     039C  1FD1               	btfss	___lldiv@divisor+3,7
  3645     039D  2B9F               	goto	u1971
  3646     039E  2BA0               	goto	u1970
  3647     039F                     u1971:
  3648     039F  2B91               	goto	l1823
  3649     03A0                     u1970:
  3650     03A0                     l1827:
  3651     03A0  3001               	movlw	1
  3652     03A1  00F8               	movwf	??___lldiv
  3653     03A2                     u1985:
  3654     03A2  1003               	clrc
  3655     03A3  0DD6               	rlf	___lldiv@quotient,f
  3656     03A4  0DD7               	rlf	___lldiv@quotient+1,f
  3657     03A5  0DD8               	rlf	___lldiv@quotient+2,f
  3658     03A6  0DD9               	rlf	___lldiv@quotient+3,f
  3659     03A7  0BF8               	decfsz	??___lldiv,f
  3660     03A8  2BA2               	goto	u1985
  3661     03A9                     l1829:
  3662     03A9  0851               	movf	___lldiv@divisor+3,w
  3663     03AA  0255               	subwf	___lldiv@dividend+3,w
  3664     03AB  1D03               	skipz
  3665     03AC  2BB7               	goto	u1995
  3666     03AD  0850               	movf	___lldiv@divisor+2,w
  3667     03AE  0254               	subwf	___lldiv@dividend+2,w
  3668     03AF  1D03               	skipz
  3669     03B0  2BB7               	goto	u1995
  3670     03B1  084F               	movf	___lldiv@divisor+1,w
  3671     03B2  0253               	subwf	___lldiv@dividend+1,w
  3672     03B3  1D03               	skipz
  3673     03B4  2BB7               	goto	u1995
  3674     03B5  084E               	movf	___lldiv@divisor,w
  3675     03B6  0252               	subwf	___lldiv@dividend,w
  3676     03B7                     u1995:
  3677     03B7  1C03               	skipc
  3678     03B8  2BBA               	goto	u1991
  3679     03B9  2BBB               	goto	u1990
  3680     03BA                     u1991:
  3681     03BA  2BCA               	goto	l1835
  3682     03BB                     u1990:
  3683     03BB                     l1831:
  3684     03BB  084E               	movf	___lldiv@divisor,w
  3685     03BC  02D2               	subwf	___lldiv@dividend,f
  3686     03BD  084F               	movf	___lldiv@divisor+1,w
  3687     03BE  1C03               	skipc
  3688     03BF  0F4F               	incfsz	___lldiv@divisor+1,w
  3689     03C0  02D3               	subwf	___lldiv@dividend+1,f
  3690     03C1  0850               	movf	___lldiv@divisor+2,w
  3691     03C2  1C03               	skipc
  3692     03C3  0F50               	incfsz	___lldiv@divisor+2,w
  3693     03C4  02D4               	subwf	___lldiv@dividend+2,f
  3694     03C5  0851               	movf	___lldiv@divisor+3,w
  3695     03C6  1C03               	skipc
  3696     03C7  0F51               	incfsz	___lldiv@divisor+3,w
  3697     03C8  02D5               	subwf	___lldiv@dividend+3,f
  3698     03C9                     l1833:
  3699     03C9  1456               	bsf	___lldiv@quotient,0
  3700     03CA                     l1835:
  3701     03CA  3001               	movlw	1
  3702     03CB                     u2005:
  3703     03CB  1003               	clrc
  3704     03CC  0CD1               	rrf	___lldiv@divisor+3,f
  3705     03CD  0CD0               	rrf	___lldiv@divisor+2,f
  3706     03CE  0CCF               	rrf	___lldiv@divisor+1,f
  3707     03CF  0CCE               	rrf	___lldiv@divisor,f
  3708     03D0  3EFF               	addlw	-1
  3709     03D1  1D03               	skipz
  3710     03D2  2BCB               	goto	u2005
  3711     03D3                     l1837:
  3712     03D3  3001               	movlw	1
  3713     03D4  02DA               	subwf	___lldiv@counter,f
  3714     03D5  1D03               	btfss	3,2
  3715     03D6  2BD8               	goto	u2011
  3716     03D7  2BD9               	goto	u2010
  3717     03D8                     u2011:
  3718     03D8  2BA0               	goto	l1827
  3719     03D9                     u2010:
  3720     03D9                     l1839:
  3721     03D9  0859               	movf	___lldiv@quotient+3,w
  3722     03DA  00D1               	movwf	?___lldiv+3
  3723     03DB  0858               	movf	___lldiv@quotient+2,w
  3724     03DC  00D0               	movwf	?___lldiv+2
  3725     03DD  0857               	movf	___lldiv@quotient+1,w
  3726     03DE  00CF               	movwf	?___lldiv+1
  3727     03DF  0856               	movf	___lldiv@quotient,w
  3728     03E0  00CE               	movwf	?___lldiv
  3729     03E1                     l401:
  3730     03E1  0008               	return
  3731     03E2                     __end_of___lldiv:
  3732                           
  3733                           	psect	text17
  3734     048A                     __ptext17:	
  3735 ;; *************** function _isr *****************
  3736 ;; Defined at:
  3737 ;;		line 351 in file "main.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      void 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3751 ;;      Params:         0       0       0       0
  3752 ;;      Locals:         0       0       0       0
  3753 ;;      Temps:          2       0       0       0
  3754 ;;      Totals:         2       0       0       0
  3755 ;;Total ram usage:        2 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		Interrupt level 1
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764     048A                     _isr:	
  3765                           ;psect for function _isr
  3766                           
  3767     048A                     i1l1625:
  3768                           
  3769                           ;main.c: 353:   if (PIR1bits.TMR1IF) {
  3770     048A  1283               	bcf	3,5	;RP0=0, select bank0
  3771     048B  1303               	bcf	3,6	;RP1=0, select bank0
  3772     048C  1C0C               	btfss	12,0	;volatile
  3773     048D  2C8F               	goto	u164_21
  3774     048E  2C90               	goto	u164_20
  3775     048F                     u164_21:
  3776     048F  2CAC               	goto	i1l1641
  3777     0490                     u164_20:
  3778     0490                     i1l1627:
  3779                           
  3780                           ;main.c: 354:     if (to == 0) {
  3781     0490  0845               	movf	_to,w
  3782     0491  1D03               	btfss	3,2
  3783     0492  2C94               	goto	u165_21
  3784     0493  2C95               	goto	u165_20
  3785     0494                     u165_21:
  3786     0494  2CA6               	goto	i1l1633
  3787     0495                     u165_20:
  3788     0495                     i1l1629:
  3789                           
  3790                           ;main.c: 355:       seconds_counter++;
  3791     0495  3001               	movlw	1
  3792     0496  07A8               	addwf	_seconds_counter,f	;volatile
  3793     0497  3000               	movlw	0
  3794     0498  1803               	skipnc
  3795     0499  3001               	movlw	1
  3796     049A  07A9               	addwf	_seconds_counter+1,f	;volatile
  3797     049B  3000               	movlw	0
  3798     049C  1803               	skipnc
  3799     049D  3001               	movlw	1
  3800     049E  07AA               	addwf	_seconds_counter+2,f	;volatile
  3801     049F  3000               	movlw	0
  3802     04A0  1803               	skipnc
  3803     04A1  3001               	movlw	1
  3804     04A2  07AB               	addwf	_seconds_counter+3,f	;volatile
  3805     04A3                     i1l1631:
  3806                           
  3807                           ;main.c: 356:       to = 1;
  3808     04A3  3001               	movlw	1
  3809     04A4  00C5               	movwf	_to
  3810                           
  3811                           ;main.c: 357:     } else {
  3812     04A5  2CA7               	goto	i1l1635
  3813     04A6                     i1l1633:
  3814                           
  3815                           ;main.c: 358:       to = 0;
  3816     04A6  01C5               	clrf	_to
  3817     04A7                     i1l1635:
  3818                           
  3819                           ;main.c: 360:     PIR1bits.TMR1IF = 0;
  3820     04A7  100C               	bcf	12,0	;volatile
  3821     04A8                     i1l1637:
  3822                           
  3823                           ;main.c: 361:     TMR1H = 0x12;
  3824     04A8  3012               	movlw	18
  3825     04A9  008F               	movwf	15	;volatile
  3826     04AA                     i1l1639:
  3827                           
  3828                           ;main.c: 362:     TMR1L = 0x38;
  3829     04AA  3038               	movlw	56
  3830     04AB  008E               	movwf	14	;volatile
  3831     04AC                     i1l1641:
  3832                           
  3833                           ;main.c: 365:   if (INTCONbits.TMR0IF) {
  3834     04AC  1D0B               	btfss	11,2	;volatile
  3835     04AD  2CAF               	goto	u166_21
  3836     04AE  2CB0               	goto	u166_20
  3837     04AF                     u166_21:
  3838     04AF  2CD6               	goto	i1l240
  3839     04B0                     u166_20:
  3840     04B0                     i1l1643:
  3841                           
  3842                           ;main.c: 367:     TMR0 = 6;
  3843     04B0  3006               	movlw	6
  3844     04B1  0081               	movwf	1	;volatile
  3845                           
  3846                           ;main.c: 368:     INTCONbits.TMR0IF = 0;
  3847     04B2  110B               	bcf	11,2	;volatile
  3848     04B3                     i1l1645:
  3849                           
  3850                           ;main.c: 371:     if (sensors_reading_in_progress) {
  3851     04B3  083E               	movf	_sensors_reading_in_progress,w	;volatile
  3852     04B4  1903               	btfsc	3,2
  3853     04B5  2CB7               	goto	u167_21
  3854     04B6  2CB8               	goto	u167_20
  3855     04B7                     u167_21:
  3856     04B7  2CD6               	goto	i1l240
  3857     04B8                     u167_20:
  3858     04B8                     i1l1647:
  3859                           
  3860                           ;main.c: 373:       if (PORTBbits.RB5)
  3861     04B8  1E86               	btfss	6,5	;volatile
  3862     04B9  2CBB               	goto	u168_21
  3863     04BA  2CBC               	goto	u168_20
  3864     04BB                     u168_21:
  3865     04BB  2CBE               	goto	i1l1651
  3866     04BC                     u168_20:
  3867     04BC                     i1l1649:
  3868                           
  3869                           ;main.c: 374:         low_sensor_high_count++;
  3870     04BC  3001               	movlw	1
  3871     04BD  07F9               	addwf	_low_sensor_high_count,f	;volatile
  3872     04BE                     i1l1651:
  3873                           
  3874                           ;main.c: 375:       if (PORTBbits.RB4)
  3875     04BE  1E06               	btfss	6,4	;volatile
  3876     04BF  2CC1               	goto	u169_21
  3877     04C0  2CC2               	goto	u169_20
  3878     04C1                     u169_21:
  3879     04C1  2CC4               	goto	i1l1655
  3880     04C2                     u169_20:
  3881     04C2                     i1l1653:
  3882                           
  3883                           ;main.c: 376:         high_sensor_high_count++;
  3884     04C2  3001               	movlw	1
  3885     04C3  07C1               	addwf	_high_sensor_high_count,f	;volatile
  3886     04C4                     i1l1655:
  3887                           
  3888                           ;main.c: 377:       if (PORTBbits.RB3)
  3889     04C4  1D86               	btfss	6,3	;volatile
  3890     04C5  2CC7               	goto	u170_21
  3891     04C6  2CC8               	goto	u170_20
  3892     04C7                     u170_21:
  3893     04C7  2CCA               	goto	i1l238
  3894     04C8                     u170_20:
  3895     04C8                     i1l1657:
  3896                           
  3897                           ;main.c: 378:         flow_sensor_high_count++;
  3898     04C8  3001               	movlw	1
  3899     04C9  07C0               	addwf	_flow_sensor_high_count,f	;volatile
  3900     04CA                     i1l238:
  3901                           
  3902                           ;main.c: 380:       reading_count++;
  3903     04CA  3001               	movlw	1
  3904     04CB  07FA               	addwf	_reading_count,f	;volatile
  3905     04CC                     i1l1659:
  3906                           
  3907                           ;main.c: 383:       if (reading_count >= 50) {
  3908     04CC  3032               	movlw	50
  3909     04CD  027A               	subwf	_reading_count,w	;volatile
  3910     04CE  1C03               	skipc
  3911     04CF  2CD1               	goto	u171_21
  3912     04D0  2CD2               	goto	u171_20
  3913     04D1                     u171_21:
  3914     04D1  2CD6               	goto	i1l240
  3915     04D2                     u171_20:
  3916     04D2                     i1l1661:
  3917                           
  3918                           ;main.c: 384:         sensors_reading_in_progress = 0;
  3919     04D2  01BE               	clrf	_sensors_reading_in_progress	;volatile
  3920     04D3                     i1l1663:
  3921                           
  3922                           ;main.c: 385:         sensors_reading_complete = 1;
  3923     04D3  3001               	movlw	1
  3924     04D4  00BF               	movwf	_sensors_reading_complete	;volatile
  3925     04D5                     i1l1665:
  3926                           
  3927                           ;main.c: 386:         INTCONbits.TMR0IE =
  3928     04D5  128B               	bcf	11,5	;volatile
  3929     04D6                     i1l240:
  3930     04D6  0872               	movf	??_isr+1,w
  3931     04D7  008A               	movwf	10
  3932     04D8  0E71               	swapf	??_isr,w
  3933     04D9  0083               	movwf	3
  3934     04DA  0EFE               	swapf	btemp,f
  3935     04DB  0E7E               	swapf	btemp,w
  3936     04DC  0009               	retfie
  3937     04DD                     __end_of_isr:
  3938     0001                     ___latbits      equ	1
  3939     007E                     btemp           set	126	;btemp
  3940     007E                     wtemp0          set	126
  3941                           
  3942                           	psect	intentry
  3943     0004                     __pintentry:	
  3944                           ;incstack = 0
  3945                           ; Regs used in _isr: [wreg+status,2+status,0]
  3946                           
  3947     0004                     interrupt_function:
  3948     007E                     saved_w         set	btemp
  3949     0004  00FE               	movwf	btemp
  3950     0005  0E03               	swapf	3,w
  3951     0006  00F1               	movwf	??_isr
  3952     0007  080A               	movf	10,w
  3953     0008  00F2               	movwf	??_isr+1
  3954     0009  118A  2C8A         	ljmp	_isr
  3955                           
  3956                           	psect	config
  3957                           
  3958                           ;Config register CONFIG1 @ 0x2007
  3959                           ;	Oscillator Selection bits
  3960                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3961                           ;	Watchdog Timer Enable bit
  3962                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3963                           ;	Power-up Timer Enable bit
  3964                           ;	PWRTE = ON, PWRT enabled
  3965                           ;	RE3/MCLR pin function select bit
  3966                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3967                           ;	Code Protection bit
  3968                           ;	CP = OFF, Program memory code protection is disabled
  3969                           ;	Data Code Protection bit
  3970                           ;	CPD = OFF, Data memory code protection is disabled
  3971                           ;	Brown Out Reset Selection bits
  3972                           ;	BOREN = ON, BOR enabled
  3973                           ;	Internal External Switchover bit
  3974                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3975                           ;	Fail-Safe Clock Monitor Enabled bit
  3976                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3977                           ;	Low Voltage Programming Enable bit
  3978                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3979                           ;	In-Circuit Debugger Mode bit
  3980                           ;	DEBUG = 0x1, unprogrammed default
  3981     2007                     	org	8199
  3982     2007  23E4               	dw	9188

Data Sizes:
    Strings     0
    Constant    0
    Data        21
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      8      10
    BANK0            80     29      78
    BANK1            80      5      23
    BANK2            69      0       0

Pointer List with Targets:

    getSensorResults@flow_active	PTR _Bool  size(1) Largest target is 1
		 -> main@flow_sensor_active(BANK1[1]), 

    getSensorResults@high_active	PTR _Bool  size(1) Largest target is 1
		 -> main@high_sensor_active(BANK1[1]), 

    getSensorResults@low_active	PTR _Bool  size(1) Largest target is 1
		 -> main@low_sensor_active(BANK1[1]), 

    loadSettings@value16bit1	PTR unsigned int  size(1) Largest target is 2
		 -> minvoltagelimit(BANK0[2]), 

    loadSettings@value16bit2	PTR unsigned int  size(1) Largest target is 2
		 -> maxvoltagelimit(BANK0[2]), 

    loadSettings@value16bit3	PTR unsigned int  size(1) Largest target is 2
		 -> minimumrunningvoltage(BANK0[2]), 

    loadSettings@value16bit4	PTR unsigned int  size(1) Largest target is 2
		 -> maximumrinningvoltage(BANK0[2]), 

    loadSettings@value8bit	PTR unsigned char  size(1) Largest target is 1
		 -> maxruntimeindex(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___lldiv
    _main->_saveSettings
    _saveSettings->_EEPROM_Write16
    _EEPROM_Write16->_EEPROM_Write
    _loadSettings->_EEPROM_Read16
    _EEPROM_Read16->_EEPROM_Read
    ___lldiv->___lmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    _loadSettings->_EEPROM_Read16
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    2182
                                             21 BANK0      8     8      0
                                              0 BANK1      5     5      0
                            ___lldiv
                            ___llmod
                             ___lmul
                        _buzzer_beep
                      _buzzer_update
                   _getSensorResults
                         _initSystem
                         _init_timer
                       _loadSettings
                            _readADC
                       _saveSettings
                        _setupTimer0
                 _startSensorReading
 ---------------------------------------------------------------------------------
 (1) _startSensorReading                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _saveSettings                                         9     1      8     531
                                              7 COMMON     1     1      0
                                              0 BANK0      8     0      8
                       _EEPROM_Write
                     _EEPROM_Write16
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write16                                       3     1      2     258
                                              4 COMMON     3     1      2
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         2     1      1      90
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      47
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _loadSettings                                         5     0      5     395
                                              3 BANK0      5     0      5
                        _EEPROM_Read
                      _EEPROM_Read16
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read16                                        7     5      2     178
                                              3 COMMON     4     2      2
                                              0 BANK0      3     3      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          1     1      0      47
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _getSensorResults                                     3     0      3     102
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _buzzer_update                                        8     8      0       0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_beep                                          2     0      2       1
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     148
                                              2 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     238
                                              2 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     253
                                              7 COMMON     1     1      0
                                              8 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___llmod
   ___lmul
   _buzzer_beep
   _buzzer_update
   _getSensorResults
   _initSystem
   _init_timer
   _loadSettings
     _EEPROM_Read
     _EEPROM_Read16
       _EEPROM_Read
   _readADC
   _saveSettings
     _EEPROM_Write
     _EEPROM_Write16
       _EEPROM_Write
   _setupTimer0
   _startSensorReading

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               69      0       0      0.0%
BITBANK2            69      0       0      0.0%
BANK1               80      5      23     28.7%
BITBANK1            80      0       0      0.0%
BANK0               80     29      78     97.5%
BITBANK0            80      0       0      0.0%
COMMON              13      8      10     76.9%
BITCOMMON           13      0       0      0.0%
DATA                 0      0     111      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Apr 17 13:19:30 2025

                          pc 0002                           _to 0045                           fsr 0004  
                        l201 0353                          l212 063C                          l222 06A8  
                        l215 0646                          l401 03E1                          l209 0601  
                        l226 05D7                          l218 06C5                          l243 0699  
                        l251 0662                          l252 0664                          l172 0197  
                        l261 06B7                          l246 0648                          l158 00B8  
                        l255 0666                          l271 05A9                          l191 02E5  
                        l167 0112                          l264 0625                          l249 065E  
                        l258 0677                          l186 02C0                          l268 052B  
                        l189 02D8                          l279 0435                          l379 0573  
                        l595 0489                          _isr 048A                          _smc 0044  
                        fsr0 0004                          indf 0000                         l2001 02B1  
                       l2011 02DF                         l2003 02B4                         l2013 02E3  
                       l2005 02BE                         l2021 02EE                         l2031 02FF  
                       l2023 02F3                         l2007 02CD                         l2015 02E7  
                       l2041 0348                         l2033 0307                         l2025 02F4  
                       l2017 02EC                         l2009 02DA                         l2035 0310  
                       l2043 034B                         l2027 02F9                         l2019 02ED  
                       l2045 0350                         l2037 033D                         l2029 02FA  
                       l2047 0355                         l2039 0340                         l2049 0372  
                       l1701 06AA                         l1711 05D8                         l1703 0605  
                       l1801 05D6                         l1721 05E9                         l1713 05DE  
                       l1705 0611                         l1811 0551                         l1731 05FF  
                       l1723 05EB                         l1715 05E2                         l1707 0621  
                       l1821 038E                         l1813 055A                         l1805 052C  
                       l1733 0600                         l1725 05EF                         l1717 05E3  
                       l1741 04E8                         l1901 00DF                         l1831 03BB  
                       l1823 0391                         l1815 056B                         l1807 0534  
                       l1727 05F3                         l1719 05E7                         l1751 052A  
                       l1743 04F2                         l1735 04DD                         l1911 00F9  
                       l1903 00E5                         l1833 03C9                         l1825 039C  
                       l1809 053A                         l1729 05FC                         l1745 0500  
                       l1737 04E6                         l1761 0639                         l1681 0657  
                       l1921 0122                         l1913 0109                         l1905 00F4  
                       l1835 03CA                         l1827 03A0                         l1819 037C  
                       l1851 0452                         l1843 0436                         l1771 03E9  
                       l1691 0666                         l1747 050E                         l1763 0640  
                       l1683 0658                         l1675 0648                         l1755 0575  
                       l1923 0134                         l1907 00F7                         l1837 03D3  
                       l1829 03A9                         l1853 0464                         l1845 0440  
                       l1773 0431                         l1693 066C                         l1749 051C  
                       l1757 0627                         l1685 0659                         l1677 064E  
                       l1781 06C0                         l1941 0164                         l1933 0148  
                       l1925 013B                         l1909 00F8                         l1917 010E  
                       l1839 03D9                         l1855 0472                         l1847 0443  
                       l1775 0432                         l1791 05AA                         l1767 0689  
                       l1695 0670                         l1759 0635                         l1687 065B  
                       l1679 0654                         l1783 06C4                         l1951 019D  
                       l1943 0166                         l1935 0154                         l1927 013E  
                       l1919 0113                         l1871 0054                         l1863 0036  
                       l1857 047B                         l1849 044E                         l1769 03E2  
                       l1793 05B1                         l1697 0673                         l1689 065D  
                       l1777 06B8                         l1785 069A                         l1961 01C2  
                       l1953 01A2                         l1945 0191                         l1929 0141  
                       l1881 007E                         l1873 0058                         l1865 0039  
                       l1859 0481                         l1795 05D3                         l1779 06BC  
                       l1787 06A1                         l1971 01DC                         l1963 01C5  
                       l1955 01A8                         l1947 0195                         l1939 0159  
                       l1891 00C5                         l1883 00AE                         l1875 005C  
                       l1867 004D                         l1797 05D4                         l1789 06A6  
                       l1981 01F1                         l1973 01E1                         l1965 01CC  
                       l1957 01B6                         l1949 0198                         l1893 00CB  
                       l1885 00B1                         l1877 0060                         l1869 0050  
                       l1991 0262                         l1983 0207                         l1975 01E6  
                       l1967 01D1                         l1959 01BD                         l1895 00CE  
                       l1879 0074                         l1993 0269                         l1977 01EB  
                       l1985 020B                         l1969 01D5                         l1897 00D4  
                       l1889 00BE                         l1995 026C                         l1987 0210  
                       l1979 01F0                         l1899 00DB                         l1997 0274  
                       l1989 0260                         l1999 027D                         ?_isr 0071  
                       u2010 03D9                         u2011 03D8                         u2020 0440  
                       u2100 00C5                         u2005 03CB                         u2021 043F  
                       u2101 00C4                         u2110 00CB                         u2111 00CA  
                       u2040 0452                         u2200 01B6                         u2120 00D4  
                       u2041 0451                         u2201 01B5                         u2121 00D3  
                       u2050 0464                         u2210 01BD                         u2130 00DB  
                       u2051 0463                         u2035 0445                         u2211 01BC  
                       u2131 00DA                         u2300 0210                         u2220 01C2  
                       u2140 00DF                         u2301 020F                         u2221 01C1  
                       u2141 00DE                         u2070 0481                         u2230 01CC  
                       u2150 013B                         u2071 0480                         u2055 0460  
                       u2311 0233                         u2231 01CB                         u2151 013A  
                       u2400 02E3                         u2320 0260                         u2312 0236  
                       u2240 01D1                         u2160 0147                         u2080 004D  
                       u2065 0473                         u2401 02E2                         u2321 025F  
                       u2313 023D                         u2241 01D0                         u2161 0146  
                       u2081 004C                         u2410 02EC                         u2330 0269  
                       u2314 0240                         u2250 01DC                         u2170 0195  
                       u2090 00B7                         u2411 02EB                         u2331 0268  
                       u2315 0247                         u2251 01DB                         u2171 0194  
                       u2091 00B6                         u2420 02F3                         u2340 0274  
                       u2316 024A                         u2260 01E1                         u2180 019D  
                       u2421 02F2                         u2341 0273                         u2325 025C  
                       u2261 01E0                         u2181 019C                         u2430 02F9  
                       u2270 01E6                         u2190 01A2                         u2431 02F8  
                       u2351 0292                         u2271 01E5                         u2191 01A1  
                       u2440 02FF                         u2360 02B1                         u2352 0293  
                       u2280 01EB                         u1801 0404                         u2441 02FE  
                       u2361 02B0                         u2353 0298                         u2281 01EA  
                       u1810 0431                         u1802 0407                         u1730 064E  
                       u2450 0307                         u2370 02CD                         u2354 0299  
                       u2290 01F0                         u1811 0430                         u1803 040E  
                       u1731 064D                         u2451 0306                         u2371 02CC  
                       u2355 029E                         u2291 01EF                         u2507 00ED  
                       u1900 053A                         u1804 0411                         u1740 0662  
                       u1820 06A1                         u2380 02D8                         u2356 029F  
                       u1901 0539                         u1805 0418                         u1741 0661  
                       u1821 06A0                         u2461 031F                         u2381 02D7  
                       u2365 02AD                         u2517 0102                         u1806 041B  
                       u1830 05B1                         u1750 066C                         u2470 033D  
                       u2462 0320                         u2390 02DF                         u1911 0543  
                       u1815 042D                         u1831 05B0                         u1751 066B  
                       u2471 033C                         u2463 0325                         u2391 02DE  
                       u2375 02C9                         u2527 011B                         u1912 054A  
                       u1840 05BA                         u1760 04E6                         u2480 0350  
                       u2464 0326                         u1913 0551                         u1841 05B8  
                       u1761 04E5                         u2481 034F                         u2473 0339  
                       u2465 032B                         u2385 02D4                         u2537 012D  
                       u1850 05BB                         u2490 0372                         u2466 032C  
                       u2547 0637                         u2491 0371                         u1940 056B  
                       u1860 05C6                         u1780 0640                         u1941 056A  
                       u1925 0553                         u1861 05C4                         u2557 05F7  
                       u1781 063F                         u1950 038E                         u1790 03E9  
                       u1870 05C7                         u1951 038D                         u1935 055B  
                       u1791 03E8                         u1775 062A                         u1880 05D1  
                       u1881 05CF                         u1970 03A0                         u1890 05D2  
                       u1971 039F                         u1965 0393                         u1990 03BB  
                       u1991 03BA                         u1985 03A2                         u1995 03B7  
                       _TMR0 0001                         _main 0036                         btemp 007E  
                       start 000B            ?_getSensorResults 0073  _sensors_reading_in_progress 003E  
         ??_getSensorResults 0076         __end_of_EEPROM_Write 0665                        ??_isr 0071  
                      ?_main 0071                        _EEADR 010D                        _ANSEL 0188  
            __end_of___lldiv 03E2                        _T1CON 0010              __end_of___llmod 048A  
                      i1l240 04D6                        i1l238 04CA                        _TMR1H 000F  
                      _TMR1L 000E                        _PORTA 0005                        _PORTB 0006  
                      _PORTC 0007                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087          ___lmul@multiplicand 004A              __end_of_readADC 0647  
                      main@i 00B6                        pclath 000A                        status 0003  
                      wtemp0 007E      loadSettings@value16bit1 004A      loadSettings@value16bit2 004B  
    loadSettings@value16bit3 004C      loadSettings@value16bit4 004D                 ?_buzzer_beep 0071  
           EEPROM_Write@data 0073          _maxvoltageerrortime 0063              __initialization 000E  
               _voltageerror 003D   __end_of_startSensorReading 06A9                 __end_of_main 037C  
      __end_of_EEPROM_Read16 0626                ?_loadSettings 0049                       ??_main 005B  
          _buzzer_start_time 00AA                       _ADCON0 001F                       _ADCON1 009F  
           ___llmod@dividend 004A                       _ADRESH 001E                       _ADRESL 009E  
                     _EEDATA 010C                       _EECON2 018D                       _ANSELH 0189  
                     i1l1631 04A3                       i1l1633 04A6                       i1l1641 04AC  
                     i1l1625 048A                       i1l1651 04BE                       i1l1643 04B0  
                     i1l1635 04A7                       i1l1627 0490                       i1l1661 04D2  
                     i1l1653 04C2                       i1l1645 04B3                       i1l1637 04A8  
                     i1l1629 0495                       i1l1663 04D3                       i1l1655 04C4  
                     i1l1647 04B8                       i1l1639 04AA                       i1l1665 04D5  
                     i1l1657 04C8                       i1l1649 04BC                       i1l1659 04CC  
                     u170_20 04C8                       u170_21 04C7                       u171_20 04D2  
                     u171_21 04D1                       u164_20 0490                       u164_21 048F  
                     u165_20 0495                       u165_21 0494                       u166_20 04B0  
                     u166_21 04AF                       u167_20 04B8                       u167_21 04B7  
                     u168_20 04BC                       u168_21 04BB                       u169_20 04C2  
                     u169_21 04C1                       ___lmul 052C              _lastdryruncheck 0024  
                  ??___lldiv 0078                    ??___llmod 0073               ??_loadSettings 0078  
                     _potraw 0034                    ??_readADC 0075                       saved_w 007E  
               ?_setupTimer0 0071               _EEPROM_Write16 06A9      __end_of__initialization 0033  
     main@flow_sensor_active 00B3               __pcstackCOMMON 0071                 __pidataBANK0 06C6  
               __pidataBANK1 06D1        loadSettings@value8bit 0049               _OPTION_REGbits 0081  
     __end_of_EEPROM_Write16 06B8                 _EEPROM_Write 0647                   __pbssBANK0 0020  
                 __pbssBANK1 00AA                ?_saveSettings 0046                   __pmaintext 0036  
       EEPROM_Read16@address 0048                      ?___lmul 0046                   __pintentry 0004  
             ___lmul@product 0074              _minvoltagelimit 006B              _seconds_counter 0028  
            ?_EEPROM_Write16 0075         __end_of_loadSettings 052C                _reading_count 007A  
             ??_saveSettings 0078                      ___lldiv 037C                      ___llmod 0436  
                 _initSystem 05D8                   _init_timer 0689                      __ptext1 069A  
                    __ptext2 06B8                      __ptext3 0574                      __ptext4 06A9  
                    __ptext5 0647                      __ptext6 0626                      __ptext7 04DD  
                    __ptext8 0602                      __ptext9 0665                      _readADC 0626  
                  _T1CONbits 0010           _startSensorReading 069A                _buzzer_beep$0 0071  
                 _dryruntime 0030                _buzzer_active 0036                   _maxruntime 00A0  
      _low_sensor_high_count 0079                      clrloop0 06DC                      _voltage 0042  
       end_of_initialization 0033          ?_startSensorReading 0071                _buzzer_update 03E2  
         EEPROM_Write16@data 0075                ??_EEPROM_Read 0073              ___lldiv@divisor 004E  
            ___lldiv@counter 005A  getSensorResults@high_active 0074         ??_startSensorReading 0073  
    saveSettings@value16bit1 0046      saveSettings@value16bit2 0048      saveSettings@value16bit3 004A  
    saveSettings@value16bit4 004C                    _PORTAbits 0005                    _PORTBbits 0006  
                  _PORTCbits 0007               ?_buzzer_update 0071  getSensorResults@flow_active 0075  
                 _voltageraw 0032                   _voltagesum 002E          __end_of_EEPROM_Read 0678  
             __end_of___lmul 0574                  ?_initSystem 0071                  ?_init_timer 0071  
   _sensors_reading_complete 003F         __end_of_saveSettings 05AA          start_initialization 000E  
           _getSensorResults 05AA                  __end_of_isr 04DD              ___llmod@divisor 0046  
      EEPROM_Write16@address 0077              ___llmod@counter 0074                     ??___lmul 0073  
                 init_fetch0 0678                  __pdataBANK0 0063                  __pdataBANK1 00A0  
              _EEPROM_Read16 0602                 _loadSettings 04DD             ??_EEPROM_Write16 0077  
      saveSettings@value8bit 0078                  __pbssCOMMON 0079                    ___latbits 0001  
              __pcstackBANK0 0046                __pcstackBANK1 00B2              ??_buzzer_update 0046  
                _EEPROM_Read 0665                ??_buzzer_beep 0071                     ?___lldiv 004E  
                   ?___llmod 0046               ?_EEPROM_Read16 0074          EEPROM_Read16@result 0046  
                   ?_readADC 0073            interrupt_function 0004        main@low_sensor_active 00B4  
                  clear_ram0 06DB                     _PIE1bits 008C                    _taknkfull 0038  
                  _tankempty 0039                     _PIR1bits 000C               _motorstarttime 00AE  
                 _ADCON0bits 001F                    main@i_450 00B2              _buzzer_duration 002C  
              ??_setupTimer0 0073            ___lmul@multiplier 0046        _minimumrunningvoltage 0067  
                 _EECON1bits 018C                 _saveSettings 0574     __end_of_getSensorResults 05D8  
            ??_EEPROM_Read16 0076                 ??_initSystem 0073                 ??_init_timer 0073  
             readADC@channel 0076   getSensorResults@low_active 0073             _lastvoltageerror 0020  
                   __ptext10 0689                     __ptext11 05D8                     __ptext12 05AA  
                   __ptext13 03E2                     __ptext14 052C                     __ptext15 0436  
                   __ptext16 037C                     __ptext17 048A                ?_EEPROM_Write 0073  
         __end_of_initSystem 0602          __end_of_setupTimer0 06C6           __end_of_init_timer 069A  
                _buzzer_beep 0000                  _dryrunerror 003C                   _INTCONbits 000B  
                   init_ram0 067C               ??_EEPROM_Write 0074                     intlevel1 0000  
               ?_EEPROM_Read 0071             ___lldiv@dividend 0052                   _OSCCONbits 008F  
         EEPROM_Read@address 0073                 _motorrunning 003A              _maxvoltagelimit 0069  
            _maxruntimeindex 006D       main@high_sensor_active 00B5                 _settingsmode 0043  
           ___lldiv@quotient 0056        _maximumrinningvoltage 0065                 _timeouterror 003B  
     _high_sensor_high_count 0041       _flow_sensor_high_count 0040                  _setupTimer0 06B8  
      __end_of_buzzer_update 0436                 _waterreached 0037          EEPROM_Write@address 0074  
