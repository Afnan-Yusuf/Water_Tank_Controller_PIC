

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Apr 24 10:38:04 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,space=0,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 12/10/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F883 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0004                     fsr             equ	4
    76     0004                     fsr0            equ	4
    77     0000                     indf            equ	0
    78     0000                     indf0           equ	0
    79     0002                     pc              equ	2
    80     0002                     pcl             equ	2
    81     000A                     pclath          equ	10
    82     0003                     status          equ	3
    83     0000                     INDF            equ	0	;# 
    84     0001                     TMR0            equ	1	;# 
    85     0002                     PCL             equ	2	;# 
    86     0003                     STATUS          equ	3	;# 
    87     0004                     FSR             equ	4	;# 
    88     0005                     PORTA           equ	5	;# 
    89     0006                     PORTB           equ	6	;# 
    90     0007                     PORTC           equ	7	;# 
    91     0009                     PORTE           equ	9	;# 
    92     000A                     PCLATH          equ	10	;# 
    93     000B                     INTCON          equ	11	;# 
    94     000C                     PIR1            equ	12	;# 
    95     000D                     PIR2            equ	13	;# 
    96     000E                     TMR1            equ	14	;# 
    97     000E                     TMR1L           equ	14	;# 
    98     000F                     TMR1H           equ	15	;# 
    99     0010                     T1CON           equ	16	;# 
   100     0011                     TMR2            equ	17	;# 
   101     0012                     T2CON           equ	18	;# 
   102     0013                     SSPBUF          equ	19	;# 
   103     0014                     SSPCON          equ	20	;# 
   104     0015                     CCPR1           equ	21	;# 
   105     0015                     CCPR1L          equ	21	;# 
   106     0016                     CCPR1H          equ	22	;# 
   107     0017                     CCP1CON         equ	23	;# 
   108     0018                     RCSTA           equ	24	;# 
   109     0019                     TXREG           equ	25	;# 
   110     001A                     RCREG           equ	26	;# 
   111     001B                     CCPR2           equ	27	;# 
   112     001B                     CCPR2L          equ	27	;# 
   113     001C                     CCPR2H          equ	28	;# 
   114     001D                     CCP2CON         equ	29	;# 
   115     001E                     ADRESH          equ	30	;# 
   116     001F                     ADCON0          equ	31	;# 
   117     0081                     OPTION_REG      equ	129	;# 
   118     0085                     TRISA           equ	133	;# 
   119     0086                     TRISB           equ	134	;# 
   120     0087                     TRISC           equ	135	;# 
   121     0089                     TRISE           equ	137	;# 
   122     008C                     PIE1            equ	140	;# 
   123     008D                     PIE2            equ	141	;# 
   124     008E                     PCON            equ	142	;# 
   125     008F                     OSCCON          equ	143	;# 
   126     0090                     OSCTUNE         equ	144	;# 
   127     0091                     SSPCON2         equ	145	;# 
   128     0092                     PR2             equ	146	;# 
   129     0093                     SSPADD          equ	147	;# 
   130     0093                     SSPMSK          equ	147	;# 
   131     0093                     MSK             equ	147	;# 
   132     0094                     SSPSTAT         equ	148	;# 
   133     0095                     WPUB            equ	149	;# 
   134     0096                     IOCB            equ	150	;# 
   135     0097                     VRCON           equ	151	;# 
   136     0098                     TXSTA           equ	152	;# 
   137     0099                     SPBRG           equ	153	;# 
   138     009A                     SPBRGH          equ	154	;# 
   139     009B                     PWM1CON         equ	155	;# 
   140     009C                     ECCPAS          equ	156	;# 
   141     009D                     PSTRCON         equ	157	;# 
   142     009E                     ADRESL          equ	158	;# 
   143     009F                     ADCON1          equ	159	;# 
   144     0105                     WDTCON          equ	261	;# 
   145     0107                     CM1CON0         equ	263	;# 
   146     0108                     CM2CON0         equ	264	;# 
   147     0109                     CM2CON1         equ	265	;# 
   148     010C                     EEDATA          equ	268	;# 
   149     010C                     EEDAT           equ	268	;# 
   150     010D                     EEADR           equ	269	;# 
   151     010E                     EEDATH          equ	270	;# 
   152     010F                     EEADRH          equ	271	;# 
   153     0185                     SRCON           equ	389	;# 
   154     0187                     BAUDCTL         equ	391	;# 
   155     0188                     ANSEL           equ	392	;# 
   156     0189                     ANSELH          equ	393	;# 
   157     018C                     EECON1          equ	396	;# 
   158     018D                     EECON2          equ	397	;# 
   159     0000                     INDF            equ	0	;# 
   160     0001                     TMR0            equ	1	;# 
   161     0002                     PCL             equ	2	;# 
   162     0003                     STATUS          equ	3	;# 
   163     0004                     FSR             equ	4	;# 
   164     0005                     PORTA           equ	5	;# 
   165     0006                     PORTB           equ	6	;# 
   166     0007                     PORTC           equ	7	;# 
   167     0009                     PORTE           equ	9	;# 
   168     000A                     PCLATH          equ	10	;# 
   169     000B                     INTCON          equ	11	;# 
   170     000C                     PIR1            equ	12	;# 
   171     000D                     PIR2            equ	13	;# 
   172     000E                     TMR1            equ	14	;# 
   173     000E                     TMR1L           equ	14	;# 
   174     000F                     TMR1H           equ	15	;# 
   175     0010                     T1CON           equ	16	;# 
   176     0011                     TMR2            equ	17	;# 
   177     0012                     T2CON           equ	18	;# 
   178     0013                     SSPBUF          equ	19	;# 
   179     0014                     SSPCON          equ	20	;# 
   180     0015                     CCPR1           equ	21	;# 
   181     0015                     CCPR1L          equ	21	;# 
   182     0016                     CCPR1H          equ	22	;# 
   183     0017                     CCP1CON         equ	23	;# 
   184     0018                     RCSTA           equ	24	;# 
   185     0019                     TXREG           equ	25	;# 
   186     001A                     RCREG           equ	26	;# 
   187     001B                     CCPR2           equ	27	;# 
   188     001B                     CCPR2L          equ	27	;# 
   189     001C                     CCPR2H          equ	28	;# 
   190     001D                     CCP2CON         equ	29	;# 
   191     001E                     ADRESH          equ	30	;# 
   192     001F                     ADCON0          equ	31	;# 
   193     0081                     OPTION_REG      equ	129	;# 
   194     0085                     TRISA           equ	133	;# 
   195     0086                     TRISB           equ	134	;# 
   196     0087                     TRISC           equ	135	;# 
   197     0089                     TRISE           equ	137	;# 
   198     008C                     PIE1            equ	140	;# 
   199     008D                     PIE2            equ	141	;# 
   200     008E                     PCON            equ	142	;# 
   201     008F                     OSCCON          equ	143	;# 
   202     0090                     OSCTUNE         equ	144	;# 
   203     0091                     SSPCON2         equ	145	;# 
   204     0092                     PR2             equ	146	;# 
   205     0093                     SSPADD          equ	147	;# 
   206     0093                     SSPMSK          equ	147	;# 
   207     0093                     MSK             equ	147	;# 
   208     0094                     SSPSTAT         equ	148	;# 
   209     0095                     WPUB            equ	149	;# 
   210     0096                     IOCB            equ	150	;# 
   211     0097                     VRCON           equ	151	;# 
   212     0098                     TXSTA           equ	152	;# 
   213     0099                     SPBRG           equ	153	;# 
   214     009A                     SPBRGH          equ	154	;# 
   215     009B                     PWM1CON         equ	155	;# 
   216     009C                     ECCPAS          equ	156	;# 
   217     009D                     PSTRCON         equ	157	;# 
   218     009E                     ADRESL          equ	158	;# 
   219     009F                     ADCON1          equ	159	;# 
   220     0105                     WDTCON          equ	261	;# 
   221     0107                     CM1CON0         equ	263	;# 
   222     0108                     CM2CON0         equ	264	;# 
   223     0109                     CM2CON1         equ	265	;# 
   224     010C                     EEDATA          equ	268	;# 
   225     010C                     EEDAT           equ	268	;# 
   226     010D                     EEADR           equ	269	;# 
   227     010E                     EEDATH          equ	270	;# 
   228     010F                     EEADRH          equ	271	;# 
   229     0185                     SRCON           equ	389	;# 
   230     0187                     BAUDCTL         equ	391	;# 
   231     0188                     ANSEL           equ	392	;# 
   232     0189                     ANSELH          equ	393	;# 
   233     018C                     EECON1          equ	396	;# 
   234     018D                     EECON2          equ	397	;# 
   235                           
   236                           	psect	idataBANK0
   237     0CE6                     __pidataBANK0:
   238                           
   239                           ;initializer for _minimumrunningvoltage
   240     0CE6  34AA               	retlw	170
   241     0CE7  3400               	retlw	0
   242                           
   243                           ;initializer for _maxvoltagelimit
   244     0CE8  34E6               	retlw	230
   245     0CE9  3400               	retlw	0
   246                           
   247                           ;initializer for _minvoltagelimit
   248     0CEA  34C8               	retlw	200
   249     0CEB  3400               	retlw	0
   250                           
   251                           ;initializer for _maxruntimeindex
   252     0CEC  3403               	retlw	3
   253                           
   254                           	psect	idataBANK1
   255     0D21                     __pidataBANK1:
   256                           
   257                           ;initializer for _maxruntime
   258     0D21  341E               	retlw	30
   259     0D22  3400               	retlw	0
   260     0D23  342D               	retlw	45
   261     0D24  3400               	retlw	0
   262     0D25  343C               	retlw	60
   263     0D26  3400               	retlw	0
   264     0D27  3478               	retlw	120
   265     0D28  3400               	retlw	0
   266     0D29  34FF               	retlw	255
   267     0D2A  34FF               	retlw	255
   268                           
   269                           ;initializer for _sensorbuffer
   270     0D2B  3410               	retlw	16
   271     0D2C  3427               	retlw	39
   272                           
   273                           ;initializer for _maxvoltageerrortime
   274     0D2D  340A               	retlw	10
   275     0D2E  3400               	retlw	0
   276                           
   277                           ;initializer for _maximumrinningvoltage
   278     0D2F  341D               	retlw	29
   279     0D30  3401               	retlw	1
   280     0010                     _T1CONbits      set	16
   281     0010                     _T1CON          set	16
   282     0006                     _PORTBbits      set	6
   283     000E                     _TMR1L          set	14
   284     000F                     _TMR1H          set	15
   285     000C                     _PIR1bits       set	12
   286     000B                     _INTCONbits     set	11
   287     0001                     _TMR0           set	1
   288     001E                     _ADRESH         set	30
   289     001F                     _ADCON0bits     set	31
   290     0007                     _PORTC          set	7
   291     0006                     _PORTB          set	6
   292     0005                     _PORTA          set	5
   293     001F                     _ADCON0         set	31
   294     0007                     _PORTCbits      set	7
   295     0005                     _PORTAbits      set	5
   296     008C                     _PIE1bits       set	140
   297     0081                     _OPTION_REGbits set	129
   298     009E                     _ADRESL         set	158
   299     009F                     _ADCON1         set	159
   300     0087                     _TRISC          set	135
   301     0086                     _TRISB          set	134
   302     0085                     _TRISA          set	133
   303     008F                     _OSCCONbits     set	143
   304     010C                     _EEDATA         set	268
   305     010D                     _EEADR          set	269
   306     018D                     _EECON2         set	397
   307     018C                     _EECON1bits     set	396
   308     0189                     _ANSELH         set	393
   309     0188                     _ANSEL          set	392
   310                           
   311                           	psect	cinit
   312     000D                     start_initialization:	
   313                           ; #config settings
   314                           
   315     000D                     __initialization:
   316                           
   317                           ; Initialize objects allocated to BANK1
   318     000D  1383               	bcf	3,7	;select IRP bank0
   319     000E  30CE               	movlw	low (__pdataBANK1+16)
   320     000F  00FD               	movwf	btemp+-1
   321     0010  300D               	movlw	high __pidataBANK1
   322     0011  00FE               	movwf	btemp
   323     0012  3021               	movlw	low __pidataBANK1
   324     0013  00FF               	movwf	btemp+1
   325     0014  30BE               	movlw	low __pdataBANK1
   326     0015  0084               	movwf	4
   327     0016  158A  2546  118A   	fcall	init_ram0
   328                           
   329                           ; Initialize objects allocated to BANK0
   330     0019  306B               	movlw	low (__pdataBANK0+7)
   331     001A  00FD               	movwf	btemp+-1
   332     001B  300C               	movlw	high __pidataBANK0
   333     001C  00FE               	movwf	btemp
   334     001D  30E6               	movlw	low __pidataBANK0
   335     001E  00FF               	movwf	btemp+1
   336     001F  3064               	movlw	low __pdataBANK0
   337     0020  0084               	movwf	4
   338     0021  158A  2546  118A   	fcall	init_ram0
   339                           
   340                           ; Clear objects allocated to BANK1
   341     0024  30A0               	movlw	low __pbssBANK1
   342     0025  0084               	movwf	4
   343     0026  30BE               	movlw	low (__pbssBANK1+30)
   344     0027  158A  24ED  118A   	fcall	clear_ram0
   345                           
   346                           ; Clear objects allocated to BANK0
   347     002A  3020               	movlw	low __pbssBANK0
   348     002B  0084               	movwf	4
   349     002C  3047               	movlw	low (__pbssBANK0+39)
   350     002D  158A  24ED  118A   	fcall	clear_ram0
   351                           
   352                           ; Clear objects allocated to COMMON
   353     0030  01FA               	clrf	__pbssCOMMON& (0+127)
   354     0031  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   355     0032                     end_of_initialization:	
   356                           ;End of C runtime variable initialization code
   357                           
   358     0032                     __end_of__initialization:
   359     0032  0183               	clrf	3
   360     0033  118A  2835         	ljmp	_main	;jump to C main() function
   361                           
   362                           	psect	bssCOMMON
   363     007A                     __pbssCOMMON:
   364     007A                     _low_sensor_high_count:
   365     007A                     	ds	1
   366     007B                     _reading_count:
   367     007B                     	ds	1
   368                           
   369                           	psect	bssBANK0
   370     0020                     __pbssBANK0:
   371     0020                     _lastsensorcheck:
   372     0020                     	ds	4
   373     0024                     _lastvoltageerror:
   374     0024                     	ds	4
   375     0028                     _millis:
   376     0028                     	ds	4
   377     002C                     _seconds_counter:
   378     002C                     	ds	4
   379     0030                     _lastflowcheck:
   380     0030                     	ds	2
   381     0032                     _buzzer_active:
   382     0032                     	ds	1
   383     0033                     _preflowactive:
   384     0033                     	ds	1
   385     0034                     _flowactive:
   386     0034                     	ds	1
   387     0035                     _pretankempty:
   388     0035                     	ds	1
   389     0036                     _tankempty:
   390     0036                     	ds	1
   391     0037                     _motorrunning:
   392     0037                     	ds	1
   393     0038                     _timeouterror:
   394     0038                     	ds	1
   395     0039                     _dryrunerror:
   396     0039                     	ds	1
   397     003A                     _voltageerror:
   398     003A                     	ds	1
   399     003B                     _mannualon:
   400     003B                     	ds	1
   401     003C                     _sensors_reading_in_progress:
   402     003C                     	ds	1
   403     003D                     _sensors_reading_complete:
   404     003D                     	ds	1
   405     003E                     _flow_sensor_high_count:
   406     003E                     	ds	1
   407     003F                     _high_sensor_high_count:
   408     003F                     	ds	1
   409     0040                     _voltage:
   410     0040                     	ds	1
   411     0041                     _settingsmode:
   412     0041                     	ds	1
   413     0042                     _smc:
   414     0042                     	ds	1
   415     0043                     _to:
   416     0043                     	ds	1
   417     0044                     _flow_sensor_active:
   418     0044                     	ds	1
   419     0045                     _high_sensor_active:
   420     0045                     	ds	1
   421     0046                     _low_sensor_active:
   422     0046                     	ds	1
   423                           
   424                           	psect	dataBANK0
   425     0064                     __pdataBANK0:
   426     0064                     _minimumrunningvoltage:
   427     0064                     	ds	2
   428     0066                     _maxvoltagelimit:
   429     0066                     	ds	2
   430     0068                     _minvoltagelimit:
   431     0068                     	ds	2
   432     006A                     _maxruntimeindex:
   433     006A                     	ds	1
   434                           
   435                           	psect	bssBANK1
   436     00A0                     __pbssBANK1:
   437     00A0                     _lt:
   438     00A0                     	ds	4
   439     00A4                     _buzzer_start_time:
   440     00A4                     	ds	4
   441     00A8                     _motorstarttime:
   442     00A8                     	ds	4
   443     00AC                     _lastdryruncheck:
   444     00AC                     	ds	4
   445     00B0                     _last_millis:
   446     00B0                     	ds	4
   447     00B4                     _buzzer_duration:
   448     00B4                     	ds	2
   449     00B6                     _voltagesum:
   450     00B6                     	ds	2
   451     00B8                     _dryruntime:
   452     00B8                     	ds	2
   453     00BA                     _voltageraw:
   454     00BA                     	ds	2
   455     00BC                     _potraw:
   456     00BC                     	ds	2
   457                           
   458                           	psect	dataBANK1
   459     00BE                     __pdataBANK1:
   460     00BE                     _maxruntime:
   461     00BE                     	ds	10
   462     00C8                     _sensorbuffer:
   463     00C8                     	ds	2
   464     00CA                     _maxvoltageerrortime:
   465     00CA                     	ds	2
   466     00CC                     _maximumrinningvoltage:
   467     00CC                     	ds	2
   468                           
   469                           	psect	inittext
   470     0D42                     init_fetch0:	
   471                           ;	Called with low address in FSR and high address in W
   472                           
   473     0D42  087E               	movf	btemp,w
   474     0D43  008A               	movwf	10
   475     0D44  087F               	movf	btemp+1,w
   476     0D45  0082               	movwf	2
   477     0D46                     init_ram0:	
   478                           ;Called with:
   479                           ;	high address of idata address in btemp 
   480                           ;	low address of idata address in btemp+1 
   481                           ;	low address of data in FSR
   482                           ;	high address + 1 of data in btemp-1
   483                           
   484     0D46  158A  2542  158A   	fcall	init_fetch0
   485     0D49  0080               	movwf	0
   486     0D4A  0A84               	incf	4,f
   487     0D4B  0804               	movf	4,w
   488     0D4C  067D               	xorwf	btemp+-1,w
   489     0D4D  1903               	btfsc	3,2
   490     0D4E  3400               	retlw	0
   491     0D4F  0AFF               	incf	btemp+1,f
   492     0D50  1903               	btfsc	3,2
   493     0D51  0AFE               	incf	btemp,f
   494     0D52  2D46               	goto	init_ram0
   495                           
   496                           	psect	clrtext
   497     0CED                     clear_ram0:	
   498                           ;	Called with FSR containing the base address, and
   499                           ;	W with the last address+1
   500                           
   501     0CED  0064               	clrwdt	;clear the watchdog before getting into this loop
   502     0CEE                     clrloop0:
   503     0CEE  0180               	clrf	0	;clear RAM location pointed to by FSR
   504     0CEF  0A84               	incf	4,f	;increment pointer
   505     0CF0  0604               	xorwf	4,w	;XOR with final address
   506     0CF1  1903               	btfsc	3,2	;have we reached the end yet?
   507     0CF2  3400               	retlw	0	;all done for this memory range, return
   508     0CF3  0604               	xorwf	4,w	;XOR again to restore value
   509     0CF4  2CEE               	goto	clrloop0	;do the next byte
   510                           
   511                           	psect	cstackBANK1
   512     00CE                     __pcstackBANK1:
   513     00CE                     ??_main:
   514                           
   515                           ; 1 bytes @ 0x0
   516     00CE                     	ds	8
   517                           
   518                           	psect	cstackCOMMON
   519     0071                     __pcstackCOMMON:
   520     0071                     ?_initSystem:
   521     0071                     ?_buzzer_update:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0071                     ?_init_timer:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0071                     ?_check_button_press:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0071                     ?_setupTimer0:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0071                     ?_startSensorReading:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0071                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0071                     ?_isr:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0071                     ?_EEPROM_Read:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0071                     ??_isr:	
   546                           ; 1 bytes @ 0x0
   547                           
   548                           
   549                           ; 1 bytes @ 0x0
   550     0071                     	ds	2
   551     0073                     ?_trigger_buzzer:
   552     0073                     ?_getSensorResults:	
   553                           ; 1 bytes @ 0x2
   554                           
   555     0073                     ?_EEPROM_Write:	
   556                           ; 1 bytes @ 0x2
   557                           
   558     0073                     ?_readADC:	
   559                           ; 1 bytes @ 0x2
   560                           
   561     0073                     getSensorResults@low_active:	
   562                           ; 2 bytes @ 0x2
   563                           
   564     0073                     EEPROM_Write@data:	
   565                           ; 1 bytes @ 0x2
   566                           
   567     0073                     EEPROM_Read@address:	
   568                           ; 1 bytes @ 0x2
   569                           
   570     0073                     trigger_buzzer@duration_seconds:	
   571                           ; 1 bytes @ 0x2
   572                           
   573     0073                     ??_initSystem:	
   574                           ; 2 bytes @ 0x2
   575                           
   576     0073                     ??_init_timer:	
   577                           ; 1 bytes @ 0x2
   578                           
   579     0073                     ??_check_button_press:	
   580                           ; 1 bytes @ 0x2
   581                           
   582     0073                     ??_setupTimer0:	
   583                           ; 1 bytes @ 0x2
   584                           
   585     0073                     ??_startSensorReading:	
   586                           ; 1 bytes @ 0x2
   587                           
   588     0073                     ??_EEPROM_Read:	
   589                           ; 1 bytes @ 0x2
   590                           
   591     0073                     ??___lmul:	
   592                           ; 1 bytes @ 0x2
   593                           
   594                           
   595                           ; 1 bytes @ 0x2
   596     0073                     	ds	1
   597     0074                     ?_EEPROM_Read16:
   598     0074                     getSensorResults@high_active:	
   599                           ; 2 bytes @ 0x3
   600                           
   601     0074                     EEPROM_Write@address:	
   602                           ; 1 bytes @ 0x3
   603                           
   604     0074                     ___lmul@product:	
   605                           ; 1 bytes @ 0x3
   606                           
   607     0074                     ??_EEPROM_Write:	
   608                           ; 4 bytes @ 0x3
   609                           
   610                           
   611                           ; 1 bytes @ 0x3
   612     0074                     	ds	1
   613     0075                     ?_EEPROM_Write16:
   614     0075                     getSensorResults@flow_active:	
   615                           ; 1 bytes @ 0x4
   616                           
   617     0075                     EEPROM_Write16@data:	
   618                           ; 1 bytes @ 0x4
   619                           
   620     0075                     check_button_press@long_press_threshold:	
   621                           ; 2 bytes @ 0x4
   622                           
   623     0075                     ??_readADC:	
   624                           ; 2 bytes @ 0x4
   625                           
   626     0075                     ??_trigger_buzzer:	
   627                           ; 1 bytes @ 0x4
   628                           
   629                           
   630                           ; 1 bytes @ 0x4
   631     0075                     	ds	1
   632     0076                     readADC@channel:
   633     0076                     ??_getSensorResults:	
   634                           ; 1 bytes @ 0x5
   635                           
   636     0076                     ??_EEPROM_Read16:	
   637                           ; 1 bytes @ 0x5
   638                           
   639                           
   640                           ; 1 bytes @ 0x5
   641     0076                     	ds	1
   642     0077                     EEPROM_Write16@address:
   643     0077                     check_button_press@hold_count:	
   644                           ; 1 bytes @ 0x6
   645                           
   646     0077                     ??_EEPROM_Write16:	
   647                           ; 2 bytes @ 0x6
   648                           
   649                           
   650                           ; 1 bytes @ 0x6
   651     0077                     	ds	1
   652     0078                     saveSettings@value8bit:
   653     0078                     ??_loadSettings:	
   654                           ; 1 bytes @ 0x7
   655                           
   656     0078                     ??_saveSettings:	
   657                           ; 1 bytes @ 0x7
   658                           
   659     0078                     ??___lldiv:	
   660                           ; 1 bytes @ 0x7
   661                           
   662                           
   663                           ; 1 bytes @ 0x7
   664     0078                     	ds	1
   665     0079                     check_button_press@long_press:
   666     0079                     ??___wmul:	
   667                           ; 1 bytes @ 0x8
   668                           
   669                           
   670                           ; 1 bytes @ 0x8
   671     0079                     	ds	1
   672                           
   673                           	psect	cstackBANK0
   674     0047                     __pcstackBANK0:
   675     0047                     ?_saveSettings:
   676     0047                     ?___lmul:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0047                     EEPROM_Read16@result:	
   680                           ; 4 bytes @ 0x0
   681                           
   682     0047                     saveSettings@value16bit1:	
   683                           ; 2 bytes @ 0x0
   684                           
   685     0047                     ___lmul@multiplier:	
   686                           ; 2 bytes @ 0x0
   687                           
   688     0047                     ??_buzzer_update:	
   689                           ; 4 bytes @ 0x0
   690                           
   691                           
   692                           ; 1 bytes @ 0x0
   693     0047                     	ds	2
   694     0049                     EEPROM_Read16@address:
   695     0049                     saveSettings@value16bit2:	
   696                           ; 1 bytes @ 0x2
   697                           
   698                           
   699                           ; 2 bytes @ 0x2
   700     0049                     	ds	1
   701     004A                     ?_loadSettings:
   702     004A                     loadSettings@value8bit:	
   703                           ; 1 bytes @ 0x3
   704                           
   705                           
   706                           ; 1 bytes @ 0x3
   707     004A                     	ds	1
   708     004B                     loadSettings@value16bit1:
   709     004B                     saveSettings@value16bit3:	
   710                           ; 1 bytes @ 0x4
   711                           
   712     004B                     ___lmul@multiplicand:	
   713                           ; 2 bytes @ 0x4
   714                           
   715                           
   716                           ; 4 bytes @ 0x4
   717     004B                     	ds	1
   718     004C                     loadSettings@value16bit2:
   719                           
   720                           ; 1 bytes @ 0x5
   721     004C                     	ds	1
   722     004D                     loadSettings@value16bit3:
   723     004D                     saveSettings@value16bit4:	
   724                           ; 1 bytes @ 0x6
   725                           
   726                           
   727                           ; 2 bytes @ 0x6
   728     004D                     	ds	1
   729     004E                     loadSettings@value16bit4:
   730                           
   731                           ; 1 bytes @ 0x7
   732     004E                     	ds	1
   733     004F                     ?___lldiv:
   734     004F                     ___lldiv@divisor:	
   735                           ; 4 bytes @ 0x8
   736                           
   737                           
   738                           ; 4 bytes @ 0x8
   739     004F                     	ds	4
   740     0053                     ___lldiv@dividend:
   741                           
   742                           ; 4 bytes @ 0xC
   743     0053                     	ds	4
   744     0057                     ___lldiv@quotient:
   745                           
   746                           ; 4 bytes @ 0x10
   747     0057                     	ds	4
   748     005B                     ___lldiv@counter:
   749                           
   750                           ; 1 bytes @ 0x14
   751     005B                     	ds	1
   752     005C                     ?___wmul:
   753     005C                     ___wmul@multiplier:	
   754                           ; 2 bytes @ 0x15
   755                           
   756                           
   757                           ; 2 bytes @ 0x15
   758     005C                     	ds	2
   759     005E                     ___wmul@multiplicand:
   760                           
   761                           ; 2 bytes @ 0x17
   762     005E                     	ds	2
   763     0060                     ___wmul@product:
   764                           
   765                           ; 2 bytes @ 0x19
   766     0060                     	ds	2
   767     0062                     main@is_long_press:
   768                           
   769                           ; 1 bytes @ 0x1B
   770     0062                     	ds	1
   771     0063                     main@i:
   772                           
   773                           ; 1 bytes @ 0x1C
   774     0063                     	ds	1
   775                           
   776                           	psect	maintext
   777     0035                     __pmaintext:	
   778 ;;
   779 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   780 ;;
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 119 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  i               1   28[BANK0 ] unsigned char 
   788 ;;  is_long_pres    1   27[BANK0 ] _Bool 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : B00/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   798 ;;      Params:         0       0       0       0
   799 ;;      Locals:         0       2       0       0
   800 ;;      Temps:          0       0       8       0
   801 ;;      Totals:         0       2       8       0
   802 ;;Total ram usage:       10 bytes
   803 ;; Hardware stack levels required when called: 4
   804 ;; This function calls:
   805 ;;		___lldiv
   806 ;;		___lmul
   807 ;;		___wmul
   808 ;;		_buzzer_update
   809 ;;		_check_button_press
   810 ;;		_getSensorResults
   811 ;;		_initSystem
   812 ;;		_init_timer
   813 ;;		_loadSettings
   814 ;;		_readADC
   815 ;;		_saveSettings
   816 ;;		_setupTimer0
   817 ;;		_startSensorReading
   818 ;;		_trigger_buzzer
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824     0035                     _main:	
   825                           ;psect for function _main
   826                           
   827     0035                     l1891:	
   828                           ;incstack = 0
   829                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   830                           
   831                           
   832                           ;main.c: 122:   initSystem();
   833     0035  158A  2618  118A   	fcall	_initSystem
   834     0038                     l1893:
   835                           
   836                           ;main.c: 124:   if (!loadSettings(&maxruntimeindex, &minvoltagelimit, &maxvoltagelimit,
   837     0038  306A               	movlw	(low (_maxruntimeindex| 0))& (0+255)
   838     0039  1283               	bcf	3,5	;RP0=0, select bank0
   839     003A  1303               	bcf	3,6	;RP1=0, select bank0
   840     003B  00CA               	movwf	loadSettings@value8bit
   841     003C  3068               	movlw	(low (_minvoltagelimit| 0))& (0+255)
   842     003D  00CB               	movwf	loadSettings@value16bit1
   843     003E  3066               	movlw	(low (_maxvoltagelimit| 0))& (0+255)
   844     003F  00CC               	movwf	loadSettings@value16bit2
   845     0040  3064               	movlw	(low (_minimumrunningvoltage| 0))& (0+255)
   846     0041  00CD               	movwf	loadSettings@value16bit3
   847     0042  30CC               	movlw	(low (_maximumrinningvoltage| 0))& (0+255)
   848     0043  00CE               	movwf	loadSettings@value16bit4
   849     0044  118A  2776  118A   	fcall	_loadSettings
   850     0047  3A00               	xorlw	0
   851     0048  1D03               	skipz
   852     0049  284B               	goto	u2321
   853     004A  284C               	goto	u2320
   854     004B                     u2321:
   855     004B  287F               	goto	l1907
   856     004C                     u2320:
   857     004C                     l1895:
   858                           
   859                           ;main.c: 125:                     &minimumrunningvoltage, &maximumrinningvoltage)) {;mai
      +                          n.c: 127:     maxruntimeindex = 0;
   860     004C  1283               	bcf	3,5	;RP0=0, select bank0
   861     004D  1303               	bcf	3,6	;RP1=0, select bank0
   862     004E  01EA               	clrf	_maxruntimeindex
   863     004F                     l1897:
   864                           
   865                           ;main.c: 128:     minvoltagelimit = 150;
   866     004F  3096               	movlw	150
   867     0050  00E8               	movwf	_minvoltagelimit
   868     0051  3000               	movlw	0
   869     0052  00E9               	movwf	_minvoltagelimit+1
   870     0053                     l1899:
   871                           
   872                           ;main.c: 129:     maxvoltagelimit = 255;
   873     0053  30FF               	movlw	255
   874     0054  00E6               	movwf	_maxvoltagelimit
   875     0055  3000               	movlw	0
   876     0056  00E7               	movwf	_maxvoltagelimit+1
   877     0057                     l1901:
   878                           
   879                           ;main.c: 130:     minimumrunningvoltage = 170;
   880     0057  30AA               	movlw	170
   881     0058  00E4               	movwf	_minimumrunningvoltage
   882     0059  3000               	movlw	0
   883     005A  00E5               	movwf	_minimumrunningvoltage+1
   884     005B                     l1903:
   885                           
   886                           ;main.c: 131:     maximumrinningvoltage = 285;
   887     005B  301D               	movlw	29
   888     005C  1683               	bsf	3,5	;RP0=1, select bank1
   889     005D  1303               	bcf	3,6	;RP1=0, select bank1
   890     005E  00CC               	movwf	_maximumrinningvoltage^(0+128)
   891     005F  3001               	movlw	1
   892     0060  00CD               	movwf	(_maximumrinningvoltage^(0+128)+1)
   893     0061                     l1905:
   894                           
   895                           ;main.c: 134:     saveSettings(maxruntimeindex, minvoltagelimit, maxvoltagelimit,
   896     0061  1283               	bcf	3,5	;RP0=0, select bank0
   897     0062  1303               	bcf	3,6	;RP1=0, select bank0
   898     0063  0869               	movf	_minvoltagelimit+1,w
   899     0064  00C8               	movwf	saveSettings@value16bit1+1
   900     0065  0868               	movf	_minvoltagelimit,w
   901     0066  00C7               	movwf	saveSettings@value16bit1
   902     0067  0867               	movf	_maxvoltagelimit+1,w
   903     0068  00CA               	movwf	saveSettings@value16bit2+1
   904     0069  0866               	movf	_maxvoltagelimit,w
   905     006A  00C9               	movwf	saveSettings@value16bit2
   906     006B  0865               	movf	_minimumrunningvoltage+1,w
   907     006C  00CC               	movwf	saveSettings@value16bit3+1
   908     006D  0864               	movf	_minimumrunningvoltage,w
   909     006E  00CB               	movwf	saveSettings@value16bit3
   910     006F  1683               	bsf	3,5	;RP0=1, select bank1
   911     0070  1303               	bcf	3,6	;RP1=0, select bank1
   912     0071  084D               	movf	(_maximumrinningvoltage+1)^(0+128),w
   913     0072  1283               	bcf	3,5	;RP0=0, select bank0
   914     0073  1303               	bcf	3,6	;RP1=0, select bank0
   915     0074  00CE               	movwf	saveSettings@value16bit4+1
   916     0075  1683               	bsf	3,5	;RP0=1, select bank1
   917     0076  1303               	bcf	3,6	;RP1=0, select bank1
   918     0077  084C               	movf	_maximumrinningvoltage^(0+128),w
   919     0078  1283               	bcf	3,5	;RP0=0, select bank0
   920     0079  1303               	bcf	3,6	;RP1=0, select bank0
   921     007A  00CD               	movwf	saveSettings@value16bit4
   922     007B  086A               	movf	_maxruntimeindex,w
   923     007C  118A  27C5  118A   	fcall	_saveSettings
   924     007F                     l1907:
   925                           
   926                           ;main.c: 137:   potraw = readADC(4);
   927     007F  3004               	movlw	4
   928     0080  158A  2584  118A   	fcall	_readADC
   929     0083  0874               	movf	?_readADC+1,w
   930     0084  1683               	bsf	3,5	;RP0=1, select bank1
   931     0085  1303               	bcf	3,6	;RP1=0, select bank1
   932     0086  00BD               	movwf	(_potraw+1)^(0+128)
   933     0087  0873               	movf	?_readADC,w
   934     0088  00BC               	movwf	_potraw^(0+128)
   935     0089                     l1909:
   936                           
   937                           ;main.c: 139:   dryruntime = 1000 *(((uint32_t)potraw * 360) / 1023) + 120;
   938     0089  3000               	movlw	0
   939     008A  1283               	bcf	3,5	;RP0=0, select bank0
   940     008B  1303               	bcf	3,6	;RP1=0, select bank0
   941     008C  00CE               	movwf	___lmul@multiplicand+3
   942     008D  3000               	movlw	0
   943     008E  00CD               	movwf	___lmul@multiplicand+2
   944     008F  3001               	movlw	1
   945     0090  00CC               	movwf	___lmul@multiplicand+1
   946     0091  3068               	movlw	104
   947     0092  00CB               	movwf	___lmul@multiplicand
   948     0093  1683               	bsf	3,5	;RP0=1, select bank1
   949     0094  1303               	bcf	3,6	;RP1=0, select bank1
   950     0095  083C               	movf	_potraw^(0+128),w
   951     0096  1283               	bcf	3,5	;RP0=0, select bank0
   952     0097  1303               	bcf	3,6	;RP1=0, select bank0
   953     0098  00C7               	movwf	___lmul@multiplier
   954     0099  1683               	bsf	3,5	;RP0=1, select bank1
   955     009A  1303               	bcf	3,6	;RP1=0, select bank1
   956     009B  083D               	movf	(_potraw+1)^(0+128),w
   957     009C  1283               	bcf	3,5	;RP0=0, select bank0
   958     009D  1303               	bcf	3,6	;RP1=0, select bank0
   959     009E  00C8               	movwf	___lmul@multiplier+1
   960     009F  01C9               	clrf	___lmul@multiplier+2
   961     00A0  01CA               	clrf	___lmul@multiplier+3
   962     00A1  158A  266E  118A   	fcall	___lmul
   963     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   964     00A5  1303               	bcf	3,6	;RP1=0, select bank0
   965     00A6  084A               	movf	?___lmul+3,w
   966     00A7  00D6               	movwf	___lldiv@dividend+3
   967     00A8  0849               	movf	?___lmul+2,w
   968     00A9  00D5               	movwf	___lldiv@dividend+2
   969     00AA  0848               	movf	?___lmul+1,w
   970     00AB  00D4               	movwf	___lldiv@dividend+1
   971     00AC  0847               	movf	?___lmul,w
   972     00AD  00D3               	movwf	___lldiv@dividend
   973     00AE  3000               	movlw	0
   974     00AF  00D2               	movwf	___lldiv@divisor+3
   975     00B0  3000               	movlw	0
   976     00B1  00D1               	movwf	___lldiv@divisor+2
   977     00B2  3003               	movlw	3
   978     00B3  00D0               	movwf	___lldiv@divisor+1
   979     00B4  30FF               	movlw	255
   980     00B5  00CF               	movwf	___lldiv@divisor
   981     00B6  118A  26B2  118A   	fcall	___lldiv
   982     00B9  1283               	bcf	3,5	;RP0=0, select bank0
   983     00BA  1303               	bcf	3,6	;RP1=0, select bank0
   984     00BB  0850               	movf	?___lldiv+1,w
   985     00BC  00DD               	movwf	___wmul@multiplier+1
   986     00BD  084F               	movf	?___lldiv,w
   987     00BE  00DC               	movwf	___wmul@multiplier
   988     00BF  30E8               	movlw	232
   989     00C0  00DE               	movwf	___wmul@multiplicand
   990     00C1  3003               	movlw	3
   991     00C2  00DF               	movwf	___wmul@multiplicand+1
   992     00C3  158A  25CA  118A   	fcall	___wmul
   993     00C6  1283               	bcf	3,5	;RP0=0, select bank0
   994     00C7  1303               	bcf	3,6	;RP1=0, select bank0
   995     00C8  085C               	movf	?___wmul,w
   996     00C9  3E78               	addlw	120
   997     00CA  1683               	bsf	3,5	;RP0=1, select bank1
   998     00CB  1303               	bcf	3,6	;RP1=0, select bank1
   999     00CC  00B8               	movwf	_dryruntime^(0+128)
  1000     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1001     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1002     00CF  085D               	movf	?___wmul+1,w
  1003     00D0  1803               	skipnc
  1004     00D1  3E01               	addlw	1
  1005     00D2  3E00               	addlw	0
  1006     00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1007     00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1008     00D5  00B9               	movwf	(_dryruntime+1)^(0+128)
  1009     00D6                     l1911:
  1010                           
  1011                           ;main.c: 166:   trigger_buzzer(3000);
  1012     00D6  30B8               	movlw	184
  1013     00D7  00F3               	movwf	trigger_buzzer@duration_seconds
  1014     00D8  300B               	movlw	11
  1015     00D9  00F4               	movwf	trigger_buzzer@duration_seconds+1
  1016     00DA  158A  25F1  118A   	fcall	_trigger_buzzer
  1017     00DD                     l1913:
  1018                           
  1019                           ;main.c: 167:   buzzer_update();
  1020     00DD  118A  2718  118A   	fcall	_buzzer_update
  1021     00E0                     l1915:
  1022                           
  1023                           ;main.c: 169:   init_timer();
  1024     00E0  158A  2531  118A   	fcall	_init_timer
  1025     00E3                     l1921:	
  1026                           ;main.c: 171:   while (settingsmode) {
  1027                           
  1028                           
  1029                           ;main.c: 179:     if (PORTCbits.RC1 == 0) {
  1030     00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1031     00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1032     00E5  1887               	btfsc	7,1	;volatile
  1033     00E6  28E8               	goto	u2331
  1034     00E7  28E9               	goto	u2330
  1035     00E8                     u2331:
  1036     00E8  2906               	goto	l1931
  1037     00E9                     u2330:
  1038     00E9                     l1923:
  1039                           
  1040                           ;main.c: 180:       _Bool is_long_press = check_button_press();
  1041     00E9  118A  2646  118A   	fcall	_check_button_press
  1042     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1043     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1044     00EE  00E2               	movwf	main@is_long_press
  1045     00EF                     l1925:
  1046                           
  1047                           ;main.c: 182:       if (is_long_press) {
  1048     00EF  0862               	movf	main@is_long_press,w
  1049     00F0  1903               	btfsc	3,2
  1050     00F1  28F3               	goto	u2341
  1051     00F2  28F4               	goto	u2340
  1052     00F3                     u2341:
  1053     00F3  28F9               	goto	l1929
  1054     00F4                     u2340:
  1055     00F4                     l1927:
  1056                           
  1057                           ;main.c: 183:         tankempty = 1;
  1058     00F4  3001               	movlw	1
  1059     00F5  00B6               	movwf	_tankempty
  1060                           
  1061                           ;main.c: 184:         pretankempty = 1;
  1062     00F6  3001               	movlw	1
  1063     00F7  00B5               	movwf	_pretankempty
  1064                           
  1065                           ;main.c: 186:       } else {
  1066     00F8  2906               	goto	l1931
  1067     00F9                     l1929:
  1068                           
  1069                           ;main.c: 187:         PORTAbits.RA2 = ~PORTAbits.RA2;
  1070     00F9  1003               	clrc
  1071     00FA  1D05               	btfss	5,2	;volatile
  1072     00FB  1403               	setc
  1073     00FC  1803               	btfsc	3,0
  1074     00FD  28FF               	goto	u2351
  1075     00FE  2903               	goto	u2350
  1076     00FF                     u2351:
  1077     00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1078     0100  1303               	bcf	3,6	;RP1=0, select bank0
  1079     0101  1505               	bsf	5,2	;volatile
  1080     0102  2906               	goto	u2364
  1081     0103                     u2350:
  1082     0103  1283               	bcf	3,5	;RP0=0, select bank0
  1083     0104  1303               	bcf	3,6	;RP1=0, select bank0
  1084     0105  1105               	bcf	5,2	;volatile
  1085     0106                     u2364:
  1086     0106                     l1931:
  1087                           
  1088                           ;main.c: 191:     buzzer_update();
  1089     0106  118A  2718  118A   	fcall	_buzzer_update
  1090     0109                     l1933:
  1091                           
  1092                           ;main.c: 193:     for (uint8_t i = 0; i < 16; i++) {
  1093     0109  1283               	bcf	3,5	;RP0=0, select bank0
  1094     010A  1303               	bcf	3,6	;RP1=0, select bank0
  1095     010B  01E3               	clrf	main@i
  1096     010C                     l1935:
  1097     010C  3010               	movlw	16
  1098     010D  0263               	subwf	main@i,w
  1099     010E  1C03               	skipc
  1100     010F  2911               	goto	u2371
  1101     0110  2912               	goto	u2370
  1102     0111                     u2371:
  1103     0111  2913               	goto	l1939
  1104     0112                     u2370:
  1105     0112  2924               	goto	l1945
  1106     0113                     l1939:
  1107                           
  1108                           ;main.c: 194:       voltagesum += readADC(3);
  1109     0113  3003               	movlw	3
  1110     0114  158A  2584  118A   	fcall	_readADC
  1111     0117  0873               	movf	?_readADC,w
  1112     0118  1683               	bsf	3,5	;RP0=1, select bank1
  1113     0119  1303               	bcf	3,6	;RP1=0, select bank1
  1114     011A  07B6               	addwf	_voltagesum^(0+128),f
  1115     011B  1803               	skipnc
  1116     011C  0AB7               	incf	(_voltagesum+1)^(0+128),f
  1117     011D  0874               	movf	?_readADC+1,w
  1118     011E  07B7               	addwf	(_voltagesum+1)^(0+128),f
  1119     011F                     l1941:
  1120                           
  1121                           ;main.c: 195:     }
  1122     011F  3001               	movlw	1
  1123     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1124     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1125     0122  07E3               	addwf	main@i,f
  1126     0123  290C               	goto	l1935
  1127     0124                     l1945:
  1128                           
  1129                           ;main.c: 196:     voltageraw = voltagesum >> 4;
  1130     0124  1683               	bsf	3,5	;RP0=1, select bank1
  1131     0125  1303               	bcf	3,6	;RP1=0, select bank1
  1132     0126  0E36               	swapf	_voltagesum^(0+128),w
  1133     0127  390F               	andlw	15
  1134     0128  00BA               	movwf	_voltageraw^(0+128)
  1135     0129  0E37               	swapf	(_voltagesum+1)^(0+128),w
  1136     012A  39F0               	andlw	240
  1137     012B  04BA               	iorwf	_voltageraw^(0+128),f
  1138     012C  0E37               	swapf	(_voltagesum+1)^(0+128),w
  1139     012D  390F               	andlw	15
  1140     012E  00BB               	movwf	(_voltageraw^(0+128)+1)
  1141     012F                     l1947:
  1142                           
  1143                           ;main.c: 197:     voltagesum = 0;
  1144     012F  01B6               	clrf	_voltagesum^(0+128)
  1145     0130  01B7               	clrf	(_voltagesum+1)^(0+128)
  1146     0131                     l1949:
  1147                           
  1148                           ;main.c: 198:     voltage = (((uint32_t)voltageraw * 235) / 1023) + 85;
  1149     0131  3000               	movlw	0
  1150     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1151     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1152     0134  00D2               	movwf	___lldiv@divisor+3
  1153     0135  3000               	movlw	0
  1154     0136  00D1               	movwf	___lldiv@divisor+2
  1155     0137  3003               	movlw	3
  1156     0138  00D0               	movwf	___lldiv@divisor+1
  1157     0139  30FF               	movlw	255
  1158     013A  00CF               	movwf	___lldiv@divisor
  1159     013B  1683               	bsf	3,5	;RP0=1, select bank1
  1160     013C  1303               	bcf	3,6	;RP1=0, select bank1
  1161     013D  083A               	movf	_voltageraw^(0+128),w
  1162     013E  1283               	bcf	3,5	;RP0=0, select bank0
  1163     013F  1303               	bcf	3,6	;RP1=0, select bank0
  1164     0140  00C7               	movwf	___lmul@multiplier
  1165     0141  1683               	bsf	3,5	;RP0=1, select bank1
  1166     0142  1303               	bcf	3,6	;RP1=0, select bank1
  1167     0143  083B               	movf	(_voltageraw+1)^(0+128),w
  1168     0144  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0145  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0146  00C8               	movwf	___lmul@multiplier+1
  1171     0147  01C9               	clrf	___lmul@multiplier+2
  1172     0148  01CA               	clrf	___lmul@multiplier+3
  1173     0149  3000               	movlw	0
  1174     014A  00CE               	movwf	___lmul@multiplicand+3
  1175     014B  3000               	movlw	0
  1176     014C  00CD               	movwf	___lmul@multiplicand+2
  1177     014D  3000               	movlw	0
  1178     014E  00CC               	movwf	___lmul@multiplicand+1
  1179     014F  30EB               	movlw	235
  1180     0150  00CB               	movwf	___lmul@multiplicand
  1181     0151  158A  266E  118A   	fcall	___lmul
  1182     0154  1283               	bcf	3,5	;RP0=0, select bank0
  1183     0155  1303               	bcf	3,6	;RP1=0, select bank0
  1184     0156  084A               	movf	?___lmul+3,w
  1185     0157  00D6               	movwf	___lldiv@dividend+3
  1186     0158  0849               	movf	?___lmul+2,w
  1187     0159  00D5               	movwf	___lldiv@dividend+2
  1188     015A  0848               	movf	?___lmul+1,w
  1189     015B  00D4               	movwf	___lldiv@dividend+1
  1190     015C  0847               	movf	?___lmul,w
  1191     015D  00D3               	movwf	___lldiv@dividend
  1192     015E  118A  26B2  118A   	fcall	___lldiv
  1193     0161  1283               	bcf	3,5	;RP0=0, select bank0
  1194     0162  1303               	bcf	3,6	;RP1=0, select bank0
  1195     0163  084F               	movf	?___lldiv,w
  1196     0164  3E55               	addlw	85
  1197     0165  00C0               	movwf	_voltage
  1198     0166                     l1951:
  1199                           
  1200                           ;main.c: 201:     if(voltage < minvoltagelimit){
  1201     0166  0840               	movf	_voltage,w
  1202     0167  1683               	bsf	3,5	;RP0=1, select bank1
  1203     0168  1303               	bcf	3,6	;RP1=0, select bank1
  1204     0169  00CE               	movwf	??_main^(0+128)
  1205     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1206     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1207     016C  0869               	movf	_minvoltagelimit+1,w
  1208     016D  1D03               	skipz
  1209     016E  2973               	goto	u2385
  1210     016F  0868               	movf	_minvoltagelimit,w
  1211     0170  1683               	bsf	3,5	;RP0=1, select bank1
  1212     0171  1303               	bcf	3,6	;RP1=0, select bank1
  1213     0172  024E               	subwf	??_main^(0+128),w
  1214     0173                     u2385:
  1215     0173  1803               	skipnc
  1216     0174  2976               	goto	u2381
  1217     0175  2977               	goto	u2380
  1218     0176                     u2381:
  1219     0176  298A               	goto	l1957
  1220     0177                     u2380:
  1221     0177                     l1953:
  1222                           
  1223                           ;main.c: 202:       if(seconds_counter %2 ==0){
  1224     0177  1283               	bcf	3,5	;RP0=0, select bank0
  1225     0178  1303               	bcf	3,6	;RP1=0, select bank0
  1226     0179  182C               	btfsc	_seconds_counter,0	;volatile
  1227     017A  297C               	goto	u2391
  1228     017B  297D               	goto	u2390
  1229     017C                     u2391:
  1230     017C  298A               	goto	l1957
  1231     017D                     u2390:
  1232     017D                     l1955:
  1233                           
  1234                           ;main.c: 203:         PORTAbits.RA4 = ~PORTAbits.RA4;
  1235     017D  1003               	clrc
  1236     017E  1E05               	btfss	5,4	;volatile
  1237     017F  1403               	setc
  1238     0180  1803               	btfsc	3,0
  1239     0181  2983               	goto	u2401
  1240     0182  2987               	goto	u2400
  1241     0183                     u2401:
  1242     0183  1283               	bcf	3,5	;RP0=0, select bank0
  1243     0184  1303               	bcf	3,6	;RP1=0, select bank0
  1244     0185  1605               	bsf	5,4	;volatile
  1245     0186  298A               	goto	u2414
  1246     0187                     u2400:
  1247     0187  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0188  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0189  1205               	bcf	5,4	;volatile
  1250     018A                     u2414:
  1251     018A                     l1957:
  1252     018A  1283               	bcf	3,5	;RP0=0, select bank0
  1253     018B  083C               	movf	_sensors_reading_in_progress,w	;volatile
  1254     018C  1D03               	btfss	3,2
  1255     018D  298F               	goto	u2421
  1256     018E  2990               	goto	u2420
  1257     018F                     u2421:
  1258     018F  299B               	goto	l1963
  1259     0190                     u2420:
  1260     0190                     l1959:
  1261     0190  083D               	movf	_sensors_reading_complete,w	;volatile
  1262     0191  1D03               	btfss	3,2
  1263     0192  2994               	goto	u2431
  1264     0193  2995               	goto	u2430
  1265     0194                     u2431:
  1266     0194  299B               	goto	l1963
  1267     0195                     u2430:
  1268     0195                     l1961:
  1269                           
  1270                           ;main.c: 208:       setupTimer0();
  1271     0195  158A  24F5  118A   	fcall	_setupTimer0
  1272                           
  1273                           ;main.c: 209:       startSensorReading();
  1274     0198  158A  2512  118A   	fcall	_startSensorReading
  1275     019B                     l1963:
  1276                           
  1277                           ;main.c: 212:     if (getSensorResults(&low_sensor_active, &high_sensor_active, &flow_se
      +                          nsor_active)) {
  1278     019B  3046               	movlw	(low (_low_sensor_active| 0))& (0+255)
  1279     019C  00F3               	movwf	getSensorResults@low_active
  1280     019D  3045               	movlw	(low (_high_sensor_active| 0))& (0+255)
  1281     019E  00F4               	movwf	getSensorResults@high_active
  1282     019F  3044               	movlw	(low (_flow_sensor_active| 0))& (0+255)
  1283     01A0  00F5               	movwf	getSensorResults@flow_active
  1284     01A1  158A  2640  118A   	fcall	_getSensorResults
  1285     01A4  3A00               	xorlw	0
  1286     01A5  1903               	skipnz
  1287     01A6  29A8               	goto	u2441
  1288     01A7  29A9               	goto	u2440
  1289     01A8                     u2441:
  1290     01A8  29BD               	goto	l1975
  1291     01A9                     u2440:
  1292     01A9                     l1965:
  1293                           
  1294                           ;main.c: 214:       if (high_sensor_active) {
  1295     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1296     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1297     01AB  0845               	movf	_high_sensor_active,w
  1298     01AC  1903               	btfsc	3,2
  1299     01AD  29AF               	goto	u2451
  1300     01AE  29B0               	goto	u2450
  1301     01AF                     u2451:
  1302     01AF  29B1               	goto	l1969
  1303     01B0                     u2450:
  1304     01B0                     l1967:
  1305                           
  1306                           ;main.c: 216:         pretankempty = 0;
  1307     01B0  01B5               	clrf	_pretankempty
  1308     01B1                     l1969:
  1309                           
  1310                           ;main.c: 218:       if (!low_sensor_active && !high_sensor_active) {
  1311     01B1  0846               	movf	_low_sensor_active,w
  1312     01B2  1D03               	btfss	3,2
  1313     01B3  29B5               	goto	u2461
  1314     01B4  29B6               	goto	u2460
  1315     01B5                     u2461:
  1316     01B5  29BD               	goto	l1975
  1317     01B6                     u2460:
  1318     01B6                     l1971:
  1319     01B6  0845               	movf	_high_sensor_active,w
  1320     01B7  1D03               	btfss	3,2
  1321     01B8  29BA               	goto	u2471
  1322     01B9  29BB               	goto	u2470
  1323     01BA                     u2471:
  1324     01BA  29BD               	goto	l1975
  1325     01BB                     u2470:
  1326     01BB                     l1973:
  1327                           
  1328                           ;main.c: 220:         pretankempty = 1;
  1329     01BB  3001               	movlw	1
  1330     01BC  00B5               	movwf	_pretankempty
  1331     01BD                     l1975:
  1332                           
  1333                           ;main.c: 225:     if(pretankempty !=tankempty){
  1334     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1335     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1336     01BF  0835               	movf	_pretankempty,w
  1337     01C0  0636               	xorwf	_tankempty,w
  1338     01C1  1903               	skipnz
  1339     01C2  29C4               	goto	u2481
  1340     01C3  29C5               	goto	u2480
  1341     01C4                     u2481:
  1342     01C4  2A33               	goto	l1985
  1343     01C5                     u2480:
  1344     01C5                     l1977:
  1345                           
  1346                           ;main.c: 226:       if(lastsensorcheck == 0){
  1347     01C5  0823               	movf	_lastsensorcheck+3,w
  1348     01C6  0422               	iorwf	_lastsensorcheck+2,w
  1349     01C7  0421               	iorwf	_lastsensorcheck+1,w
  1350     01C8  0420               	iorwf	_lastsensorcheck,w
  1351     01C9  1D03               	skipz
  1352     01CA  29CC               	goto	u2491
  1353     01CB  29CD               	goto	u2490
  1354     01CC                     u2491:
  1355     01CC  29D6               	goto	l1981
  1356     01CD                     u2490:
  1357     01CD                     l1979:
  1358                           
  1359                           ;main.c: 227:         lastsensorcheck = millis;
  1360     01CD  082B               	movf	_millis+3,w	;volatile
  1361     01CE  00A3               	movwf	_lastsensorcheck+3
  1362     01CF  082A               	movf	_millis+2,w	;volatile
  1363     01D0  00A2               	movwf	_lastsensorcheck+2
  1364     01D1  0829               	movf	_millis+1,w	;volatile
  1365     01D2  00A1               	movwf	_lastsensorcheck+1
  1366     01D3  0828               	movf	_millis,w	;volatile
  1367     01D4  00A0               	movwf	_lastsensorcheck
  1368                           
  1369                           ;main.c: 228:       }else if(millis - lastsensorcheck >= sensorbuffer){
  1370     01D5  2A95               	goto	l201
  1371     01D6                     l1981:
  1372     01D6  0828               	movf	_millis,w	;volatile
  1373     01D7  1683               	bsf	3,5	;RP0=1, select bank1
  1374     01D8  1303               	bcf	3,6	;RP1=0, select bank1
  1375     01D9  00CE               	movwf	??_main^(0+128)
  1376     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1377     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1378     01DC  0829               	movf	_millis+1,w	;volatile
  1379     01DD  1683               	bsf	3,5	;RP0=1, select bank1
  1380     01DE  1303               	bcf	3,6	;RP1=0, select bank1
  1381     01DF  00CF               	movwf	(??_main^(0+128)+1)
  1382     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1383     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1384     01E2  082A               	movf	_millis+2,w	;volatile
  1385     01E3  1683               	bsf	3,5	;RP0=1, select bank1
  1386     01E4  1303               	bcf	3,6	;RP1=0, select bank1
  1387     01E5  00D0               	movwf	(??_main^(0+128)+2)
  1388     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1389     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1390     01E8  082B               	movf	_millis+3,w	;volatile
  1391     01E9  1683               	bsf	3,5	;RP0=1, select bank1
  1392     01EA  1303               	bcf	3,6	;RP1=0, select bank1
  1393     01EB  00D1               	movwf	(??_main^(0+128)+3)
  1394     01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1395     01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1396     01EE  0820               	movf	_lastsensorcheck,w
  1397     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1398     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1399     01F1  02CE               	subwf	??_main^(0+128),f
  1400     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1401     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1402     01F4  0821               	movf	_lastsensorcheck+1,w
  1403     01F5  1C03               	skipc
  1404     01F6  0F21               	incfsz	_lastsensorcheck+1,w
  1405     01F7  29F9               	goto	u2501
  1406     01F8  29FC               	goto	u2502
  1407     01F9                     u2501:
  1408     01F9  1683               	bsf	3,5	;RP0=1, select bank1
  1409     01FA  1303               	bcf	3,6	;RP1=0, select bank1
  1410     01FB  02CF               	subwf	(??_main^(0+128)+1),f
  1411     01FC                     u2502:
  1412     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1413     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1414     01FE  0822               	movf	_lastsensorcheck+2,w
  1415     01FF  1C03               	skipc
  1416     0200  0F22               	incfsz	_lastsensorcheck+2,w
  1417     0201  2A03               	goto	u2503
  1418     0202  2A06               	goto	u2504
  1419     0203                     u2503:
  1420     0203  1683               	bsf	3,5	;RP0=1, select bank1
  1421     0204  1303               	bcf	3,6	;RP1=0, select bank1
  1422     0205  02D0               	subwf	(??_main^(0+128)+2),f
  1423     0206                     u2504:
  1424     0206  1283               	bcf	3,5	;RP0=0, select bank0
  1425     0207  1303               	bcf	3,6	;RP1=0, select bank0
  1426     0208  0823               	movf	_lastsensorcheck+3,w
  1427     0209  1C03               	skipc
  1428     020A  0F23               	incfsz	_lastsensorcheck+3,w
  1429     020B  2A0D               	goto	u2505
  1430     020C  2A10               	goto	u2506
  1431     020D                     u2505:
  1432     020D  1683               	bsf	3,5	;RP0=1, select bank1
  1433     020E  1303               	bcf	3,6	;RP1=0, select bank1
  1434     020F  02D1               	subwf	(??_main^(0+128)+3),f
  1435     0210                     u2506:
  1436     0210  1283               	bcf	3,5	;RP0=0, select bank0
  1437     0211  1303               	bcf	3,6	;RP1=0, select bank0
  1438     0212  1683               	bsf	3,5	;RP0=1, select bank1
  1439     0213  1303               	bcf	3,6	;RP1=0, select bank1
  1440     0214  0851               	movf	(??_main^(0+128)+3),w
  1441     0215  1D03               	btfss	3,2
  1442     0216  2A26               	goto	u2510
  1443     0217  0850               	movf	(??_main^(0+128)+2),w
  1444     0218  1D03               	btfss	3,2
  1445     0219  2A26               	goto	u2510
  1446     021A  3027               	movlw	39
  1447     021B  024F               	subwf	(??_main^(0+128)+1),w
  1448     021C  1D03               	skipz
  1449     021D  2A22               	goto	u2513
  1450     021E  3010               	movlw	16
  1451     021F  024E               	subwf	??_main^(0+128),w
  1452     0220  1D03               	skipz
  1453     0221  2A22               	goto	u2513
  1454     0222                     u2513:
  1455     0222  1C03               	btfss	3,0
  1456     0223  2A25               	goto	u2511
  1457     0224  2A26               	goto	u2510
  1458     0225                     u2511:
  1459     0225  2A95               	goto	l201
  1460     0226                     u2510:
  1461     0226                     l1983:
  1462                           
  1463                           ;main.c: 229:         lastsensorcheck = 0;
  1464     0226  3000               	movlw	0
  1465     0227  1283               	bcf	3,5	;RP0=0, select bank0
  1466     0228  1303               	bcf	3,6	;RP1=0, select bank0
  1467     0229  00A3               	movwf	_lastsensorcheck+3
  1468     022A  3000               	movlw	0
  1469     022B  00A2               	movwf	_lastsensorcheck+2
  1470     022C  3000               	movlw	0
  1471     022D  00A1               	movwf	_lastsensorcheck+1
  1472     022E  3000               	movlw	0
  1473     022F  00A0               	movwf	_lastsensorcheck
  1474                           
  1475                           ;main.c: 230:         tankempty = pretankempty;
  1476     0230  0835               	movf	_pretankempty,w
  1477     0231  00B6               	movwf	_tankempty
  1478     0232  2A95               	goto	l201
  1479     0233                     l1985:
  1480     0233  0823               	movf	_lastsensorcheck+3,w
  1481     0234  0422               	iorwf	_lastsensorcheck+2,w
  1482     0235  0421               	iorwf	_lastsensorcheck+1,w
  1483     0236  0420               	iorwf	_lastsensorcheck,w
  1484     0237  1903               	skipnz
  1485     0238  2A3A               	goto	u2521
  1486     0239  2A3B               	goto	u2520
  1487     023A                     u2521:
  1488     023A  2A95               	goto	l201
  1489     023B                     u2520:
  1490     023B                     l1987:
  1491     023B  0828               	movf	_millis,w	;volatile
  1492     023C  1683               	bsf	3,5	;RP0=1, select bank1
  1493     023D  1303               	bcf	3,6	;RP1=0, select bank1
  1494     023E  00CE               	movwf	??_main^(0+128)
  1495     023F  1283               	bcf	3,5	;RP0=0, select bank0
  1496     0240  1303               	bcf	3,6	;RP1=0, select bank0
  1497     0241  0829               	movf	_millis+1,w	;volatile
  1498     0242  1683               	bsf	3,5	;RP0=1, select bank1
  1499     0243  1303               	bcf	3,6	;RP1=0, select bank1
  1500     0244  00CF               	movwf	(??_main^(0+128)+1)
  1501     0245  1283               	bcf	3,5	;RP0=0, select bank0
  1502     0246  1303               	bcf	3,6	;RP1=0, select bank0
  1503     0247  082A               	movf	_millis+2,w	;volatile
  1504     0248  1683               	bsf	3,5	;RP0=1, select bank1
  1505     0249  1303               	bcf	3,6	;RP1=0, select bank1
  1506     024A  00D0               	movwf	(??_main^(0+128)+2)
  1507     024B  1283               	bcf	3,5	;RP0=0, select bank0
  1508     024C  1303               	bcf	3,6	;RP1=0, select bank0
  1509     024D  082B               	movf	_millis+3,w	;volatile
  1510     024E  1683               	bsf	3,5	;RP0=1, select bank1
  1511     024F  1303               	bcf	3,6	;RP1=0, select bank1
  1512     0250  00D1               	movwf	(??_main^(0+128)+3)
  1513     0251  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0252  1303               	bcf	3,6	;RP1=0, select bank0
  1515     0253  0820               	movf	_lastsensorcheck,w
  1516     0254  1683               	bsf	3,5	;RP0=1, select bank1
  1517     0255  1303               	bcf	3,6	;RP1=0, select bank1
  1518     0256  02CE               	subwf	??_main^(0+128),f
  1519     0257  1283               	bcf	3,5	;RP0=0, select bank0
  1520     0258  1303               	bcf	3,6	;RP1=0, select bank0
  1521     0259  0821               	movf	_lastsensorcheck+1,w
  1522     025A  1C03               	skipc
  1523     025B  0F21               	incfsz	_lastsensorcheck+1,w
  1524     025C  2A5E               	goto	u2531
  1525     025D  2A61               	goto	u2532
  1526     025E                     u2531:
  1527     025E  1683               	bsf	3,5	;RP0=1, select bank1
  1528     025F  1303               	bcf	3,6	;RP1=0, select bank1
  1529     0260  02CF               	subwf	(??_main^(0+128)+1),f
  1530     0261                     u2532:
  1531     0261  1283               	bcf	3,5	;RP0=0, select bank0
  1532     0262  1303               	bcf	3,6	;RP1=0, select bank0
  1533     0263  0822               	movf	_lastsensorcheck+2,w
  1534     0264  1C03               	skipc
  1535     0265  0F22               	incfsz	_lastsensorcheck+2,w
  1536     0266  2A68               	goto	u2533
  1537     0267  2A6B               	goto	u2534
  1538     0268                     u2533:
  1539     0268  1683               	bsf	3,5	;RP0=1, select bank1
  1540     0269  1303               	bcf	3,6	;RP1=0, select bank1
  1541     026A  02D0               	subwf	(??_main^(0+128)+2),f
  1542     026B                     u2534:
  1543     026B  1283               	bcf	3,5	;RP0=0, select bank0
  1544     026C  1303               	bcf	3,6	;RP1=0, select bank0
  1545     026D  0823               	movf	_lastsensorcheck+3,w
  1546     026E  1C03               	skipc
  1547     026F  0F23               	incfsz	_lastsensorcheck+3,w
  1548     0270  2A72               	goto	u2535
  1549     0271  2A75               	goto	u2536
  1550     0272                     u2535:
  1551     0272  1683               	bsf	3,5	;RP0=1, select bank1
  1552     0273  1303               	bcf	3,6	;RP1=0, select bank1
  1553     0274  02D1               	subwf	(??_main^(0+128)+3),f
  1554     0275                     u2536:
  1555     0275  1283               	bcf	3,5	;RP0=0, select bank0
  1556     0276  1303               	bcf	3,6	;RP1=0, select bank0
  1557     0277  1683               	bsf	3,5	;RP0=1, select bank1
  1558     0278  1303               	bcf	3,6	;RP1=0, select bank1
  1559     0279  0851               	movf	(??_main^(0+128)+3),w
  1560     027A  1D03               	btfss	3,2
  1561     027B  2A8B               	goto	u2540
  1562     027C  0850               	movf	(??_main^(0+128)+2),w
  1563     027D  1D03               	btfss	3,2
  1564     027E  2A8B               	goto	u2540
  1565     027F  3027               	movlw	39
  1566     0280  024F               	subwf	(??_main^(0+128)+1),w
  1567     0281  1D03               	skipz
  1568     0282  2A87               	goto	u2543
  1569     0283  3010               	movlw	16
  1570     0284  024E               	subwf	??_main^(0+128),w
  1571     0285  1D03               	skipz
  1572     0286  2A87               	goto	u2543
  1573     0287                     u2543:
  1574     0287  1C03               	btfss	3,0
  1575     0288  2A8A               	goto	u2541
  1576     0289  2A8B               	goto	u2540
  1577     028A                     u2541:
  1578     028A  2A95               	goto	l201
  1579     028B                     u2540:
  1580     028B                     l1989:
  1581                           
  1582                           ;main.c: 233:       lastsensorcheck = 0;
  1583     028B  3000               	movlw	0
  1584     028C  1283               	bcf	3,5	;RP0=0, select bank0
  1585     028D  1303               	bcf	3,6	;RP1=0, select bank0
  1586     028E  00A3               	movwf	_lastsensorcheck+3
  1587     028F  3000               	movlw	0
  1588     0290  00A2               	movwf	_lastsensorcheck+2
  1589     0291  3000               	movlw	0
  1590     0292  00A1               	movwf	_lastsensorcheck+1
  1591     0293  3000               	movlw	0
  1592     0294  00A0               	movwf	_lastsensorcheck
  1593     0295                     l201:
  1594                           
  1595                           ;main.c: 236:     if(flow_sensor_active != flowactive){
  1596     0295  1283               	bcf	3,5	;RP0=0, select bank0
  1597     0296  1303               	bcf	3,6	;RP1=0, select bank0
  1598     0297  0844               	movf	_flow_sensor_active,w
  1599     0298  0634               	xorwf	_flowactive,w
  1600     0299  1903               	skipnz
  1601     029A  2A9C               	goto	u2551
  1602     029B  2A9D               	goto	u2550
  1603     029C                     u2551:
  1604     029C  2AF9               	goto	l2001
  1605     029D                     u2550:
  1606     029D                     l1991:
  1607                           
  1608                           ;main.c: 237:         if (lastflowcheck == 0) {
  1609     029D  0830               	movf	_lastflowcheck,w
  1610     029E  0431               	iorwf	_lastflowcheck+1,w
  1611     029F  1D03               	btfss	3,2
  1612     02A0  2AA2               	goto	u2561
  1613     02A1  2AA3               	goto	u2560
  1614     02A2                     u2561:
  1615     02A2  2AA8               	goto	l1995
  1616     02A3                     u2560:
  1617     02A3                     l1993:
  1618                           
  1619                           ;main.c: 238:           lastflowcheck = millis;
  1620     02A3  0829               	movf	_millis+1,w	;volatile
  1621     02A4  00B1               	movwf	_lastflowcheck+1
  1622     02A5  0828               	movf	_millis,w	;volatile
  1623     02A6  00B0               	movwf	_lastflowcheck
  1624                           
  1625                           ;main.c: 239:         } else if (millis - lastflowcheck >= sensorbuffer) {
  1626     02A7  2B4D               	goto	l2007
  1627     02A8                     l1995:
  1628     02A8  0830               	movf	_lastflowcheck,w
  1629     02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1630     02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1631     02AB  00CE               	movwf	??_main^(0+128)
  1632     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1633     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1634     02AE  0831               	movf	_lastflowcheck+1,w
  1635     02AF  1683               	bsf	3,5	;RP0=1, select bank1
  1636     02B0  1303               	bcf	3,6	;RP1=0, select bank1
  1637     02B1  00CF               	movwf	(??_main^(0+128)+1)
  1638     02B2  01D0               	clrf	(??_main^(0+128)+2)
  1639     02B3  01D1               	clrf	(??_main^(0+128)+3)
  1640     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1641     02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1642     02B6  0828               	movf	_millis,w	;volatile
  1643     02B7  1683               	bsf	3,5	;RP0=1, select bank1
  1644     02B8  1303               	bcf	3,6	;RP1=0, select bank1
  1645     02B9  00D2               	movwf	(??_main+4)^(0+128)
  1646     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1647     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1648     02BC  0829               	movf	_millis+1,w	;volatile
  1649     02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1650     02BE  1303               	bcf	3,6	;RP1=0, select bank1
  1651     02BF  00D3               	movwf	((??_main+4)^(0+128)+1)
  1652     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1653     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1654     02C2  082A               	movf	_millis+2,w	;volatile
  1655     02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1656     02C4  1303               	bcf	3,6	;RP1=0, select bank1
  1657     02C5  00D4               	movwf	((??_main+4)^(0+128)+2)
  1658     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1659     02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1660     02C8  082B               	movf	_millis+3,w	;volatile
  1661     02C9  1683               	bsf	3,5	;RP0=1, select bank1
  1662     02CA  1303               	bcf	3,6	;RP1=0, select bank1
  1663     02CB  00D5               	movwf	((??_main+4)^(0+128)+3)
  1664     02CC  084E               	movf	??_main^(0+128),w
  1665     02CD  02D2               	subwf	(??_main+4)^(0+128),f
  1666     02CE  084F               	movf	(??_main+1)^(0+128),w
  1667     02CF  1C03               	skipc
  1668     02D0  0F4F               	incfsz	(??_main+1)^(0+128),w
  1669     02D1  2AD3               	goto	u2571
  1670     02D2  2AD4               	goto	u2572
  1671     02D3                     u2571:
  1672     02D3  02D3               	subwf	((??_main+4)^(0+128)+1),f
  1673     02D4                     u2572:
  1674     02D4  0850               	movf	(??_main+2)^(0+128),w
  1675     02D5  1C03               	skipc
  1676     02D6  0F50               	incfsz	(??_main+2)^(0+128),w
  1677     02D7  2AD9               	goto	u2573
  1678     02D8  2ADA               	goto	u2574
  1679     02D9                     u2573:
  1680     02D9  02D4               	subwf	((??_main+4)^(0+128)+2),f
  1681     02DA                     u2574:
  1682     02DA  0851               	movf	(??_main+3)^(0+128),w
  1683     02DB  1C03               	skipc
  1684     02DC  0F51               	incfsz	(??_main+3)^(0+128),w
  1685     02DD  2ADF               	goto	u2575
  1686     02DE  2AE0               	goto	u2576
  1687     02DF                     u2575:
  1688     02DF  02D5               	subwf	((??_main+4)^(0+128)+3),f
  1689     02E0                     u2576:
  1690     02E0  0855               	movf	((??_main+4)^(0+128)+3),w
  1691     02E1  1D03               	btfss	3,2
  1692     02E2  2AF2               	goto	u2580
  1693     02E3  0854               	movf	((??_main+4)^(0+128)+2),w
  1694     02E4  1D03               	btfss	3,2
  1695     02E5  2AF2               	goto	u2580
  1696     02E6  3027               	movlw	39
  1697     02E7  0253               	subwf	((??_main+4)^(0+128)+1),w
  1698     02E8  1D03               	skipz
  1699     02E9  2AEE               	goto	u2583
  1700     02EA  3010               	movlw	16
  1701     02EB  0252               	subwf	(??_main+4)^(0+128),w
  1702     02EC  1D03               	skipz
  1703     02ED  2AEE               	goto	u2583
  1704     02EE                     u2583:
  1705     02EE  1C03               	btfss	3,0
  1706     02EF  2AF1               	goto	u2581
  1707     02F0  2AF2               	goto	u2580
  1708     02F1                     u2581:
  1709     02F1  2B4D               	goto	l2007
  1710     02F2                     u2580:
  1711     02F2                     l1997:
  1712                           
  1713                           ;main.c: 240:           lastflowcheck = 0;
  1714     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1715     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1716     02F4  01B0               	clrf	_lastflowcheck
  1717     02F5  01B1               	clrf	_lastflowcheck+1
  1718     02F6                     l1999:
  1719                           
  1720                           ;main.c: 241:           flowactive = flow_sensor_active;
  1721     02F6  0844               	movf	_flow_sensor_active,w
  1722     02F7  00B4               	movwf	_flowactive
  1723     02F8  2B4D               	goto	l2007
  1724     02F9                     l2001:
  1725     02F9  0830               	movf	_lastflowcheck,w
  1726     02FA  0431               	iorwf	_lastflowcheck+1,w
  1727     02FB  1903               	btfsc	3,2
  1728     02FC  2AFE               	goto	u2591
  1729     02FD  2AFF               	goto	u2590
  1730     02FE                     u2591:
  1731     02FE  2B4D               	goto	l2007
  1732     02FF                     u2590:
  1733     02FF                     l2003:
  1734     02FF  0830               	movf	_lastflowcheck,w
  1735     0300  1683               	bsf	3,5	;RP0=1, select bank1
  1736     0301  1303               	bcf	3,6	;RP1=0, select bank1
  1737     0302  00CE               	movwf	??_main^(0+128)
  1738     0303  1283               	bcf	3,5	;RP0=0, select bank0
  1739     0304  1303               	bcf	3,6	;RP1=0, select bank0
  1740     0305  0831               	movf	_lastflowcheck+1,w
  1741     0306  1683               	bsf	3,5	;RP0=1, select bank1
  1742     0307  1303               	bcf	3,6	;RP1=0, select bank1
  1743     0308  00CF               	movwf	(??_main^(0+128)+1)
  1744     0309  01D0               	clrf	(??_main^(0+128)+2)
  1745     030A  01D1               	clrf	(??_main^(0+128)+3)
  1746     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1747     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1748     030D  0828               	movf	_millis,w	;volatile
  1749     030E  1683               	bsf	3,5	;RP0=1, select bank1
  1750     030F  1303               	bcf	3,6	;RP1=0, select bank1
  1751     0310  00D2               	movwf	(??_main+4)^(0+128)
  1752     0311  1283               	bcf	3,5	;RP0=0, select bank0
  1753     0312  1303               	bcf	3,6	;RP1=0, select bank0
  1754     0313  0829               	movf	_millis+1,w	;volatile
  1755     0314  1683               	bsf	3,5	;RP0=1, select bank1
  1756     0315  1303               	bcf	3,6	;RP1=0, select bank1
  1757     0316  00D3               	movwf	((??_main+4)^(0+128)+1)
  1758     0317  1283               	bcf	3,5	;RP0=0, select bank0
  1759     0318  1303               	bcf	3,6	;RP1=0, select bank0
  1760     0319  082A               	movf	_millis+2,w	;volatile
  1761     031A  1683               	bsf	3,5	;RP0=1, select bank1
  1762     031B  1303               	bcf	3,6	;RP1=0, select bank1
  1763     031C  00D4               	movwf	((??_main+4)^(0+128)+2)
  1764     031D  1283               	bcf	3,5	;RP0=0, select bank0
  1765     031E  1303               	bcf	3,6	;RP1=0, select bank0
  1766     031F  082B               	movf	_millis+3,w	;volatile
  1767     0320  1683               	bsf	3,5	;RP0=1, select bank1
  1768     0321  1303               	bcf	3,6	;RP1=0, select bank1
  1769     0322  00D5               	movwf	((??_main+4)^(0+128)+3)
  1770     0323  084E               	movf	??_main^(0+128),w
  1771     0324  02D2               	subwf	(??_main+4)^(0+128),f
  1772     0325  084F               	movf	(??_main+1)^(0+128),w
  1773     0326  1C03               	skipc
  1774     0327  0F4F               	incfsz	(??_main+1)^(0+128),w
  1775     0328  2B2A               	goto	u2601
  1776     0329  2B2B               	goto	u2602
  1777     032A                     u2601:
  1778     032A  02D3               	subwf	((??_main+4)^(0+128)+1),f
  1779     032B                     u2602:
  1780     032B  0850               	movf	(??_main+2)^(0+128),w
  1781     032C  1C03               	skipc
  1782     032D  0F50               	incfsz	(??_main+2)^(0+128),w
  1783     032E  2B30               	goto	u2603
  1784     032F  2B31               	goto	u2604
  1785     0330                     u2603:
  1786     0330  02D4               	subwf	((??_main+4)^(0+128)+2),f
  1787     0331                     u2604:
  1788     0331  0851               	movf	(??_main+3)^(0+128),w
  1789     0332  1C03               	skipc
  1790     0333  0F51               	incfsz	(??_main+3)^(0+128),w
  1791     0334  2B36               	goto	u2605
  1792     0335  2B37               	goto	u2606
  1793     0336                     u2605:
  1794     0336  02D5               	subwf	((??_main+4)^(0+128)+3),f
  1795     0337                     u2606:
  1796     0337  0855               	movf	((??_main+4)^(0+128)+3),w
  1797     0338  1D03               	btfss	3,2
  1798     0339  2B49               	goto	u2610
  1799     033A  0854               	movf	((??_main+4)^(0+128)+2),w
  1800     033B  1D03               	btfss	3,2
  1801     033C  2B49               	goto	u2610
  1802     033D  3027               	movlw	39
  1803     033E  0253               	subwf	((??_main+4)^(0+128)+1),w
  1804     033F  1D03               	skipz
  1805     0340  2B45               	goto	u2613
  1806     0341  3010               	movlw	16
  1807     0342  0252               	subwf	(??_main+4)^(0+128),w
  1808     0343  1D03               	skipz
  1809     0344  2B45               	goto	u2613
  1810     0345                     u2613:
  1811     0345  1C03               	btfss	3,0
  1812     0346  2B48               	goto	u2611
  1813     0347  2B49               	goto	u2610
  1814     0348                     u2611:
  1815     0348  2B4D               	goto	l2007
  1816     0349                     u2610:
  1817     0349                     l2005:
  1818                           
  1819                           ;main.c: 244:         lastflowcheck = 0;
  1820     0349  1283               	bcf	3,5	;RP0=0, select bank0
  1821     034A  1303               	bcf	3,6	;RP1=0, select bank0
  1822     034B  01B0               	clrf	_lastflowcheck
  1823     034C  01B1               	clrf	_lastflowcheck+1
  1824     034D                     l2007:
  1825                           
  1826                           ;main.c: 248:     if (tankempty) {
  1827     034D  1283               	bcf	3,5	;RP0=0, select bank0
  1828     034E  1303               	bcf	3,6	;RP1=0, select bank0
  1829     034F  0836               	movf	_tankempty,w
  1830     0350  1903               	btfsc	3,2
  1831     0351  2B53               	goto	u2621
  1832     0352  2B54               	goto	u2620
  1833     0353                     u2621:
  1834     0353  2C64               	goto	l2049
  1835     0354                     u2620:
  1836     0354                     l2009:
  1837                           
  1838                           ;main.c: 249:       if (!timeouterror && !voltageerror && !dryrunerror && !motorrunning)
      +                           {
  1839     0354  0838               	movf	_timeouterror,w
  1840     0355  1D03               	btfss	3,2
  1841     0356  2B58               	goto	u2631
  1842     0357  2B59               	goto	u2630
  1843     0358                     u2631:
  1844     0358  2B8A               	goto	l2025
  1845     0359                     u2630:
  1846     0359                     l2011:
  1847     0359  083A               	movf	_voltageerror,w
  1848     035A  1D03               	btfss	3,2
  1849     035B  2B5D               	goto	u2641
  1850     035C  2B5E               	goto	u2640
  1851     035D                     u2641:
  1852     035D  2B8A               	goto	l2025
  1853     035E                     u2640:
  1854     035E                     l2013:
  1855     035E  0839               	movf	_dryrunerror,w
  1856     035F  1D03               	btfss	3,2
  1857     0360  2B62               	goto	u2651
  1858     0361  2B63               	goto	u2650
  1859     0362                     u2651:
  1860     0362  2B8A               	goto	l2025
  1861     0363                     u2650:
  1862     0363                     l2015:
  1863     0363  0837               	movf	_motorrunning,w
  1864     0364  1D03               	btfss	3,2
  1865     0365  2B67               	goto	u2661
  1866     0366  2B68               	goto	u2660
  1867     0367                     u2661:
  1868     0367  2B8A               	goto	l2025
  1869     0368                     u2660:
  1870     0368                     l2017:
  1871                           
  1872                           ;main.c: 251:         PORTCbits.RC3 = 1;
  1873     0368  1587               	bsf	7,3	;volatile
  1874     0369                     l2019:
  1875                           
  1876                           ;main.c: 252:         motorstarttime = seconds_counter;
  1877     0369  082F               	movf	_seconds_counter+3,w	;volatile
  1878     036A  1683               	bsf	3,5	;RP0=1, select bank1
  1879     036B  1303               	bcf	3,6	;RP1=0, select bank1
  1880     036C  00AB               	movwf	(_motorstarttime+3)^(0+128)
  1881     036D  1283               	bcf	3,5	;RP0=0, select bank0
  1882     036E  1303               	bcf	3,6	;RP1=0, select bank0
  1883     036F  082E               	movf	_seconds_counter+2,w	;volatile
  1884     0370  1683               	bsf	3,5	;RP0=1, select bank1
  1885     0371  1303               	bcf	3,6	;RP1=0, select bank1
  1886     0372  00AA               	movwf	(_motorstarttime+2)^(0+128)
  1887     0373  1283               	bcf	3,5	;RP0=0, select bank0
  1888     0374  1303               	bcf	3,6	;RP1=0, select bank0
  1889     0375  082D               	movf	_seconds_counter+1,w	;volatile
  1890     0376  1683               	bsf	3,5	;RP0=1, select bank1
  1891     0377  1303               	bcf	3,6	;RP1=0, select bank1
  1892     0378  00A9               	movwf	(_motorstarttime+1)^(0+128)
  1893     0379  1283               	bcf	3,5	;RP0=0, select bank0
  1894     037A  1303               	bcf	3,6	;RP1=0, select bank0
  1895     037B  082C               	movf	_seconds_counter,w	;volatile
  1896     037C  1683               	bsf	3,5	;RP0=1, select bank1
  1897     037D  1303               	bcf	3,6	;RP1=0, select bank1
  1898     037E  00A8               	movwf	_motorstarttime^(0+128)
  1899     037F                     l2021:
  1900                           
  1901                           ;main.c: 253:         motorrunning = 1;
  1902     037F  3001               	movlw	1
  1903     0380  1283               	bcf	3,5	;RP0=0, select bank0
  1904     0381  1303               	bcf	3,6	;RP1=0, select bank0
  1905     0382  00B7               	movwf	_motorrunning
  1906     0383                     l2023:
  1907                           
  1908                           ;main.c: 254:         trigger_buzzer(1000);
  1909     0383  30E8               	movlw	232
  1910     0384  00F3               	movwf	trigger_buzzer@duration_seconds
  1911     0385  3003               	movlw	3
  1912     0386  00F4               	movwf	trigger_buzzer@duration_seconds+1
  1913     0387  158A  25F1  118A   	fcall	_trigger_buzzer
  1914     038A                     l2025:
  1915                           
  1916                           ;main.c: 256:       if (motorrunning) {
  1917     038A  1283               	bcf	3,5	;RP0=0, select bank0
  1918     038B  1303               	bcf	3,6	;RP1=0, select bank0
  1919     038C  0837               	movf	_motorrunning,w
  1920     038D  1903               	btfsc	3,2
  1921     038E  2B90               	goto	u2671
  1922     038F  2B91               	goto	u2670
  1923     0390                     u2671:
  1924     0390  2C6C               	goto	l2055
  1925     0391                     u2670:
  1926     0391                     l2027:
  1927                           
  1928                           ;main.c: 257:         if (seconds_counter - motorstarttime >= maxruntime[4]) {
  1929     0391  1683               	bsf	3,5	;RP0=1, select bank1
  1930     0392  1303               	bcf	3,6	;RP1=0, select bank1
  1931     0393  0846               	movf	(_maxruntime^(0+128)+8),w
  1932     0394  00CE               	movwf	??_main^(0+128)
  1933     0395  0847               	movf	((_maxruntime+1)^(0+128)+8),w
  1934     0396  00CF               	movwf	(??_main^(0+128)+1)
  1935     0397  01D0               	clrf	(??_main^(0+128)+2)
  1936     0398  01D1               	clrf	(??_main^(0+128)+3)
  1937     0399  1283               	bcf	3,5	;RP0=0, select bank0
  1938     039A  1303               	bcf	3,6	;RP1=0, select bank0
  1939     039B  082C               	movf	_seconds_counter,w	;volatile
  1940     039C  1683               	bsf	3,5	;RP0=1, select bank1
  1941     039D  1303               	bcf	3,6	;RP1=0, select bank1
  1942     039E  00D2               	movwf	(??_main+4)^(0+128)
  1943     039F  1283               	bcf	3,5	;RP0=0, select bank0
  1944     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1945     03A1  082D               	movf	_seconds_counter+1,w	;volatile
  1946     03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1947     03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1948     03A4  00D3               	movwf	((??_main+4)^(0+128)+1)
  1949     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1950     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1951     03A7  082E               	movf	_seconds_counter+2,w	;volatile
  1952     03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1953     03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1954     03AA  00D4               	movwf	((??_main+4)^(0+128)+2)
  1955     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1956     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1957     03AD  082F               	movf	_seconds_counter+3,w	;volatile
  1958     03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1959     03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1960     03B0  00D5               	movwf	((??_main+4)^(0+128)+3)
  1961     03B1  0828               	movf	_motorstarttime^(0+128),w
  1962     03B2  02D2               	subwf	(??_main+4)^(0+128),f
  1963     03B3  0829               	movf	(_motorstarttime+1)^(0+128),w
  1964     03B4  1C03               	skipc
  1965     03B5  0F29               	incfsz	(_motorstarttime+1)^(0+128),w
  1966     03B6  2BB8               	goto	u2681
  1967     03B7  2BB9               	goto	u2682
  1968     03B8                     u2681:
  1969     03B8  02D3               	subwf	((??_main+4)^(0+128)+1),f
  1970     03B9                     u2682:
  1971     03B9  082A               	movf	(_motorstarttime+2)^(0+128),w
  1972     03BA  1C03               	skipc
  1973     03BB  0F2A               	incfsz	(_motorstarttime+2)^(0+128),w
  1974     03BC  2BBE               	goto	u2683
  1975     03BD  2BBF               	goto	u2684
  1976     03BE                     u2683:
  1977     03BE  02D4               	subwf	((??_main+4)^(0+128)+2),f
  1978     03BF                     u2684:
  1979     03BF  082B               	movf	(_motorstarttime+3)^(0+128),w
  1980     03C0  1C03               	skipc
  1981     03C1  0F2B               	incfsz	(_motorstarttime+3)^(0+128),w
  1982     03C2  2BC4               	goto	u2685
  1983     03C3  2BC5               	goto	u2686
  1984     03C4                     u2685:
  1985     03C4  02D5               	subwf	((??_main+4)^(0+128)+3),f
  1986     03C5                     u2686:
  1987     03C5  0851               	movf	(??_main+3)^(0+128),w
  1988     03C6  0255               	subwf	(??_main+7)^(0+128),w
  1989     03C7  1D03               	skipz
  1990     03C8  2BD3               	goto	u2695
  1991     03C9  0850               	movf	(??_main+2)^(0+128),w
  1992     03CA  0254               	subwf	(??_main+6)^(0+128),w
  1993     03CB  1D03               	skipz
  1994     03CC  2BD3               	goto	u2695
  1995     03CD  084F               	movf	(??_main+1)^(0+128),w
  1996     03CE  0253               	subwf	(??_main+5)^(0+128),w
  1997     03CF  1D03               	skipz
  1998     03D0  2BD3               	goto	u2695
  1999     03D1  084E               	movf	??_main^(0+128),w
  2000     03D2  0252               	subwf	(??_main+4)^(0+128),w
  2001     03D3                     u2695:
  2002     03D3  1C03               	skipc
  2003     03D4  2BD6               	goto	u2691
  2004     03D5  2BD7               	goto	u2690
  2005     03D6                     u2691:
  2006     03D6  2BDB               	goto	l2031
  2007     03D7                     u2690:
  2008     03D7                     l2029:
  2009                           
  2010                           ;main.c: 258:           timeouterror = 1;
  2011     03D7  3001               	movlw	1
  2012     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2013     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2014     03DA  00B8               	movwf	_timeouterror
  2015     03DB                     l2031:
  2016                           
  2017                           ;main.c: 260:         if (!flowactive) {
  2018     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2019     03DC  0834               	movf	_flowactive,w
  2020     03DD  1D03               	btfss	3,2
  2021     03DE  2BE0               	goto	u2701
  2022     03DF  2BE1               	goto	u2700
  2023     03E0                     u2701:
  2024     03E0  2C55               	goto	l2045
  2025     03E1                     u2700:
  2026     03E1                     l2033:
  2027                           
  2028                           ;main.c: 261:           if (seconds_counter % 2 == 0) {
  2029     03E1  182C               	btfsc	_seconds_counter,0	;volatile
  2030     03E2  2BE4               	goto	u2711
  2031     03E3  2BE5               	goto	u2710
  2032     03E4                     u2711:
  2033     03E4  2BE7               	goto	l214
  2034     03E5                     u2710:
  2035     03E5                     l2035:
  2036                           
  2037                           ;main.c: 263:             PORTAbits.RA2 = 1;
  2038     03E5  1505               	bsf	5,2	;volatile
  2039                           
  2040                           ;main.c: 264:           } else {
  2041     03E6  2BE8               	goto	l2037
  2042     03E7                     l214:
  2043                           
  2044                           ;main.c: 266:             PORTAbits.RA2 = 0;
  2045     03E7  1105               	bcf	5,2	;volatile
  2046     03E8                     l2037:
  2047                           
  2048                           ;main.c: 268:           if (lastdryruncheck == 0) {
  2049     03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2050     03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2051     03EA  082F               	movf	(_lastdryruncheck+3)^(0+128),w
  2052     03EB  042E               	iorwf	(_lastdryruncheck+2)^(0+128),w
  2053     03EC  042D               	iorwf	(_lastdryruncheck+1)^(0+128),w
  2054     03ED  042C               	iorwf	_lastdryruncheck^(0+128),w
  2055     03EE  1D03               	skipz
  2056     03EF  2BF1               	goto	u2721
  2057     03F0  2BF2               	goto	u2720
  2058     03F1                     u2721:
  2059     03F1  2C0B               	goto	l2041
  2060     03F2                     u2720:
  2061     03F2                     l2039:
  2062                           
  2063                           ;main.c: 269:             lastdryruncheck = millis;
  2064     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2065     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2066     03F4  082B               	movf	_millis+3,w	;volatile
  2067     03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2068     03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2069     03F7  00AF               	movwf	(_lastdryruncheck+3)^(0+128)
  2070     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2071     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2072     03FA  082A               	movf	_millis+2,w	;volatile
  2073     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2074     03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2075     03FD  00AE               	movwf	(_lastdryruncheck+2)^(0+128)
  2076     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2077     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2078     0400  0829               	movf	_millis+1,w	;volatile
  2079     0401  1683               	bsf	3,5	;RP0=1, select bank1
  2080     0402  1303               	bcf	3,6	;RP1=0, select bank1
  2081     0403  00AD               	movwf	(_lastdryruncheck+1)^(0+128)
  2082     0404  1283               	bcf	3,5	;RP0=0, select bank0
  2083     0405  1303               	bcf	3,6	;RP1=0, select bank0
  2084     0406  0828               	movf	_millis,w	;volatile
  2085     0407  1683               	bsf	3,5	;RP0=1, select bank1
  2086     0408  1303               	bcf	3,6	;RP1=0, select bank1
  2087     0409  00AC               	movwf	_lastdryruncheck^(0+128)
  2088                           
  2089                           ;main.c: 270:           } else if (millis - lastdryruncheck >= dryruntime) {
  2090     040A  2C6C               	goto	l2055
  2091     040B                     l2041:
  2092     040B  0838               	movf	_dryruntime^(0+128),w
  2093     040C  00CE               	movwf	??_main^(0+128)
  2094     040D  0839               	movf	(_dryruntime+1)^(0+128),w
  2095     040E  00CF               	movwf	(??_main^(0+128)+1)
  2096     040F  01D0               	clrf	(??_main^(0+128)+2)
  2097     0410  01D1               	clrf	(??_main^(0+128)+3)
  2098     0411  1283               	bcf	3,5	;RP0=0, select bank0
  2099     0412  1303               	bcf	3,6	;RP1=0, select bank0
  2100     0413  0828               	movf	_millis,w	;volatile
  2101     0414  1683               	bsf	3,5	;RP0=1, select bank1
  2102     0415  1303               	bcf	3,6	;RP1=0, select bank1
  2103     0416  00D2               	movwf	(??_main+4)^(0+128)
  2104     0417  1283               	bcf	3,5	;RP0=0, select bank0
  2105     0418  1303               	bcf	3,6	;RP1=0, select bank0
  2106     0419  0829               	movf	_millis+1,w	;volatile
  2107     041A  1683               	bsf	3,5	;RP0=1, select bank1
  2108     041B  1303               	bcf	3,6	;RP1=0, select bank1
  2109     041C  00D3               	movwf	((??_main+4)^(0+128)+1)
  2110     041D  1283               	bcf	3,5	;RP0=0, select bank0
  2111     041E  1303               	bcf	3,6	;RP1=0, select bank0
  2112     041F  082A               	movf	_millis+2,w	;volatile
  2113     0420  1683               	bsf	3,5	;RP0=1, select bank1
  2114     0421  1303               	bcf	3,6	;RP1=0, select bank1
  2115     0422  00D4               	movwf	((??_main+4)^(0+128)+2)
  2116     0423  1283               	bcf	3,5	;RP0=0, select bank0
  2117     0424  1303               	bcf	3,6	;RP1=0, select bank0
  2118     0425  082B               	movf	_millis+3,w	;volatile
  2119     0426  1683               	bsf	3,5	;RP0=1, select bank1
  2120     0427  1303               	bcf	3,6	;RP1=0, select bank1
  2121     0428  00D5               	movwf	((??_main+4)^(0+128)+3)
  2122     0429  082C               	movf	_lastdryruncheck^(0+128),w
  2123     042A  02D2               	subwf	(??_main+4)^(0+128),f
  2124     042B  082D               	movf	(_lastdryruncheck+1)^(0+128),w
  2125     042C  1C03               	skipc
  2126     042D  0F2D               	incfsz	(_lastdryruncheck+1)^(0+128),w
  2127     042E  2C30               	goto	u2731
  2128     042F  2C31               	goto	u2732
  2129     0430                     u2731:
  2130     0430  02D3               	subwf	((??_main+4)^(0+128)+1),f
  2131     0431                     u2732:
  2132     0431  082E               	movf	(_lastdryruncheck+2)^(0+128),w
  2133     0432  1C03               	skipc
  2134     0433  0F2E               	incfsz	(_lastdryruncheck+2)^(0+128),w
  2135     0434  2C36               	goto	u2733
  2136     0435  2C37               	goto	u2734
  2137     0436                     u2733:
  2138     0436  02D4               	subwf	((??_main+4)^(0+128)+2),f
  2139     0437                     u2734:
  2140     0437  082F               	movf	(_lastdryruncheck+3)^(0+128),w
  2141     0438  1C03               	skipc
  2142     0439  0F2F               	incfsz	(_lastdryruncheck+3)^(0+128),w
  2143     043A  2C3C               	goto	u2735
  2144     043B  2C3D               	goto	u2736
  2145     043C                     u2735:
  2146     043C  02D5               	subwf	((??_main+4)^(0+128)+3),f
  2147     043D                     u2736:
  2148     043D  0851               	movf	(??_main+3)^(0+128),w
  2149     043E  0255               	subwf	(??_main+7)^(0+128),w
  2150     043F  1D03               	skipz
  2151     0440  2C4B               	goto	u2745
  2152     0441  0850               	movf	(??_main+2)^(0+128),w
  2153     0442  0254               	subwf	(??_main+6)^(0+128),w
  2154     0443  1D03               	skipz
  2155     0444  2C4B               	goto	u2745
  2156     0445  084F               	movf	(??_main+1)^(0+128),w
  2157     0446  0253               	subwf	(??_main+5)^(0+128),w
  2158     0447  1D03               	skipz
  2159     0448  2C4B               	goto	u2745
  2160     0449  084E               	movf	??_main^(0+128),w
  2161     044A  0252               	subwf	(??_main+4)^(0+128),w
  2162     044B                     u2745:
  2163     044B  1C03               	skipc
  2164     044C  2C4E               	goto	u2741
  2165     044D  2C4F               	goto	u2740
  2166     044E                     u2741:
  2167     044E  2C63               	goto	l211
  2168     044F                     u2740:
  2169     044F                     l2043:
  2170                           
  2171                           ;main.c: 271:             dryrunerror = 1;
  2172     044F  3001               	movlw	1
  2173     0450  1283               	bcf	3,5	;RP0=0, select bank0
  2174     0451  1303               	bcf	3,6	;RP1=0, select bank0
  2175     0452  00B9               	movwf	_dryrunerror
  2176                           
  2177                           ;main.c: 272:             PORTAbits.RA2 = 1;
  2178     0453  1505               	bsf	5,2	;volatile
  2179     0454  2C6C               	goto	l2055
  2180     0455                     l2045:
  2181                           
  2182                           ;main.c: 275:           lastdryruncheck = 0;
  2183     0455  3000               	movlw	0
  2184     0456  1683               	bsf	3,5	;RP0=1, select bank1
  2185     0457  1303               	bcf	3,6	;RP1=0, select bank1
  2186     0458  00AF               	movwf	(_lastdryruncheck+3)^(0+128)
  2187     0459  3000               	movlw	0
  2188     045A  00AE               	movwf	(_lastdryruncheck+2)^(0+128)
  2189     045B  3000               	movlw	0
  2190     045C  00AD               	movwf	(_lastdryruncheck+1)^(0+128)
  2191     045D  3000               	movlw	0
  2192     045E  00AC               	movwf	_lastdryruncheck^(0+128)
  2193     045F                     l2047:
  2194                           
  2195                           ;main.c: 276:           PORTAbits.RA2 = 0;
  2196     045F  1283               	bcf	3,5	;RP0=0, select bank0
  2197     0460  1303               	bcf	3,6	;RP1=0, select bank0
  2198     0461  1105               	bcf	5,2	;volatile
  2199     0462  2C6C               	goto	l2055
  2200     0463                     l211:	
  2201                           ;main.c: 284:       }
  2202                           
  2203                           
  2204                           ;main.c: 285:     } else {
  2205     0463  2C6C               	goto	l2055
  2206     0464                     l2049:
  2207                           
  2208                           ;main.c: 286:       if (motorrunning) {
  2209     0464  0837               	movf	_motorrunning,w
  2210     0465  1903               	btfsc	3,2
  2211     0466  2C68               	goto	u2751
  2212     0467  2C69               	goto	u2750
  2213     0468                     u2751:
  2214     0468  2C6C               	goto	l2055
  2215     0469                     u2750:
  2216     0469                     l2051:
  2217                           
  2218                           ;main.c: 287:         motorrunning = 0;
  2219     0469  01B7               	clrf	_motorrunning
  2220                           
  2221                           ;main.c: 288:         mannualon = 0;
  2222     046A  01BB               	clrf	_mannualon
  2223     046B                     l2053:
  2224                           
  2225                           ;main.c: 289:         PORTCbits.RC3 = 0;
  2226     046B  1187               	bcf	7,3	;volatile
  2227     046C                     l2055:
  2228                           
  2229                           ;main.c: 292:     if (timeouterror) {
  2230     046C  1283               	bcf	3,5	;RP0=0, select bank0
  2231     046D  0838               	movf	_timeouterror,w
  2232     046E  1903               	btfsc	3,2
  2233     046F  2C71               	goto	u2761
  2234     0470  2C72               	goto	u2760
  2235     0471                     u2761:
  2236     0471  2C73               	goto	l2059
  2237     0472                     u2760:
  2238     0472                     l2057:
  2239                           
  2240                           ;main.c: 293:       motorrunning = 0;
  2241     0472  01B7               	clrf	_motorrunning
  2242     0473                     l2059:
  2243                           
  2244                           ;main.c: 295:     if (dryrunerror) {
  2245     0473  0839               	movf	_dryrunerror,w
  2246     0474  1903               	btfsc	3,2
  2247     0475  2C77               	goto	u2771
  2248     0476  2C78               	goto	u2770
  2249     0477                     u2771:
  2250     0477  2C79               	goto	l2063
  2251     0478                     u2770:
  2252     0478                     l2061:
  2253                           
  2254                           ;main.c: 296:       motorrunning = 0;
  2255     0478  01B7               	clrf	_motorrunning
  2256     0479                     l2063:
  2257                           
  2258                           ;main.c: 298:     if (voltageerror) {
  2259     0479  083A               	movf	_voltageerror,w
  2260     047A  1903               	btfsc	3,2
  2261     047B  2C7D               	goto	u2781
  2262     047C  2C7E               	goto	u2780
  2263     047D                     u2781:
  2264     047D  2CED               	goto	l2077
  2265     047E                     u2780:
  2266     047E                     l2065:
  2267                           
  2268                           ;main.c: 299:       if (lastvoltageerror == 0) {
  2269     047E  0827               	movf	_lastvoltageerror+3,w
  2270     047F  0426               	iorwf	_lastvoltageerror+2,w
  2271     0480  0425               	iorwf	_lastvoltageerror+1,w
  2272     0481  0424               	iorwf	_lastvoltageerror,w
  2273     0482  1D03               	skipz
  2274     0483  2C85               	goto	u2791
  2275     0484  2C86               	goto	u2790
  2276     0485                     u2791:
  2277     0485  2C8F               	goto	l2069
  2278     0486                     u2790:
  2279     0486                     l2067:
  2280                           
  2281                           ;main.c: 300:         lastvoltageerror = seconds_counter;
  2282     0486  082F               	movf	_seconds_counter+3,w	;volatile
  2283     0487  00A7               	movwf	_lastvoltageerror+3
  2284     0488  082E               	movf	_seconds_counter+2,w	;volatile
  2285     0489  00A6               	movwf	_lastvoltageerror+2
  2286     048A  082D               	movf	_seconds_counter+1,w	;volatile
  2287     048B  00A5               	movwf	_lastvoltageerror+1
  2288     048C  082C               	movf	_seconds_counter,w	;volatile
  2289     048D  00A4               	movwf	_lastvoltageerror
  2290                           
  2291                           ;main.c: 301:       } else if (seconds_counter - lastvoltageerror >= maxvoltageerrortime
      +                          ) {
  2292     048E  2CE9               	goto	l2075
  2293     048F                     l2069:
  2294     048F  082C               	movf	_seconds_counter,w	;volatile
  2295     0490  1683               	bsf	3,5	;RP0=1, select bank1
  2296     0491  1303               	bcf	3,6	;RP1=0, select bank1
  2297     0492  00CE               	movwf	??_main^(0+128)
  2298     0493  1283               	bcf	3,5	;RP0=0, select bank0
  2299     0494  1303               	bcf	3,6	;RP1=0, select bank0
  2300     0495  082D               	movf	_seconds_counter+1,w	;volatile
  2301     0496  1683               	bsf	3,5	;RP0=1, select bank1
  2302     0497  1303               	bcf	3,6	;RP1=0, select bank1
  2303     0498  00CF               	movwf	(??_main^(0+128)+1)
  2304     0499  1283               	bcf	3,5	;RP0=0, select bank0
  2305     049A  1303               	bcf	3,6	;RP1=0, select bank0
  2306     049B  082E               	movf	_seconds_counter+2,w	;volatile
  2307     049C  1683               	bsf	3,5	;RP0=1, select bank1
  2308     049D  1303               	bcf	3,6	;RP1=0, select bank1
  2309     049E  00D0               	movwf	(??_main^(0+128)+2)
  2310     049F  1283               	bcf	3,5	;RP0=0, select bank0
  2311     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2312     04A1  082F               	movf	_seconds_counter+3,w	;volatile
  2313     04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2314     04A3  1303               	bcf	3,6	;RP1=0, select bank1
  2315     04A4  00D1               	movwf	(??_main^(0+128)+3)
  2316     04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2317     04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2318     04A7  0824               	movf	_lastvoltageerror,w
  2319     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  2320     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  2321     04AA  02CE               	subwf	??_main^(0+128),f
  2322     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2323     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2324     04AD  0825               	movf	_lastvoltageerror+1,w
  2325     04AE  1C03               	skipc
  2326     04AF  0F25               	incfsz	_lastvoltageerror+1,w
  2327     04B0  2CB2               	goto	u2801
  2328     04B1  2CB5               	goto	u2802
  2329     04B2                     u2801:
  2330     04B2  1683               	bsf	3,5	;RP0=1, select bank1
  2331     04B3  1303               	bcf	3,6	;RP1=0, select bank1
  2332     04B4  02CF               	subwf	(??_main^(0+128)+1),f
  2333     04B5                     u2802:
  2334     04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2335     04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2336     04B7  0826               	movf	_lastvoltageerror+2,w
  2337     04B8  1C03               	skipc
  2338     04B9  0F26               	incfsz	_lastvoltageerror+2,w
  2339     04BA  2CBC               	goto	u2803
  2340     04BB  2CBF               	goto	u2804
  2341     04BC                     u2803:
  2342     04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2343     04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2344     04BE  02D0               	subwf	(??_main^(0+128)+2),f
  2345     04BF                     u2804:
  2346     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2347     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2348     04C1  0827               	movf	_lastvoltageerror+3,w
  2349     04C2  1C03               	skipc
  2350     04C3  0F27               	incfsz	_lastvoltageerror+3,w
  2351     04C4  2CC6               	goto	u2805
  2352     04C5  2CC9               	goto	u2806
  2353     04C6                     u2805:
  2354     04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2355     04C7  1303               	bcf	3,6	;RP1=0, select bank1
  2356     04C8  02D1               	subwf	(??_main^(0+128)+3),f
  2357     04C9                     u2806:
  2358     04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2359     04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2360     04CB  1683               	bsf	3,5	;RP0=1, select bank1
  2361     04CC  1303               	bcf	3,6	;RP1=0, select bank1
  2362     04CD  0851               	movf	(??_main^(0+128)+3),w
  2363     04CE  1D03               	btfss	3,2
  2364     04CF  2CDE               	goto	u2810
  2365     04D0  0850               	movf	(??_main^(0+128)+2),w
  2366     04D1  1D03               	btfss	3,2
  2367     04D2  2CDE               	goto	u2810
  2368     04D3  084F               	movf	(??_main^(0+128)+1),w
  2369     04D4  1D03               	btfss	3,2
  2370     04D5  2CDE               	goto	u2810
  2371     04D6  300A               	movlw	10
  2372     04D7  024E               	subwf	??_main^(0+128),w
  2373     04D8  1D03               	skipz
  2374     04D9  2CDA               	goto	u2813
  2375     04DA                     u2813:
  2376     04DA  1C03               	btfss	3,0
  2377     04DB  2CDD               	goto	u2811
  2378     04DC  2CDE               	goto	u2810
  2379     04DD                     u2811:
  2380     04DD  2CE9               	goto	l2075
  2381     04DE                     u2810:
  2382     04DE                     l2071:
  2383                           
  2384                           ;main.c: 302:         voltageerror = 0;
  2385     04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2386     04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2387     04E0  01BA               	clrf	_voltageerror
  2388     04E1                     l2073:
  2389                           
  2390                           ;main.c: 303:         lastvoltageerror = 0;
  2391     04E1  3000               	movlw	0
  2392     04E2  00A7               	movwf	_lastvoltageerror+3
  2393     04E3  3000               	movlw	0
  2394     04E4  00A6               	movwf	_lastvoltageerror+2
  2395     04E5  3000               	movlw	0
  2396     04E6  00A5               	movwf	_lastvoltageerror+1
  2397     04E7  3000               	movlw	0
  2398     04E8  00A4               	movwf	_lastvoltageerror
  2399     04E9                     l2075:
  2400                           
  2401                           ;main.c: 306:       motorrunning = 0;
  2402     04E9  1283               	bcf	3,5	;RP0=0, select bank0
  2403     04EA  1303               	bcf	3,6	;RP1=0, select bank0
  2404     04EB  01B7               	clrf	_motorrunning
  2405                           
  2406                           ;main.c: 307:     }else if (lastvoltageerror !=0 && (seconds_counter - lastvoltageerror 
      +                          >= maxvoltageerrortime)){
  2407     04EC  2D4E               	goto	l2083
  2408     04ED                     l2077:
  2409     04ED  0827               	movf	_lastvoltageerror+3,w
  2410     04EE  0426               	iorwf	_lastvoltageerror+2,w
  2411     04EF  0425               	iorwf	_lastvoltageerror+1,w
  2412     04F0  0424               	iorwf	_lastvoltageerror,w
  2413     04F1  1903               	skipnz
  2414     04F2  2CF4               	goto	u2821
  2415     04F3  2CF5               	goto	u2820
  2416     04F4                     u2821:
  2417     04F4  2D4E               	goto	l2083
  2418     04F5                     u2820:
  2419     04F5                     l2079:
  2420     04F5  082C               	movf	_seconds_counter,w	;volatile
  2421     04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2422     04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2423     04F8  00CE               	movwf	??_main^(0+128)
  2424     04F9  1283               	bcf	3,5	;RP0=0, select bank0
  2425     04FA  1303               	bcf	3,6	;RP1=0, select bank0
  2426     04FB  082D               	movf	_seconds_counter+1,w	;volatile
  2427     04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2428     04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2429     04FE  00CF               	movwf	(??_main^(0+128)+1)
  2430     04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2431     0500  1303               	bcf	3,6	;RP1=0, select bank0
  2432     0501  082E               	movf	_seconds_counter+2,w	;volatile
  2433     0502  1683               	bsf	3,5	;RP0=1, select bank1
  2434     0503  1303               	bcf	3,6	;RP1=0, select bank1
  2435     0504  00D0               	movwf	(??_main^(0+128)+2)
  2436     0505  1283               	bcf	3,5	;RP0=0, select bank0
  2437     0506  1303               	bcf	3,6	;RP1=0, select bank0
  2438     0507  082F               	movf	_seconds_counter+3,w	;volatile
  2439     0508  1683               	bsf	3,5	;RP0=1, select bank1
  2440     0509  1303               	bcf	3,6	;RP1=0, select bank1
  2441     050A  00D1               	movwf	(??_main^(0+128)+3)
  2442     050B  1283               	bcf	3,5	;RP0=0, select bank0
  2443     050C  1303               	bcf	3,6	;RP1=0, select bank0
  2444     050D  0824               	movf	_lastvoltageerror,w
  2445     050E  1683               	bsf	3,5	;RP0=1, select bank1
  2446     050F  1303               	bcf	3,6	;RP1=0, select bank1
  2447     0510  02CE               	subwf	??_main^(0+128),f
  2448     0511  1283               	bcf	3,5	;RP0=0, select bank0
  2449     0512  1303               	bcf	3,6	;RP1=0, select bank0
  2450     0513  0825               	movf	_lastvoltageerror+1,w
  2451     0514  1C03               	skipc
  2452     0515  0F25               	incfsz	_lastvoltageerror+1,w
  2453     0516  2D18               	goto	u2831
  2454     0517  2D1B               	goto	u2832
  2455     0518                     u2831:
  2456     0518  1683               	bsf	3,5	;RP0=1, select bank1
  2457     0519  1303               	bcf	3,6	;RP1=0, select bank1
  2458     051A  02CF               	subwf	(??_main^(0+128)+1),f
  2459     051B                     u2832:
  2460     051B  1283               	bcf	3,5	;RP0=0, select bank0
  2461     051C  1303               	bcf	3,6	;RP1=0, select bank0
  2462     051D  0826               	movf	_lastvoltageerror+2,w
  2463     051E  1C03               	skipc
  2464     051F  0F26               	incfsz	_lastvoltageerror+2,w
  2465     0520  2D22               	goto	u2833
  2466     0521  2D25               	goto	u2834
  2467     0522                     u2833:
  2468     0522  1683               	bsf	3,5	;RP0=1, select bank1
  2469     0523  1303               	bcf	3,6	;RP1=0, select bank1
  2470     0524  02D0               	subwf	(??_main^(0+128)+2),f
  2471     0525                     u2834:
  2472     0525  1283               	bcf	3,5	;RP0=0, select bank0
  2473     0526  1303               	bcf	3,6	;RP1=0, select bank0
  2474     0527  0827               	movf	_lastvoltageerror+3,w
  2475     0528  1C03               	skipc
  2476     0529  0F27               	incfsz	_lastvoltageerror+3,w
  2477     052A  2D2C               	goto	u2835
  2478     052B  2D2F               	goto	u2836
  2479     052C                     u2835:
  2480     052C  1683               	bsf	3,5	;RP0=1, select bank1
  2481     052D  1303               	bcf	3,6	;RP1=0, select bank1
  2482     052E  02D1               	subwf	(??_main^(0+128)+3),f
  2483     052F                     u2836:
  2484     052F  1283               	bcf	3,5	;RP0=0, select bank0
  2485     0530  1303               	bcf	3,6	;RP1=0, select bank0
  2486     0531  1683               	bsf	3,5	;RP0=1, select bank1
  2487     0532  1303               	bcf	3,6	;RP1=0, select bank1
  2488     0533  0851               	movf	(??_main^(0+128)+3),w
  2489     0534  1D03               	btfss	3,2
  2490     0535  2D44               	goto	u2840
  2491     0536  0850               	movf	(??_main^(0+128)+2),w
  2492     0537  1D03               	btfss	3,2
  2493     0538  2D44               	goto	u2840
  2494     0539  084F               	movf	(??_main^(0+128)+1),w
  2495     053A  1D03               	btfss	3,2
  2496     053B  2D44               	goto	u2840
  2497     053C  300A               	movlw	10
  2498     053D  024E               	subwf	??_main^(0+128),w
  2499     053E  1D03               	skipz
  2500     053F  2D40               	goto	u2843
  2501     0540                     u2843:
  2502     0540  1C03               	btfss	3,0
  2503     0541  2D43               	goto	u2841
  2504     0542  2D44               	goto	u2840
  2505     0543                     u2841:
  2506     0543  2D4E               	goto	l2083
  2507     0544                     u2840:
  2508     0544                     l2081:
  2509                           
  2510                           ;main.c: 308:       lastvoltageerror = 0;
  2511     0544  3000               	movlw	0
  2512     0545  1283               	bcf	3,5	;RP0=0, select bank0
  2513     0546  1303               	bcf	3,6	;RP1=0, select bank0
  2514     0547  00A7               	movwf	_lastvoltageerror+3
  2515     0548  3000               	movlw	0
  2516     0549  00A6               	movwf	_lastvoltageerror+2
  2517     054A  3000               	movlw	0
  2518     054B  00A5               	movwf	_lastvoltageerror+1
  2519     054C  3000               	movlw	0
  2520     054D  00A4               	movwf	_lastvoltageerror
  2521     054E                     l2083:
  2522                           
  2523                           ;main.c: 310:     if (!motorrunning) {
  2524     054E  1283               	bcf	3,5	;RP0=0, select bank0
  2525     054F  1303               	bcf	3,6	;RP1=0, select bank0
  2526     0550  0837               	movf	_motorrunning,w
  2527     0551  1D03               	btfss	3,2
  2528     0552  2D54               	goto	u2851
  2529     0553  2D55               	goto	u2850
  2530     0554                     u2851:
  2531     0554  2D82               	goto	l230
  2532     0555                     u2850:
  2533     0555                     l2085:
  2534                           
  2535                           ;main.c: 311:       if (voltage > maxvoltagelimit || voltage < minvoltagelimit) {
  2536     0555  0840               	movf	_voltage,w
  2537     0556  1683               	bsf	3,5	;RP0=1, select bank1
  2538     0557  1303               	bcf	3,6	;RP1=0, select bank1
  2539     0558  00CE               	movwf	??_main^(0+128)
  2540     0559  01CF               	clrf	(??_main^(0+128)+1)
  2541     055A  084F               	movf	(??_main+1)^(0+128),w
  2542     055B  1283               	bcf	3,5	;RP0=0, select bank0
  2543     055C  1303               	bcf	3,6	;RP1=0, select bank0
  2544     055D  0267               	subwf	_maxvoltagelimit+1,w
  2545     055E  1D03               	skipz
  2546     055F  2D66               	goto	u2865
  2547     0560  1683               	bsf	3,5	;RP0=1, select bank1
  2548     0561  1303               	bcf	3,6	;RP1=0, select bank1
  2549     0562  084E               	movf	??_main^(0+128),w
  2550     0563  1283               	bcf	3,5	;RP0=0, select bank0
  2551     0564  1303               	bcf	3,6	;RP1=0, select bank0
  2552     0565  0266               	subwf	_maxvoltagelimit,w
  2553     0566                     u2865:
  2554     0566  1C03               	skipc
  2555     0567  2D69               	goto	u2861
  2556     0568  2D6A               	goto	u2860
  2557     0569                     u2861:
  2558     0569  2D7B               	goto	l233
  2559     056A                     u2860:
  2560     056A                     l2087:
  2561     056A  0840               	movf	_voltage,w
  2562     056B  1683               	bsf	3,5	;RP0=1, select bank1
  2563     056C  1303               	bcf	3,6	;RP1=0, select bank1
  2564     056D  00CE               	movwf	??_main^(0+128)
  2565     056E  1283               	bcf	3,5	;RP0=0, select bank0
  2566     056F  1303               	bcf	3,6	;RP1=0, select bank0
  2567     0570  0869               	movf	_minvoltagelimit+1,w
  2568     0571  1D03               	skipz
  2569     0572  2D77               	goto	u2875
  2570     0573  0868               	movf	_minvoltagelimit,w
  2571     0574  1683               	bsf	3,5	;RP0=1, select bank1
  2572     0575  1303               	bcf	3,6	;RP1=0, select bank1
  2573     0576  024E               	subwf	??_main^(0+128),w
  2574     0577                     u2875:
  2575     0577  1803               	skipnc
  2576     0578  2D7A               	goto	u2871
  2577     0579  2D7B               	goto	u2870
  2578     057A                     u2871:
  2579     057A  2D7E               	goto	l231
  2580     057B                     u2870:
  2581     057B                     l233:
  2582                           
  2583                           ;main.c: 312:           voltageerror = 1;
  2584     057B  3001               	movlw	1
  2585     057C  1283               	bcf	3,5	;RP0=0, select bank0
  2586     057D  00BA               	movwf	_voltageerror
  2587     057E                     l231:	
  2588                           ;main.c: 313:         }
  2589                           
  2590                           
  2591                           ;main.c: 314:       PORTCbits.RC3 = 0;
  2592     057E  1283               	bcf	3,5	;RP0=0, select bank0
  2593     057F  1187               	bcf	7,3	;volatile
  2594                           
  2595                           ;main.c: 315:       PORTAbits.RA1 = 0;
  2596     0580  1085               	bcf	5,1	;volatile
  2597                           
  2598                           ;main.c: 316:     } else {
  2599     0581  2DDF               	goto	l2095
  2600     0582                     l230:
  2601                           
  2602                           ;main.c: 317:       PORTAbits.RA1 = 1;
  2603     0582  1485               	bsf	5,1	;volatile
  2604                           
  2605                           ;main.c: 318:       PORTCbits.RC3 = 1;
  2606     0583  1587               	bsf	7,3	;volatile
  2607     0584                     l2089:
  2608                           
  2609                           ;main.c: 319:       if (millis - lt >= 20000) {
  2610     0584  0828               	movf	_millis,w	;volatile
  2611     0585  1683               	bsf	3,5	;RP0=1, select bank1
  2612     0586  1303               	bcf	3,6	;RP1=0, select bank1
  2613     0587  00CE               	movwf	??_main^(0+128)
  2614     0588  1283               	bcf	3,5	;RP0=0, select bank0
  2615     0589  1303               	bcf	3,6	;RP1=0, select bank0
  2616     058A  0829               	movf	_millis+1,w	;volatile
  2617     058B  1683               	bsf	3,5	;RP0=1, select bank1
  2618     058C  1303               	bcf	3,6	;RP1=0, select bank1
  2619     058D  00CF               	movwf	(??_main^(0+128)+1)
  2620     058E  1283               	bcf	3,5	;RP0=0, select bank0
  2621     058F  1303               	bcf	3,6	;RP1=0, select bank0
  2622     0590  082A               	movf	_millis+2,w	;volatile
  2623     0591  1683               	bsf	3,5	;RP0=1, select bank1
  2624     0592  1303               	bcf	3,6	;RP1=0, select bank1
  2625     0593  00D0               	movwf	(??_main^(0+128)+2)
  2626     0594  1283               	bcf	3,5	;RP0=0, select bank0
  2627     0595  1303               	bcf	3,6	;RP1=0, select bank0
  2628     0596  082B               	movf	_millis+3,w	;volatile
  2629     0597  1683               	bsf	3,5	;RP0=1, select bank1
  2630     0598  1303               	bcf	3,6	;RP1=0, select bank1
  2631     0599  00D1               	movwf	(??_main^(0+128)+3)
  2632     059A  0820               	movf	_lt^(0+128),w
  2633     059B  02CE               	subwf	??_main^(0+128),f
  2634     059C  0821               	movf	(_lt+1)^(0+128),w
  2635     059D  1C03               	skipc
  2636     059E  0F21               	incfsz	(_lt+1)^(0+128),w
  2637     059F  2DA1               	goto	u2881
  2638     05A0  2DA2               	goto	u2882
  2639     05A1                     u2881:
  2640     05A1  02CF               	subwf	(??_main^(0+128)+1),f
  2641     05A2                     u2882:
  2642     05A2  0822               	movf	(_lt+2)^(0+128),w
  2643     05A3  1C03               	skipc
  2644     05A4  0F22               	incfsz	(_lt+2)^(0+128),w
  2645     05A5  2DA7               	goto	u2883
  2646     05A6  2DA8               	goto	u2884
  2647     05A7                     u2883:
  2648     05A7  02D0               	subwf	(??_main^(0+128)+2),f
  2649     05A8                     u2884:
  2650     05A8  0823               	movf	(_lt+3)^(0+128),w
  2651     05A9  1C03               	skipc
  2652     05AA  0F23               	incfsz	(_lt+3)^(0+128),w
  2653     05AB  2DAD               	goto	u2885
  2654     05AC  2DAE               	goto	u2886
  2655     05AD                     u2885:
  2656     05AD  02D1               	subwf	(??_main^(0+128)+3),f
  2657     05AE                     u2886:
  2658     05AE  0851               	movf	(??_main^(0+128)+3),w
  2659     05AF  1D03               	btfss	3,2
  2660     05B0  2DC0               	goto	u2890
  2661     05B1  0850               	movf	(??_main^(0+128)+2),w
  2662     05B2  1D03               	btfss	3,2
  2663     05B3  2DC0               	goto	u2890
  2664     05B4  304E               	movlw	78
  2665     05B5  024F               	subwf	(??_main^(0+128)+1),w
  2666     05B6  1D03               	skipz
  2667     05B7  2DBC               	goto	u2893
  2668     05B8  3020               	movlw	32
  2669     05B9  024E               	subwf	??_main^(0+128),w
  2670     05BA  1D03               	skipz
  2671     05BB  2DBC               	goto	u2893
  2672     05BC                     u2893:
  2673     05BC  1C03               	btfss	3,0
  2674     05BD  2DBF               	goto	u2891
  2675     05BE  2DC0               	goto	u2890
  2676     05BF                     u2891:
  2677     05BF  2DDF               	goto	l2095
  2678     05C0                     u2890:
  2679     05C0                     l2091:
  2680                           
  2681                           ;main.c: 320:         lt = millis;
  2682     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2683     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2684     05C2  082B               	movf	_millis+3,w	;volatile
  2685     05C3  1683               	bsf	3,5	;RP0=1, select bank1
  2686     05C4  1303               	bcf	3,6	;RP1=0, select bank1
  2687     05C5  00A3               	movwf	(_lt+3)^(0+128)
  2688     05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2689     05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2690     05C8  082A               	movf	_millis+2,w	;volatile
  2691     05C9  1683               	bsf	3,5	;RP0=1, select bank1
  2692     05CA  1303               	bcf	3,6	;RP1=0, select bank1
  2693     05CB  00A2               	movwf	(_lt+2)^(0+128)
  2694     05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2695     05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2696     05CE  0829               	movf	_millis+1,w	;volatile
  2697     05CF  1683               	bsf	3,5	;RP0=1, select bank1
  2698     05D0  1303               	bcf	3,6	;RP1=0, select bank1
  2699     05D1  00A1               	movwf	(_lt+1)^(0+128)
  2700     05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2701     05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2702     05D4  0828               	movf	_millis,w	;volatile
  2703     05D5  1683               	bsf	3,5	;RP0=1, select bank1
  2704     05D6  1303               	bcf	3,6	;RP1=0, select bank1
  2705     05D7  00A0               	movwf	_lt^(0+128)
  2706     05D8                     l2093:
  2707                           
  2708                           ;main.c: 322:         trigger_buzzer(200);
  2709     05D8  30C8               	movlw	200
  2710     05D9  00F3               	movwf	trigger_buzzer@duration_seconds
  2711     05DA  3000               	movlw	0
  2712     05DB  00F4               	movwf	trigger_buzzer@duration_seconds+1
  2713     05DC  158A  25F1  118A   	fcall	_trigger_buzzer
  2714     05DF                     l2095:
  2715                           
  2716                           ;main.c: 327:     if ((millis - last_millis) >= 1000) {
  2717     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2718     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2719     05E1  0828               	movf	_millis,w	;volatile
  2720     05E2  1683               	bsf	3,5	;RP0=1, select bank1
  2721     05E3  1303               	bcf	3,6	;RP1=0, select bank1
  2722     05E4  00CE               	movwf	??_main^(0+128)
  2723     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2724     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2725     05E7  0829               	movf	_millis+1,w	;volatile
  2726     05E8  1683               	bsf	3,5	;RP0=1, select bank1
  2727     05E9  1303               	bcf	3,6	;RP1=0, select bank1
  2728     05EA  00CF               	movwf	(??_main^(0+128)+1)
  2729     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2730     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2731     05ED  082A               	movf	_millis+2,w	;volatile
  2732     05EE  1683               	bsf	3,5	;RP0=1, select bank1
  2733     05EF  1303               	bcf	3,6	;RP1=0, select bank1
  2734     05F0  00D0               	movwf	(??_main^(0+128)+2)
  2735     05F1  1283               	bcf	3,5	;RP0=0, select bank0
  2736     05F2  1303               	bcf	3,6	;RP1=0, select bank0
  2737     05F3  082B               	movf	_millis+3,w	;volatile
  2738     05F4  1683               	bsf	3,5	;RP0=1, select bank1
  2739     05F5  1303               	bcf	3,6	;RP1=0, select bank1
  2740     05F6  00D1               	movwf	(??_main^(0+128)+3)
  2741     05F7  0830               	movf	_last_millis^(0+128),w
  2742     05F8  02CE               	subwf	??_main^(0+128),f
  2743     05F9  0831               	movf	(_last_millis+1)^(0+128),w
  2744     05FA  1C03               	skipc
  2745     05FB  0F31               	incfsz	(_last_millis+1)^(0+128),w
  2746     05FC  2DFE               	goto	u2901
  2747     05FD  2DFF               	goto	u2902
  2748     05FE                     u2901:
  2749     05FE  02CF               	subwf	(??_main^(0+128)+1),f
  2750     05FF                     u2902:
  2751     05FF  0832               	movf	(_last_millis+2)^(0+128),w
  2752     0600  1C03               	skipc
  2753     0601  0F32               	incfsz	(_last_millis+2)^(0+128),w
  2754     0602  2E04               	goto	u2903
  2755     0603  2E05               	goto	u2904
  2756     0604                     u2903:
  2757     0604  02D0               	subwf	(??_main^(0+128)+2),f
  2758     0605                     u2904:
  2759     0605  0833               	movf	(_last_millis+3)^(0+128),w
  2760     0606  1C03               	skipc
  2761     0607  0F33               	incfsz	(_last_millis+3)^(0+128),w
  2762     0608  2E0A               	goto	u2905
  2763     0609  2E0B               	goto	u2906
  2764     060A                     u2905:
  2765     060A  02D1               	subwf	(??_main^(0+128)+3),f
  2766     060B                     u2906:
  2767     060B  0851               	movf	(??_main^(0+128)+3),w
  2768     060C  1D03               	btfss	3,2
  2769     060D  2E1D               	goto	u2910
  2770     060E  0850               	movf	(??_main^(0+128)+2),w
  2771     060F  1D03               	btfss	3,2
  2772     0610  2E1D               	goto	u2910
  2773     0611  3003               	movlw	3
  2774     0612  024F               	subwf	(??_main^(0+128)+1),w
  2775     0613  1D03               	skipz
  2776     0614  2E19               	goto	u2913
  2777     0615  30E8               	movlw	232
  2778     0616  024E               	subwf	??_main^(0+128),w
  2779     0617  1D03               	skipz
  2780     0618  2E19               	goto	u2913
  2781     0619                     u2913:
  2782     0619  1C03               	btfss	3,0
  2783     061A  2E1C               	goto	u2911
  2784     061B  2E1D               	goto	u2910
  2785     061C                     u2911:
  2786     061C  28E3               	goto	l1921
  2787     061D                     u2910:
  2788     061D                     l2097:
  2789                           
  2790                           ;main.c: 328:         seconds_counter ++;
  2791     061D  3001               	movlw	1
  2792     061E  1283               	bcf	3,5	;RP0=0, select bank0
  2793     061F  1303               	bcf	3,6	;RP1=0, select bank0
  2794     0620  07AC               	addwf	_seconds_counter,f	;volatile
  2795     0621  3000               	movlw	0
  2796     0622  1803               	skipnc
  2797     0623  3001               	movlw	1
  2798     0624  07AD               	addwf	_seconds_counter+1,f	;volatile
  2799     0625  3000               	movlw	0
  2800     0626  1803               	skipnc
  2801     0627  3001               	movlw	1
  2802     0628  07AE               	addwf	_seconds_counter+2,f	;volatile
  2803     0629  3000               	movlw	0
  2804     062A  1803               	skipnc
  2805     062B  3001               	movlw	1
  2806     062C  07AF               	addwf	_seconds_counter+3,f	;volatile
  2807                           
  2808                           ;main.c: 329:         last_millis = millis;
  2809     062D  082B               	movf	_millis+3,w	;volatile
  2810     062E  1683               	bsf	3,5	;RP0=1, select bank1
  2811     062F  1303               	bcf	3,6	;RP1=0, select bank1
  2812     0630  00B3               	movwf	(_last_millis+3)^(0+128)
  2813     0631  1283               	bcf	3,5	;RP0=0, select bank0
  2814     0632  1303               	bcf	3,6	;RP1=0, select bank0
  2815     0633  082A               	movf	_millis+2,w	;volatile
  2816     0634  1683               	bsf	3,5	;RP0=1, select bank1
  2817     0635  1303               	bcf	3,6	;RP1=0, select bank1
  2818     0636  00B2               	movwf	(_last_millis+2)^(0+128)
  2819     0637  1283               	bcf	3,5	;RP0=0, select bank0
  2820     0638  1303               	bcf	3,6	;RP1=0, select bank0
  2821     0639  0829               	movf	_millis+1,w	;volatile
  2822     063A  1683               	bsf	3,5	;RP0=1, select bank1
  2823     063B  1303               	bcf	3,6	;RP1=0, select bank1
  2824     063C  00B1               	movwf	(_last_millis+1)^(0+128)
  2825     063D  1283               	bcf	3,5	;RP0=0, select bank0
  2826     063E  1303               	bcf	3,6	;RP1=0, select bank0
  2827     063F  0828               	movf	_millis,w	;volatile
  2828     0640  1683               	bsf	3,5	;RP0=1, select bank1
  2829     0641  1303               	bcf	3,6	;RP1=0, select bank1
  2830     0642  00B0               	movwf	_last_millis^(0+128)
  2831     0643  28E3               	goto	l1921
  2832     0644  118A  280B         	ljmp	start
  2833     0646                     __end_of_main:
  2834                           
  2835                           	psect	text1
  2836     0DF1                     __ptext1:	
  2837 ;; *************** function _trigger_buzzer *****************
  2838 ;; Defined at:
  2839 ;;		line 522 in file "main.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  duration_sec    2    2[COMMON] unsigned int 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;		None
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      void 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2853 ;;      Params:         2       0       0       0
  2854 ;;      Locals:         0       0       0       0
  2855 ;;      Temps:          0       0       0       0
  2856 ;;      Totals:         2       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; Hardware stack levels required when called: 1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867     0DF1                     _trigger_buzzer:	
  2868                           ;psect for function _trigger_buzzer
  2869                           
  2870     0DF1                     l1429:	
  2871                           ;incstack = 0
  2872                           ; Regs used in _trigger_buzzer: [wreg+status,2+status,0]
  2873                           
  2874                           
  2875                           ;main.c: 523:   if (!buzzer_active) {
  2876     0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  2877     0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  2878     0DF3  0832               	movf	_buzzer_active,w
  2879     0DF4  1D03               	btfss	3,2
  2880     0DF5  2DF7               	goto	u1141
  2881     0DF6  2DF8               	goto	u1140
  2882     0DF7                     u1141:
  2883     0DF7  2E17               	goto	l306
  2884     0DF8                     u1140:
  2885     0DF8                     l1431:
  2886                           
  2887                           ;main.c: 524:     PORTCbits.RC4 = 1;
  2888     0DF8  1607               	bsf	7,4	;volatile
  2889     0DF9                     l1433:
  2890                           
  2891                           ;main.c: 525:     buzzer_start_time = millis;
  2892     0DF9  082B               	movf	_millis+3,w	;volatile
  2893     0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  2894     0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  2895     0DFC  00A7               	movwf	(_buzzer_start_time+3)^(0+128)
  2896     0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2897     0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2898     0DFF  082A               	movf	_millis+2,w	;volatile
  2899     0E00  1683               	bsf	3,5	;RP0=1, select bank1
  2900     0E01  1303               	bcf	3,6	;RP1=0, select bank1
  2901     0E02  00A6               	movwf	(_buzzer_start_time+2)^(0+128)
  2902     0E03  1283               	bcf	3,5	;RP0=0, select bank0
  2903     0E04  1303               	bcf	3,6	;RP1=0, select bank0
  2904     0E05  0829               	movf	_millis+1,w	;volatile
  2905     0E06  1683               	bsf	3,5	;RP0=1, select bank1
  2906     0E07  1303               	bcf	3,6	;RP1=0, select bank1
  2907     0E08  00A5               	movwf	(_buzzer_start_time+1)^(0+128)
  2908     0E09  1283               	bcf	3,5	;RP0=0, select bank0
  2909     0E0A  1303               	bcf	3,6	;RP1=0, select bank0
  2910     0E0B  0828               	movf	_millis,w	;volatile
  2911     0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  2912     0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  2913     0E0E  00A4               	movwf	_buzzer_start_time^(0+128)
  2914                           
  2915                           ;main.c: 526:     buzzer_duration = duration_seconds;
  2916     0E0F  0874               	movf	trigger_buzzer@duration_seconds+1,w
  2917     0E10  00B5               	movwf	(_buzzer_duration+1)^(0+128)
  2918     0E11  0873               	movf	trigger_buzzer@duration_seconds,w
  2919     0E12  00B4               	movwf	_buzzer_duration^(0+128)
  2920     0E13                     l1435:
  2921                           
  2922                           ;main.c: 527:     buzzer_active = 1;
  2923     0E13  3001               	movlw	1
  2924     0E14  1283               	bcf	3,5	;RP0=0, select bank0
  2925     0E15  1303               	bcf	3,6	;RP1=0, select bank0
  2926     0E16  00B2               	movwf	_buzzer_active
  2927     0E17                     l306:
  2928     0E17  0008               	return
  2929     0E18                     __end_of_trigger_buzzer:
  2930                           
  2931                           	psect	text2
  2932     0D12                     __ptext2:	
  2933 ;; *************** function _startSensorReading *****************
  2934 ;; Defined at:
  2935 ;;		line 381 in file "main.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2949 ;;      Params:         0       0       0       0
  2950 ;;      Locals:         0       0       0       0
  2951 ;;      Temps:          0       0       0       0
  2952 ;;      Totals:         0       0       0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963     0D12                     _startSensorReading:	
  2964                           ;psect for function _startSensorReading
  2965                           
  2966     0D12                     l1491:	
  2967                           ;incstack = 0
  2968                           ; Regs used in _startSensorReading: [wreg+status,2+status,0]
  2969                           
  2970                           
  2971                           ;main.c: 382:   if (!sensors_reading_in_progress) {
  2972     0D12  1283               	bcf	3,5	;RP0=0, select bank0
  2973     0D13  1303               	bcf	3,6	;RP1=0, select bank0
  2974     0D14  083C               	movf	_sensors_reading_in_progress,w	;volatile
  2975     0D15  1D03               	btfss	3,2
  2976     0D16  2D18               	goto	u1241
  2977     0D17  2D19               	goto	u1240
  2978     0D18                     u1241:
  2979     0D18  2D20               	goto	l255
  2980     0D19                     u1240:
  2981     0D19                     l1493:
  2982                           
  2983                           ;main.c: 383:     reading_count = 0;
  2984     0D19  01FB               	clrf	_reading_count	;volatile
  2985                           
  2986                           ;main.c: 384:     low_sensor_high_count = 0;
  2987     0D1A  01FA               	clrf	_low_sensor_high_count	;volatile
  2988                           
  2989                           ;main.c: 385:     high_sensor_high_count = 0;
  2990     0D1B  01BF               	clrf	_high_sensor_high_count	;volatile
  2991                           
  2992                           ;main.c: 386:     flow_sensor_high_count = 0;
  2993     0D1C  01BE               	clrf	_flow_sensor_high_count	;volatile
  2994                           
  2995                           ;main.c: 387:     sensors_reading_complete = 0;
  2996     0D1D  01BD               	clrf	_sensors_reading_complete	;volatile
  2997     0D1E                     l1495:
  2998                           
  2999                           ;main.c: 388:     sensors_reading_in_progress = 1;
  3000     0D1E  3001               	movlw	1
  3001     0D1F  00BC               	movwf	_sensors_reading_in_progress	;volatile
  3002     0D20                     l255:
  3003     0D20  0008               	return
  3004     0D21                     __end_of_startSensorReading:
  3005                           
  3006                           	psect	text3
  3007     0CF5                     __ptext3:	
  3008 ;; *************** function _setupTimer0 *****************
  3009 ;; Defined at:
  3010 ;;		line 366 in file "main.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3024 ;;      Params:         0       0       0       0
  3025 ;;      Locals:         0       0       0       0
  3026 ;;      Temps:          0       0       0       0
  3027 ;;      Totals:         0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used: 1
  3030 ;; Hardware stack levels required when called: 1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038     0CF5                     _setupTimer0:	
  3039                           ;psect for function _setupTimer0
  3040                           
  3041     0CF5                     l1483:	
  3042                           ;incstack = 0
  3043                           ; Regs used in _setupTimer0: [wreg+status,2+status,0]
  3044                           
  3045                           
  3046                           ;main.c: 367:   OPTION_REGbits.T0CS = 0;
  3047     0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  3048     0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  3049     0CF7  1281               	bcf	1,5	;volatile
  3050                           
  3051                           ;main.c: 368:   OPTION_REGbits.PSA = 0;
  3052     0CF8  1181               	bcf	1,3	;volatile
  3053     0CF9                     l1485:
  3054                           
  3055                           ;main.c: 369:   OPTION_REGbits.PS = 0b011;
  3056     0CF9  0801               	movf	1,w	;volatile
  3057     0CFA  39F8               	andlw	-8
  3058     0CFB  3803               	iorlw	3
  3059     0CFC  0081               	movwf	1	;volatile
  3060     0CFD                     l1487:
  3061                           
  3062                           ;main.c: 377:   TMR0 = 6;
  3063     0CFD  3006               	movlw	6
  3064     0CFE  1283               	bcf	3,5	;RP0=0, select bank0
  3065     0CFF  1303               	bcf	3,6	;RP1=0, select bank0
  3066     0D00  0081               	movwf	1	;volatile
  3067     0D01                     l1489:
  3068                           
  3069                           ;main.c: 378:   INTCONbits.TMR0IE = 1;
  3070     0D01  168B               	bsf	11,5	;volatile
  3071     0D02                     l251:
  3072     0D02  0008               	return
  3073     0D03                     __end_of_setupTimer0:
  3074                           
  3075                           	psect	text4
  3076     07C5                     __ptext4:	
  3077 ;; *************** function _saveSettings *****************
  3078 ;; Defined at:
  3079 ;;		line 510 in file "main.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  value8bit       1    wreg     unsigned char 
  3082 ;;  value16bit1     2    0[BANK0 ] unsigned int 
  3083 ;;  value16bit2     2    2[BANK0 ] unsigned int 
  3084 ;;  value16bit3     2    4[BANK0 ] unsigned int 
  3085 ;;  value16bit4     2    6[BANK0 ] unsigned int 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  value8bit       1    7[COMMON] unsigned char 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3097 ;;      Params:         0       8       0       0
  3098 ;;      Locals:         1       0       0       0
  3099 ;;      Temps:          0       0       0       0
  3100 ;;      Totals:         1       8       0       0
  3101 ;;Total ram usage:        9 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 3
  3104 ;; This function calls:
  3105 ;;		_EEPROM_Write
  3106 ;;		_EEPROM_Write16
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112     07C5                     _saveSettings:	
  3113                           ;psect for function _saveSettings
  3114                           
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in _saveSettings: [wreg+status,2+status,0+pclath+cstack]
  3118                           ;saveSettings@value8bit stored from wreg
  3119     07C5  00F8               	movwf	saveSettings@value8bit
  3120     07C6                     l1417:
  3121                           
  3122                           ;main.c: 510: void saveSettings(unsigned char value8bit, unsigned int value16bit1,;main.
      +                          c: 511:                   unsigned int value16bit2, unsigned int value16bit3,;main.c: 51
      +                          2:                   unsigned int value16bit4) {;main.c: 514:   EEPROM_Write(0x01, value
      +                          8bit);
  3123     07C6  0878               	movf	saveSettings@value8bit,w
  3124     07C7  00F3               	movwf	EEPROM_Write@data
  3125     07C8  3001               	movlw	1
  3126     07C9  158A  2566  118A   	fcall	_EEPROM_Write
  3127                           
  3128                           ;main.c: 515:   EEPROM_Write16(0x02, value16bit1);
  3129     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3130     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  3131     07CE  0848               	movf	saveSettings@value16bit1+1,w
  3132     07CF  00F6               	movwf	EEPROM_Write16@data+1
  3133     07D0  0847               	movf	saveSettings@value16bit1,w
  3134     07D1  00F5               	movwf	EEPROM_Write16@data
  3135     07D2  3002               	movlw	2
  3136     07D3  158A  2503  118A   	fcall	_EEPROM_Write16
  3137                           
  3138                           ;main.c: 516:   EEPROM_Write16(0x04, value16bit2);
  3139     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3140     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  3141     07D8  084A               	movf	saveSettings@value16bit2+1,w
  3142     07D9  00F6               	movwf	EEPROM_Write16@data+1
  3143     07DA  0849               	movf	saveSettings@value16bit2,w
  3144     07DB  00F5               	movwf	EEPROM_Write16@data
  3145     07DC  3004               	movlw	4
  3146     07DD  158A  2503  118A   	fcall	_EEPROM_Write16
  3147                           
  3148                           ;main.c: 517:   EEPROM_Write16(0x06, value16bit3);
  3149     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  3150     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  3151     07E2  084C               	movf	saveSettings@value16bit3+1,w
  3152     07E3  00F6               	movwf	EEPROM_Write16@data+1
  3153     07E4  084B               	movf	saveSettings@value16bit3,w
  3154     07E5  00F5               	movwf	EEPROM_Write16@data
  3155     07E6  3006               	movlw	6
  3156     07E7  158A  2503  118A   	fcall	_EEPROM_Write16
  3157                           
  3158                           ;main.c: 518:   EEPROM_Write16(0x08, value16bit4);
  3159     07EA  1283               	bcf	3,5	;RP0=0, select bank0
  3160     07EB  1303               	bcf	3,6	;RP1=0, select bank0
  3161     07EC  084E               	movf	saveSettings@value16bit4+1,w
  3162     07ED  00F6               	movwf	EEPROM_Write16@data+1
  3163     07EE  084D               	movf	saveSettings@value16bit4,w
  3164     07EF  00F5               	movwf	EEPROM_Write16@data
  3165     07F0  3008               	movlw	8
  3166     07F1  158A  2503  118A   	fcall	_EEPROM_Write16
  3167                           
  3168                           ;main.c: 519:   EEPROM_Write(0x00, 0xAA);
  3169     07F4  30AA               	movlw	170
  3170     07F5  00F3               	movwf	EEPROM_Write@data
  3171     07F6  3000               	movlw	0
  3172     07F7  158A  2566  118A   	fcall	_EEPROM_Write
  3173     07FA                     l302:
  3174     07FA  0008               	return
  3175     07FB                     __end_of_saveSettings:
  3176                           
  3177                           	psect	text5
  3178     0D03                     __ptext5:	
  3179 ;; *************** function _EEPROM_Write16 *****************
  3180 ;; Defined at:
  3181 ;;		line 484 in file "main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  address         1    wreg     unsigned char 
  3184 ;;  data            2    4[COMMON] unsigned int 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  address         1    6[COMMON] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, pclath, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3196 ;;      Params:         2       0       0       0
  3197 ;;      Locals:         1       0       0       0
  3198 ;;      Temps:          0       0       0       0
  3199 ;;      Totals:         3       0       0       0
  3200 ;;Total ram usage:        3 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 2
  3203 ;; This function calls:
  3204 ;;		_EEPROM_Write
  3205 ;; This function is called by:
  3206 ;;		_saveSettings
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210     0D03                     _EEPROM_Write16:	
  3211                           ;psect for function _EEPROM_Write16
  3212                           
  3213                           
  3214                           ;incstack = 0
  3215                           ; Regs used in _EEPROM_Write16: [wreg+status,2+status,0+pclath+cstack]
  3216                           ;EEPROM_Write16@address stored from wreg
  3217     0D03  00F7               	movwf	EEPROM_Write16@address
  3218     0D04                     l1363:
  3219                           
  3220                           ;main.c: 485:   EEPROM_Write(address, data & 0xFF);
  3221     0D04  0875               	movf	EEPROM_Write16@data,w
  3222     0D05  00F3               	movwf	EEPROM_Write@data
  3223     0D06  0877               	movf	EEPROM_Write16@address,w
  3224     0D07  158A  2566  158A   	fcall	_EEPROM_Write
  3225                           
  3226                           ;main.c: 486:   EEPROM_Write(address + 1, data >> 8);
  3227     0D0A  0876               	movf	EEPROM_Write16@data+1,w
  3228     0D0B  00F3               	movwf	EEPROM_Write@data
  3229     0D0C  0877               	movf	EEPROM_Write16@address,w
  3230     0D0D  3E01               	addlw	1
  3231     0D0E  158A  2566  158A   	fcall	_EEPROM_Write
  3232     0D11                     l292:
  3233     0D11  0008               	return
  3234     0D12                     __end_of_EEPROM_Write16:
  3235                           
  3236                           	psect	text6
  3237     0D66                     __ptext6:	
  3238 ;; *************** function _EEPROM_Write *****************
  3239 ;; Defined at:
  3240 ;;		line 453 in file "main.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  address         1    wreg     unsigned char 
  3243 ;;  data            1    2[COMMON] unsigned char 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  address         1    3[COMMON] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3255 ;;      Params:         1       0       0       0
  3256 ;;      Locals:         1       0       0       0
  3257 ;;      Temps:          0       0       0       0
  3258 ;;      Totals:         2       0       0       0
  3259 ;;Total ram usage:        2 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 1
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_EEPROM_Write16
  3266 ;;		_saveSettings
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270     0D66                     _EEPROM_Write:	
  3271                           ;psect for function _EEPROM_Write
  3272                           
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in _EEPROM_Write: [wreg]
  3276                           ;EEPROM_Write@address stored from wreg
  3277     0D66  00F4               	movwf	EEPROM_Write@address
  3278     0D67                     l1337:
  3279     0D67                     l277:	
  3280                           ;main.c: 455:     ;
  3281                           
  3282                           
  3283                           ;main.c: 454:   while (EECON1bits.WR)
  3284     0D67  1683               	bsf	3,5	;RP0=1, select bank3
  3285     0D68  1703               	bsf	3,6	;RP1=1, select bank3
  3286     0D69  188C               	btfsc	12,1	;volsfr
  3287     0D6A  2D6C               	goto	u1081
  3288     0D6B  2D6D               	goto	u1080
  3289     0D6C                     u1081:
  3290     0D6C  2D67               	goto	l277
  3291     0D6D                     u1080:
  3292     0D6D                     l1339:
  3293                           
  3294                           ;main.c: 457:   EEADR = address;
  3295     0D6D  0874               	movf	EEPROM_Write@address,w
  3296     0D6E  1283               	bcf	3,5	;RP0=0, select bank2
  3297     0D6F  1703               	bsf	3,6	;RP1=1, select bank2
  3298     0D70  008D               	movwf	13	;volatile
  3299                           
  3300                           ;main.c: 458:   EEDATA = data;
  3301     0D71  0873               	movf	EEPROM_Write@data,w
  3302     0D72  008C               	movwf	12	;volatile
  3303     0D73                     l1341:
  3304                           
  3305                           ;main.c: 460:   EECON1bits.EEPGD = 0;
  3306     0D73  1683               	bsf	3,5	;RP0=1, select bank3
  3307     0D74  1703               	bsf	3,6	;RP1=1, select bank3
  3308     0D75  138C               	bcf	12,7	;volsfr
  3309     0D76                     l1343:
  3310                           
  3311                           ;main.c: 461:   EECON1bits.WREN = 1;
  3312     0D76  150C               	bsf	12,2	;volsfr
  3313     0D77                     l1345:
  3314                           
  3315                           ;main.c: 463:   INTCONbits.GIE = 0;
  3316     0D77  138B               	bcf	11,7	;volatile
  3317     0D78                     l1347:
  3318                           
  3319                           ;main.c: 464:   EECON2 = 0x55;
  3320     0D78  3055               	movlw	85
  3321     0D79  008D               	movwf	13	;volsfr
  3322     0D7A                     l1349:
  3323                           
  3324                           ;main.c: 465:   EECON2 = 0xAA;
  3325     0D7A  30AA               	movlw	170
  3326     0D7B  008D               	movwf	13	;volsfr
  3327     0D7C                     l1351:
  3328                           
  3329                           ;main.c: 466:   EECON1bits.WR = 1;
  3330     0D7C  148C               	bsf	12,1	;volsfr
  3331     0D7D                     l280:	
  3332                           ;main.c: 469:     ;
  3333                           
  3334                           
  3335                           ;main.c: 468:   while (EECON1bits.WR)
  3336     0D7D  188C               	btfsc	12,1	;volsfr
  3337     0D7E  2D80               	goto	u1091
  3338     0D7F  2D81               	goto	u1090
  3339     0D80                     u1091:
  3340     0D80  2D7D               	goto	l280
  3341     0D81                     u1090:
  3342     0D81                     l282:
  3343                           
  3344                           ;main.c: 471:   EECON1bits.WREN = 0;
  3345     0D81  110C               	bcf	12,2	;volsfr
  3346                           
  3347                           ;main.c: 472:   INTCONbits.GIE = 1;
  3348     0D82  178B               	bsf	11,7	;volatile
  3349     0D83                     l283:
  3350     0D83  0008               	return
  3351     0D84                     __end_of_EEPROM_Write:
  3352                           
  3353                           	psect	text7
  3354     0D84                     __ptext7:	
  3355 ;; *************** function _readADC *****************
  3356 ;; Defined at:
  3357 ;;		line 352 in file "main.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  channel         1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  channel         1    5[COMMON] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  2    2[COMMON] unsigned int 
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3371 ;;      Params:         2       0       0       0
  3372 ;;      Locals:         1       0       0       0
  3373 ;;      Temps:          1       0       0       0
  3374 ;;      Totals:         4       0       0       0
  3375 ;;Total ram usage:        4 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_main
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385     0D84                     _readADC:	
  3386                           ;psect for function _readADC
  3387                           
  3388                           
  3389                           ;incstack = 0
  3390                           ; Regs used in _readADC: [wreg+status,2+status,0]
  3391                           ;readADC@channel stored from wreg
  3392     0D84  00F6               	movwf	readADC@channel
  3393     0D85                     l1419:
  3394                           
  3395                           ;main.c: 354:   ADCON0 = (ADCON0 & 0b11000011) | ((uint8_t)(channel << 2));
  3396     0D85  0876               	movf	readADC@channel,w
  3397     0D86  00F5               	movwf	??_readADC
  3398     0D87  3002               	movlw	2
  3399     0D88                     u1125:
  3400     0D88  1003               	clrc
  3401     0D89  0DF5               	rlf	??_readADC,f
  3402     0D8A  3EFF               	addlw	-1
  3403     0D8B  1D03               	skipz
  3404     0D8C  2D88               	goto	u1125
  3405     0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  3406     0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  3407     0D8F  081F               	movf	31,w	;volatile
  3408     0D90  39C3               	andlw	195
  3409     0D91  0475               	iorwf	??_readADC,w
  3410     0D92  009F               	movwf	31	;volatile
  3411     0D93                     l1421:
  3412                           
  3413                           ;main.c: 355:   _delay((unsigned long)((10)*(8000000/4000000.0)));
  3414     0D93  3006               	movlw	6
  3415     0D94  00F5               	movwf	??_readADC
  3416     0D95                     u2927:
  3417     0D95  0BF5               	decfsz	??_readADC,f
  3418     0D96  2D95               	goto	u2927
  3419     0D97  0000               	nop
  3420     0D98                     l1423:
  3421                           
  3422                           ;main.c: 356:   ADCON0bits.GO = 1;
  3423     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  3424     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  3425     0D9A  149F               	bsf	31,1	;volatile
  3426     0D9B                     l245:	
  3427                           ;main.c: 360:     ;
  3428                           
  3429                           
  3430                           ;main.c: 359:   while (ADCON0bits.GO)
  3431     0D9B  189F               	btfsc	31,1	;volatile
  3432     0D9C  2D9E               	goto	u1131
  3433     0D9D  2D9F               	goto	u1130
  3434     0D9E                     u1131:
  3435     0D9E  2D9B               	goto	l245
  3436     0D9F                     u1130:
  3437     0D9F                     l1425:
  3438                           
  3439                           ;main.c: 363:   return ((unsigned int)ADRESH << 8) | ADRESL;
  3440     0D9F  081E               	movf	30,w	;volatile
  3441     0DA0  00F4               	movwf	?_readADC+1
  3442     0DA1  1683               	bsf	3,5	;RP0=1, select bank1
  3443     0DA2  1303               	bcf	3,6	;RP1=0, select bank1
  3444     0DA3  081E               	movf	30,w	;volatile
  3445     0DA4  00F3               	movwf	?_readADC
  3446     0DA5                     l248:
  3447     0DA5  0008               	return
  3448     0DA6                     __end_of_readADC:
  3449                           
  3450                           	psect	text8
  3451     0776                     __ptext8:	
  3452 ;; *************** function _loadSettings *****************
  3453 ;; Defined at:
  3454 ;;		line 496 in file "main.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  value8bit       1    3[BANK0 ] PTR unsigned char 
  3457 ;;		 -> maxruntimeindex(1), 
  3458 ;;  value16bit1     1    4[BANK0 ] PTR unsigned int 
  3459 ;;		 -> minvoltagelimit(2), 
  3460 ;;  value16bit2     1    5[BANK0 ] PTR unsigned int 
  3461 ;;		 -> maxvoltagelimit(2), 
  3462 ;;  value16bit3     1    6[BANK0 ] PTR unsigned int 
  3463 ;;		 -> minimumrunningvoltage(2), 
  3464 ;;  value16bit4     1    7[BANK0 ] PTR unsigned int 
  3465 ;;		 -> maximumrinningvoltage(2), 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      _Bool 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3477 ;;      Params:         0       5       0       0
  3478 ;;      Locals:         0       0       0       0
  3479 ;;      Temps:          0       0       0       0
  3480 ;;      Totals:         0       5       0       0
  3481 ;;Total ram usage:        5 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 3
  3484 ;; This function calls:
  3485 ;;		_EEPROM_Read
  3486 ;;		_EEPROM_Read16
  3487 ;; This function is called by:
  3488 ;;		_main
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492     0776                     _loadSettings:	
  3493                           ;psect for function _loadSettings
  3494                           
  3495     0776                     l1825:	
  3496                           ;incstack = 0
  3497                           ; Regs used in _loadSettings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3498                           
  3499                           
  3500                           ;main.c: 496: _Bool loadSettings(unsigned char *value8bit, unsigned int *value16bit1,;ma
      +                          in.c: 497:                   unsigned int *value16bit2, unsigned int *value16bit3,;main.
      +                          c: 498:                   unsigned int *value16bit4) {;main.c: 499:   if (EEPROM_Read(0x
      +                          00) != 0xAA) {
  3501     0776  3000               	movlw	0
  3502     0777  158A  2553  118A   	fcall	_EEPROM_Read
  3503     077A  3AAA               	xorlw	170
  3504     077B  1903               	skipnz
  3505     077C  2F7E               	goto	u2161
  3506     077D  2F7F               	goto	u2160
  3507     077E                     u2161:
  3508     077E  2F81               	goto	l1831
  3509     077F                     u2160:
  3510     077F                     l1827:
  3511                           
  3512                           ;main.c: 500:     return 0;
  3513     077F  3000               	movlw	0
  3514     0780  2FC4               	goto	l299
  3515     0781                     l1831:
  3516                           
  3517                           ;main.c: 502:   *value8bit = EEPROM_Read(0x01);
  3518     0781  1283               	bcf	3,5	;RP0=0, select bank0
  3519     0782  1303               	bcf	3,6	;RP1=0, select bank0
  3520     0783  084A               	movf	loadSettings@value8bit,w
  3521     0784  0084               	movwf	4
  3522     0785  3001               	movlw	1
  3523     0786  158A  2553  118A   	fcall	_EEPROM_Read
  3524     0789  1383               	bcf	3,7	;select IRP bank0
  3525     078A  0080               	movwf	0
  3526     078B                     l1833:
  3527                           
  3528                           ;main.c: 503:   *value16bit1 = EEPROM_Read16(0x02);
  3529     078B  3002               	movlw	2
  3530     078C  158A  25A6  118A   	fcall	_EEPROM_Read16
  3531     078F  1283               	bcf	3,5	;RP0=0, select bank0
  3532     0790  1303               	bcf	3,6	;RP1=0, select bank0
  3533     0791  084B               	movf	loadSettings@value16bit1,w
  3534     0792  0084               	movwf	4
  3535     0793  0874               	movf	?_EEPROM_Read16,w
  3536     0794  1383               	bcf	3,7	;select IRP bank0
  3537     0795  0080               	movwf	0
  3538     0796  0A84               	incf	4,f
  3539     0797  0875               	movf	?_EEPROM_Read16+1,w
  3540     0798  0080               	movwf	0
  3541     0799                     l1835:
  3542                           
  3543                           ;main.c: 504:   *value16bit2 = EEPROM_Read16(0x04);
  3544     0799  3004               	movlw	4
  3545     079A  158A  25A6  118A   	fcall	_EEPROM_Read16
  3546     079D  1283               	bcf	3,5	;RP0=0, select bank0
  3547     079E  1303               	bcf	3,6	;RP1=0, select bank0
  3548     079F  084C               	movf	loadSettings@value16bit2,w
  3549     07A0  0084               	movwf	4
  3550     07A1  0874               	movf	?_EEPROM_Read16,w
  3551     07A2  1383               	bcf	3,7	;select IRP bank0
  3552     07A3  0080               	movwf	0
  3553     07A4  0A84               	incf	4,f
  3554     07A5  0875               	movf	?_EEPROM_Read16+1,w
  3555     07A6  0080               	movwf	0
  3556     07A7                     l1837:
  3557                           
  3558                           ;main.c: 505:   *value16bit3 = EEPROM_Read16(0x06);
  3559     07A7  3006               	movlw	6
  3560     07A8  158A  25A6  118A   	fcall	_EEPROM_Read16
  3561     07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3562     07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3563     07AD  084D               	movf	loadSettings@value16bit3,w
  3564     07AE  0084               	movwf	4
  3565     07AF  0874               	movf	?_EEPROM_Read16,w
  3566     07B0  1383               	bcf	3,7	;select IRP bank0
  3567     07B1  0080               	movwf	0
  3568     07B2  0A84               	incf	4,f
  3569     07B3  0875               	movf	?_EEPROM_Read16+1,w
  3570     07B4  0080               	movwf	0
  3571     07B5                     l1839:
  3572                           
  3573                           ;main.c: 506:   *value16bit4 = EEPROM_Read16(0x08);
  3574     07B5  3008               	movlw	8
  3575     07B6  158A  25A6  118A   	fcall	_EEPROM_Read16
  3576     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3577     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3578     07BB  084E               	movf	loadSettings@value16bit4,w
  3579     07BC  0084               	movwf	4
  3580     07BD  0874               	movf	?_EEPROM_Read16,w
  3581     07BE  1383               	bcf	3,7	;select IRP bank0
  3582     07BF  0080               	movwf	0
  3583     07C0  0A84               	incf	4,f
  3584     07C1  0875               	movf	?_EEPROM_Read16+1,w
  3585     07C2  0080               	movwf	0
  3586     07C3                     l1841:
  3587                           
  3588                           ;main.c: 507:   return 1;
  3589     07C3  3001               	movlw	1
  3590     07C4                     l299:
  3591     07C4  0008               	return
  3592     07C5                     __end_of_loadSettings:
  3593                           
  3594                           	psect	text9
  3595     0DA6                     __ptext9:	
  3596 ;; *************** function _EEPROM_Read16 *****************
  3597 ;; Defined at:
  3598 ;;		line 489 in file "main.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  address         1    wreg     unsigned char 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  address         1    2[BANK0 ] unsigned char 
  3603 ;;  result          2    0[BANK0 ] unsigned int 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  2    3[COMMON] unsigned int 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3613 ;;      Params:         2       0       0       0
  3614 ;;      Locals:         0       3       0       0
  3615 ;;      Temps:          2       0       0       0
  3616 ;;      Totals:         4       3       0       0
  3617 ;;Total ram usage:        7 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 2
  3620 ;; This function calls:
  3621 ;;		_EEPROM_Read
  3622 ;; This function is called by:
  3623 ;;		_loadSettings
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627     0DA6                     _EEPROM_Read16:	
  3628                           ;psect for function _EEPROM_Read16
  3629                           
  3630                           
  3631                           ;incstack = 0
  3632                           ; Regs used in _EEPROM_Read16: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3633                           ;EEPROM_Read16@address stored from wreg
  3634     0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  3635     0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  3636     0DA8  00C9               	movwf	EEPROM_Read16@address
  3637     0DA9                     l1817:
  3638                           
  3639                           ;main.c: 490:   unsigned int result;;main.c: 491:   result = EEPROM_Read(address);
  3640     0DA9  0849               	movf	EEPROM_Read16@address,w
  3641     0DAA  158A  2553  158A   	fcall	_EEPROM_Read
  3642     0DAD  00F6               	movwf	??_EEPROM_Read16
  3643     0DAE  01F7               	clrf	??_EEPROM_Read16+1
  3644     0DAF  0876               	movf	??_EEPROM_Read16,w
  3645     0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  3646     0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  3647     0DB2  00C7               	movwf	EEPROM_Read16@result
  3648     0DB3  0877               	movf	??_EEPROM_Read16+1,w
  3649     0DB4  00C8               	movwf	EEPROM_Read16@result+1
  3650     0DB5                     l1819:
  3651                           
  3652                           ;main.c: 492:   result |= ((unsigned int)EEPROM_Read(address + 1)) << 8;
  3653     0DB5  0849               	movf	EEPROM_Read16@address,w
  3654     0DB6  3E01               	addlw	1
  3655     0DB7  158A  2553  158A   	fcall	_EEPROM_Read
  3656     0DBA  00F6               	movwf	??_EEPROM_Read16
  3657     0DBB  01F7               	clrf	??_EEPROM_Read16+1
  3658     0DBC  0876               	movf	??_EEPROM_Read16,w
  3659     0DBD  00F7               	movwf	??_EEPROM_Read16+1
  3660     0DBE  01F6               	clrf	??_EEPROM_Read16
  3661     0DBF  0876               	movf	??_EEPROM_Read16,w
  3662     0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  3663     0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  3664     0DC2  04C7               	iorwf	EEPROM_Read16@result,f
  3665     0DC3  0877               	movf	??_EEPROM_Read16+1,w
  3666     0DC4  04C8               	iorwf	EEPROM_Read16@result+1,f
  3667     0DC5                     l1821:
  3668                           
  3669                           ;main.c: 493:   return result;
  3670     0DC5  0848               	movf	EEPROM_Read16@result+1,w
  3671     0DC6  00F5               	movwf	?_EEPROM_Read16+1
  3672     0DC7  0847               	movf	EEPROM_Read16@result,w
  3673     0DC8  00F4               	movwf	?_EEPROM_Read16
  3674     0DC9                     l295:
  3675     0DC9  0008               	return
  3676     0DCA                     __end_of_EEPROM_Read16:
  3677                           
  3678                           	psect	text10
  3679     0D53                     __ptext10:	
  3680 ;; *************** function _EEPROM_Read *****************
  3681 ;; Defined at:
  3682 ;;		line 475 in file "main.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  address         1    wreg     unsigned char 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  address         1    2[COMMON] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      unsigned char 
  3689 ;; Registers used:
  3690 ;;		wreg
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3696 ;;      Params:         0       0       0       0
  3697 ;;      Locals:         1       0       0       0
  3698 ;;      Temps:          0       0       0       0
  3699 ;;      Totals:         1       0       0       0
  3700 ;;Total ram usage:        1 bytes
  3701 ;; Hardware stack levels used: 1
  3702 ;; Hardware stack levels required when called: 1
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_EEPROM_Read16
  3707 ;;		_loadSettings
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711     0D53                     _EEPROM_Read:	
  3712                           ;psect for function _EEPROM_Read
  3713                           
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in _EEPROM_Read: [wreg]
  3717                           ;EEPROM_Read@address stored from wreg
  3718     0D53  00F3               	movwf	EEPROM_Read@address
  3719     0D54                     l1807:
  3720     0D54                     l286:	
  3721                           ;main.c: 477:     ;
  3722                           
  3723                           
  3724                           ;main.c: 476:   while (EECON1bits.WR)
  3725     0D54  1683               	bsf	3,5	;RP0=1, select bank3
  3726     0D55  1703               	bsf	3,6	;RP1=1, select bank3
  3727     0D56  188C               	btfsc	12,1	;volsfr
  3728     0D57  2D59               	goto	u2151
  3729     0D58  2D5A               	goto	u2150
  3730     0D59                     u2151:
  3731     0D59  2D54               	goto	l286
  3732     0D5A                     u2150:
  3733     0D5A                     l1809:
  3734                           
  3735                           ;main.c: 478:   EEADR = address;
  3736     0D5A  0873               	movf	EEPROM_Read@address,w
  3737     0D5B  1283               	bcf	3,5	;RP0=0, select bank2
  3738     0D5C  1703               	bsf	3,6	;RP1=1, select bank2
  3739     0D5D  008D               	movwf	13	;volatile
  3740     0D5E                     l1811:
  3741                           
  3742                           ;main.c: 479:   EECON1bits.EEPGD = 0;
  3743     0D5E  1683               	bsf	3,5	;RP0=1, select bank3
  3744     0D5F  1703               	bsf	3,6	;RP1=1, select bank3
  3745     0D60  138C               	bcf	12,7	;volsfr
  3746     0D61                     l1813:
  3747                           
  3748                           ;main.c: 480:   EECON1bits.RD = 1;
  3749     0D61  140C               	bsf	12,0	;volsfr
  3750                           
  3751                           ;main.c: 481:   return EEDATA;
  3752     0D62  1283               	bcf	3,5	;RP0=0, select bank2
  3753     0D63  1703               	bsf	3,6	;RP1=1, select bank2
  3754     0D64  080C               	movf	12,w	;volatile
  3755     0D65                     l289:
  3756     0D65  0008               	return
  3757     0D66                     __end_of_EEPROM_Read:
  3758                           
  3759                           	psect	text11
  3760     0D31                     __ptext11:	
  3761 ;; *************** function _init_timer *****************
  3762 ;; Defined at:
  3763 ;;		line 440 in file "main.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		None
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3777 ;;      Params:         0       0       0       0
  3778 ;;      Locals:         0       0       0       0
  3779 ;;      Temps:          0       0       0       0
  3780 ;;      Totals:         0       0       0       0
  3781 ;;Total ram usage:        0 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 1
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791     0D31                     _init_timer:	
  3792                           ;psect for function _init_timer
  3793                           
  3794     0D31                     l1445:	
  3795                           ;incstack = 0
  3796                           ; Regs used in _init_timer: []
  3797                           
  3798                           
  3799                           ;main.c: 441:   T1CON = 0b00110000;
  3800     0D31  3030               	movlw	48
  3801     0D32  1283               	bcf	3,5	;RP0=0, select bank0
  3802     0D33  1303               	bcf	3,6	;RP1=0, select bank0
  3803     0D34  0090               	movwf	16	;volatile
  3804                           
  3805                           ;main.c: 443:   TMR1H = 255;
  3806     0D35  30FF               	movlw	255
  3807     0D36  008F               	movwf	15	;volatile
  3808                           
  3809                           ;main.c: 444:   TMR1L = 14;
  3810     0D37  300E               	movlw	14
  3811     0D38  008E               	movwf	14	;volatile
  3812                           
  3813                           ;main.c: 446:   PIE1bits.TMR1IE = 1;
  3814     0D39  1683               	bsf	3,5	;RP0=1, select bank1
  3815     0D3A  1303               	bcf	3,6	;RP1=0, select bank1
  3816     0D3B  140C               	bsf	12,0	;volatile
  3817                           
  3818                           ;main.c: 447:   INTCONbits.PEIE = 1;
  3819     0D3C  170B               	bsf	11,6	;volatile
  3820                           
  3821                           ;main.c: 448:   INTCONbits.GIE = 1;
  3822     0D3D  178B               	bsf	11,7	;volatile
  3823                           
  3824                           ;main.c: 450:   T1CONbits.TMR1ON = 1;
  3825     0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  3826     0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  3827     0D40  1410               	bsf	16,0	;volatile
  3828     0D41                     l274:
  3829     0D41  0008               	return
  3830     0D42                     __end_of_init_timer:
  3831                           
  3832                           	psect	text12
  3833     0E18                     __ptext12:	
  3834 ;; *************** function _initSystem *****************
  3835 ;; Defined at:
  3836 ;;		line 334 in file "main.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3850 ;;      Params:         0       0       0       0
  3851 ;;      Locals:         0       0       0       0
  3852 ;;      Temps:          2       0       0       0
  3853 ;;      Totals:         2       0       0       0
  3854 ;;Total ram usage:        2 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0E18                     _initSystem:	
  3865                           ;psect for function _initSystem
  3866                           
  3867     0E18                     l1373:	
  3868                           ;incstack = 0
  3869                           ; Regs used in _initSystem: [wreg+status,2+status,0]
  3870                           
  3871                           
  3872                           ;main.c: 336:   OSCCONbits.IRCF = 0b111;
  3873     0E18  3070               	movlw	112
  3874     0E19  1683               	bsf	3,5	;RP0=1, select bank1
  3875     0E1A  1303               	bcf	3,6	;RP1=0, select bank1
  3876     0E1B  048F               	iorwf	15,f	;volatile
  3877     0E1C                     l1375:
  3878                           
  3879                           ;main.c: 337:   ANSEL = 0b00011000;
  3880     0E1C  3018               	movlw	24
  3881     0E1D  1683               	bsf	3,5	;RP0=1, select bank3
  3882     0E1E  1703               	bsf	3,6	;RP1=1, select bank3
  3883     0E1F  0088               	movwf	8	;volatile
  3884     0E20                     l1377:
  3885                           
  3886                           ;main.c: 338:   ANSELH = 0x00;
  3887     0E20  0189               	clrf	9	;volatile
  3888     0E21                     l1379:
  3889                           
  3890                           ;main.c: 339:   TRISA = 0b11101000;
  3891     0E21  30E8               	movlw	232
  3892     0E22  1683               	bsf	3,5	;RP0=1, select bank1
  3893     0E23  1303               	bcf	3,6	;RP1=0, select bank1
  3894     0E24  0085               	movwf	5	;volatile
  3895     0E25                     l1381:
  3896                           
  3897                           ;main.c: 340:   TRISB = 0b00111000;
  3898     0E25  3038               	movlw	56
  3899     0E26  0086               	movwf	6	;volatile
  3900     0E27                     l1383:
  3901                           
  3902                           ;main.c: 341:   TRISC = 0b00000011;
  3903     0E27  3003               	movlw	3
  3904     0E28  0087               	movwf	7	;volatile
  3905     0E29                     l1385:
  3906                           
  3907                           ;main.c: 343:   ADCON0 = 0b00001101;
  3908     0E29  300D               	movlw	13
  3909     0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  3910     0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  3911     0E2C  009F               	movwf	31	;volatile
  3912     0E2D                     l1387:
  3913                           
  3914                           ;main.c: 344:   ADCON1 = 0b10000000;
  3915     0E2D  3080               	movlw	128
  3916     0E2E  1683               	bsf	3,5	;RP0=1, select bank1
  3917     0E2F  1303               	bcf	3,6	;RP1=0, select bank1
  3918     0E30  009F               	movwf	31	;volatile
  3919     0E31                     l1389:
  3920                           
  3921                           ;main.c: 346:   _delay((unsigned long)((10)*(8000000/4000.0)));
  3922     0E31  301A               	movlw	26
  3923     0E32  00F4               	movwf	??_initSystem+1
  3924     0E33  30F8               	movlw	248
  3925     0E34  00F3               	movwf	??_initSystem
  3926     0E35                     u2937:
  3927     0E35  0BF3               	decfsz	??_initSystem,f
  3928     0E36  2E35               	goto	u2937
  3929     0E37  0BF4               	decfsz	??_initSystem+1,f
  3930     0E38  2E35               	goto	u2937
  3931     0E39  0000               	nop
  3932     0E3A                     l1391:
  3933                           
  3934                           ;main.c: 347:   PORTA = 0x00;
  3935     0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3936     0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  3937     0E3C  0185               	clrf	5	;volatile
  3938     0E3D                     l1393:
  3939                           
  3940                           ;main.c: 348:   PORTB = 0x00;
  3941     0E3D  0186               	clrf	6	;volatile
  3942     0E3E                     l1395:
  3943                           
  3944                           ;main.c: 349:   PORTC = 0x00;
  3945     0E3E  0187               	clrf	7	;volatile
  3946     0E3F                     l242:
  3947     0E3F  0008               	return
  3948     0E40                     __end_of_initSystem:
  3949                           
  3950                           	psect	text13
  3951     0E40                     __ptext13:	
  3952 ;; *************** function _getSensorResults *****************
  3953 ;; Defined at:
  3954 ;;		line 392 in file "main.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  low_active      1    2[COMMON] PTR _Bool 
  3957 ;;		 -> low_sensor_active(1), 
  3958 ;;  high_active     1    3[COMMON] PTR _Bool 
  3959 ;;		 -> high_sensor_active(1), 
  3960 ;;  flow_active     1    4[COMMON] PTR _Bool 
  3961 ;;		 -> flow_sensor_active(1), 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  1    wreg      _Bool 
  3966 ;; Registers used:
  3967 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3973 ;;      Params:         3       0       0       0
  3974 ;;      Locals:         0       0       0       0
  3975 ;;      Temps:          0       0       0       0
  3976 ;;      Totals:         3       0       0       0
  3977 ;;Total ram usage:        3 bytes
  3978 ;; Hardware stack levels used: 1
  3979 ;; Hardware stack levels required when called: 1
  3980 ;; This function calls:
  3981 ;;		Nothing
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987     0E40                     _getSensorResults:	
  3988                           ;psect for function _getSensorResults
  3989                           
  3990     0E40                     l1497:	
  3991                           ;incstack = 0
  3992                           ; Regs used in _getSensorResults: [wreg-fsr0h+status,2+status,0]
  3993                           
  3994                           
  3995                           ;main.c: 393:   if (sensors_reading_complete) {
  3996     0E40  1283               	bcf	3,5	;RP0=0, select bank0
  3997     0E41  1303               	bcf	3,6	;RP1=0, select bank0
  3998     0E42  083D               	movf	_sensors_reading_complete,w	;volatile
  3999     0E43  1903               	btfsc	3,2
  4000     0E44  2E46               	goto	u1251
  4001     0E45  2E47               	goto	u1250
  4002     0E46                     u1251:
  4003     0E46  2E6C               	goto	l1507
  4004     0E47                     u1250:
  4005     0E47                     l1499:
  4006                           
  4007                           ;main.c: 394:     *low_active = (low_sensor_high_count < 45);
  4008     0E47  0873               	movf	getSensorResults@low_active,w
  4009     0E48  0084               	movwf	4
  4010     0E49  302D               	movlw	45
  4011     0E4A  027A               	subwf	_low_sensor_high_count,w	;volatile
  4012     0E4B  1C03               	skipc
  4013     0E4C  2E4E               	goto	u1261
  4014     0E4D  2E50               	goto	u1260
  4015     0E4E                     u1261:
  4016     0E4E  3001               	movlw	1
  4017     0E4F  2E51               	goto	u1270
  4018     0E50                     u1260:
  4019     0E50  3000               	movlw	0
  4020     0E51                     u1270:
  4021     0E51  1383               	bcf	3,7	;select IRP bank0
  4022     0E52  0080               	movwf	0
  4023                           
  4024                           ;main.c: 395:     *high_active = (high_sensor_high_count < 45);
  4025     0E53  0874               	movf	getSensorResults@high_active,w
  4026     0E54  0084               	movwf	4
  4027     0E55  302D               	movlw	45
  4028     0E56  023F               	subwf	_high_sensor_high_count,w	;volatile
  4029     0E57  1C03               	skipc
  4030     0E58  2E5A               	goto	u1281
  4031     0E59  2E5C               	goto	u1280
  4032     0E5A                     u1281:
  4033     0E5A  3001               	movlw	1
  4034     0E5B  2E5D               	goto	u1290
  4035     0E5C                     u1280:
  4036     0E5C  3000               	movlw	0
  4037     0E5D                     u1290:
  4038     0E5D  0080               	movwf	0
  4039                           
  4040                           ;main.c: 396:     *flow_active = (flow_sensor_high_count < 45);
  4041     0E5E  0875               	movf	getSensorResults@flow_active,w
  4042     0E5F  0084               	movwf	4
  4043     0E60  302D               	movlw	45
  4044     0E61  023E               	subwf	_flow_sensor_high_count,w	;volatile
  4045     0E62  1C03               	skipc
  4046     0E63  2E65               	goto	u1301
  4047     0E64  2E67               	goto	u1300
  4048     0E65                     u1301:
  4049     0E65  3001               	movlw	1
  4050     0E66  2E68               	goto	u1310
  4051     0E67                     u1300:
  4052     0E67  3000               	movlw	0
  4053     0E68                     u1310:
  4054     0E68  0080               	movwf	0
  4055     0E69                     l1501:
  4056                           
  4057                           ;main.c: 397:     sensors_reading_complete = 0;
  4058     0E69  01BD               	clrf	_sensors_reading_complete	;volatile
  4059     0E6A                     l1503:
  4060                           
  4061                           ;main.c: 398:     return 1;
  4062     0E6A  3001               	movlw	1
  4063     0E6B  2E6D               	goto	l259
  4064     0E6C                     l1507:
  4065                           
  4066                           ;main.c: 400:   return 0;
  4067     0E6C  3000               	movlw	0
  4068     0E6D                     l259:
  4069     0E6D  0008               	return
  4070     0E6E                     __end_of_getSensorResults:
  4071                           
  4072                           	psect	text14
  4073     0646                     __ptext14:	
  4074 ;; *************** function _check_button_press *****************
  4075 ;; Defined at:
  4076 ;;		line 540 in file "main.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  hold_count      2    6[COMMON] unsigned int 
  4081 ;;  long_press_t    2    4[COMMON] unsigned int 
  4082 ;;  long_press      1    8[COMMON] _Bool 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      _Bool 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4092 ;;      Params:         0       0       0       0
  4093 ;;      Locals:         5       0       0       0
  4094 ;;      Temps:          2       0       0       0
  4095 ;;      Totals:         7       0       0       0
  4096 ;;Total ram usage:        7 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 1
  4099 ;; This function calls:
  4100 ;;		Nothing
  4101 ;; This function is called by:
  4102 ;;		_main
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106     0646                     _check_button_press:	
  4107                           ;psect for function _check_button_press
  4108                           
  4109     0646                     l1447:	
  4110                           ;incstack = 0
  4111                           ; Regs used in _check_button_press: [wreg+status,2+status,0]
  4112                           
  4113                           
  4114                           ;main.c: 541:   _Bool long_press = 0;
  4115     0646  01F9               	clrf	check_button_press@long_press
  4116     0647                     l1449:
  4117                           
  4118                           ;main.c: 544:   if (PORTCbits.RC1 == 0) {
  4119     0647  1283               	bcf	3,5	;RP0=0, select bank0
  4120     0648  1303               	bcf	3,6	;RP1=0, select bank0
  4121     0649  1887               	btfsc	7,1	;volatile
  4122     064A  2E4C               	goto	u1181
  4123     064B  2E4D               	goto	u1180
  4124     064C                     u1181:
  4125     064C  2EB0               	goto	l1479
  4126     064D                     u1180:
  4127     064D                     l1451:
  4128                           
  4129                           ;main.c: 546:     _delay((unsigned long)((50)*(8000000/4000.0)));
  4130     064D  3082               	movlw	130
  4131     064E  00F4               	movwf	??_check_button_press+1
  4132     064F  30DD               	movlw	221
  4133     0650  00F3               	movwf	??_check_button_press
  4134     0651                     u2947:
  4135     0651  0BF3               	decfsz	??_check_button_press,f
  4136     0652  2E51               	goto	u2947
  4137     0653  0BF4               	decfsz	??_check_button_press+1,f
  4138     0654  2E51               	goto	u2947
  4139     0655  2E56               	nop2
  4140     0656                     l1453:
  4141                           
  4142                           ;main.c: 549:     if (PORTCbits.RC1 == 0) {
  4143     0656  1283               	bcf	3,5	;RP0=0, select bank0
  4144     0657  1303               	bcf	3,6	;RP1=0, select bank0
  4145     0658  1887               	btfsc	7,1	;volatile
  4146     0659  2E5B               	goto	u1191
  4147     065A  2E5C               	goto	u1190
  4148     065B                     u1191:
  4149     065B  2EB0               	goto	l1479
  4150     065C                     u1190:
  4151     065C                     l1455:
  4152                           
  4153                           ;main.c: 551:       unsigned int hold_count = 0;
  4154     065C  01F7               	clrf	check_button_press@hold_count
  4155     065D  01F8               	clrf	check_button_press@hold_count+1
  4156     065E                     l1457:
  4157                           
  4158                           ;main.c: 552:       unsigned int long_press_threshold = 20;
  4159     065E  3014               	movlw	20
  4160     065F  00F5               	movwf	check_button_press@long_press_threshold
  4161     0660  3000               	movlw	0
  4162     0661  00F6               	movwf	check_button_press@long_press_threshold+1
  4163                           
  4164                           ;main.c: 555:       while (PORTCbits.RC1 == 0) {
  4165     0662  2E98               	goto	l315
  4166     0663                     l1459:
  4167                           
  4168                           ;main.c: 556:         _delay((unsigned long)((10)*(8000000/4000.0)));
  4169     0663  301A               	movlw	26
  4170     0664  00F4               	movwf	??_check_button_press+1
  4171     0665  30F8               	movlw	248
  4172     0666  00F3               	movwf	??_check_button_press
  4173     0667                     u2957:
  4174     0667  0BF3               	decfsz	??_check_button_press,f
  4175     0668  2E67               	goto	u2957
  4176     0669  0BF4               	decfsz	??_check_button_press+1,f
  4177     066A  2E67               	goto	u2957
  4178     066B  0000               	nop
  4179                           
  4180                           ;main.c: 557:         hold_count++;
  4181     066C  3001               	movlw	1
  4182     066D  07F7               	addwf	check_button_press@hold_count,f
  4183     066E  1803               	skipnc
  4184     066F  0AF8               	incf	check_button_press@hold_count+1,f
  4185     0670  3000               	movlw	0
  4186     0671  07F8               	addwf	check_button_press@hold_count+1,f
  4187                           
  4188                           ;main.c: 560:         if (hold_count >= long_press_threshold) {
  4189     0672  0876               	movf	check_button_press@long_press_threshold+1,w
  4190     0673  0278               	subwf	check_button_press@hold_count+1,w
  4191     0674  1D03               	skipz
  4192     0675  2E78               	goto	u1205
  4193     0676  0875               	movf	check_button_press@long_press_threshold,w
  4194     0677  0277               	subwf	check_button_press@hold_count,w
  4195     0678                     u1205:
  4196     0678  1C03               	skipc
  4197     0679  2E7B               	goto	u1201
  4198     067A  2E7C               	goto	u1200
  4199     067B                     u1201:
  4200     067B  2E98               	goto	l315
  4201     067C                     u1200:
  4202     067C                     l1461:
  4203                           
  4204                           ;main.c: 561:           long_press = 1;
  4205     067C  3001               	movlw	1
  4206     067D  00F9               	movwf	check_button_press@long_press
  4207                           
  4208                           ;main.c: 566:           while (PORTCbits.RC1 == 0) {
  4209     067E  2E88               	goto	l1465
  4210     067F                     l1463:
  4211                           
  4212                           ;main.c: 567:             _delay((unsigned long)((10)*(8000000/4000.0)));
  4213     067F  301A               	movlw	26
  4214     0680  00F4               	movwf	??_check_button_press+1
  4215     0681  30F8               	movlw	248
  4216     0682  00F3               	movwf	??_check_button_press
  4217     0683                     u2967:
  4218     0683  0BF3               	decfsz	??_check_button_press,f
  4219     0684  2E83               	goto	u2967
  4220     0685  0BF4               	decfsz	??_check_button_press+1,f
  4221     0686  2E83               	goto	u2967
  4222     0687  0000               	nop
  4223     0688                     l1465:
  4224                           
  4225                           ;main.c: 566:           while (PORTCbits.RC1 == 0) {
  4226     0688  1283               	bcf	3,5	;RP0=0, select bank0
  4227     0689  1303               	bcf	3,6	;RP1=0, select bank0
  4228     068A  1C87               	btfss	7,1	;volatile
  4229     068B  2E8D               	goto	u1211
  4230     068C  2E8E               	goto	u1210
  4231     068D                     u1211:
  4232     068D  2E7F               	goto	l1463
  4233     068E                     u1210:
  4234     068E                     l1467:
  4235                           
  4236                           ;main.c: 571:           _delay((unsigned long)((50)*(8000000/4000.0)));
  4237     068E  3082               	movlw	130
  4238     068F  00F4               	movwf	??_check_button_press+1
  4239     0690  30DD               	movlw	221
  4240     0691  00F3               	movwf	??_check_button_press
  4241     0692                     u2977:
  4242     0692  0BF3               	decfsz	??_check_button_press,f
  4243     0693  2E92               	goto	u2977
  4244     0694  0BF4               	decfsz	??_check_button_press+1,f
  4245     0695  2E92               	goto	u2977
  4246     0696  2E97               	nop2
  4247                           
  4248                           ;main.c: 572:           break;
  4249     0697  2E9E               	goto	l1469
  4250     0698                     l315:	
  4251                           ;main.c: 574:       }
  4252                           
  4253                           
  4254                           ;main.c: 555:       while (PORTCbits.RC1 == 0) {
  4255     0698  1283               	bcf	3,5	;RP0=0, select bank0
  4256     0699  1303               	bcf	3,6	;RP1=0, select bank0
  4257     069A  1C87               	btfss	7,1	;volatile
  4258     069B  2E9D               	goto	u1221
  4259     069C  2E9E               	goto	u1220
  4260     069D                     u1221:
  4261     069D  2E63               	goto	l1459
  4262     069E                     u1220:
  4263     069E                     l1469:
  4264                           
  4265                           ;main.c: 577:       if (!long_press) {
  4266     069E  0879               	movf	check_button_press@long_press,w
  4267     069F  1D03               	btfss	3,2
  4268     06A0  2EA2               	goto	u1231
  4269     06A1  2EA3               	goto	u1230
  4270     06A2                     u1231:
  4271     06A2  2EAE               	goto	l1475
  4272     06A3                     u1230:
  4273     06A3                     l1471:
  4274                           
  4275                           ;main.c: 579:         _delay((unsigned long)((50)*(8000000/4000.0)));
  4276     06A3  3082               	movlw	130
  4277     06A4  00F4               	movwf	??_check_button_press+1
  4278     06A5  30DD               	movlw	221
  4279     06A6  00F3               	movwf	??_check_button_press
  4280     06A7                     u2987:
  4281     06A7  0BF3               	decfsz	??_check_button_press,f
  4282     06A8  2EA7               	goto	u2987
  4283     06A9  0BF4               	decfsz	??_check_button_press+1,f
  4284     06AA  2EA7               	goto	u2987
  4285     06AB  2EAC               	nop2
  4286                           
  4287                           ;main.c: 580:         return 0;
  4288     06AC  3000               	movlw	0
  4289     06AD  2EB1               	goto	l323
  4290     06AE                     l1475:
  4291                           
  4292                           ;main.c: 583:       return 1;
  4293     06AE  3001               	movlw	1
  4294     06AF  2EB1               	goto	l323
  4295     06B0                     l1479:
  4296                           
  4297                           ;main.c: 587:   return 0;
  4298     06B0  3000               	movlw	0
  4299     06B1                     l323:
  4300     06B1  0008               	return
  4301     06B2                     __end_of_check_button_press:
  4302                           
  4303                           	psect	text15
  4304     0718                     __ptext15:	
  4305 ;; *************** function _buzzer_update *****************
  4306 ;; Defined at:
  4307 ;;		line 531 in file "main.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;		None
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4321 ;;      Params:         0       0       0       0
  4322 ;;      Locals:         0       0       0       0
  4323 ;;      Temps:          0       8       0       0
  4324 ;;      Totals:         0       8       0       0
  4325 ;;Total ram usage:        8 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335     0718                     _buzzer_update:	
  4336                           ;psect for function _buzzer_update
  4337                           
  4338     0718                     l1845:	
  4339                           ;incstack = 0
  4340                           ; Regs used in _buzzer_update: [wreg+status,2+status,0]
  4341                           
  4342                           
  4343                           ;main.c: 532:   if (buzzer_active &&
  4344     0718  1283               	bcf	3,5	;RP0=0, select bank0
  4345     0719  1303               	bcf	3,6	;RP1=0, select bank0
  4346     071A  0832               	movf	_buzzer_active,w
  4347     071B  1903               	btfsc	3,2
  4348     071C  2F1E               	goto	u2171
  4349     071D  2F1F               	goto	u2170
  4350     071E                     u2171:
  4351     071E  2F75               	goto	l310
  4352     071F                     u2170:
  4353     071F                     l1847:
  4354     071F  1683               	bsf	3,5	;RP0=1, select bank1
  4355     0720  1303               	bcf	3,6	;RP1=0, select bank1
  4356     0721  0834               	movf	_buzzer_duration^(0+128),w
  4357     0722  1283               	bcf	3,5	;RP0=0, select bank0
  4358     0723  1303               	bcf	3,6	;RP1=0, select bank0
  4359     0724  00C7               	movwf	??_buzzer_update
  4360     0725  1683               	bsf	3,5	;RP0=1, select bank1
  4361     0726  1303               	bcf	3,6	;RP1=0, select bank1
  4362     0727  0835               	movf	(_buzzer_duration+1)^(0+128),w
  4363     0728  1283               	bcf	3,5	;RP0=0, select bank0
  4364     0729  1303               	bcf	3,6	;RP1=0, select bank0
  4365     072A  00C8               	movwf	??_buzzer_update+1
  4366     072B  01C9               	clrf	??_buzzer_update+2
  4367     072C  01CA               	clrf	??_buzzer_update+3
  4368     072D  0828               	movf	_millis,w	;volatile
  4369     072E  00CB               	movwf	??_buzzer_update+4
  4370     072F  0829               	movf	_millis+1,w	;volatile
  4371     0730  00CC               	movwf	??_buzzer_update+5
  4372     0731  082A               	movf	_millis+2,w	;volatile
  4373     0732  00CD               	movwf	??_buzzer_update+6
  4374     0733  082B               	movf	_millis+3,w	;volatile
  4375     0734  00CE               	movwf	??_buzzer_update+7
  4376     0735  1683               	bsf	3,5	;RP0=1, select bank1
  4377     0736  1303               	bcf	3,6	;RP1=0, select bank1
  4378     0737  0824               	movf	_buzzer_start_time^(0+128),w
  4379     0738  1283               	bcf	3,5	;RP0=0, select bank0
  4380     0739  1303               	bcf	3,6	;RP1=0, select bank0
  4381     073A  02CB               	subwf	??_buzzer_update+4,f
  4382     073B  1683               	bsf	3,5	;RP0=1, select bank1
  4383     073C  1303               	bcf	3,6	;RP1=0, select bank1
  4384     073D  0825               	movf	(_buzzer_start_time+1)^(0+128),w
  4385     073E  1C03               	skipc
  4386     073F  0F25               	incfsz	(_buzzer_start_time+1)^(0+128),w
  4387     0740  2F42               	goto	u2181
  4388     0741  2F45               	goto	u2182
  4389     0742                     u2181:
  4390     0742  1283               	bcf	3,5	;RP0=0, select bank0
  4391     0743  1303               	bcf	3,6	;RP1=0, select bank0
  4392     0744  02CC               	subwf	??_buzzer_update+5,f
  4393     0745                     u2182:
  4394     0745  1683               	bsf	3,5	;RP0=1, select bank1
  4395     0746  1303               	bcf	3,6	;RP1=0, select bank1
  4396     0747  0826               	movf	(_buzzer_start_time+2)^(0+128),w
  4397     0748  1C03               	skipc
  4398     0749  0F26               	incfsz	(_buzzer_start_time+2)^(0+128),w
  4399     074A  2F4C               	goto	u2183
  4400     074B  2F4F               	goto	u2184
  4401     074C                     u2183:
  4402     074C  1283               	bcf	3,5	;RP0=0, select bank0
  4403     074D  1303               	bcf	3,6	;RP1=0, select bank0
  4404     074E  02CD               	subwf	??_buzzer_update+6,f
  4405     074F                     u2184:
  4406     074F  1683               	bsf	3,5	;RP0=1, select bank1
  4407     0750  1303               	bcf	3,6	;RP1=0, select bank1
  4408     0751  0827               	movf	(_buzzer_start_time+3)^(0+128),w
  4409     0752  1C03               	skipc
  4410     0753  0F27               	incfsz	(_buzzer_start_time+3)^(0+128),w
  4411     0754  2F56               	goto	u2185
  4412     0755  2F59               	goto	u2186
  4413     0756                     u2185:
  4414     0756  1283               	bcf	3,5	;RP0=0, select bank0
  4415     0757  1303               	bcf	3,6	;RP1=0, select bank0
  4416     0758  02CE               	subwf	??_buzzer_update+7,f
  4417     0759                     u2186:
  4418     0759  1683               	bsf	3,5	;RP0=1, select bank1
  4419     075A  1303               	bcf	3,6	;RP1=0, select bank1
  4420     075B  1283               	bcf	3,5	;RP0=0, select bank0
  4421     075C  1303               	bcf	3,6	;RP1=0, select bank0
  4422     075D  084A               	movf	??_buzzer_update+3,w
  4423     075E  024E               	subwf	??_buzzer_update+7,w
  4424     075F  1D03               	skipz
  4425     0760  2F6B               	goto	u2195
  4426     0761  0849               	movf	??_buzzer_update+2,w
  4427     0762  024D               	subwf	??_buzzer_update+6,w
  4428     0763  1D03               	skipz
  4429     0764  2F6B               	goto	u2195
  4430     0765  0848               	movf	??_buzzer_update+1,w
  4431     0766  024C               	subwf	??_buzzer_update+5,w
  4432     0767  1D03               	skipz
  4433     0768  2F6B               	goto	u2195
  4434     0769  0847               	movf	??_buzzer_update,w
  4435     076A  024B               	subwf	??_buzzer_update+4,w
  4436     076B                     u2195:
  4437     076B  1C03               	skipc
  4438     076C  2F6E               	goto	u2191
  4439     076D  2F6F               	goto	u2190
  4440     076E                     u2191:
  4441     076E  2F75               	goto	l310
  4442     076F                     u2190:
  4443     076F                     l1849:
  4444                           
  4445                           ;main.c: 533:       (millis - buzzer_start_time >= buzzer_duration)) {;main.c: 534:     
      +                          PORTCbits.RC4 = 0;
  4446     076F  1207               	bcf	7,4	;volatile
  4447     0770                     l1851:
  4448                           
  4449                           ;main.c: 535:     buzzer_active = 0;
  4450     0770  01B2               	clrf	_buzzer_active
  4451                           
  4452                           ;main.c: 536:     buzzer_duration = 0;
  4453     0771  1683               	bsf	3,5	;RP0=1, select bank1
  4454     0772  1303               	bcf	3,6	;RP1=0, select bank1
  4455     0773  01B4               	clrf	_buzzer_duration^(0+128)
  4456     0774  01B5               	clrf	(_buzzer_duration+1)^(0+128)
  4457     0775                     l310:
  4458     0775  0008               	return
  4459     0776                     __end_of_buzzer_update:
  4460                           
  4461                           	psect	text16
  4462     0DCA                     __ptext16:	
  4463 ;; *************** function ___wmul *****************
  4464 ;; Defined at:
  4465 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul16.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;  multiplier      2   21[BANK0 ] unsigned int 
  4468 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  product         2   25[BANK0 ] unsigned int 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  2   21[BANK0 ] unsigned int 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4480 ;;      Params:         0       4       0       0
  4481 ;;      Locals:         0       2       0       0
  4482 ;;      Temps:          0       0       0       0
  4483 ;;      Totals:         0       6       0       0
  4484 ;;Total ram usage:        6 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_main
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494     0DCA                     ___wmul:	
  4495                           ;psect for function ___wmul
  4496                           
  4497     0DCA                     l1511:	
  4498                           ;incstack = 0
  4499                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4500                           
  4501     0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  4502     0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  4503     0DCC  01E0               	clrf	___wmul@product
  4504     0DCD  01E1               	clrf	___wmul@product+1
  4505     0DCE                     l1513:
  4506     0DCE  1C5C               	btfss	___wmul@multiplier,0
  4507     0DCF  2DD1               	goto	u1321
  4508     0DD0  2DD2               	goto	u1320
  4509     0DD1                     u1321:
  4510     0DD1  2DD8               	goto	l409
  4511     0DD2                     u1320:
  4512     0DD2                     l1515:
  4513     0DD2  085E               	movf	___wmul@multiplicand,w
  4514     0DD3  07E0               	addwf	___wmul@product,f
  4515     0DD4  1803               	skipnc
  4516     0DD5  0AE1               	incf	___wmul@product+1,f
  4517     0DD6  085F               	movf	___wmul@multiplicand+1,w
  4518     0DD7  07E1               	addwf	___wmul@product+1,f
  4519     0DD8                     l409:
  4520     0DD8  3001               	movlw	1
  4521     0DD9                     u1335:
  4522     0DD9  1003               	clrc
  4523     0DDA  0DDE               	rlf	___wmul@multiplicand,f
  4524     0DDB  0DDF               	rlf	___wmul@multiplicand+1,f
  4525     0DDC  3EFF               	addlw	-1
  4526     0DDD  1D03               	skipz
  4527     0DDE  2DD9               	goto	u1335
  4528     0DDF                     l1517:
  4529     0DDF  3001               	movlw	1
  4530     0DE0                     u1345:
  4531     0DE0  1003               	clrc
  4532     0DE1  0CDD               	rrf	___wmul@multiplier+1,f
  4533     0DE2  0CDC               	rrf	___wmul@multiplier,f
  4534     0DE3  3EFF               	addlw	-1
  4535     0DE4  1D03               	skipz
  4536     0DE5  2DE0               	goto	u1345
  4537     0DE6                     l1519:
  4538     0DE6  085C               	movf	___wmul@multiplier,w
  4539     0DE7  045D               	iorwf	___wmul@multiplier+1,w
  4540     0DE8  1D03               	btfss	3,2
  4541     0DE9  2DEB               	goto	u1351
  4542     0DEA  2DEC               	goto	u1350
  4543     0DEB                     u1351:
  4544     0DEB  2DCE               	goto	l1513
  4545     0DEC                     u1350:
  4546     0DEC                     l1521:
  4547     0DEC  0861               	movf	___wmul@product+1,w
  4548     0DED  00DD               	movwf	?___wmul+1
  4549     0DEE  0860               	movf	___wmul@product,w
  4550     0DEF  00DC               	movwf	?___wmul
  4551     0DF0                     l411:
  4552     0DF0  0008               	return
  4553     0DF1                     __end_of___wmul:
  4554                           
  4555                           	psect	text17
  4556     0E6E                     __ptext17:	
  4557 ;; *************** function ___lmul *****************
  4558 ;; Defined at:
  4559 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul32.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4562 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  product         4    3[COMMON] unsigned long 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  4    0[BANK0 ] unsigned long 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4574 ;;      Params:         0       8       0       0
  4575 ;;      Locals:         4       0       0       0
  4576 ;;      Temps:          1       0       0       0
  4577 ;;      Totals:         5       8       0       0
  4578 ;;Total ram usage:       13 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588     0E6E                     ___lmul:	
  4589                           ;psect for function ___lmul
  4590                           
  4591     0E6E                     l1853:	
  4592                           ;incstack = 0
  4593                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4594                           
  4595     0E6E  3000               	movlw	0
  4596     0E6F  00F7               	movwf	___lmul@product+3
  4597     0E70  3000               	movlw	0
  4598     0E71  00F6               	movwf	___lmul@product+2
  4599     0E72  3000               	movlw	0
  4600     0E73  00F5               	movwf	___lmul@product+1
  4601     0E74  3000               	movlw	0
  4602     0E75  00F4               	movwf	___lmul@product
  4603     0E76                     l1855:
  4604     0E76  1283               	bcf	3,5	;RP0=0, select bank0
  4605     0E77  1303               	bcf	3,6	;RP1=0, select bank0
  4606     0E78  1C47               	btfss	___lmul@multiplier,0
  4607     0E79  2E7B               	goto	u2201
  4608     0E7A  2E7C               	goto	u2200
  4609     0E7B                     u2201:
  4610     0E7B  2E93               	goto	l1859
  4611     0E7C                     u2200:
  4612     0E7C                     l1857:
  4613     0E7C  084B               	movf	___lmul@multiplicand,w
  4614     0E7D  07F4               	addwf	___lmul@product,f
  4615     0E7E  084C               	movf	___lmul@multiplicand+1,w
  4616     0E7F  1103               	clrz
  4617     0E80  1803               	skipnc
  4618     0E81  3E01               	addlw	1
  4619     0E82  1903               	skipnz
  4620     0E83  2E85               	goto	u2211
  4621     0E84  07F5               	addwf	___lmul@product+1,f
  4622     0E85                     u2211:
  4623     0E85  084D               	movf	___lmul@multiplicand+2,w
  4624     0E86  1103               	clrz
  4625     0E87  1803               	skipnc
  4626     0E88  3E01               	addlw	1
  4627     0E89  1903               	skipnz
  4628     0E8A  2E8C               	goto	u2212
  4629     0E8B  07F6               	addwf	___lmul@product+2,f
  4630     0E8C                     u2212:
  4631     0E8C  084E               	movf	___lmul@multiplicand+3,w
  4632     0E8D  1103               	clrz
  4633     0E8E  1803               	skipnc
  4634     0E8F  3E01               	addlw	1
  4635     0E90  1903               	skipnz
  4636     0E91  2E93               	goto	u2213
  4637     0E92  07F7               	addwf	___lmul@product+3,f
  4638     0E93                     u2213:
  4639     0E93                     l1859:
  4640     0E93  3001               	movlw	1
  4641     0E94  00F3               	movwf	??___lmul
  4642     0E95                     u2225:
  4643     0E95  1003               	clrc
  4644     0E96  0DCB               	rlf	___lmul@multiplicand,f
  4645     0E97  0DCC               	rlf	___lmul@multiplicand+1,f
  4646     0E98  0DCD               	rlf	___lmul@multiplicand+2,f
  4647     0E99  0DCE               	rlf	___lmul@multiplicand+3,f
  4648     0E9A  0BF3               	decfsz	??___lmul,f
  4649     0E9B  2E95               	goto	u2225
  4650     0E9C                     l1861:
  4651     0E9C  3001               	movlw	1
  4652     0E9D                     u2235:
  4653     0E9D  1003               	clrc
  4654     0E9E  0CCA               	rrf	___lmul@multiplier+3,f
  4655     0E9F  0CC9               	rrf	___lmul@multiplier+2,f
  4656     0EA0  0CC8               	rrf	___lmul@multiplier+1,f
  4657     0EA1  0CC7               	rrf	___lmul@multiplier,f
  4658     0EA2  3EFF               	addlw	-1
  4659     0EA3  1D03               	skipz
  4660     0EA4  2E9D               	goto	u2235
  4661     0EA5  084A               	movf	___lmul@multiplier+3,w
  4662     0EA6  0449               	iorwf	___lmul@multiplier+2,w
  4663     0EA7  0448               	iorwf	___lmul@multiplier+1,w
  4664     0EA8  0447               	iorwf	___lmul@multiplier,w
  4665     0EA9  1D03               	skipz
  4666     0EAA  2EAC               	goto	u2241
  4667     0EAB  2EAD               	goto	u2240
  4668     0EAC                     u2241:
  4669     0EAC  2E76               	goto	l1855
  4670     0EAD                     u2240:
  4671     0EAD                     l1863:
  4672     0EAD  0877               	movf	___lmul@product+3,w
  4673     0EAE  00CA               	movwf	?___lmul+3
  4674     0EAF  0876               	movf	___lmul@product+2,w
  4675     0EB0  00C9               	movwf	?___lmul+2
  4676     0EB1  0875               	movf	___lmul@product+1,w
  4677     0EB2  00C8               	movwf	?___lmul+1
  4678     0EB3  0874               	movf	___lmul@product,w
  4679     0EB4  00C7               	movwf	?___lmul
  4680     0EB5                     l423:
  4681     0EB5  0008               	return
  4682     0EB6                     __end_of___lmul:
  4683                           
  4684                           	psect	text18
  4685     06B2                     __ptext18:	
  4686 ;; *************** function ___lldiv *****************
  4687 ;; Defined at:
  4688 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  divisor         4    8[BANK0 ] unsigned long 
  4691 ;;  dividend        4   12[BANK0 ] unsigned long 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  quotient        4   16[BANK0 ] unsigned long 
  4694 ;;  counter         1   20[BANK0 ] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  4    8[BANK0 ] unsigned long 
  4697 ;; Registers used:
  4698 ;;		wreg, status,2, status,0
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4704 ;;      Params:         0       8       0       0
  4705 ;;      Locals:         0       5       0       0
  4706 ;;      Temps:          1       0       0       0
  4707 ;;      Totals:         1      13       0       0
  4708 ;;Total ram usage:       14 bytes
  4709 ;; Hardware stack levels used: 1
  4710 ;; Hardware stack levels required when called: 1
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_main
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718     06B2                     ___lldiv:	
  4719                           ;psect for function ___lldiv
  4720                           
  4721     06B2                     l1867:	
  4722                           ;incstack = 0
  4723                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4724                           
  4725     06B2  3000               	movlw	0
  4726     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  4727     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  4728     06B5  00DA               	movwf	___lldiv@quotient+3
  4729     06B6  3000               	movlw	0
  4730     06B7  00D9               	movwf	___lldiv@quotient+2
  4731     06B8  3000               	movlw	0
  4732     06B9  00D8               	movwf	___lldiv@quotient+1
  4733     06BA  3000               	movlw	0
  4734     06BB  00D7               	movwf	___lldiv@quotient
  4735     06BC  0852               	movf	___lldiv@divisor+3,w
  4736     06BD  0451               	iorwf	___lldiv@divisor+2,w
  4737     06BE  0450               	iorwf	___lldiv@divisor+1,w
  4738     06BF  044F               	iorwf	___lldiv@divisor,w
  4739     06C0  1903               	skipnz
  4740     06C1  2EC3               	goto	u2251
  4741     06C2  2EC4               	goto	u2250
  4742     06C3                     u2251:
  4743     06C3  2F0F               	goto	l1887
  4744     06C4                     u2250:
  4745     06C4                     l1869:
  4746     06C4  3001               	movlw	1
  4747     06C5  00DB               	movwf	___lldiv@counter
  4748     06C6  2ED2               	goto	l1873
  4749     06C7                     l1871:
  4750     06C7  3001               	movlw	1
  4751     06C8  00F8               	movwf	??___lldiv
  4752     06C9                     u2265:
  4753     06C9  1003               	clrc
  4754     06CA  0DCF               	rlf	___lldiv@divisor,f
  4755     06CB  0DD0               	rlf	___lldiv@divisor+1,f
  4756     06CC  0DD1               	rlf	___lldiv@divisor+2,f
  4757     06CD  0DD2               	rlf	___lldiv@divisor+3,f
  4758     06CE  0BF8               	decfsz	??___lldiv,f
  4759     06CF  2EC9               	goto	u2265
  4760     06D0  3001               	movlw	1
  4761     06D1  07DB               	addwf	___lldiv@counter,f
  4762     06D2                     l1873:
  4763     06D2  1FD2               	btfss	___lldiv@divisor+3,7
  4764     06D3  2ED5               	goto	u2271
  4765     06D4  2ED6               	goto	u2270
  4766     06D5                     u2271:
  4767     06D5  2EC7               	goto	l1871
  4768     06D6                     u2270:
  4769     06D6                     l1875:
  4770     06D6  3001               	movlw	1
  4771     06D7  00F8               	movwf	??___lldiv
  4772     06D8                     u2285:
  4773     06D8  1003               	clrc
  4774     06D9  0DD7               	rlf	___lldiv@quotient,f
  4775     06DA  0DD8               	rlf	___lldiv@quotient+1,f
  4776     06DB  0DD9               	rlf	___lldiv@quotient+2,f
  4777     06DC  0DDA               	rlf	___lldiv@quotient+3,f
  4778     06DD  0BF8               	decfsz	??___lldiv,f
  4779     06DE  2ED8               	goto	u2285
  4780     06DF                     l1877:
  4781     06DF  0852               	movf	___lldiv@divisor+3,w
  4782     06E0  0256               	subwf	___lldiv@dividend+3,w
  4783     06E1  1D03               	skipz
  4784     06E2  2EED               	goto	u2295
  4785     06E3  0851               	movf	___lldiv@divisor+2,w
  4786     06E4  0255               	subwf	___lldiv@dividend+2,w
  4787     06E5  1D03               	skipz
  4788     06E6  2EED               	goto	u2295
  4789     06E7  0850               	movf	___lldiv@divisor+1,w
  4790     06E8  0254               	subwf	___lldiv@dividend+1,w
  4791     06E9  1D03               	skipz
  4792     06EA  2EED               	goto	u2295
  4793     06EB  084F               	movf	___lldiv@divisor,w
  4794     06EC  0253               	subwf	___lldiv@dividend,w
  4795     06ED                     u2295:
  4796     06ED  1C03               	skipc
  4797     06EE  2EF0               	goto	u2291
  4798     06EF  2EF1               	goto	u2290
  4799     06F0                     u2291:
  4800     06F0  2F00               	goto	l1883
  4801     06F1                     u2290:
  4802     06F1                     l1879:
  4803     06F1  084F               	movf	___lldiv@divisor,w
  4804     06F2  02D3               	subwf	___lldiv@dividend,f
  4805     06F3  0850               	movf	___lldiv@divisor+1,w
  4806     06F4  1C03               	skipc
  4807     06F5  0F50               	incfsz	___lldiv@divisor+1,w
  4808     06F6  02D4               	subwf	___lldiv@dividend+1,f
  4809     06F7  0851               	movf	___lldiv@divisor+2,w
  4810     06F8  1C03               	skipc
  4811     06F9  0F51               	incfsz	___lldiv@divisor+2,w
  4812     06FA  02D5               	subwf	___lldiv@dividend+2,f
  4813     06FB  0852               	movf	___lldiv@divisor+3,w
  4814     06FC  1C03               	skipc
  4815     06FD  0F52               	incfsz	___lldiv@divisor+3,w
  4816     06FE  02D6               	subwf	___lldiv@dividend+3,f
  4817     06FF                     l1881:
  4818     06FF  1457               	bsf	___lldiv@quotient,0
  4819     0700                     l1883:
  4820     0700  3001               	movlw	1
  4821     0701                     u2305:
  4822     0701  1003               	clrc
  4823     0702  0CD2               	rrf	___lldiv@divisor+3,f
  4824     0703  0CD1               	rrf	___lldiv@divisor+2,f
  4825     0704  0CD0               	rrf	___lldiv@divisor+1,f
  4826     0705  0CCF               	rrf	___lldiv@divisor,f
  4827     0706  3EFF               	addlw	-1
  4828     0707  1D03               	skipz
  4829     0708  2F01               	goto	u2305
  4830     0709                     l1885:
  4831     0709  3001               	movlw	1
  4832     070A  02DB               	subwf	___lldiv@counter,f
  4833     070B  1D03               	btfss	3,2
  4834     070C  2F0E               	goto	u2311
  4835     070D  2F0F               	goto	u2310
  4836     070E                     u2311:
  4837     070E  2ED6               	goto	l1875
  4838     070F                     u2310:
  4839     070F                     l1887:
  4840     070F  085A               	movf	___lldiv@quotient+3,w
  4841     0710  00D2               	movwf	?___lldiv+3
  4842     0711  0859               	movf	___lldiv@quotient+2,w
  4843     0712  00D1               	movwf	?___lldiv+2
  4844     0713  0858               	movf	___lldiv@quotient+1,w
  4845     0714  00D0               	movwf	?___lldiv+1
  4846     0715  0857               	movf	___lldiv@quotient,w
  4847     0716  00CF               	movwf	?___lldiv
  4848     0717                     l445:
  4849     0717  0008               	return
  4850     0718                     __end_of___lldiv:
  4851                           
  4852                           	psect	text19
  4853     0EB6                     __ptext19:	
  4854 ;; *************** function _isr *****************
  4855 ;; Defined at:
  4856 ;;		line 403 in file "main.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;		None
  4859 ;; Auto vars:     Size  Location     Type
  4860 ;;		None
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  1    wreg      void 
  4863 ;; Registers used:
  4864 ;;		wreg, status,2, status,0
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4870 ;;      Params:         0       0       0       0
  4871 ;;      Locals:         0       0       0       0
  4872 ;;      Temps:          2       0       0       0
  4873 ;;      Totals:         2       0       0       0
  4874 ;;Total ram usage:        2 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		Interrupt level 1
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883     0EB6                     _isr:	
  4884                           ;psect for function _isr
  4885                           
  4886     0EB6                     i1l1771:
  4887                           
  4888                           ;main.c: 405:   if (PIR1bits.TMR1IF) {
  4889     0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4890     0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4891     0EB8  1C0C               	btfss	12,0	;volatile
  4892     0EB9  2EBB               	goto	u208_21
  4893     0EBA  2EBC               	goto	u208_20
  4894     0EBB                     u208_21:
  4895     0EBB  2ECF               	goto	i1l1781
  4896     0EBC                     u208_20:
  4897     0EBC                     i1l1773:
  4898                           
  4899                           ;main.c: 406:     millis ++;
  4900     0EBC  3001               	movlw	1
  4901     0EBD  07A8               	addwf	_millis,f	;volatile
  4902     0EBE  3000               	movlw	0
  4903     0EBF  1803               	skipnc
  4904     0EC0  3001               	movlw	1
  4905     0EC1  07A9               	addwf	_millis+1,f	;volatile
  4906     0EC2  3000               	movlw	0
  4907     0EC3  1803               	skipnc
  4908     0EC4  3001               	movlw	1
  4909     0EC5  07AA               	addwf	_millis+2,f	;volatile
  4910     0EC6  3000               	movlw	0
  4911     0EC7  1803               	skipnc
  4912     0EC8  3001               	movlw	1
  4913     0EC9  07AB               	addwf	_millis+3,f	;volatile
  4914     0ECA                     i1l1775:
  4915                           
  4916                           ;main.c: 407:     PIR1bits.TMR1IF = 0;
  4917     0ECA  100C               	bcf	12,0	;volatile
  4918     0ECB                     i1l1777:
  4919                           
  4920                           ;main.c: 408:     TMR1H = 255;
  4921     0ECB  30FF               	movlw	255
  4922     0ECC  008F               	movwf	15	;volatile
  4923     0ECD                     i1l1779:
  4924                           
  4925                           ;main.c: 409:     TMR1L = 14;
  4926     0ECD  300E               	movlw	14
  4927     0ECE  008E               	movwf	14	;volatile
  4928     0ECF                     i1l1781:
  4929                           
  4930                           ;main.c: 412:   if (INTCONbits.TMR0IF) {
  4931     0ECF  1D0B               	btfss	11,2	;volatile
  4932     0ED0  2ED2               	goto	u209_21
  4933     0ED1  2ED3               	goto	u209_20
  4934     0ED2                     u209_21:
  4935     0ED2  2EF9               	goto	i1l271
  4936     0ED3                     u209_20:
  4937     0ED3                     i1l1783:
  4938                           
  4939                           ;main.c: 414:     TMR0 = 6;
  4940     0ED3  3006               	movlw	6
  4941     0ED4  0081               	movwf	1	;volatile
  4942                           
  4943                           ;main.c: 415:     INTCONbits.TMR0IF = 0;
  4944     0ED5  110B               	bcf	11,2	;volatile
  4945     0ED6                     i1l1785:
  4946                           
  4947                           ;main.c: 418:     if (sensors_reading_in_progress) {
  4948     0ED6  083C               	movf	_sensors_reading_in_progress,w	;volatile
  4949     0ED7  1903               	btfsc	3,2
  4950     0ED8  2EDA               	goto	u210_21
  4951     0ED9  2EDB               	goto	u210_20
  4952     0EDA                     u210_21:
  4953     0EDA  2EF9               	goto	i1l271
  4954     0EDB                     u210_20:
  4955     0EDB                     i1l1787:
  4956                           
  4957                           ;main.c: 420:       if (PORTBbits.RB5)
  4958     0EDB  1E86               	btfss	6,5	;volatile
  4959     0EDC  2EDE               	goto	u211_21
  4960     0EDD  2EDF               	goto	u211_20
  4961     0EDE                     u211_21:
  4962     0EDE  2EE1               	goto	i1l1791
  4963     0EDF                     u211_20:
  4964     0EDF                     i1l1789:
  4965                           
  4966                           ;main.c: 421:         low_sensor_high_count++;
  4967     0EDF  3001               	movlw	1
  4968     0EE0  07FA               	addwf	_low_sensor_high_count,f	;volatile
  4969     0EE1                     i1l1791:
  4970                           
  4971                           ;main.c: 422:       if (PORTBbits.RB4)
  4972     0EE1  1E06               	btfss	6,4	;volatile
  4973     0EE2  2EE4               	goto	u212_21
  4974     0EE3  2EE5               	goto	u212_20
  4975     0EE4                     u212_21:
  4976     0EE4  2EE7               	goto	i1l1795
  4977     0EE5                     u212_20:
  4978     0EE5                     i1l1793:
  4979                           
  4980                           ;main.c: 423:         high_sensor_high_count++;
  4981     0EE5  3001               	movlw	1
  4982     0EE6  07BF               	addwf	_high_sensor_high_count,f	;volatile
  4983     0EE7                     i1l1795:
  4984                           
  4985                           ;main.c: 424:       if (PORTBbits.RB3)
  4986     0EE7  1D86               	btfss	6,3	;volatile
  4987     0EE8  2EEA               	goto	u213_21
  4988     0EE9  2EEB               	goto	u213_20
  4989     0EEA                     u213_21:
  4990     0EEA  2EED               	goto	i1l269
  4991     0EEB                     u213_20:
  4992     0EEB                     i1l1797:
  4993                           
  4994                           ;main.c: 425:         flow_sensor_high_count++;
  4995     0EEB  3001               	movlw	1
  4996     0EEC  07BE               	addwf	_flow_sensor_high_count,f	;volatile
  4997     0EED                     i1l269:
  4998                           
  4999                           ;main.c: 427:       reading_count++;
  5000     0EED  3001               	movlw	1
  5001     0EEE  07FB               	addwf	_reading_count,f	;volatile
  5002     0EEF                     i1l1799:
  5003                           
  5004                           ;main.c: 430:       if (reading_count >= 50) {
  5005     0EEF  3032               	movlw	50
  5006     0EF0  027B               	subwf	_reading_count,w	;volatile
  5007     0EF1  1C03               	skipc
  5008     0EF2  2EF4               	goto	u214_21
  5009     0EF3  2EF5               	goto	u214_20
  5010     0EF4                     u214_21:
  5011     0EF4  2EF9               	goto	i1l271
  5012     0EF5                     u214_20:
  5013     0EF5                     i1l1801:
  5014                           
  5015                           ;main.c: 431:         sensors_reading_in_progress = 0;
  5016     0EF5  01BC               	clrf	_sensors_reading_in_progress	;volatile
  5017     0EF6                     i1l1803:
  5018                           
  5019                           ;main.c: 432:         sensors_reading_complete = 1;
  5020     0EF6  3001               	movlw	1
  5021     0EF7  00BD               	movwf	_sensors_reading_complete	;volatile
  5022     0EF8                     i1l1805:
  5023                           
  5024                           ;main.c: 433:         INTCONbits.TMR0IE =
  5025     0EF8  128B               	bcf	11,5	;volatile
  5026     0EF9                     i1l271:
  5027     0EF9  0872               	movf	??_isr+1,w
  5028     0EFA  008A               	movwf	10
  5029     0EFB  0E71               	swapf	??_isr,w
  5030     0EFC  0083               	movwf	3
  5031     0EFD  0EFE               	swapf	btemp,f
  5032     0EFE  0E7E               	swapf	btemp,w
  5033     0EFF  0009               	retfie
  5034     0F00                     __end_of_isr:
  5035     0001                     ___latbits      equ	1
  5036     007E                     btemp           set	126	;btemp
  5037     007E                     wtemp0          set	126
  5038                           
  5039                           	psect	intentry
  5040     0004                     __pintentry:	
  5041                           ;incstack = 0
  5042                           ; Regs used in _isr: [wreg+status,2+status,0]
  5043                           
  5044     0004                     interrupt_function:
  5045     007E                     saved_w         set	btemp
  5046     0004  00FE               	movwf	btemp
  5047     0005  0E03               	swapf	3,w
  5048     0006  00F1               	movwf	??_isr
  5049     0007  080A               	movf	10,w
  5050     0008  00F2               	movwf	??_isr+1
  5051     0009  158A  2EB6         	ljmp	_isr
  5052                           
  5053                           	psect	config
  5054                           
  5055                           ;Config register CONFIG1 @ 0x2007
  5056                           ;	Oscillator Selection bits
  5057                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5058                           ;	Watchdog Timer Enable bit
  5059                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5060                           ;	Power-up Timer Enable bit
  5061                           ;	PWRTE = ON, PWRT enabled
  5062                           ;	RE3/MCLR pin function select bit
  5063                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  5064                           ;	Code Protection bit
  5065                           ;	CP = OFF, Program memory code protection is disabled
  5066                           ;	Data Code Protection bit
  5067                           ;	CPD = OFF, Data memory code protection is disabled
  5068                           ;	Brown Out Reset Selection bits
  5069                           ;	BOREN = ON, BOR enabled
  5070                           ;	Internal External Switchover bit
  5071                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5072                           ;	Fail-Safe Clock Monitor Enabled bit
  5073                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5074                           ;	Low Voltage Programming Enable bit
  5075                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5076                           ;	In-Circuit Debugger Mode bit
  5077                           ;	DEBUG = 0x1, unprogrammed default
  5078     2007                     	org	8199
  5079     2007  23E4               	dw	9188

Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      9      11
    BANK0            80     29      75
    BANK1            80      8      54
    BANK2            69      0       0

Pointer List with Targets:

    getSensorResults@flow_active	PTR _Bool  size(1) Largest target is 1
		 -> flow_sensor_active(BANK0[1]), 

    getSensorResults@high_active	PTR _Bool  size(1) Largest target is 1
		 -> high_sensor_active(BANK0[1]), 

    getSensorResults@low_active	PTR _Bool  size(1) Largest target is 1
		 -> low_sensor_active(BANK0[1]), 

    loadSettings@value16bit1	PTR unsigned int  size(1) Largest target is 2
		 -> minvoltagelimit(BANK0[2]), 

    loadSettings@value16bit2	PTR unsigned int  size(1) Largest target is 2
		 -> maxvoltagelimit(BANK0[2]), 

    loadSettings@value16bit3	PTR unsigned int  size(1) Largest target is 2
		 -> minimumrunningvoltage(BANK0[2]), 

    loadSettings@value16bit4	PTR unsigned int  size(1) Largest target is 2
		 -> maximumrinningvoltage(BANK1[2]), 

    loadSettings@value8bit	PTR unsigned char  size(1) Largest target is 1
		 -> maxruntimeindex(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_check_button_press
    _saveSettings->_EEPROM_Write16
    _EEPROM_Write16->_EEPROM_Write
    _loadSettings->_EEPROM_Read16
    _EEPROM_Read16->_EEPROM_Read
    ___wmul->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___wmul
    _loadSettings->_EEPROM_Read16
    ___wmul->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1523
                                             27 BANK0      2     2      0
                                              0 BANK1      8     8      0
                            ___lldiv
                             ___lmul
                             ___wmul
                      _buzzer_update
                 _check_button_press
                   _getSensorResults
                         _initSystem
                         _init_timer
                       _loadSettings
                            _readADC
                       _saveSettings
                        _setupTimer0
                 _startSensorReading
                     _trigger_buzzer
 ---------------------------------------------------------------------------------
 (1) _trigger_buzzer                                       2     0      2      25
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _startSensorReading                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _saveSettings                                         9     1      8     337
                                              7 COMMON     1     1      0
                                              0 BANK0      8     0      8
                       _EEPROM_Write
                     _EEPROM_Write16
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write16                                       3     1      2     161
                                              4 COMMON     3     1      2
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         2     1      1      55
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      29
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _loadSettings                                         5     0      5     395
                                              3 BANK0      5     0      5
                        _EEPROM_Read
                      _EEPROM_Read16
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read16                                        7     5      2     178
                                              3 COMMON     4     2      2
                                              0 BANK0      3     3      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          1     1      0      47
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _getSensorResults                                     3     0      3      69
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _check_button_press                                   7     7      0      71
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_update                                        8     8      0       0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4      94
                                             21 BANK0      6     2      4
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     148
                                              2 COMMON     5     5      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     253
                                              7 COMMON     1     1      0
                                              8 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   ___wmul
     ___lldiv (ARG)
     ___lmul (ARG)
   _buzzer_update
   _check_button_press
   _getSensorResults
   _initSystem
   _init_timer
   _loadSettings
     _EEPROM_Read
     _EEPROM_Read16
       _EEPROM_Read
   _readADC
   _saveSettings
     _EEPROM_Write
     _EEPROM_Write16
       _EEPROM_Write
   _setupTimer0
   _startSensorReading
   _trigger_buzzer

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               69      0       0      0.0%
BITBANK2            69      0       0      0.0%
BANK1               80      8      54     67.5%
BITBANK1            80      0       0      0.0%
BANK0               80     29      75     93.8%
BITBANK0            80      0       0      0.0%
COMMON              13      9      11     84.6%
BITCOMMON           13      0       0      0.0%
DATA                 0      0     139      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Apr 24 10:38:04 2025

                                     pc 0002                                      _lt 00A0  
                                    _to 0043                                      fsr 0004  
                   ___wmul@multiplicand 005E                                     l201 0295  
                                   l211 0463                                     l310 0775  
                                   l302 07FA                                     l230 0582  
                                   l214 03E7                                     l231 057E  
                                   l233 057B                                     l242 0E3F  
                                   l306 0E17                                     l411 0DF0  
                                   l323 06B1                                     l315 0698  
                                   l251 0D02                                     l245 0D9B  
                                   l423 0EB5                                     l255 0D20  
                                   l248 0DA5                                     l280 0D7D  
                                   l409 0DD8                                     l274 0D41  
                                   l282 0D81                                     l259 0E6D  
                                   l283 0D83                                     l292 0D11  
                                   l445 0717                                     l277 0D67  
                                   l286 0D54                                     l295 0DC9  
                                   l289 0D65                                     l299 07C4  
                     _low_sensor_active 0046                                     _isr 0EB6  
                                   _smc 0042                                     fsr0 0004  
                                   indf 0000                       main@is_long_press 0062  
                                  l2001 02F9                                    l2011 0359  
                                  l2003 02FF                                    l2021 037F  
                                  l2013 035E                                    l2005 0349  
                                  l2031 03DB                                    l2023 0383  
                                  l2015 0363                                    l2007 034D  
                                  l2041 040B                                    l2033 03E1  
                                  l2017 0368                                    l2025 038A  
                                  l2009 0354                                    l2051 0469  
                                  l2043 044F                                    l2035 03E5  
                                  l2027 0391                                    l2019 0369  
                                  l1501 0E69                                    l1421 0D93  
                                  l1341 0D73                                    l2061 0478  
                                  l2053 046B                                    l2037 03E8  
                                  l2045 0455                                    l2029 03D7  
                                  l1511 0DCA                                    l1503 0E6A  
                                  l1423 0D98                                    l1351 0D7C  
                                  l1343 0D76                                    l1431 0DF8  
                                  l2071 04DE                                    l2063 0479  
                                  l2047 045F                                    l2039 03F2  
                                  l2055 046C                                    l1521 0DEC  
                                  l1513 0DCE                                    l1425 0D9F  
                                  l1345 0D77                                    l1337 0D67  
                                  l1417 07C6                                    l1433 0DF9  
                                  l2081 0544                                    l2073 04E1  
                                  l2065 047E                                    l2057 0472  
                                  l2049 0464                                    l1515 0DD2  
                                  l1451 064D                                    l1507 0E6C  
                                  l1419 0D85                                    l1347 0D78  
                                  l1339 0D6D                                    l1363 0D04  
                                  l1435 0E13                                    l2091 05C0  
                                  l2083 054E                                    l2075 04E9  
                                  l2067 0486                                    l2059 0473  
                                  l1517 0DDF                                    l1461 067C  
                                  l1453 0656                                    l1381 0E25  
                                  l1373 0E18                                    l1445 0D31  
                                  l1349 0D7A                                    l1429 0DF1  
                                  l2093 05D8                                    l2085 0555  
                                  l2069 048F                                    l2077 04ED  
                                  l1519 0DE6                                    l1471 06A3  
                                  l1463 067F                                    l1455 065C  
                                  l1447 0646                                    l1391 0E3A  
                                  l1383 0E27                                    l1375 0E1C  
                                  l2095 05DF                                    l2087 056A  
                                  l2079 04F5                                    l1465 0688  
                                  l1457 065E                                    l1449 0647  
                                  l1393 0E3D                                    l1385 0E29  
                                  l1377 0E20                                    l2097 061D  
                                  l2089 0584                                    l1475 06AE  
                                  l1467 068E                                    l1459 0663  
                                  l1395 0E3E                                    l1387 0E2D  
                                  l1379 0E21                                    l1811 0D5E  
                                  l1483 0CF5                                    l1491 0D12  
                                  l1469 069E                                    l1389 0E31  
                                  l1813 0D61                                    l1821 0DC5  
                                  l1485 0CF9                                    l1493 0D19  
                                  l1901 0057                                    l1479 06B0  
                                  l1807 0D54                                    l1831 0781  
                                  l1487 0CFD                                    l1495 0D1E  
                                  l1911 00D6                                    l1903 005B  
                                  l1497 0E40                                    l1809 0D5A  
                                  l1817 0DA9                                    l1841 07C3  
                                  l1833 078B                                    l1825 0776  
                                  l1489 0D01                                    l1921 00E3  
                                  l1913 00DD                                    l1905 0061  
                                  l1851 0770                                    l1499 0E47  
                                  l1819 0DB5                                    l1835 0799  
                                  l1827 077F                                    l1923 00E9  
                                  l1931 0106                                    l1915 00E0  
                                  l1907 007F                                    l1861 0E9C  
                                  l1853 0E6E                                    l1845 0718  
                                  l1837 07A7                                    l1941 011F  
                                  l1933 0109                                    l1925 00EF  
                                  l1909 0089                                    l1871 06C7  
                                  l1863 0EAD                                    l1855 0E76  
                                  l1847 071F                                    l1839 07B5  
                                  l1951 0166                                    l1935 010C  
                                  l1927 00F4                                    l1881 06FF  
                                  l1873 06D2                                    l1857 0E7C  
                                  l1849 076F                                    l1961 0195  
                                  l1953 0177                                    l1945 0124  
                                  l1929 00F9                                    l1883 0700  
                                  l1875 06D6                                    l1867 06B2  
                                  l1859 0E93                                    l1971 01B6  
                                  l1963 019B                                    l1955 017D  
                                  l1947 012F                                    l1939 0113  
                                  l1891 0035                                    l1885 0709  
                                  l1877 06DF                                    l1869 06C4  
                                  l1981 01D6                                    l1973 01BB  
                                  l1965 01A9                                    l1957 018A  
                                  l1949 0131                                    l1893 0038  
                                  l1879 06F1                                    l1887 070F  
                                  l1991 029D                                    l1983 0226  
                                  l1967 01B0                                    l1975 01BD  
                                  l1959 0190                                    l1895 004C  
                                  l1993 02A3                                    l1977 01C5  
                                  l1985 0233                                    l1969 01B1  
                                  l1897 004F                                    l1995 02A8  
                                  l1987 023B                                    l1979 01CD  
                                  l1899 0053                                    l1997 02F2  
                                  l1989 028B                                    l1999 02F6  
                                  ?_isr 0071                                    u1200 067C  
                                  u1201 067B                                    u1210 068E  
                                  u1130 0D9F                                    u1211 068D  
                                  u1131 0D9E                                    u1220 069E  
                                  u1300 0E67                                    u1140 0DF8  
                                  u1221 069D                                    u1205 0678  
                                  u1301 0E65                                    u1125 0D88  
                                  u1141 0DF7                                    u1230 06A3  
                                  u1310 0E68                                    u1231 06A2  
                                  u2200 0E7C                                    u1320 0DD2  
                                  u1080 0D6D                                    u1240 0D19  
                                  u2201 0E7B                                    u1321 0DD1  
                                  u1081 0D6C                                    u1241 0D18  
                                  u1250 0E47                                    u1090 0D81  
                                  u2211 0E85                                    u1251 0E46  
                                  u1091 0D80                                    u2212 0E8C  
                                  u1180 064D                                    u1260 0E50  
                                  u2213 0E93                                    u1181 064C  
                                  u1261 0E4E                                    u2310 070F  
                                  u1350 0DEC                                    u1190 065C  
                                  u1270 0E51                                    u2150 0D5A  
                                  u2311 070E                                    u1351 0DEB  
                                  u1335 0DD9                                    u1191 065B  
                                  u2151 0D59                                    u2240 0EAD  
                                  u1280 0E5C                                    u2160 077F  
                                  u2400 0187                                    u2320 004C  
                                  u2305 0701                                    u2241 0EAC  
                                  u2225 0E95                                    u1345 0DE0  
                                  u1281 0E5A                                    u2161 077E  
                                  u2401 0183                                    u2321 004B  
                                  u2250 06C4                                    u2170 071F  
                                  u1290 0E5D                                    u2330 00E9  
                                  u2251 06C3                                    u2235 0E9D  
                                  u2171 071E                                    u2331 00E8  
                                  u2420 0190                                    u2340 00F4  
                                  u2181 0742                                    u2501 01F9  
                                  u2421 018F                                    u2341 00F3  
                                  u2270 06D6                                    u2190 076F  
                                  u2182 0745                                    u2510 0226  
                                  u2502 01FC                                    u2430 0195  
                                  u2414 018A                                    u2350 0103  
                                  u2271 06D5                                    u2191 076E  
                                  u2183 074C                                    u2511 0225  
                                  u2503 0203                                    u2431 0194  
                                  u2351 00FF                                    u2184 074F  
                                  u2520 023B                                    u2504 0206  
                                  u2440 01A9                                    u2265 06C9  
                                  u2185 0756                                    u2601 032A  
                                  u2521 023A                                    u2513 0222  
                                  u2505 020D                                    u2441 01A8  
                                  u2290 06F1                                    u2186 0759  
                                  u2610 0349                                    u2602 032B  
                                  u2506 0210                                    u2450 01B0  
                                  u2370 0112                                    u2291 06F0  
                                  u2195 076B                                    u2611 0348  
                                  u2603 0330                                    u2531 025E  
                                  u2451 01AF                                    u2371 0111  
                                  u2700 03E1                                    u2620 0354  
                                  u2604 0331                                    u2540 028B  
                                  u2532 0261                                    u2460 01B6  
                                  u2380 0177                                    u2364 0106  
                                  u2285 06D8                                    u2701 03E0  
                                  u2621 0353                                    u2613 0345  
                                  u2605 0336                                    u2541 028A  
                                  u2533 0268                                    u2461 01B5  
                                  u2381 0176                                    u2710 03E5  
                                  u2630 0359                                    u2606 0337  
                                  u2550 029D                                    u2534 026B  
                                  u2470 01BB                                    u2390 017D  
                                  u2295 06ED                                    u2711 03E4  
                                  u2631 0358                                    u2551 029C  
                                  u2543 0287                                    u2535 0272  
                                  u2471 01BA                                    u2391 017C  
                                  u2720 03F2                                    u2640 035E  
                                  u2560 02A3                                    u2536 0275  
                                  u2480 01C5                                    u2801 04B2  
                                  u2721 03F1                                    u2641 035D  
                                  u2561 02A2                                    u2481 01C4  
                                  u2385 0173                                    u2810 04DE  
                                  u2802 04B5                                    u2650 0363  
                                  u2490 01CD                                    u2811 04DD  
                                  u2803 04BC                                    u2731 0430  
                                  u2651 0362                                    u2571 02D3  
                                  u2491 01CC                                    u2820 04F5  
                                  u2804 04BF                                    u2740 044F  
                                  u2732 0431                                    u2660 0368  
                                  u2580 02F2                                    u2572 02D4  
                                  u2901 05FE                                    u2821 04F4  
                                  u2813 04DA                                    u2805 04C6  
                                  u2741 044E                                    u2733 0436  
                                  u2661 0367                                    u2581 02F1  
                                  u2573 02D9                                    u2910 061D  
                                  u2902 05FF                                    u2806 04C9  
                                  u2750 0469                                    u2734 0437  
                                  u2670 0391                                    u2590 02FF  
                                  u2574 02DA                                    u2911 061C  
                                  u2903 0604                                    u2831 0518  
                                  u2751 0468                                    u2735 043C  
                                  u2671 0390                                    u2591 02FE  
                                  u2583 02EE                                    u2575 02DF  
                                  u2904 0605                                    u2840 0544  
                                  u2832 051B                                    u2760 0472  
                                  u2736 043D                                    u2576 02E0  
                                  u2913 0619                                    u2905 060A  
                                  u2841 0543                                    u2833 0522  
                                  u2761 0471                                    u2745 044B  
                                  u2681 03B8                                    u2906 060B  
                                  u2850 0555                                    u2834 0525  
                                  u2770 0478                                    u2690 03D7  
                                  u2682 03B9                                    u2851 0554  
                                  u2843 0540                                    u2835 052C  
                                  u2771 0477                                    u2691 03D6  
                                  u2683 03BE                                    u2860 056A  
                                  u2836 052F                                    u2780 047E  
                                  u2684 03BF                                    u2861 0569  
                                  u2781 047D                                    u2685 03C4  
                                  u2870 057B                                    u2790 0486  
                                  u2686 03C5                                    u2927 0D95  
                                  u2871 057A                                    u2791 0485  
                                  u2695 03D3                                    u2937 0E35  
                                  u2881 05A1                                    u2865 0566  
                                  u2890 05C0                                    u2882 05A2  
                                  u2947 0651                                    u2891 05BF  
                                  u2883 05A7                                    u2875 0577  
                                  u2884 05A8                                    u2957 0667  
                                  u2893 05BC                                    u2885 05AD  
                                  u2886 05AE                                    u2967 0683  
                                  u2977 0692                                    u2987 06A7  
                                  _TMR0 0001                                    _main 0035  
                                  btemp 007E                                    start 000B  
                     ?_getSensorResults 0073             _sensors_reading_in_progress 003C  
                    ??_getSensorResults 0076                    __end_of_EEPROM_Write 0D84  
                                 ??_isr 0071                                   ?_main 0071  
                                 _EEADR 010D                                   _ANSEL 0188  
                       __end_of___lldiv 0718                                   _T1CON 0010  
                                 i1l271 0EF9                                   i1l269 0EED  
                                 _TMR1H 000F                                   _TMR1L 000E  
                                 _PORTA 0005                                   _PORTB 0006  
                                 _PORTC 0007                                   _TRISA 0085  
                                 _TRISB 0086                                   _TRISC 0087  
                   ___lmul@multiplicand 004B                         __end_of_readADC 0DA6  
                                 main@i 0063                                   pclath 000A  
                                 status 0003                                   wtemp0 007E  
               loadSettings@value16bit1 004B                 loadSettings@value16bit2 004C  
               loadSettings@value16bit3 004D                 loadSettings@value16bit4 004E  
                      EEPROM_Write@data 0073                     _maxvoltageerrortime 00CA  
                       __initialization 000D                            _voltageerror 003A  
            __end_of_startSensorReading 0D21                            __end_of_main 0646  
                 __end_of_EEPROM_Read16 0DCA                           ?_loadSettings 004A  
                                ??_main 00CE                       _buzzer_start_time 00A4  
                                _ADCON0 001F                                  _ADCON1 009F  
                                _ADRESH 001E                                  _ADRESL 009E  
                                _EEDATA 010C                                  _EECON2 018D  
                                _ANSELH 0189                                  i1l1801 0EF5  
                                i1l1803 0EF6                                  i1l1805 0EF8  
                                u210_20 0EDB                                  u210_21 0EDA  
                                i1l1771 0EB6                                  i1l1773 0EBC  
                                i1l1781 0ECF                                  i1l1791 0EE1  
                                i1l1783 0ED3                                  i1l1775 0ECA  
                                u211_20 0EDF                                  i1l1793 0EE5  
                                u211_21 0EDE                                  i1l1785 0ED6  
                                i1l1777 0ECB                                  i1l1795 0EE7  
                                i1l1787 0EDB                                  i1l1779 0ECD  
                                i1l1797 0EEB                                  i1l1789 0EDF  
                                i1l1799 0EEF                                  u212_20 0EE5  
                                u212_21 0EE4                                  u213_20 0EEB  
                                u213_21 0EEA                                  u214_20 0EF5  
                                u214_21 0EF4                                  u208_20 0EBC  
                                u208_21 0EBB                                  u209_20 0ED3  
                                u209_21 0ED2                                  ___lmul 0E6E  
                                ___wmul 0DCA                         _lastdryruncheck 00AC  
                             ??___lldiv 0078                          ??_loadSettings 0078  
                        _trigger_buzzer 0DF1                                  _millis 0028  
                                _potraw 00BC                               ??_readADC 0075  
                                saved_w 007E              __end_of_check_button_press 06B2  
                          ?_setupTimer0 0071                          _EEPROM_Write16 0D03  
               __end_of__initialization 0032                          __pcstackCOMMON 0071  
                __end_of_trigger_buzzer 0E18                            __pidataBANK0 0CE6  
                          __pidataBANK1 0D21                           _lastflowcheck 0030  
                 loadSettings@value8bit 004A                          _OPTION_REGbits 0081  
        trigger_buzzer@duration_seconds 0073                         _lastsensorcheck 0020  
                __end_of_EEPROM_Write16 0D12                            _EEPROM_Write 0D66  
                            __pbssBANK0 0020                              __pbssBANK1 00A0  
                         ?_saveSettings 0047                              __pmaintext 0035  
                  EEPROM_Read16@address 0049                         ?_trigger_buzzer 0073  
                               ?___lmul 0047                                 ?___wmul 005C  
                            __pintentry 0004                          ___lmul@product 0074  
                       _minvoltagelimit 0068                         _seconds_counter 002C  
                       ?_EEPROM_Write16 0075                    __end_of_loadSettings 07C5  
                         _reading_count 007B                          ??_saveSettings 0078  
                            _flowactive 0034                                 ___lldiv 06B2  
                            _initSystem 0E18                              _init_timer 0D31  
                               __ptext1 0DF1                                 __ptext2 0D12  
                               __ptext3 0CF5                                 __ptext4 07C5  
                               __ptext5 0D03                                 __ptext6 0D66  
                               __ptext7 0D84                                 __ptext8 0776  
                               __ptext9 0DA6                                 _readADC 0D84  
                             _T1CONbits 0010                      _startSensorReading 0D12  
                            _dryruntime 00B8                           _buzzer_active 0032  
                            _maxruntime 00BE                   _low_sensor_high_count 007A  
                               clrloop0 0CEE                                 _voltage 0040  
                  end_of_initialization 0032                     ?_startSensorReading 0071  
                         _buzzer_update 0718                      EEPROM_Write16@data 0075  
                         ??_EEPROM_Read 0073                         ___lldiv@divisor 004F  
                       ___lldiv@counter 005B             getSensorResults@high_active 0074  
                  ??_startSensorReading 0073                 saveSettings@value16bit1 0047  
               saveSettings@value16bit2 0049                 saveSettings@value16bit3 004B  
               saveSettings@value16bit4 004D                               _PORTAbits 0005  
                             _PORTBbits 0006                               _PORTCbits 0007  
                        ?_buzzer_update 0071             getSensorResults@flow_active 0075  
                    _check_button_press 0646                              _voltageraw 00BA  
                            _voltagesum 00B6                     __end_of_EEPROM_Read 0D66  
                        __end_of___lmul 0EB6                             ?_initSystem 0071  
                        __end_of___wmul 0DF1                     ?_check_button_press 0071  
                           ?_init_timer 0071                      _high_sensor_active 0045  
              _sensors_reading_complete 003D                    __end_of_saveSettings 07FB  
                   start_initialization 000D                        _getSensorResults 0E40  
                           __end_of_isr 0F00                    ??_check_button_press 0073  
                      ??_trigger_buzzer 0075                   EEPROM_Write16@address 0077  
                              ??___lmul 0073                                ??___wmul 0079  
                            init_fetch0 0D42                             __pdataBANK0 0064  
                           __pdataBANK1 00BE                           _EEPROM_Read16 0DA6  
                          _loadSettings 0776                        ??_EEPROM_Write16 0077  
                 saveSettings@value8bit 0078                             __pbssCOMMON 007A  
                             ___latbits 0001                           __pcstackBANK0 0047  
                         __pcstackBANK1 00CE                         ??_buzzer_update 0047  
                           _EEPROM_Read 0D53                                ?___lldiv 004F  
                        ?_EEPROM_Read16 0074                     EEPROM_Read16@result 0047  
                              ?_readADC 0073                               _mannualon 003B  
                     interrupt_function 0004                          ___wmul@product 0060  
                             clear_ram0 0CED                                _PIE1bits 008C  
                             _tankempty 0036                                _PIR1bits 000C  
                        _motorstarttime 00A8                              _ADCON0bits 001F  
                     ___wmul@multiplier 005C                         _buzzer_duration 00B4  
                         ??_setupTimer0 0073                       ___lmul@multiplier 0047  
                 _minimumrunningvoltage 0064                              _EECON1bits 018C  
check_button_press@long_press_threshold 0075                            _saveSettings 07C5  
              __end_of_getSensorResults 0E6E                         ??_EEPROM_Read16 0076  
                         _preflowactive 0033                            ??_initSystem 0073  
                           _last_millis 00B0                            ??_init_timer 0073  
                        readADC@channel 0076              getSensorResults@low_active 0073  
                      _lastvoltageerror 0024                                __ptext10 0D53  
                              __ptext11 0D31                                __ptext12 0E18  
                              __ptext13 0E40                                __ptext14 0646  
                              __ptext15 0718                                __ptext16 0DCA  
                              __ptext17 0E6E                                __ptext18 06B2  
                              __ptext19 0EB6                           ?_EEPROM_Write 0073  
                    __end_of_initSystem 0E40                     __end_of_setupTimer0 0D03  
                    __end_of_init_timer 0D42                             _dryrunerror 0039  
                    _flow_sensor_active 0044                              _INTCONbits 000B  
                              init_ram0 0D46                          ??_EEPROM_Write 0074  
                              intlevel1 0000                            _sensorbuffer 00C8  
                          ?_EEPROM_Read 0071                        ___lldiv@dividend 0053  
                            _OSCCONbits 008F                      EEPROM_Read@address 0073  
                          _pretankempty 0035                            _motorrunning 0037  
          check_button_press@hold_count 0077                         _maxvoltagelimit 0066  
                       _maxruntimeindex 006A                            _settingsmode 0041  
                      ___lldiv@quotient 0057                   _maximumrinningvoltage 00CC  
                          _timeouterror 0038                  _high_sensor_high_count 003F  
                _flow_sensor_high_count 003E                             _setupTimer0 0CF5  
                 __end_of_buzzer_update 0776            check_button_press@long_press 0079  
                   EEPROM_Write@address 0074  
