

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Apr 18 19:36:51 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F883
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	clrtext,global,class=CODE,space=0,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    18                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=1
    34                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=1
    35                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,space=0,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 12/10/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F883 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0004                     fsr             equ	4
    76     0004                     fsr0            equ	4
    77     0000                     indf            equ	0
    78     0000                     indf0           equ	0
    79     0002                     pc              equ	2
    80     0002                     pcl             equ	2
    81     000A                     pclath          equ	10
    82     0003                     status          equ	3
    83     0000                     INDF            equ	0	;# 
    84     0001                     TMR0            equ	1	;# 
    85     0002                     PCL             equ	2	;# 
    86     0003                     STATUS          equ	3	;# 
    87     0004                     FSR             equ	4	;# 
    88     0005                     PORTA           equ	5	;# 
    89     0006                     PORTB           equ	6	;# 
    90     0007                     PORTC           equ	7	;# 
    91     0009                     PORTE           equ	9	;# 
    92     000A                     PCLATH          equ	10	;# 
    93     000B                     INTCON          equ	11	;# 
    94     000C                     PIR1            equ	12	;# 
    95     000D                     PIR2            equ	13	;# 
    96     000E                     TMR1            equ	14	;# 
    97     000E                     TMR1L           equ	14	;# 
    98     000F                     TMR1H           equ	15	;# 
    99     0010                     T1CON           equ	16	;# 
   100     0011                     TMR2            equ	17	;# 
   101     0012                     T2CON           equ	18	;# 
   102     0013                     SSPBUF          equ	19	;# 
   103     0014                     SSPCON          equ	20	;# 
   104     0015                     CCPR1           equ	21	;# 
   105     0015                     CCPR1L          equ	21	;# 
   106     0016                     CCPR1H          equ	22	;# 
   107     0017                     CCP1CON         equ	23	;# 
   108     0018                     RCSTA           equ	24	;# 
   109     0019                     TXREG           equ	25	;# 
   110     001A                     RCREG           equ	26	;# 
   111     001B                     CCPR2           equ	27	;# 
   112     001B                     CCPR2L          equ	27	;# 
   113     001C                     CCPR2H          equ	28	;# 
   114     001D                     CCP2CON         equ	29	;# 
   115     001E                     ADRESH          equ	30	;# 
   116     001F                     ADCON0          equ	31	;# 
   117     0081                     OPTION_REG      equ	129	;# 
   118     0085                     TRISA           equ	133	;# 
   119     0086                     TRISB           equ	134	;# 
   120     0087                     TRISC           equ	135	;# 
   121     0089                     TRISE           equ	137	;# 
   122     008C                     PIE1            equ	140	;# 
   123     008D                     PIE2            equ	141	;# 
   124     008E                     PCON            equ	142	;# 
   125     008F                     OSCCON          equ	143	;# 
   126     0090                     OSCTUNE         equ	144	;# 
   127     0091                     SSPCON2         equ	145	;# 
   128     0092                     PR2             equ	146	;# 
   129     0093                     SSPADD          equ	147	;# 
   130     0093                     SSPMSK          equ	147	;# 
   131     0093                     MSK             equ	147	;# 
   132     0094                     SSPSTAT         equ	148	;# 
   133     0095                     WPUB            equ	149	;# 
   134     0096                     IOCB            equ	150	;# 
   135     0097                     VRCON           equ	151	;# 
   136     0098                     TXSTA           equ	152	;# 
   137     0099                     SPBRG           equ	153	;# 
   138     009A                     SPBRGH          equ	154	;# 
   139     009B                     PWM1CON         equ	155	;# 
   140     009C                     ECCPAS          equ	156	;# 
   141     009D                     PSTRCON         equ	157	;# 
   142     009E                     ADRESL          equ	158	;# 
   143     009F                     ADCON1          equ	159	;# 
   144     0105                     WDTCON          equ	261	;# 
   145     0107                     CM1CON0         equ	263	;# 
   146     0108                     CM2CON0         equ	264	;# 
   147     0109                     CM2CON1         equ	265	;# 
   148     010C                     EEDATA          equ	268	;# 
   149     010C                     EEDAT           equ	268	;# 
   150     010D                     EEADR           equ	269	;# 
   151     010E                     EEDATH          equ	270	;# 
   152     010F                     EEADRH          equ	271	;# 
   153     0185                     SRCON           equ	389	;# 
   154     0187                     BAUDCTL         equ	391	;# 
   155     0188                     ANSEL           equ	392	;# 
   156     0189                     ANSELH          equ	393	;# 
   157     018C                     EECON1          equ	396	;# 
   158     018D                     EECON2          equ	397	;# 
   159     0000                     INDF            equ	0	;# 
   160     0001                     TMR0            equ	1	;# 
   161     0002                     PCL             equ	2	;# 
   162     0003                     STATUS          equ	3	;# 
   163     0004                     FSR             equ	4	;# 
   164     0005                     PORTA           equ	5	;# 
   165     0006                     PORTB           equ	6	;# 
   166     0007                     PORTC           equ	7	;# 
   167     0009                     PORTE           equ	9	;# 
   168     000A                     PCLATH          equ	10	;# 
   169     000B                     INTCON          equ	11	;# 
   170     000C                     PIR1            equ	12	;# 
   171     000D                     PIR2            equ	13	;# 
   172     000E                     TMR1            equ	14	;# 
   173     000E                     TMR1L           equ	14	;# 
   174     000F                     TMR1H           equ	15	;# 
   175     0010                     T1CON           equ	16	;# 
   176     0011                     TMR2            equ	17	;# 
   177     0012                     T2CON           equ	18	;# 
   178     0013                     SSPBUF          equ	19	;# 
   179     0014                     SSPCON          equ	20	;# 
   180     0015                     CCPR1           equ	21	;# 
   181     0015                     CCPR1L          equ	21	;# 
   182     0016                     CCPR1H          equ	22	;# 
   183     0017                     CCP1CON         equ	23	;# 
   184     0018                     RCSTA           equ	24	;# 
   185     0019                     TXREG           equ	25	;# 
   186     001A                     RCREG           equ	26	;# 
   187     001B                     CCPR2           equ	27	;# 
   188     001B                     CCPR2L          equ	27	;# 
   189     001C                     CCPR2H          equ	28	;# 
   190     001D                     CCP2CON         equ	29	;# 
   191     001E                     ADRESH          equ	30	;# 
   192     001F                     ADCON0          equ	31	;# 
   193     0081                     OPTION_REG      equ	129	;# 
   194     0085                     TRISA           equ	133	;# 
   195     0086                     TRISB           equ	134	;# 
   196     0087                     TRISC           equ	135	;# 
   197     0089                     TRISE           equ	137	;# 
   198     008C                     PIE1            equ	140	;# 
   199     008D                     PIE2            equ	141	;# 
   200     008E                     PCON            equ	142	;# 
   201     008F                     OSCCON          equ	143	;# 
   202     0090                     OSCTUNE         equ	144	;# 
   203     0091                     SSPCON2         equ	145	;# 
   204     0092                     PR2             equ	146	;# 
   205     0093                     SSPADD          equ	147	;# 
   206     0093                     SSPMSK          equ	147	;# 
   207     0093                     MSK             equ	147	;# 
   208     0094                     SSPSTAT         equ	148	;# 
   209     0095                     WPUB            equ	149	;# 
   210     0096                     IOCB            equ	150	;# 
   211     0097                     VRCON           equ	151	;# 
   212     0098                     TXSTA           equ	152	;# 
   213     0099                     SPBRG           equ	153	;# 
   214     009A                     SPBRGH          equ	154	;# 
   215     009B                     PWM1CON         equ	155	;# 
   216     009C                     ECCPAS          equ	156	;# 
   217     009D                     PSTRCON         equ	157	;# 
   218     009E                     ADRESL          equ	158	;# 
   219     009F                     ADCON1          equ	159	;# 
   220     0105                     WDTCON          equ	261	;# 
   221     0107                     CM1CON0         equ	263	;# 
   222     0108                     CM2CON0         equ	264	;# 
   223     0109                     CM2CON1         equ	265	;# 
   224     010C                     EEDATA          equ	268	;# 
   225     010C                     EEDAT           equ	268	;# 
   226     010D                     EEADR           equ	269	;# 
   227     010E                     EEDATH          equ	270	;# 
   228     010F                     EEADRH          equ	271	;# 
   229     0185                     SRCON           equ	389	;# 
   230     0187                     BAUDCTL         equ	391	;# 
   231     0188                     ANSEL           equ	392	;# 
   232     0189                     ANSELH          equ	393	;# 
   233     018C                     EECON1          equ	396	;# 
   234     018D                     EECON2          equ	397	;# 
   235                           
   236                           	psect	idataBANK0
   237     0F22                     __pidataBANK0:
   238                           
   239                           ;initializer for _maximumrinningvoltage
   240     0F22  341D               	retlw	29
   241     0F23  3401               	retlw	1
   242                           
   243                           ;initializer for _minimumrunningvoltage
   244     0F24  34AA               	retlw	170
   245     0F25  3400               	retlw	0
   246                           
   247                           ;initializer for _maxvoltagelimit
   248     0F26  34FF               	retlw	255
   249     0F27  3400               	retlw	0
   250                           
   251                           ;initializer for _minvoltagelimit
   252     0F28  3488               	retlw	136
   253     0F29  3404               	retlw	4
   254                           
   255                           ;initializer for _maxruntimeindex
   256     0F2A  3403               	retlw	3
   257                           
   258                           	psect	idataBANK1
   259     0F39                     __pidataBANK1:
   260                           
   261                           ;initializer for _maxruntime
   262     0F39  341E               	retlw	30
   263     0F3A  3400               	retlw	0
   264     0F3B  342D               	retlw	45
   265     0F3C  3400               	retlw	0
   266     0F3D  343C               	retlw	60
   267     0F3E  3400               	retlw	0
   268     0F3F  3478               	retlw	120
   269     0F40  3400               	retlw	0
   270     0F41  34FF               	retlw	255
   271     0F42  34FF               	retlw	255
   272                           
   273                           ;initializer for _sensorbuffer
   274     0F43  340A               	retlw	10
   275     0F44  3400               	retlw	0
   276                           
   277                           ;initializer for _maxvoltageerrortime
   278     0F45  340A               	retlw	10
   279     0F46  3400               	retlw	0
   280     0010                     _T1CONbits      set	16
   281     0010                     _T1CON          set	16
   282     0006                     _PORTBbits      set	6
   283     000E                     _TMR1L          set	14
   284     000F                     _TMR1H          set	15
   285     000C                     _PIR1bits       set	12
   286     000B                     _INTCONbits     set	11
   287     0001                     _TMR0           set	1
   288     001E                     _ADRESH         set	30
   289     001F                     _ADCON0bits     set	31
   290     0007                     _PORTC          set	7
   291     0006                     _PORTB          set	6
   292     0005                     _PORTA          set	5
   293     001F                     _ADCON0         set	31
   294     0007                     _PORTCbits      set	7
   295     0005                     _PORTAbits      set	5
   296     008C                     _PIE1bits       set	140
   297     0081                     _OPTION_REGbits set	129
   298     009E                     _ADRESL         set	158
   299     009F                     _ADCON1         set	159
   300     0087                     _TRISC          set	135
   301     0086                     _TRISB          set	134
   302     0085                     _TRISA          set	133
   303     008F                     _OSCCONbits     set	143
   304     010C                     _EEDATA         set	268
   305     010D                     _EEADR          set	269
   306     018D                     _EECON2         set	397
   307     018C                     _EECON1bits     set	396
   308     0189                     _ANSELH         set	393
   309     0188                     _ANSEL          set	392
   310                           
   311                           	psect	cinit
   312     000D                     start_initialization:	
   313                           ; #config settings
   314                           
   315     000D                     __initialization:
   316                           
   317                           ; Initialize objects allocated to BANK1
   318     000D  1383               	bcf	3,7	;select IRP bank0
   319     000E  30BE               	movlw	low (__pdataBANK1+14)
   320     000F  00FD               	movwf	btemp+-1
   321     0010  300F               	movlw	high __pidataBANK1
   322     0011  00FE               	movwf	btemp
   323     0012  3039               	movlw	low __pidataBANK1
   324     0013  00FF               	movwf	btemp+1
   325     0014  30B0               	movlw	low __pdataBANK1
   326     0015  0084               	movwf	4
   327     0016  158A  277A  118A   	fcall	init_ram0
   328                           
   329                           ; Initialize objects allocated to BANK0
   330     0019  306E               	movlw	low (__pdataBANK0+9)
   331     001A  00FD               	movwf	btemp+-1
   332     001B  300F               	movlw	high __pidataBANK0
   333     001C  00FE               	movwf	btemp
   334     001D  3022               	movlw	low __pidataBANK0
   335     001E  00FF               	movwf	btemp+1
   336     001F  3065               	movlw	low __pdataBANK0
   337     0020  0084               	movwf	4
   338     0021  158A  277A  118A   	fcall	init_ram0
   339                           
   340                           ; Clear objects allocated to BANK1
   341     0024  30A0               	movlw	low __pbssBANK1
   342     0025  0084               	movwf	4
   343     0026  30B0               	movlw	low (__pbssBANK1+16)
   344     0027  158A  271A  118A   	fcall	clear_ram0
   345                           
   346                           ; Clear objects allocated to BANK0
   347     002A  3020               	movlw	low __pbssBANK0
   348     002B  0084               	movwf	4
   349     002C  304A               	movlw	low (__pbssBANK0+42)
   350     002D  158A  271A  118A   	fcall	clear_ram0
   351                           
   352                           ; Clear objects allocated to COMMON
   353     0030  01FA               	clrf	__pbssCOMMON& (0+127)
   354     0031  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   355     0032                     end_of_initialization:	
   356                           ;End of C runtime variable initialization code
   357                           
   358     0032                     __end_of__initialization:
   359     0032  0183               	clrf	3
   360     0033  118A  2835         	ljmp	_main	;jump to C main() function
   361                           
   362                           	psect	bssCOMMON
   363     007A                     __pbssCOMMON:
   364     007A                     _low_sensor_high_count:
   365     007A                     	ds	1
   366     007B                     _reading_count:
   367     007B                     	ds	1
   368                           
   369                           	psect	bssBANK0
   370     0020                     __pbssBANK0:
   371     0020                     _lastsensorcheck:
   372     0020                     	ds	4
   373     0024                     _seconds_counter:
   374     0024                     	ds	4
   375     0028                     _buzzer_duration:
   376     0028                     	ds	2
   377     002A                     _lastflowcheck:
   378     002A                     	ds	2
   379     002C                     _voltagesum:
   380     002C                     	ds	2
   381     002E                     _dryruntime:
   382     002E                     	ds	2
   383     0030                     _voltageraw:
   384     0030                     	ds	2
   385     0032                     _potraw:
   386     0032                     	ds	2
   387     0034                     _buzzer_active:
   388     0034                     	ds	1
   389     0035                     _preflowactive:
   390     0035                     	ds	1
   391     0036                     _flowactive:
   392     0036                     	ds	1
   393     0037                     _pretankempty:
   394     0037                     	ds	1
   395     0038                     _waterreached:
   396     0038                     	ds	1
   397     0039                     _tankempty:
   398     0039                     	ds	1
   399     003A                     _motorrunning:
   400     003A                     	ds	1
   401     003B                     _timeouterror:
   402     003B                     	ds	1
   403     003C                     _dryrunerror:
   404     003C                     	ds	1
   405     003D                     _voltageerror:
   406     003D                     	ds	1
   407     003E                     _mannualon:
   408     003E                     	ds	1
   409     003F                     _sensors_reading_in_progress:
   410     003F                     	ds	1
   411     0040                     _sensors_reading_complete:
   412     0040                     	ds	1
   413     0041                     _flow_sensor_high_count:
   414     0041                     	ds	1
   415     0042                     _high_sensor_high_count:
   416     0042                     	ds	1
   417     0043                     _voltage:
   418     0043                     	ds	1
   419     0044                     _settingsmode:
   420     0044                     	ds	1
   421     0045                     _smc:
   422     0045                     	ds	1
   423     0046                     _to:
   424     0046                     	ds	1
   425     0047                     _flow_sensor_active:
   426     0047                     	ds	1
   427     0048                     _high_sensor_active:
   428     0048                     	ds	1
   429     0049                     _low_sensor_active:
   430     0049                     	ds	1
   431                           
   432                           	psect	dataBANK0
   433     0065                     __pdataBANK0:
   434     0065                     _maximumrinningvoltage:
   435     0065                     	ds	2
   436     0067                     _minimumrunningvoltage:
   437     0067                     	ds	2
   438     0069                     _maxvoltagelimit:
   439     0069                     	ds	2
   440     006B                     _minvoltagelimit:
   441     006B                     	ds	2
   442     006D                     _maxruntimeindex:
   443     006D                     	ds	1
   444                           
   445                           	psect	bssBANK1
   446     00A0                     __pbssBANK1:
   447     00A0                     _buzzer_start_time:
   448     00A0                     	ds	4
   449     00A4                     _lastvoltageerror:
   450     00A4                     	ds	4
   451     00A8                     _motorstarttime:
   452     00A8                     	ds	4
   453     00AC                     _lastdryruncheck:
   454     00AC                     	ds	4
   455                           
   456                           	psect	dataBANK1
   457     00B0                     __pdataBANK1:
   458     00B0                     _maxruntime:
   459     00B0                     	ds	10
   460     00BA                     _sensorbuffer:
   461     00BA                     	ds	2
   462     00BC                     _maxvoltageerrortime:
   463     00BC                     	ds	2
   464                           
   465                           	psect	inittext
   466     0F76                     init_fetch0:	
   467                           ;	Called with low address in FSR and high address in W
   468                           
   469     0F76  087E               	movf	btemp,w
   470     0F77  008A               	movwf	10
   471     0F78  087F               	movf	btemp+1,w
   472     0F79  0082               	movwf	2
   473     0F7A                     init_ram0:	
   474                           ;Called with:
   475                           ;	high address of idata address in btemp 
   476                           ;	low address of idata address in btemp+1 
   477                           ;	low address of data in FSR
   478                           ;	high address + 1 of data in btemp-1
   479                           
   480     0F7A  158A  2776  158A   	fcall	init_fetch0
   481     0F7D  0080               	movwf	0
   482     0F7E  0A84               	incf	4,f
   483     0F7F  0804               	movf	4,w
   484     0F80  067D               	xorwf	btemp+-1,w
   485     0F81  1903               	btfsc	3,2
   486     0F82  3400               	retlw	0
   487     0F83  0AFF               	incf	btemp+1,f
   488     0F84  1903               	btfsc	3,2
   489     0F85  0AFE               	incf	btemp,f
   490     0F86  2F7A               	goto	init_ram0
   491                           
   492                           	psect	clrtext
   493     0F1A                     clear_ram0:	
   494                           ;	Called with FSR containing the base address, and
   495                           ;	W with the last address+1
   496                           
   497     0F1A  0064               	clrwdt	;clear the watchdog before getting into this loop
   498     0F1B                     clrloop0:
   499     0F1B  0180               	clrf	0	;clear RAM location pointed to by FSR
   500     0F1C  0A84               	incf	4,f	;increment pointer
   501     0F1D  0604               	xorwf	4,w	;XOR with final address
   502     0F1E  1903               	btfsc	3,2	;have we reached the end yet?
   503     0F1F  3400               	retlw	0	;all done for this memory range, return
   504     0F20  0604               	xorwf	4,w	;XOR again to restore value
   505     0F21  2F1B               	goto	clrloop0	;do the next byte
   506                           
   507                           	psect	cstackBANK1
   508     00BE                     __pcstackBANK1:
   509     00BE                     main@is_long_press:
   510                           
   511                           ; 1 bytes @ 0x0
   512     00BE                     	ds	1
   513     00BF                     main@i_464:
   514                           
   515                           ; 1 bytes @ 0x1
   516     00BF                     	ds	1
   517     00C0                     main@i:
   518                           
   519                           ; 1 bytes @ 0x2
   520     00C0                     	ds	1
   521                           
   522                           	psect	cstackCOMMON
   523     0070                     __pcstackCOMMON:
   524     0070                     ?_initSystem:
   525     0070                     ?_init_timer:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_check_button_press:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_buzzer_update:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_setupTimer0:	
   535                           ; 1 bytes @ 0x0
   536                           
   537     0070                     ?_startSensorReading:	
   538                           ; 1 bytes @ 0x0
   539                           
   540     0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543     0070                     ?_isr:	
   544                           ; 1 bytes @ 0x0
   545                           
   546     0070                     ?_EEPROM_Read:	
   547                           ; 1 bytes @ 0x0
   548                           
   549     0070                     ??_isr:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 1 bytes @ 0x0
   554     0070                     	ds	2
   555     0072                     ?_getSensorResults:
   556     0072                     ?_trigger_buzzer:	
   557                           ; 1 bytes @ 0x2
   558                           
   559     0072                     ?_EEPROM_Write:	
   560                           ; 1 bytes @ 0x2
   561                           
   562     0072                     ?_readADC:	
   563                           ; 1 bytes @ 0x2
   564                           
   565     0072                     ?___lmul:	
   566                           ; 2 bytes @ 0x2
   567                           
   568     0072                     ?___llmod:	
   569                           ; 4 bytes @ 0x2
   570                           
   571     0072                     getSensorResults@low_active:	
   572                           ; 4 bytes @ 0x2
   573                           
   574     0072                     EEPROM_Write@data:	
   575                           ; 1 bytes @ 0x2
   576                           
   577     0072                     EEPROM_Read@address:	
   578                           ; 1 bytes @ 0x2
   579                           
   580     0072                     trigger_buzzer@duration_seconds:	
   581                           ; 1 bytes @ 0x2
   582                           
   583     0072                     ___lmul@multiplier:	
   584                           ; 2 bytes @ 0x2
   585                           
   586     0072                     ___llmod@divisor:	
   587                           ; 4 bytes @ 0x2
   588                           
   589     0072                     ??_initSystem:	
   590                           ; 4 bytes @ 0x2
   591                           
   592     0072                     ??_init_timer:	
   593                           ; 1 bytes @ 0x2
   594                           
   595     0072                     ??_check_button_press:	
   596                           ; 1 bytes @ 0x2
   597                           
   598     0072                     ??_buzzer_update:	
   599                           ; 1 bytes @ 0x2
   600                           
   601     0072                     ??_setupTimer0:	
   602                           ; 1 bytes @ 0x2
   603                           
   604     0072                     ??_startSensorReading:	
   605                           ; 1 bytes @ 0x2
   606                           
   607     0072                     ??_EEPROM_Read:	
   608                           ; 1 bytes @ 0x2
   609                           
   610                           
   611                           ; 1 bytes @ 0x2
   612     0072                     	ds	1
   613     0073                     ?_EEPROM_Read16:
   614     0073                     getSensorResults@high_active:	
   615                           ; 2 bytes @ 0x3
   616                           
   617     0073                     EEPROM_Write@address:	
   618                           ; 1 bytes @ 0x3
   619                           
   620     0073                     ??_EEPROM_Write:	
   621                           ; 1 bytes @ 0x3
   622                           
   623                           
   624                           ; 1 bytes @ 0x3
   625     0073                     	ds	1
   626     0074                     ?_EEPROM_Write16:
   627     0074                     getSensorResults@flow_active:	
   628                           ; 1 bytes @ 0x4
   629                           
   630     0074                     EEPROM_Write16@data:	
   631                           ; 1 bytes @ 0x4
   632                           
   633     0074                     check_button_press@long_press_threshold:	
   634                           ; 2 bytes @ 0x4
   635                           
   636     0074                     ??_readADC:	
   637                           ; 2 bytes @ 0x4
   638                           
   639     0074                     ??_trigger_buzzer:	
   640                           ; 1 bytes @ 0x4
   641                           
   642                           
   643                           ; 1 bytes @ 0x4
   644     0074                     	ds	1
   645     0075                     readADC@channel:
   646     0075                     ??_getSensorResults:	
   647                           ; 1 bytes @ 0x5
   648                           
   649     0075                     ??_EEPROM_Read16:	
   650                           ; 1 bytes @ 0x5
   651                           
   652                           
   653                           ; 1 bytes @ 0x5
   654     0075                     	ds	1
   655     0076                     EEPROM_Write16@address:
   656     0076                     check_button_press@hold_count:	
   657                           ; 1 bytes @ 0x6
   658                           
   659     0076                     ___lmul@multiplicand:	
   660                           ; 2 bytes @ 0x6
   661                           
   662     0076                     ___llmod@dividend:	
   663                           ; 4 bytes @ 0x6
   664                           
   665     0076                     ??_EEPROM_Write16:	
   666                           ; 4 bytes @ 0x6
   667                           
   668                           
   669                           ; 1 bytes @ 0x6
   670     0076                     	ds	1
   671     0077                     saveSettings@value8bit:
   672     0077                     EEPROM_Read16@result:	
   673                           ; 1 bytes @ 0x7
   674                           
   675     0077                     ??_saveSettings:	
   676                           ; 2 bytes @ 0x7
   677                           
   678                           
   679                           ; 1 bytes @ 0x7
   680     0077                     	ds	1
   681     0078                     check_button_press@long_press:
   682                           
   683                           ; 1 bytes @ 0x8
   684     0078                     	ds	1
   685     0079                     EEPROM_Read16@address:
   686                           
   687                           ; 1 bytes @ 0x9
   688     0079                     	ds	1
   689     007A                     ??_loadSettings:
   690                           
   691                           	psect	cstackBANK0
   692     004A                     __pcstackBANK0:	
   693                           ; 1 bytes @ 0xA
   694                           
   695     004A                     ?_loadSettings:
   696     004A                     ?_saveSettings:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     004A                     loadSettings@value8bit:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     004A                     saveSettings@value16bit1:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     004A                     ??___lmul:	
   706                           ; 2 bytes @ 0x0
   707                           
   708     004A                     ??___llmod:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 1 bytes @ 0x0
   713     004A                     	ds	1
   714     004B                     loadSettings@value16bit1:
   715     004B                     ___llmod@counter:	
   716                           ; 1 bytes @ 0x1
   717                           
   718     004B                     ___lmul@product:	
   719                           ; 1 bytes @ 0x1
   720                           
   721                           
   722                           ; 4 bytes @ 0x1
   723     004B                     	ds	1
   724     004C                     loadSettings@value16bit2:
   725     004C                     saveSettings@value16bit2:	
   726                           ; 1 bytes @ 0x2
   727                           
   728                           
   729                           ; 2 bytes @ 0x2
   730     004C                     	ds	1
   731     004D                     loadSettings@value16bit3:
   732                           
   733                           ; 1 bytes @ 0x3
   734     004D                     	ds	1
   735     004E                     loadSettings@value16bit4:
   736     004E                     saveSettings@value16bit3:	
   737                           ; 1 bytes @ 0x4
   738                           
   739                           
   740                           ; 2 bytes @ 0x4
   741     004E                     	ds	1
   742     004F                     ?___lldiv:
   743     004F                     ___lldiv@divisor:	
   744                           ; 4 bytes @ 0x5
   745                           
   746                           
   747                           ; 4 bytes @ 0x5
   748     004F                     	ds	1
   749     0050                     saveSettings@value16bit4:
   750                           
   751                           ; 2 bytes @ 0x6
   752     0050                     	ds	3
   753     0053                     ___lldiv@dividend:
   754                           
   755                           ; 4 bytes @ 0x9
   756     0053                     	ds	4
   757     0057                     ??___lldiv:
   758                           
   759                           ; 1 bytes @ 0xD
   760     0057                     	ds	1
   761     0058                     ___lldiv@quotient:
   762                           
   763                           ; 4 bytes @ 0xE
   764     0058                     	ds	4
   765     005C                     ___lldiv@counter:
   766                           
   767                           ; 1 bytes @ 0x12
   768     005C                     	ds	1
   769     005D                     ??_main:
   770                           
   771                           ; 1 bytes @ 0x13
   772     005D                     	ds	8
   773                           
   774                           	psect	maintext
   775     0035                     __pmaintext:	
   776 ;;
   777 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   778 ;;
   779 ;; *************** function _main *****************
   780 ;; Defined at:
   781 ;;		line 115 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  i               1    1[BANK1 ] unsigned char 
   786 ;;  is_long_pres    1    0[BANK1 ] _Bool 
   787 ;;  i               1    2[BANK1 ] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : B00/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   797 ;;      Params:         0       0       0       0
   798 ;;      Locals:         0       0       3       0
   799 ;;      Temps:          0       8       0       0
   800 ;;      Totals:         0       8       3       0
   801 ;;Total ram usage:       11 bytes
   802 ;; Hardware stack levels required when called: 4
   803 ;; This function calls:
   804 ;;		___lldiv
   805 ;;		___llmod
   806 ;;		___lmul
   807 ;;		_buzzer_update
   808 ;;		_check_button_press
   809 ;;		_getSensorResults
   810 ;;		_initSystem
   811 ;;		_init_timer
   812 ;;		_loadSettings
   813 ;;		_readADC
   814 ;;		_saveSettings
   815 ;;		_setupTimer0
   816 ;;		_startSensorReading
   817 ;;		_trigger_buzzer
   818 ;; This function is called by:
   819 ;;		Startup code after reset
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823     0035                     _main:	
   824                           ;psect for function _main
   825                           
   826     0035                     l2102:	
   827                           ;incstack = 0
   828                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   829                           
   830                           
   831                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 118:   initSystem();
   832     0035  118A  27B8  118A   	fcall	_initSystem
   833     0038                     l2104:
   834                           
   835                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 120:   if (!loadSettings(&maxruntimeindex
      +                          , &minvoltagelimit, &maxvoltagelimit,
   836     0038  306D               	movlw	(low (_maxruntimeindex| 0))& (0+255)
   837     0039  1283               	bcf	3,5	;RP0=0, select bank0
   838     003A  1303               	bcf	3,6	;RP1=0, select bank0
   839     003B  00CA               	movwf	loadSettings@value8bit
   840     003C  306B               	movlw	(low (_minvoltagelimit| 0))& (0+255)
   841     003D  00CB               	movwf	loadSettings@value16bit1
   842     003E  3069               	movlw	(low (_maxvoltagelimit| 0))& (0+255)
   843     003F  00CC               	movwf	loadSettings@value16bit2
   844     0040  3067               	movlw	(low (_minimumrunningvoltage| 0))& (0+255)
   845     0041  00CD               	movwf	loadSettings@value16bit3
   846     0042  3065               	movlw	(low (_maximumrinningvoltage| 0))& (0+255)
   847     0043  00CE               	movwf	loadSettings@value16bit4
   848     0044  118A  2679  118A   	fcall	_loadSettings
   849     0047  3A00               	xorlw	0
   850     0048  1D03               	skipz
   851     0049  284B               	goto	u2591
   852     004A  284C               	goto	u2590
   853     004B                     u2591:
   854     004B  2873               	goto	l2118
   855     004C                     u2590:
   856     004C                     l2106:
   857                           
   858                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 121:                     &minimumrunningv
      +                          oltage, &maximumrinningvoltage)) {;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 123:   
      +                            maxruntimeindex = 0;
   859     004C  1283               	bcf	3,5	;RP0=0, select bank0
   860     004D  1303               	bcf	3,6	;RP1=0, select bank0
   861     004E  01ED               	clrf	_maxruntimeindex
   862     004F                     l2108:
   863                           
   864                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 124:     minvoltagelimit = 1160;
   865     004F  3088               	movlw	136
   866     0050  00EB               	movwf	_minvoltagelimit
   867     0051  3004               	movlw	4
   868     0052  00EC               	movwf	_minvoltagelimit+1
   869     0053                     l2110:
   870                           
   871                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 125:     maxvoltagelimit = 255;
   872     0053  30FF               	movlw	255
   873     0054  00E9               	movwf	_maxvoltagelimit
   874     0055  3000               	movlw	0
   875     0056  00EA               	movwf	_maxvoltagelimit+1
   876     0057                     l2112:
   877                           
   878                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 126:     minimumrunningvoltage = 170;
   879     0057  30AA               	movlw	170
   880     0058  00E7               	movwf	_minimumrunningvoltage
   881     0059  3000               	movlw	0
   882     005A  00E8               	movwf	_minimumrunningvoltage+1
   883     005B                     l2114:
   884                           
   885                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 127:     maximumrinningvoltage = 285;
   886     005B  301D               	movlw	29
   887     005C  00E5               	movwf	_maximumrinningvoltage
   888     005D  3001               	movlw	1
   889     005E  00E6               	movwf	_maximumrinningvoltage+1
   890     005F                     l2116:
   891                           
   892                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 130:     saveSettings(maxruntimeindex, mi
      +                          nvoltagelimit, maxvoltagelimit,
   893     005F  086C               	movf	_minvoltagelimit+1,w
   894     0060  00CB               	movwf	saveSettings@value16bit1+1
   895     0061  086B               	movf	_minvoltagelimit,w
   896     0062  00CA               	movwf	saveSettings@value16bit1
   897     0063  086A               	movf	_maxvoltagelimit+1,w
   898     0064  00CD               	movwf	saveSettings@value16bit2+1
   899     0065  0869               	movf	_maxvoltagelimit,w
   900     0066  00CC               	movwf	saveSettings@value16bit2
   901     0067  0868               	movf	_minimumrunningvoltage+1,w
   902     0068  00CF               	movwf	saveSettings@value16bit3+1
   903     0069  0867               	movf	_minimumrunningvoltage,w
   904     006A  00CE               	movwf	saveSettings@value16bit3
   905     006B  0866               	movf	_maximumrinningvoltage+1,w
   906     006C  00D1               	movwf	saveSettings@value16bit4+1
   907     006D  0865               	movf	_maximumrinningvoltage,w
   908     006E  00D0               	movwf	saveSettings@value16bit4
   909     006F  086D               	movf	_maxruntimeindex,w
   910     0070  118A  2754  118A   	fcall	_saveSettings
   911     0073                     l2118:
   912                           
   913                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 133:   potraw = readADC(4);
   914     0073  3004               	movlw	4
   915     0074  158A  27B8  118A   	fcall	_readADC
   916     0077  0873               	movf	?_readADC+1,w
   917     0078  1283               	bcf	3,5	;RP0=0, select bank0
   918     0079  1303               	bcf	3,6	;RP1=0, select bank0
   919     007A  00B3               	movwf	_potraw+1
   920     007B  0872               	movf	?_readADC,w
   921     007C  00B2               	movwf	_potraw
   922     007D                     l2120:
   923                           
   924                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 134:   dryruntime = (((uint32_t)potraw * 
      +                          360) / 1023) + 120;
   925     007D  3000               	movlw	0
   926     007E  00D2               	movwf	___lldiv@divisor+3
   927     007F  3000               	movlw	0
   928     0080  00D1               	movwf	___lldiv@divisor+2
   929     0081  3003               	movlw	3
   930     0082  00D0               	movwf	___lldiv@divisor+1
   931     0083  30FF               	movlw	255
   932     0084  00CF               	movwf	___lldiv@divisor
   933     0085  0832               	movf	_potraw,w
   934     0086  00F2               	movwf	___lmul@multiplier
   935     0087  0833               	movf	_potraw+1,w
   936     0088  00F3               	movwf	___lmul@multiplier+1
   937     0089  01F4               	clrf	___lmul@multiplier+2
   938     008A  01F5               	clrf	___lmul@multiplier+3
   939     008B  3000               	movlw	0
   940     008C  00F9               	movwf	___lmul@multiplicand+3
   941     008D  3000               	movlw	0
   942     008E  00F8               	movwf	___lmul@multiplicand+2
   943     008F  3001               	movlw	1
   944     0090  00F7               	movwf	___lmul@multiplicand+1
   945     0091  3068               	movlw	104
   946     0092  00F6               	movwf	___lmul@multiplicand
   947     0093  118A  26C8  118A   	fcall	___lmul
   948     0096  0875               	movf	?___lmul+3,w
   949     0097  1283               	bcf	3,5	;RP0=0, select bank0
   950     0098  1303               	bcf	3,6	;RP1=0, select bank0
   951     0099  00D6               	movwf	___lldiv@dividend+3
   952     009A  0874               	movf	?___lmul+2,w
   953     009B  00D5               	movwf	___lldiv@dividend+2
   954     009C  0873               	movf	?___lmul+1,w
   955     009D  00D4               	movwf	___lldiv@dividend+1
   956     009E  0872               	movf	?___lmul,w
   957     009F  00D3               	movwf	___lldiv@dividend
   958     00A0  118A  256C  118A   	fcall	___lldiv
   959     00A3  1283               	bcf	3,5	;RP0=0, select bank0
   960     00A4  1303               	bcf	3,6	;RP1=0, select bank0
   961     00A5  084F               	movf	?___lldiv,w
   962     00A6  3E78               	addlw	120
   963     00A7  00AE               	movwf	_dryruntime
   964     00A8  0850               	movf	?___lldiv+1,w
   965     00A9  1803               	skipnc
   966     00AA  3E01               	addlw	1
   967     00AB  3E00               	addlw	0
   968     00AC  00AF               	movwf	_dryruntime+1
   969     00AD                     l2122:
   970                           
   971                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 135:   for (uint8_t i = 0; i < 10; i++) {
   972     00AD  1683               	bsf	3,5	;RP0=1, select bank1
   973     00AE  1303               	bcf	3,6	;RP1=0, select bank1
   974     00AF  01C0               	clrf	main@i^(0+128)
   975     00B0                     l2124:
   976     00B0  300A               	movlw	10
   977     00B1  0240               	subwf	main@i^(0+128),w
   978     00B2  1C03               	skipc
   979     00B3  28B5               	goto	u2601
   980     00B4  28B6               	goto	u2600
   981     00B5                     u2601:
   982     00B5  28B7               	goto	l178
   983     00B6                     u2600:
   984     00B6  290D               	goto	l2156
   985     00B7                     l178:
   986                           
   987                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 136:     PORTAbits.RA0 = 1;
   988     00B7  1283               	bcf	3,5	;RP0=0, select bank0
   989     00B8  1303               	bcf	3,6	;RP1=0, select bank0
   990     00B9  1405               	bsf	5,0	;volatile
   991                           
   992                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 137:     PORTAbits.RA1 = 1;
   993     00BA  1485               	bsf	5,1	;volatile
   994                           
   995                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 138:     PORTAbits.RA2 = 1;
   996     00BB  1505               	bsf	5,2	;volatile
   997                           
   998                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 139:     PORTAbits.RA4 = 1;
   999     00BC  1605               	bsf	5,4	;volatile
  1000     00BD                     l2128:
  1001                           
  1002                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 140:     if (i == 0) {
  1003     00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1004     00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1005     00BF  0840               	movf	main@i^(0+128),w
  1006     00C0  1D03               	btfss	3,2
  1007     00C1  28C3               	goto	u2611
  1008     00C2  28C4               	goto	u2610
  1009     00C3                     u2611:
  1010     00C3  28CD               	goto	l2134
  1011     00C4                     u2610:
  1012     00C4                     l2130:
  1013                           
  1014                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 141:       if (PORTCbits.RC1 == 0) {
  1015     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1016     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1017     00C6  1887               	btfsc	7,1	;volatile
  1018     00C7  28C9               	goto	u2621
  1019     00C8  28CA               	goto	u2620
  1020     00C9                     u2621:
  1021     00C9  28E4               	goto	l2142
  1022     00CA                     u2620:
  1023     00CA                     l2132:
  1024                           
  1025                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 142:         smc = 1;
  1026     00CA  3001               	movlw	1
  1027     00CB  00C5               	movwf	_smc
  1028     00CC  28E4               	goto	l2142
  1029     00CD                     l2134:
  1030     00CD  3003               	movlw	3
  1031     00CE  0640               	xorwf	main@i^(0+128),w
  1032     00CF  1D03               	btfss	3,2
  1033     00D0  28D2               	goto	u2631
  1034     00D1  28D3               	goto	u2630
  1035     00D2                     u2631:
  1036     00D2  28E4               	goto	l2142
  1037     00D3                     u2630:
  1038     00D3                     l2136:
  1039                           
  1040                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 145:       if (smc == 1) {
  1041     00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1042     00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1043     00D5  0345               	decf	_smc,w
  1044     00D6  1D03               	btfss	3,2
  1045     00D7  28D9               	goto	u2641
  1046     00D8  28DA               	goto	u2640
  1047     00D9                     u2641:
  1048     00D9  28E4               	goto	l2142
  1049     00DA                     u2640:
  1050     00DA                     l2138:
  1051                           
  1052                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 146:         if (PORTCbits.RC1 == 0) {
  1053     00DA  1887               	btfsc	7,1	;volatile
  1054     00DB  28DD               	goto	u2651
  1055     00DC  28DE               	goto	u2650
  1056     00DD                     u2651:
  1057     00DD  28E4               	goto	l2142
  1058     00DE                     u2650:
  1059     00DE                     l2140:
  1060                           
  1061                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 147:           settingsmode = 1;
  1062     00DE  3001               	movlw	1
  1063     00DF  00C4               	movwf	_settingsmode
  1064                           
  1065                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 148:           i = 10;
  1066     00E0  300A               	movlw	10
  1067     00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1068     00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1069     00E3  00C0               	movwf	main@i^(0+128)
  1070     00E4                     l2142:
  1071                           
  1072                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 152:     _delay((unsigned long)((1000)*(4
      +                          000000/4000.0)));
  1073     00E4  3006               	movlw	6
  1074     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1075     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1076     00E7  00DF               	movwf	??_main+2
  1077     00E8  3013               	movlw	19
  1078     00E9  00DE               	movwf	??_main+1
  1079     00EA  30AD               	movlw	173
  1080     00EB  00DD               	movwf	??_main
  1081     00EC                     u3177:
  1082     00EC  0BDD               	decfsz	??_main,f
  1083     00ED  28EC               	goto	u3177
  1084     00EE  0BDE               	decfsz	??_main+1,f
  1085     00EF  28EC               	goto	u3177
  1086     00F0  0BDF               	decfsz	??_main+2,f
  1087     00F1  28EC               	goto	u3177
  1088     00F2  0000               	nop
  1089     00F3                     l2144:
  1090                           
  1091                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 153:     PORTAbits.RA0 = 0;
  1092     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1093     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1094     00F5  1005               	bcf	5,0	;volatile
  1095     00F6                     l2146:
  1096                           
  1097                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 154:     PORTAbits.RA1 = 0;
  1098     00F6  1085               	bcf	5,1	;volatile
  1099     00F7                     l2148:
  1100                           
  1101                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 155:     PORTAbits.RA2 = 0;
  1102     00F7  1105               	bcf	5,2	;volatile
  1103     00F8                     l2150:
  1104                           
  1105                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 156:     PORTAbits.RA4 = 0;
  1106     00F8  1205               	bcf	5,4	;volatile
  1107                           
  1108                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 157:     _delay((unsigned long)((1000)*(4
      +                          000000/4000.0)));
  1109     00F9  3006               	movlw	6
  1110     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1111     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1112     00FC  00DF               	movwf	??_main+2
  1113     00FD  3013               	movlw	19
  1114     00FE  00DE               	movwf	??_main+1
  1115     00FF  30AD               	movlw	173
  1116     0100  00DD               	movwf	??_main
  1117     0101                     u3187:
  1118     0101  0BDD               	decfsz	??_main,f
  1119     0102  2901               	goto	u3187
  1120     0103  0BDE               	decfsz	??_main+1,f
  1121     0104  2901               	goto	u3187
  1122     0105  0BDF               	decfsz	??_main+2,f
  1123     0106  2901               	goto	u3187
  1124     0107  0000               	nop
  1125     0108                     l2152:
  1126                           
  1127                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 158:   }
  1128     0108  3001               	movlw	1
  1129     0109  1683               	bsf	3,5	;RP0=1, select bank1
  1130     010A  1303               	bcf	3,6	;RP1=0, select bank1
  1131     010B  07C0               	addwf	main@i^(0+128),f
  1132     010C  28B0               	goto	l2124
  1133     010D                     l2156:
  1134                           
  1135                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 159:   init_timer();
  1136     010D  158A  2765  118A   	fcall	_init_timer
  1137                           
  1138                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 161:   while (settingsmode) {
  1139     0110  2933               	goto	l2162
  1140     0111                     l187:
  1141                           
  1142                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 162:     PORTAbits.RA0 = 0;
  1143     0111  1005               	bcf	5,0	;volatile
  1144     0112                     l2158:
  1145                           
  1146                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 163:     _delay((unsigned long)((1000)*(4
      +                          000000/4000.0)));
  1147     0112  3006               	movlw	6
  1148     0113  1283               	bcf	3,5	;RP0=0, select bank0
  1149     0114  1303               	bcf	3,6	;RP1=0, select bank0
  1150     0115  00DF               	movwf	??_main+2
  1151     0116  3013               	movlw	19
  1152     0117  00DE               	movwf	??_main+1
  1153     0118  30AD               	movlw	173
  1154     0119  00DD               	movwf	??_main
  1155     011A                     u3197:
  1156     011A  0BDD               	decfsz	??_main,f
  1157     011B  291A               	goto	u3197
  1158     011C  0BDE               	decfsz	??_main+1,f
  1159     011D  291A               	goto	u3197
  1160     011E  0BDF               	decfsz	??_main+2,f
  1161     011F  291A               	goto	u3197
  1162     0120  0000               	nop
  1163     0121                     l2160:
  1164                           
  1165                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 164:     PORTAbits.RA0 = 1;
  1166     0121  1283               	bcf	3,5	;RP0=0, select bank0
  1167     0122  1303               	bcf	3,6	;RP1=0, select bank0
  1168     0123  1405               	bsf	5,0	;volatile
  1169                           
  1170                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 165:     _delay((unsigned long)((1000)*(4
      +                          000000/4000.0)));
  1171     0124  3006               	movlw	6
  1172     0125  1283               	bcf	3,5	;RP0=0, select bank0
  1173     0126  1303               	bcf	3,6	;RP1=0, select bank0
  1174     0127  00DF               	movwf	??_main+2
  1175     0128  3013               	movlw	19
  1176     0129  00DE               	movwf	??_main+1
  1177     012A  30AD               	movlw	173
  1178     012B  00DD               	movwf	??_main
  1179     012C                     u3207:
  1180     012C  0BDD               	decfsz	??_main,f
  1181     012D  292C               	goto	u3207
  1182     012E  0BDE               	decfsz	??_main+1,f
  1183     012F  292C               	goto	u3207
  1184     0130  0BDF               	decfsz	??_main+2,f
  1185     0131  292C               	goto	u3207
  1186     0132  0000               	nop
  1187     0133                     l2162:
  1188                           
  1189                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 161:   while (settingsmode) {
  1190     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1191     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1192     0135  0844               	movf	_settingsmode,w
  1193     0136  1D03               	btfss	3,2
  1194     0137  2939               	goto	u2661
  1195     0138  293A               	goto	u2660
  1196     0139                     u2661:
  1197     0139  2911               	goto	l187
  1198     013A                     u2660:
  1199     013A                     l189:	
  1200                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 167:   while (1) {
  1201                           
  1202                           
  1203                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 169:     if (PORTCbits.RC1 == 0) {
  1204     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1205     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1206     013C  1887               	btfsc	7,1	;volatile
  1207     013D  293F               	goto	u2671
  1208     013E  2940               	goto	u2670
  1209     013F                     u2671:
  1210     013F  2961               	goto	l2172
  1211     0140                     u2670:
  1212     0140                     l2164:
  1213                           
  1214                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 170:       _Bool is_long_press = check_bu
      +                          tton_press();
  1215     0140  118A  2500  118A   	fcall	_check_button_press
  1216     0143  1683               	bsf	3,5	;RP0=1, select bank1
  1217     0144  1303               	bcf	3,6	;RP1=0, select bank1
  1218     0145  00BE               	movwf	main@is_long_press^(0+128)
  1219     0146                     l2166:
  1220                           
  1221                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 172:       if (is_long_press) {
  1222     0146  083E               	movf	main@is_long_press^(0+128),w
  1223     0147  1903               	btfsc	3,2
  1224     0148  294A               	goto	u2681
  1225     0149  294B               	goto	u2680
  1226     014A                     u2681:
  1227     014A  2952               	goto	l2170
  1228     014B                     u2680:
  1229     014B                     l2168:
  1230                           
  1231                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 173:         tankempty = 1;
  1232     014B  3001               	movlw	1
  1233     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1234     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1235     014E  00B9               	movwf	_tankempty
  1236                           
  1237                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 174:         pretankempty = 1;
  1238     014F  3001               	movlw	1
  1239     0150  00B7               	movwf	_pretankempty
  1240                           
  1241                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 176:       } else {
  1242     0151  2961               	goto	l2172
  1243     0152                     l2170:
  1244                           
  1245                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 177:         PORTAbits.RA2 = ~PORTAbits.R
      +                          A2;
  1246     0152  1003               	clrc
  1247     0153  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0154  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0155  1D05               	btfss	5,2	;volatile
  1250     0156  1403               	setc
  1251     0157  1803               	btfsc	3,0
  1252     0158  295A               	goto	u2691
  1253     0159  295E               	goto	u2690
  1254     015A                     u2691:
  1255     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1256     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1257     015C  1505               	bsf	5,2	;volatile
  1258     015D  2961               	goto	u2704
  1259     015E                     u2690:
  1260     015E  1283               	bcf	3,5	;RP0=0, select bank0
  1261     015F  1303               	bcf	3,6	;RP1=0, select bank0
  1262     0160  1105               	bcf	5,2	;volatile
  1263     0161                     u2704:
  1264     0161                     l2172:
  1265                           
  1266                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 181:     buzzer_update();
  1267     0161  118A  2710  118A   	fcall	_buzzer_update
  1268     0164                     l2174:
  1269                           
  1270                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 183:     for (uint8_t i = 0; i < 16; i++)
      +                           {
  1271     0164  1683               	bsf	3,5	;RP0=1, select bank1
  1272     0165  1303               	bcf	3,6	;RP1=0, select bank1
  1273     0166  01BF               	clrf	main@i_464^(0+128)
  1274     0167                     l2176:
  1275     0167  3010               	movlw	16
  1276     0168  023F               	subwf	main@i_464^(0+128),w
  1277     0169  1C03               	skipc
  1278     016A  296C               	goto	u2711
  1279     016B  296D               	goto	u2710
  1280     016C                     u2711:
  1281     016C  296E               	goto	l2180
  1282     016D                     u2710:
  1283     016D  297F               	goto	l2186
  1284     016E                     l2180:
  1285                           
  1286                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 184:       voltagesum += readADC(3);
  1287     016E  3003               	movlw	3
  1288     016F  158A  27B8  118A   	fcall	_readADC
  1289     0172  0872               	movf	?_readADC,w
  1290     0173  1283               	bcf	3,5	;RP0=0, select bank0
  1291     0174  1303               	bcf	3,6	;RP1=0, select bank0
  1292     0175  07AC               	addwf	_voltagesum,f
  1293     0176  1803               	skipnc
  1294     0177  0AAD               	incf	_voltagesum+1,f
  1295     0178  0873               	movf	?_readADC+1,w
  1296     0179  07AD               	addwf	_voltagesum+1,f
  1297     017A                     l2182:
  1298                           
  1299                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 185:     }
  1300     017A  3001               	movlw	1
  1301     017B  1683               	bsf	3,5	;RP0=1, select bank1
  1302     017C  1303               	bcf	3,6	;RP1=0, select bank1
  1303     017D  07BF               	addwf	main@i_464^(0+128),f
  1304     017E  2967               	goto	l2176
  1305     017F                     l2186:
  1306                           
  1307                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 186:     voltageraw = voltagesum >> 4;
  1308     017F  1283               	bcf	3,5	;RP0=0, select bank0
  1309     0180  1303               	bcf	3,6	;RP1=0, select bank0
  1310     0181  0E2C               	swapf	_voltagesum,w
  1311     0182  390F               	andlw	15
  1312     0183  00B0               	movwf	_voltageraw
  1313     0184  0E2D               	swapf	_voltagesum+1,w
  1314     0185  39F0               	andlw	240
  1315     0186  04B0               	iorwf	_voltageraw,f
  1316     0187  0E2D               	swapf	_voltagesum+1,w
  1317     0188  390F               	andlw	15
  1318     0189  00B1               	movwf	_voltageraw+1
  1319     018A                     l2188:
  1320                           
  1321                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 187:     voltagesum = 0;
  1322     018A  01AC               	clrf	_voltagesum
  1323     018B  01AD               	clrf	_voltagesum+1
  1324     018C                     l2190:
  1325                           
  1326                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 188:     voltage = (((uint32_t)voltageraw
      +                           * 235) / 1023) + 85;
  1327     018C  3000               	movlw	0
  1328     018D  00D2               	movwf	___lldiv@divisor+3
  1329     018E  3000               	movlw	0
  1330     018F  00D1               	movwf	___lldiv@divisor+2
  1331     0190  3003               	movlw	3
  1332     0191  00D0               	movwf	___lldiv@divisor+1
  1333     0192  30FF               	movlw	255
  1334     0193  00CF               	movwf	___lldiv@divisor
  1335     0194  0830               	movf	_voltageraw,w
  1336     0195  00F2               	movwf	___lmul@multiplier
  1337     0196  0831               	movf	_voltageraw+1,w
  1338     0197  00F3               	movwf	___lmul@multiplier+1
  1339     0198  01F4               	clrf	___lmul@multiplier+2
  1340     0199  01F5               	clrf	___lmul@multiplier+3
  1341     019A  3000               	movlw	0
  1342     019B  00F9               	movwf	___lmul@multiplicand+3
  1343     019C  3000               	movlw	0
  1344     019D  00F8               	movwf	___lmul@multiplicand+2
  1345     019E  3000               	movlw	0
  1346     019F  00F7               	movwf	___lmul@multiplicand+1
  1347     01A0  30EB               	movlw	235
  1348     01A1  00F6               	movwf	___lmul@multiplicand
  1349     01A2  118A  26C8  118A   	fcall	___lmul
  1350     01A5  0875               	movf	?___lmul+3,w
  1351     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1352     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1353     01A8  00D6               	movwf	___lldiv@dividend+3
  1354     01A9  0874               	movf	?___lmul+2,w
  1355     01AA  00D5               	movwf	___lldiv@dividend+2
  1356     01AB  0873               	movf	?___lmul+1,w
  1357     01AC  00D4               	movwf	___lldiv@dividend+1
  1358     01AD  0872               	movf	?___lmul,w
  1359     01AE  00D3               	movwf	___lldiv@dividend
  1360     01AF  118A  256C  118A   	fcall	___lldiv
  1361     01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1362     01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1363     01B4  084F               	movf	?___lldiv,w
  1364     01B5  3E55               	addlw	85
  1365     01B6  00C3               	movwf	_voltage
  1366     01B7                     l2192:
  1367                           
  1368                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 190:     if (seconds_counter % 2 == 0) {
  1369     01B7  1824               	btfsc	_seconds_counter,0	;volatile
  1370     01B8  29BA               	goto	u2721
  1371     01B9  29BB               	goto	u2720
  1372     01BA                     u2721:
  1373     01BA  29BD               	goto	l195
  1374     01BB                     u2720:
  1375     01BB                     l2194:
  1376                           
  1377                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 192:       PORTAbits.RA0 = 1;
  1378     01BB  1405               	bsf	5,0	;volatile
  1379                           
  1380                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 193:     } else {
  1381     01BC  29BE               	goto	l2196
  1382     01BD                     l195:
  1383                           
  1384                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 195:       PORTAbits.RA0 = 0;
  1385     01BD  1005               	bcf	5,0	;volatile
  1386     01BE                     l2196:
  1387     01BE  083F               	movf	_sensors_reading_in_progress,w	;volatile
  1388     01BF  1D03               	btfss	3,2
  1389     01C0  29C2               	goto	u2731
  1390     01C1  29C3               	goto	u2730
  1391     01C2                     u2731:
  1392     01C2  29CE               	goto	l2202
  1393     01C3                     u2730:
  1394     01C3                     l2198:
  1395     01C3  0840               	movf	_sensors_reading_complete,w	;volatile
  1396     01C4  1D03               	btfss	3,2
  1397     01C5  29C7               	goto	u2741
  1398     01C6  29C8               	goto	u2740
  1399     01C7                     u2741:
  1400     01C7  29CE               	goto	l2202
  1401     01C8                     u2740:
  1402     01C8                     l2200:
  1403                           
  1404                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 199:         !sensors_reading_complete) {
      +                          ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 200:       setupTimer0();
  1405     01C8  158A  272B  118A   	fcall	_setupTimer0
  1406                           
  1407                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 201:       startSensorReading();
  1408     01CB  158A  2756  118A   	fcall	_startSensorReading
  1409     01CE                     l2202:
  1410                           
  1411                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 204:     if (getSensorResults(&low_sensor
      +                          _active, &high_sensor_active,
  1412     01CE  3049               	movlw	(low (_low_sensor_active| 0))& (0+255)
  1413     01CF  00F2               	movwf	getSensorResults@low_active
  1414     01D0  3048               	movlw	(low (_high_sensor_active| 0))& (0+255)
  1415     01D1  00F3               	movwf	getSensorResults@high_active
  1416     01D2  3047               	movlw	(low (_flow_sensor_active| 0))& (0+255)
  1417     01D3  00F4               	movwf	getSensorResults@flow_active
  1418     01D4  118A  278A  118A   	fcall	_getSensorResults
  1419     01D7  3A00               	xorlw	0
  1420     01D8  1903               	skipnz
  1421     01D9  29DB               	goto	u2751
  1422     01DA  29DC               	goto	u2750
  1423     01DB                     u2751:
  1424     01DB  29F2               	goto	l2216
  1425     01DC                     u2750:
  1426     01DC                     l2204:
  1427                           
  1428                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 205:                          &flow_senso
      +                          r_active)) {;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 207:       if (high_sensor_ac
      +                          tive) {
  1429     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1430     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1431     01DE  0848               	movf	_high_sensor_active,w
  1432     01DF  1903               	btfsc	3,2
  1433     01E0  29E2               	goto	u2761
  1434     01E1  29E3               	goto	u2760
  1435     01E2                     u2761:
  1436     01E2  29E5               	goto	l2210
  1437     01E3                     u2760:
  1438     01E3                     l2206:
  1439                           
  1440                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 208:         PORTAbits.RA4 = 1;
  1441     01E3  1605               	bsf	5,4	;volatile
  1442     01E4                     l2208:
  1443                           
  1444                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 209:         pretankempty = 0;
  1445     01E4  01B7               	clrf	_pretankempty
  1446     01E5                     l2210:
  1447                           
  1448                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 211:       if (!low_sensor_active && !hig
      +                          h_sensor_active) {
  1449     01E5  0849               	movf	_low_sensor_active,w
  1450     01E6  1D03               	btfss	3,2
  1451     01E7  29E9               	goto	u2771
  1452     01E8  29EA               	goto	u2770
  1453     01E9                     u2771:
  1454     01E9  29F2               	goto	l2216
  1455     01EA                     u2770:
  1456     01EA                     l2212:
  1457     01EA  0848               	movf	_high_sensor_active,w
  1458     01EB  1D03               	btfss	3,2
  1459     01EC  29EE               	goto	u2781
  1460     01ED  29EF               	goto	u2780
  1461     01EE                     u2781:
  1462     01EE  29F2               	goto	l2216
  1463     01EF                     u2780:
  1464     01EF                     l2214:
  1465                           
  1466                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 212:         PORTAbits.RA4 = 0;
  1467     01EF  1205               	bcf	5,4	;volatile
  1468                           
  1469                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 213:         pretankempty = 1;
  1470     01F0  3001               	movlw	1
  1471     01F1  00B7               	movwf	_pretankempty
  1472     01F2                     l2216:
  1473                           
  1474                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 218:     if(pretankempty !=tankempty){
  1475     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1476     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1477     01F4  0837               	movf	_pretankempty,w
  1478     01F5  0639               	xorwf	_tankempty,w
  1479     01F6  1903               	skipnz
  1480     01F7  29F9               	goto	u2791
  1481     01F8  29FA               	goto	u2790
  1482     01F9                     u2791:
  1483     01F9  2A45               	goto	l2226
  1484     01FA                     u2790:
  1485     01FA                     l2218:
  1486                           
  1487                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 219:       if(lastsensorcheck == 0){
  1488     01FA  0823               	movf	_lastsensorcheck+3,w
  1489     01FB  0422               	iorwf	_lastsensorcheck+2,w
  1490     01FC  0421               	iorwf	_lastsensorcheck+1,w
  1491     01FD  0420               	iorwf	_lastsensorcheck,w
  1492     01FE  1D03               	skipz
  1493     01FF  2A01               	goto	u2801
  1494     0200  2A02               	goto	u2800
  1495     0201                     u2801:
  1496     0201  2A0B               	goto	l2222
  1497     0202                     u2800:
  1498     0202                     l2220:
  1499                           
  1500                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 220:         lastsensorcheck = seconds_co
      +                          unter;
  1501     0202  0827               	movf	_seconds_counter+3,w	;volatile
  1502     0203  00A3               	movwf	_lastsensorcheck+3
  1503     0204  0826               	movf	_seconds_counter+2,w	;volatile
  1504     0205  00A2               	movwf	_lastsensorcheck+2
  1505     0206  0825               	movf	_seconds_counter+1,w	;volatile
  1506     0207  00A1               	movwf	_lastsensorcheck+1
  1507     0208  0824               	movf	_seconds_counter,w	;volatile
  1508     0209  00A0               	movwf	_lastsensorcheck
  1509                           
  1510                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 221:       }else if(seconds_counter - las
      +                          tsensorcheck >= sensorbuffer){
  1511     020A  2A84               	goto	l205
  1512     020B                     l2222:
  1513     020B  0824               	movf	_seconds_counter,w	;volatile
  1514     020C  00DD               	movwf	??_main
  1515     020D  0825               	movf	_seconds_counter+1,w	;volatile
  1516     020E  00DE               	movwf	??_main+1
  1517     020F  0826               	movf	_seconds_counter+2,w	;volatile
  1518     0210  00DF               	movwf	??_main+2
  1519     0211  0827               	movf	_seconds_counter+3,w	;volatile
  1520     0212  00E0               	movwf	??_main+3
  1521     0213  0820               	movf	_lastsensorcheck,w
  1522     0214  02DD               	subwf	??_main,f
  1523     0215  0821               	movf	_lastsensorcheck+1,w
  1524     0216  1C03               	skipc
  1525     0217  0F21               	incfsz	_lastsensorcheck+1,w
  1526     0218  2A1A               	goto	u2811
  1527     0219  2A1B               	goto	u2812
  1528     021A                     u2811:
  1529     021A  02DE               	subwf	??_main+1,f
  1530     021B                     u2812:
  1531     021B  0822               	movf	_lastsensorcheck+2,w
  1532     021C  1C03               	skipc
  1533     021D  0F22               	incfsz	_lastsensorcheck+2,w
  1534     021E  2A20               	goto	u2813
  1535     021F  2A21               	goto	u2814
  1536     0220                     u2813:
  1537     0220  02DF               	subwf	??_main+2,f
  1538     0221                     u2814:
  1539     0221  0823               	movf	_lastsensorcheck+3,w
  1540     0222  1C03               	skipc
  1541     0223  0F23               	incfsz	_lastsensorcheck+3,w
  1542     0224  2A26               	goto	u2815
  1543     0225  2A27               	goto	u2816
  1544     0226                     u2815:
  1545     0226  02E0               	subwf	??_main+3,f
  1546     0227                     u2816:
  1547     0227  0860               	movf	??_main+3,w
  1548     0228  1D03               	btfss	3,2
  1549     0229  2A38               	goto	u2820
  1550     022A  085F               	movf	??_main+2,w
  1551     022B  1D03               	btfss	3,2
  1552     022C  2A38               	goto	u2820
  1553     022D  085E               	movf	??_main+1,w
  1554     022E  1D03               	btfss	3,2
  1555     022F  2A38               	goto	u2820
  1556     0230  300A               	movlw	10
  1557     0231  025D               	subwf	??_main,w
  1558     0232  1D03               	skipz
  1559     0233  2A34               	goto	u2823
  1560     0234                     u2823:
  1561     0234  1C03               	btfss	3,0
  1562     0235  2A37               	goto	u2821
  1563     0236  2A38               	goto	u2820
  1564     0237                     u2821:
  1565     0237  2A84               	goto	l205
  1566     0238                     u2820:
  1567     0238                     l2224:
  1568                           
  1569                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 222:         lastsensorcheck = 0;
  1570     0238  3000               	movlw	0
  1571     0239  1283               	bcf	3,5	;RP0=0, select bank0
  1572     023A  1303               	bcf	3,6	;RP1=0, select bank0
  1573     023B  00A3               	movwf	_lastsensorcheck+3
  1574     023C  3000               	movlw	0
  1575     023D  00A2               	movwf	_lastsensorcheck+2
  1576     023E  3000               	movlw	0
  1577     023F  00A1               	movwf	_lastsensorcheck+1
  1578     0240  3000               	movlw	0
  1579     0241  00A0               	movwf	_lastsensorcheck
  1580                           
  1581                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 223:         tankempty = pretankempty;
  1582     0242  0837               	movf	_pretankempty,w
  1583     0243  00B9               	movwf	_tankempty
  1584     0244  2A84               	goto	l205
  1585     0245                     l2226:
  1586     0245  0823               	movf	_lastsensorcheck+3,w
  1587     0246  0422               	iorwf	_lastsensorcheck+2,w
  1588     0247  0421               	iorwf	_lastsensorcheck+1,w
  1589     0248  0420               	iorwf	_lastsensorcheck,w
  1590     0249  1903               	skipnz
  1591     024A  2A4C               	goto	u2831
  1592     024B  2A4D               	goto	u2830
  1593     024C                     u2831:
  1594     024C  2A84               	goto	l205
  1595     024D                     u2830:
  1596     024D                     l2228:
  1597     024D  0824               	movf	_seconds_counter,w	;volatile
  1598     024E  00DD               	movwf	??_main
  1599     024F  0825               	movf	_seconds_counter+1,w	;volatile
  1600     0250  00DE               	movwf	??_main+1
  1601     0251  0826               	movf	_seconds_counter+2,w	;volatile
  1602     0252  00DF               	movwf	??_main+2
  1603     0253  0827               	movf	_seconds_counter+3,w	;volatile
  1604     0254  00E0               	movwf	??_main+3
  1605     0255  0820               	movf	_lastsensorcheck,w
  1606     0256  02DD               	subwf	??_main,f
  1607     0257  0821               	movf	_lastsensorcheck+1,w
  1608     0258  1C03               	skipc
  1609     0259  0F21               	incfsz	_lastsensorcheck+1,w
  1610     025A  2A5C               	goto	u2841
  1611     025B  2A5D               	goto	u2842
  1612     025C                     u2841:
  1613     025C  02DE               	subwf	??_main+1,f
  1614     025D                     u2842:
  1615     025D  0822               	movf	_lastsensorcheck+2,w
  1616     025E  1C03               	skipc
  1617     025F  0F22               	incfsz	_lastsensorcheck+2,w
  1618     0260  2A62               	goto	u2843
  1619     0261  2A63               	goto	u2844
  1620     0262                     u2843:
  1621     0262  02DF               	subwf	??_main+2,f
  1622     0263                     u2844:
  1623     0263  0823               	movf	_lastsensorcheck+3,w
  1624     0264  1C03               	skipc
  1625     0265  0F23               	incfsz	_lastsensorcheck+3,w
  1626     0266  2A68               	goto	u2845
  1627     0267  2A69               	goto	u2846
  1628     0268                     u2845:
  1629     0268  02E0               	subwf	??_main+3,f
  1630     0269                     u2846:
  1631     0269  0860               	movf	??_main+3,w
  1632     026A  1D03               	btfss	3,2
  1633     026B  2A7A               	goto	u2850
  1634     026C  085F               	movf	??_main+2,w
  1635     026D  1D03               	btfss	3,2
  1636     026E  2A7A               	goto	u2850
  1637     026F  085E               	movf	??_main+1,w
  1638     0270  1D03               	btfss	3,2
  1639     0271  2A7A               	goto	u2850
  1640     0272  300A               	movlw	10
  1641     0273  025D               	subwf	??_main,w
  1642     0274  1D03               	skipz
  1643     0275  2A76               	goto	u2853
  1644     0276                     u2853:
  1645     0276  1C03               	btfss	3,0
  1646     0277  2A79               	goto	u2851
  1647     0278  2A7A               	goto	u2850
  1648     0279                     u2851:
  1649     0279  2A84               	goto	l205
  1650     027A                     u2850:
  1651     027A                     l2230:
  1652                           
  1653                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 226:       lastsensorcheck = 0;
  1654     027A  3000               	movlw	0
  1655     027B  1283               	bcf	3,5	;RP0=0, select bank0
  1656     027C  1303               	bcf	3,6	;RP1=0, select bank0
  1657     027D  00A3               	movwf	_lastsensorcheck+3
  1658     027E  3000               	movlw	0
  1659     027F  00A2               	movwf	_lastsensorcheck+2
  1660     0280  3000               	movlw	0
  1661     0281  00A1               	movwf	_lastsensorcheck+1
  1662     0282  3000               	movlw	0
  1663     0283  00A0               	movwf	_lastsensorcheck
  1664     0284                     l205:
  1665                           
  1666                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 229:     if(flow_sensor_active != flowact
      +                          ive){
  1667     0284  1283               	bcf	3,5	;RP0=0, select bank0
  1668     0285  1303               	bcf	3,6	;RP1=0, select bank0
  1669     0286  0847               	movf	_flow_sensor_active,w
  1670     0287  0636               	xorwf	_flowactive,w
  1671     0288  1903               	skipnz
  1672     0289  2A8B               	goto	u2861
  1673     028A  2A8C               	goto	u2860
  1674     028B                     u2861:
  1675     028B  2AD1               	goto	l2242
  1676     028C                     u2860:
  1677     028C                     l2232:
  1678                           
  1679                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 230:         if (lastflowcheck == 0) {
  1680     028C  082A               	movf	_lastflowcheck,w
  1681     028D  042B               	iorwf	_lastflowcheck+1,w
  1682     028E  1D03               	btfss	3,2
  1683     028F  2A91               	goto	u2871
  1684     0290  2A92               	goto	u2870
  1685     0291                     u2871:
  1686     0291  2A97               	goto	l2236
  1687     0292                     u2870:
  1688     0292                     l2234:
  1689                           
  1690                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 231:           lastflowcheck = seconds_co
      +                          unter;
  1691     0292  0825               	movf	_seconds_counter+1,w	;volatile
  1692     0293  00AB               	movwf	_lastflowcheck+1
  1693     0294  0824               	movf	_seconds_counter,w	;volatile
  1694     0295  00AA               	movwf	_lastflowcheck
  1695                           
  1696                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 232:         } else if (seconds_counter -
      +                           lastflowcheck >= sensorbuffer) {
  1697     0296  2B0E               	goto	l2248
  1698     0297                     l2236:
  1699     0297  082A               	movf	_lastflowcheck,w
  1700     0298  00DD               	movwf	??_main
  1701     0299  082B               	movf	_lastflowcheck+1,w
  1702     029A  00DE               	movwf	??_main+1
  1703     029B  01DF               	clrf	??_main+2
  1704     029C  01E0               	clrf	??_main+3
  1705     029D  0824               	movf	_seconds_counter,w	;volatile
  1706     029E  00E1               	movwf	??_main+4
  1707     029F  0825               	movf	_seconds_counter+1,w	;volatile
  1708     02A0  00E2               	movwf	??_main+5
  1709     02A1  0826               	movf	_seconds_counter+2,w	;volatile
  1710     02A2  00E3               	movwf	??_main+6
  1711     02A3  0827               	movf	_seconds_counter+3,w	;volatile
  1712     02A4  00E4               	movwf	??_main+7
  1713     02A5  085D               	movf	??_main,w
  1714     02A6  02E1               	subwf	??_main+4,f
  1715     02A7  085E               	movf	??_main+1,w
  1716     02A8  1C03               	skipc
  1717     02A9  0F5E               	incfsz	??_main+1,w
  1718     02AA  2AAC               	goto	u2881
  1719     02AB  2AAD               	goto	u2882
  1720     02AC                     u2881:
  1721     02AC  02E2               	subwf	??_main+5,f
  1722     02AD                     u2882:
  1723     02AD  085F               	movf	??_main+2,w
  1724     02AE  1C03               	skipc
  1725     02AF  0F5F               	incfsz	??_main+2,w
  1726     02B0  2AB2               	goto	u2883
  1727     02B1  2AB3               	goto	u2884
  1728     02B2                     u2883:
  1729     02B2  02E3               	subwf	??_main+6,f
  1730     02B3                     u2884:
  1731     02B3  0860               	movf	??_main+3,w
  1732     02B4  1C03               	skipc
  1733     02B5  0F60               	incfsz	??_main+3,w
  1734     02B6  2AB8               	goto	u2885
  1735     02B7  2AB9               	goto	u2886
  1736     02B8                     u2885:
  1737     02B8  02E4               	subwf	??_main+7,f
  1738     02B9                     u2886:
  1739     02B9  0864               	movf	??_main+7,w
  1740     02BA  1D03               	btfss	3,2
  1741     02BB  2ACA               	goto	u2890
  1742     02BC  0863               	movf	??_main+6,w
  1743     02BD  1D03               	btfss	3,2
  1744     02BE  2ACA               	goto	u2890
  1745     02BF  0862               	movf	??_main+5,w
  1746     02C0  1D03               	btfss	3,2
  1747     02C1  2ACA               	goto	u2890
  1748     02C2  300A               	movlw	10
  1749     02C3  0261               	subwf	??_main+4,w
  1750     02C4  1D03               	skipz
  1751     02C5  2AC6               	goto	u2893
  1752     02C6                     u2893:
  1753     02C6  1C03               	btfss	3,0
  1754     02C7  2AC9               	goto	u2891
  1755     02C8  2ACA               	goto	u2890
  1756     02C9                     u2891:
  1757     02C9  2B0E               	goto	l2248
  1758     02CA                     u2890:
  1759     02CA                     l2238:
  1760                           
  1761                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 233:           lastflowcheck = 0;
  1762     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1763     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1764     02CC  01AA               	clrf	_lastflowcheck
  1765     02CD  01AB               	clrf	_lastflowcheck+1
  1766     02CE                     l2240:
  1767                           
  1768                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 234:           flowactive = flow_sensor_a
      +                          ctive;
  1769     02CE  0847               	movf	_flow_sensor_active,w
  1770     02CF  00B6               	movwf	_flowactive
  1771     02D0  2B0E               	goto	l2248
  1772     02D1                     l2242:
  1773     02D1  082A               	movf	_lastflowcheck,w
  1774     02D2  042B               	iorwf	_lastflowcheck+1,w
  1775     02D3  1903               	btfsc	3,2
  1776     02D4  2AD6               	goto	u2901
  1777     02D5  2AD7               	goto	u2900
  1778     02D6                     u2901:
  1779     02D6  2B0E               	goto	l2248
  1780     02D7                     u2900:
  1781     02D7                     l2244:
  1782     02D7  082A               	movf	_lastflowcheck,w
  1783     02D8  00DD               	movwf	??_main
  1784     02D9  082B               	movf	_lastflowcheck+1,w
  1785     02DA  00DE               	movwf	??_main+1
  1786     02DB  01DF               	clrf	??_main+2
  1787     02DC  01E0               	clrf	??_main+3
  1788     02DD  0824               	movf	_seconds_counter,w	;volatile
  1789     02DE  00E1               	movwf	??_main+4
  1790     02DF  0825               	movf	_seconds_counter+1,w	;volatile
  1791     02E0  00E2               	movwf	??_main+5
  1792     02E1  0826               	movf	_seconds_counter+2,w	;volatile
  1793     02E2  00E3               	movwf	??_main+6
  1794     02E3  0827               	movf	_seconds_counter+3,w	;volatile
  1795     02E4  00E4               	movwf	??_main+7
  1796     02E5  085D               	movf	??_main,w
  1797     02E6  02E1               	subwf	??_main+4,f
  1798     02E7  085E               	movf	??_main+1,w
  1799     02E8  1C03               	skipc
  1800     02E9  0F5E               	incfsz	??_main+1,w
  1801     02EA  2AEC               	goto	u2911
  1802     02EB  2AED               	goto	u2912
  1803     02EC                     u2911:
  1804     02EC  02E2               	subwf	??_main+5,f
  1805     02ED                     u2912:
  1806     02ED  085F               	movf	??_main+2,w
  1807     02EE  1C03               	skipc
  1808     02EF  0F5F               	incfsz	??_main+2,w
  1809     02F0  2AF2               	goto	u2913
  1810     02F1  2AF3               	goto	u2914
  1811     02F2                     u2913:
  1812     02F2  02E3               	subwf	??_main+6,f
  1813     02F3                     u2914:
  1814     02F3  0860               	movf	??_main+3,w
  1815     02F4  1C03               	skipc
  1816     02F5  0F60               	incfsz	??_main+3,w
  1817     02F6  2AF8               	goto	u2915
  1818     02F7  2AF9               	goto	u2916
  1819     02F8                     u2915:
  1820     02F8  02E4               	subwf	??_main+7,f
  1821     02F9                     u2916:
  1822     02F9  0864               	movf	??_main+7,w
  1823     02FA  1D03               	btfss	3,2
  1824     02FB  2B0A               	goto	u2920
  1825     02FC  0863               	movf	??_main+6,w
  1826     02FD  1D03               	btfss	3,2
  1827     02FE  2B0A               	goto	u2920
  1828     02FF  0862               	movf	??_main+5,w
  1829     0300  1D03               	btfss	3,2
  1830     0301  2B0A               	goto	u2920
  1831     0302  300A               	movlw	10
  1832     0303  0261               	subwf	??_main+4,w
  1833     0304  1D03               	skipz
  1834     0305  2B06               	goto	u2923
  1835     0306                     u2923:
  1836     0306  1C03               	btfss	3,0
  1837     0307  2B09               	goto	u2921
  1838     0308  2B0A               	goto	u2920
  1839     0309                     u2921:
  1840     0309  2B0E               	goto	l2248
  1841     030A                     u2920:
  1842     030A                     l2246:
  1843                           
  1844                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 237:         lastflowcheck = 0;
  1845     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1846     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1847     030C  01AA               	clrf	_lastflowcheck
  1848     030D  01AB               	clrf	_lastflowcheck+1
  1849     030E                     l2248:
  1850                           
  1851                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 241:     if (tankempty) {
  1852     030E  1283               	bcf	3,5	;RP0=0, select bank0
  1853     030F  1303               	bcf	3,6	;RP1=0, select bank0
  1854     0310  0839               	movf	_tankempty,w
  1855     0311  1903               	btfsc	3,2
  1856     0312  2B14               	goto	u2931
  1857     0313  2B15               	goto	u2930
  1858     0314                     u2931:
  1859     0314  2C42               	goto	l2292
  1860     0315                     u2930:
  1861     0315                     l2250:
  1862                           
  1863                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 242:       if (!timeouterror && !voltagee
      +                          rror && !dryrunerror && !motorrunning) {
  1864     0315  083B               	movf	_timeouterror,w
  1865     0316  1D03               	btfss	3,2
  1866     0317  2B19               	goto	u2941
  1867     0318  2B1A               	goto	u2940
  1868     0319                     u2941:
  1869     0319  2B44               	goto	l2264
  1870     031A                     u2940:
  1871     031A                     l2252:
  1872     031A  083D               	movf	_voltageerror,w
  1873     031B  1D03               	btfss	3,2
  1874     031C  2B1E               	goto	u2951
  1875     031D  2B1F               	goto	u2950
  1876     031E                     u2951:
  1877     031E  2B44               	goto	l2264
  1878     031F                     u2950:
  1879     031F                     l2254:
  1880     031F  083C               	movf	_dryrunerror,w
  1881     0320  1D03               	btfss	3,2
  1882     0321  2B23               	goto	u2961
  1883     0322  2B24               	goto	u2960
  1884     0323                     u2961:
  1885     0323  2B44               	goto	l2264
  1886     0324                     u2960:
  1887     0324                     l2256:
  1888     0324  083A               	movf	_motorrunning,w
  1889     0325  1D03               	btfss	3,2
  1890     0326  2B28               	goto	u2971
  1891     0327  2B29               	goto	u2970
  1892     0328                     u2971:
  1893     0328  2B44               	goto	l2264
  1894     0329                     u2970:
  1895     0329                     l2258:
  1896                           
  1897                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 244:         PORTCbits.RC3 = 1;
  1898     0329  1587               	bsf	7,3	;volatile
  1899     032A                     l2260:
  1900                           
  1901                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 245:         motorstarttime = seconds_cou
      +                          nter;
  1902     032A  0827               	movf	_seconds_counter+3,w	;volatile
  1903     032B  1683               	bsf	3,5	;RP0=1, select bank1
  1904     032C  1303               	bcf	3,6	;RP1=0, select bank1
  1905     032D  00AB               	movwf	(_motorstarttime+3)^(0+128)
  1906     032E  1283               	bcf	3,5	;RP0=0, select bank0
  1907     032F  1303               	bcf	3,6	;RP1=0, select bank0
  1908     0330  0826               	movf	_seconds_counter+2,w	;volatile
  1909     0331  1683               	bsf	3,5	;RP0=1, select bank1
  1910     0332  1303               	bcf	3,6	;RP1=0, select bank1
  1911     0333  00AA               	movwf	(_motorstarttime+2)^(0+128)
  1912     0334  1283               	bcf	3,5	;RP0=0, select bank0
  1913     0335  1303               	bcf	3,6	;RP1=0, select bank0
  1914     0336  0825               	movf	_seconds_counter+1,w	;volatile
  1915     0337  1683               	bsf	3,5	;RP0=1, select bank1
  1916     0338  1303               	bcf	3,6	;RP1=0, select bank1
  1917     0339  00A9               	movwf	(_motorstarttime+1)^(0+128)
  1918     033A  1283               	bcf	3,5	;RP0=0, select bank0
  1919     033B  1303               	bcf	3,6	;RP1=0, select bank0
  1920     033C  0824               	movf	_seconds_counter,w	;volatile
  1921     033D  1683               	bsf	3,5	;RP0=1, select bank1
  1922     033E  1303               	bcf	3,6	;RP1=0, select bank1
  1923     033F  00A8               	movwf	_motorstarttime^(0+128)
  1924     0340                     l2262:
  1925                           
  1926                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 246:         motorrunning = 1;
  1927     0340  3001               	movlw	1
  1928     0341  1283               	bcf	3,5	;RP0=0, select bank0
  1929     0342  1303               	bcf	3,6	;RP1=0, select bank0
  1930     0343  00BA               	movwf	_motorrunning
  1931     0344                     l2264:
  1932                           
  1933                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 248:       if (motorrunning) {
  1934     0344  083A               	movf	_motorrunning,w
  1935     0345  1903               	btfsc	3,2
  1936     0346  2B48               	goto	u2981
  1937     0347  2B49               	goto	u2980
  1938     0348                     u2981:
  1939     0348  2C4A               	goto	l2298
  1940     0349                     u2980:
  1941     0349                     l2266:
  1942                           
  1943                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 249:         if (seconds_counter - motors
      +                          tarttime >= maxruntime[4]) {
  1944     0349  1683               	bsf	3,5	;RP0=1, select bank1
  1945     034A  1303               	bcf	3,6	;RP1=0, select bank1
  1946     034B  0838               	movf	(_maxruntime^(0+128)+8),w
  1947     034C  1283               	bcf	3,5	;RP0=0, select bank0
  1948     034D  1303               	bcf	3,6	;RP1=0, select bank0
  1949     034E  00DD               	movwf	??_main
  1950     034F  1683               	bsf	3,5	;RP0=1, select bank1
  1951     0350  1303               	bcf	3,6	;RP1=0, select bank1
  1952     0351  0839               	movf	((_maxruntime+1)^(0+128)+8),w
  1953     0352  1283               	bcf	3,5	;RP0=0, select bank0
  1954     0353  1303               	bcf	3,6	;RP1=0, select bank0
  1955     0354  00DE               	movwf	??_main+1
  1956     0355  01DF               	clrf	??_main+2
  1957     0356  01E0               	clrf	??_main+3
  1958     0357  0824               	movf	_seconds_counter,w	;volatile
  1959     0358  00E1               	movwf	??_main+4
  1960     0359  0825               	movf	_seconds_counter+1,w	;volatile
  1961     035A  00E2               	movwf	??_main+5
  1962     035B  0826               	movf	_seconds_counter+2,w	;volatile
  1963     035C  00E3               	movwf	??_main+6
  1964     035D  0827               	movf	_seconds_counter+3,w	;volatile
  1965     035E  00E4               	movwf	??_main+7
  1966     035F  1683               	bsf	3,5	;RP0=1, select bank1
  1967     0360  1303               	bcf	3,6	;RP1=0, select bank1
  1968     0361  0828               	movf	_motorstarttime^(0+128),w
  1969     0362  1283               	bcf	3,5	;RP0=0, select bank0
  1970     0363  1303               	bcf	3,6	;RP1=0, select bank0
  1971     0364  02E1               	subwf	??_main+4,f
  1972     0365  1683               	bsf	3,5	;RP0=1, select bank1
  1973     0366  1303               	bcf	3,6	;RP1=0, select bank1
  1974     0367  0829               	movf	(_motorstarttime+1)^(0+128),w
  1975     0368  1C03               	skipc
  1976     0369  0F29               	incfsz	(_motorstarttime+1)^(0+128),w
  1977     036A  2B6C               	goto	u2991
  1978     036B  2B6F               	goto	u2992
  1979     036C                     u2991:
  1980     036C  1283               	bcf	3,5	;RP0=0, select bank0
  1981     036D  1303               	bcf	3,6	;RP1=0, select bank0
  1982     036E  02E2               	subwf	??_main+5,f
  1983     036F                     u2992:
  1984     036F  1683               	bsf	3,5	;RP0=1, select bank1
  1985     0370  1303               	bcf	3,6	;RP1=0, select bank1
  1986     0371  082A               	movf	(_motorstarttime+2)^(0+128),w
  1987     0372  1C03               	skipc
  1988     0373  0F2A               	incfsz	(_motorstarttime+2)^(0+128),w
  1989     0374  2B76               	goto	u2993
  1990     0375  2B79               	goto	u2994
  1991     0376                     u2993:
  1992     0376  1283               	bcf	3,5	;RP0=0, select bank0
  1993     0377  1303               	bcf	3,6	;RP1=0, select bank0
  1994     0378  02E3               	subwf	??_main+6,f
  1995     0379                     u2994:
  1996     0379  1683               	bsf	3,5	;RP0=1, select bank1
  1997     037A  1303               	bcf	3,6	;RP1=0, select bank1
  1998     037B  082B               	movf	(_motorstarttime+3)^(0+128),w
  1999     037C  1C03               	skipc
  2000     037D  0F2B               	incfsz	(_motorstarttime+3)^(0+128),w
  2001     037E  2B80               	goto	u2995
  2002     037F  2B83               	goto	u2996
  2003     0380                     u2995:
  2004     0380  1283               	bcf	3,5	;RP0=0, select bank0
  2005     0381  1303               	bcf	3,6	;RP1=0, select bank0
  2006     0382  02E4               	subwf	??_main+7,f
  2007     0383                     u2996:
  2008     0383  1683               	bsf	3,5	;RP0=1, select bank1
  2009     0384  1303               	bcf	3,6	;RP1=0, select bank1
  2010     0385  1283               	bcf	3,5	;RP0=0, select bank0
  2011     0386  1303               	bcf	3,6	;RP1=0, select bank0
  2012     0387  0860               	movf	??_main+3,w
  2013     0388  0264               	subwf	??_main+7,w
  2014     0389  1D03               	skipz
  2015     038A  2B95               	goto	u3005
  2016     038B  085F               	movf	??_main+2,w
  2017     038C  0263               	subwf	??_main+6,w
  2018     038D  1D03               	skipz
  2019     038E  2B95               	goto	u3005
  2020     038F  085E               	movf	??_main+1,w
  2021     0390  0262               	subwf	??_main+5,w
  2022     0391  1D03               	skipz
  2023     0392  2B95               	goto	u3005
  2024     0393  085D               	movf	??_main,w
  2025     0394  0261               	subwf	??_main+4,w
  2026     0395                     u3005:
  2027     0395  1C03               	skipc
  2028     0396  2B98               	goto	u3001
  2029     0397  2B99               	goto	u3000
  2030     0398                     u3001:
  2031     0398  2B9B               	goto	l2270
  2032     0399                     u3000:
  2033     0399                     l2268:
  2034                           
  2035                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 250:           timeouterror = 1;
  2036     0399  3001               	movlw	1
  2037     039A  00BB               	movwf	_timeouterror
  2038     039B                     l2270:
  2039                           
  2040                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 252:         if (!flowactive) {
  2041     039B  0836               	movf	_flowactive,w
  2042     039C  1D03               	btfss	3,2
  2043     039D  2B9F               	goto	u3011
  2044     039E  2BA0               	goto	u3010
  2045     039F                     u3011:
  2046     039F  2C17               	goto	l2284
  2047     03A0                     u3010:
  2048     03A0                     l2272:
  2049                           
  2050                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 253:           if (seconds_counter % 2 ==
      +                           0) {
  2051     03A0  1824               	btfsc	_seconds_counter,0	;volatile
  2052     03A1  2BA3               	goto	u3021
  2053     03A2  2BA4               	goto	u3020
  2054     03A3                     u3021:
  2055     03A3  2BA6               	goto	l218
  2056     03A4                     u3020:
  2057     03A4                     l2274:
  2058                           
  2059                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 255:             PORTAbits.RA2 = 1;
  2060     03A4  1505               	bsf	5,2	;volatile
  2061                           
  2062                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 256:           } else {
  2063     03A5  2BA7               	goto	l2276
  2064     03A6                     l218:
  2065                           
  2066                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 258:             PORTAbits.RA2 = 0;
  2067     03A6  1105               	bcf	5,2	;volatile
  2068     03A7                     l2276:
  2069                           
  2070                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 261:           if (lastdryruncheck == 0) 
      +                          {
  2071     03A7  1683               	bsf	3,5	;RP0=1, select bank1
  2072     03A8  1303               	bcf	3,6	;RP1=0, select bank1
  2073     03A9  082F               	movf	(_lastdryruncheck+3)^(0+128),w
  2074     03AA  042E               	iorwf	(_lastdryruncheck+2)^(0+128),w
  2075     03AB  042D               	iorwf	(_lastdryruncheck+1)^(0+128),w
  2076     03AC  042C               	iorwf	_lastdryruncheck^(0+128),w
  2077     03AD  1D03               	skipz
  2078     03AE  2BB0               	goto	u3031
  2079     03AF  2BB1               	goto	u3030
  2080     03B0                     u3031:
  2081     03B0  2BCA               	goto	l2280
  2082     03B1                     u3030:
  2083     03B1                     l2278:
  2084                           
  2085                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 262:             lastdryruncheck = second
      +                          s_counter;
  2086     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2087     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2088     03B3  0827               	movf	_seconds_counter+3,w	;volatile
  2089     03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2090     03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2091     03B6  00AF               	movwf	(_lastdryruncheck+3)^(0+128)
  2092     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2093     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2094     03B9  0826               	movf	_seconds_counter+2,w	;volatile
  2095     03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2096     03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2097     03BC  00AE               	movwf	(_lastdryruncheck+2)^(0+128)
  2098     03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2099     03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2100     03BF  0825               	movf	_seconds_counter+1,w	;volatile
  2101     03C0  1683               	bsf	3,5	;RP0=1, select bank1
  2102     03C1  1303               	bcf	3,6	;RP1=0, select bank1
  2103     03C2  00AD               	movwf	(_lastdryruncheck+1)^(0+128)
  2104     03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2105     03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2106     03C5  0824               	movf	_seconds_counter,w	;volatile
  2107     03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2108     03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2109     03C8  00AC               	movwf	_lastdryruncheck^(0+128)
  2110                           
  2111                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 263:           } else if (seconds_counter
      +                           - lastdryruncheck >= dryruntime) {
  2112     03C9  2C26               	goto	l223
  2113     03CA                     l2280:
  2114     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2115     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2116     03CC  082E               	movf	_dryruntime,w
  2117     03CD  00DD               	movwf	??_main
  2118     03CE  082F               	movf	_dryruntime+1,w
  2119     03CF  00DE               	movwf	??_main+1
  2120     03D0  01DF               	clrf	??_main+2
  2121     03D1  01E0               	clrf	??_main+3
  2122     03D2  0824               	movf	_seconds_counter,w	;volatile
  2123     03D3  00E1               	movwf	??_main+4
  2124     03D4  0825               	movf	_seconds_counter+1,w	;volatile
  2125     03D5  00E2               	movwf	??_main+5
  2126     03D6  0826               	movf	_seconds_counter+2,w	;volatile
  2127     03D7  00E3               	movwf	??_main+6
  2128     03D8  0827               	movf	_seconds_counter+3,w	;volatile
  2129     03D9  00E4               	movwf	??_main+7
  2130     03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2131     03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2132     03DC  082C               	movf	_lastdryruncheck^(0+128),w
  2133     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2134     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2135     03DF  02E1               	subwf	??_main+4,f
  2136     03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2137     03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2138     03E2  082D               	movf	(_lastdryruncheck+1)^(0+128),w
  2139     03E3  1C03               	skipc
  2140     03E4  0F2D               	incfsz	(_lastdryruncheck+1)^(0+128),w
  2141     03E5  2BE7               	goto	u3041
  2142     03E6  2BEA               	goto	u3042
  2143     03E7                     u3041:
  2144     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2145     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2146     03E9  02E2               	subwf	??_main+5,f
  2147     03EA                     u3042:
  2148     03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2149     03EB  1303               	bcf	3,6	;RP1=0, select bank1
  2150     03EC  082E               	movf	(_lastdryruncheck+2)^(0+128),w
  2151     03ED  1C03               	skipc
  2152     03EE  0F2E               	incfsz	(_lastdryruncheck+2)^(0+128),w
  2153     03EF  2BF1               	goto	u3043
  2154     03F0  2BF4               	goto	u3044
  2155     03F1                     u3043:
  2156     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2157     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2158     03F3  02E3               	subwf	??_main+6,f
  2159     03F4                     u3044:
  2160     03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2161     03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2162     03F6  082F               	movf	(_lastdryruncheck+3)^(0+128),w
  2163     03F7  1C03               	skipc
  2164     03F8  0F2F               	incfsz	(_lastdryruncheck+3)^(0+128),w
  2165     03F9  2BFB               	goto	u3045
  2166     03FA  2BFE               	goto	u3046
  2167     03FB                     u3045:
  2168     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2169     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2170     03FD  02E4               	subwf	??_main+7,f
  2171     03FE                     u3046:
  2172     03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2173     03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2174     0400  1283               	bcf	3,5	;RP0=0, select bank0
  2175     0401  1303               	bcf	3,6	;RP1=0, select bank0
  2176     0402  0860               	movf	??_main+3,w
  2177     0403  0264               	subwf	??_main+7,w
  2178     0404  1D03               	skipz
  2179     0405  2C10               	goto	u3055
  2180     0406  085F               	movf	??_main+2,w
  2181     0407  0263               	subwf	??_main+6,w
  2182     0408  1D03               	skipz
  2183     0409  2C10               	goto	u3055
  2184     040A  085E               	movf	??_main+1,w
  2185     040B  0262               	subwf	??_main+5,w
  2186     040C  1D03               	skipz
  2187     040D  2C10               	goto	u3055
  2188     040E  085D               	movf	??_main,w
  2189     040F  0261               	subwf	??_main+4,w
  2190     0410                     u3055:
  2191     0410  1C03               	skipc
  2192     0411  2C13               	goto	u3051
  2193     0412  2C14               	goto	u3050
  2194     0413                     u3051:
  2195     0413  2C26               	goto	l223
  2196     0414                     u3050:
  2197     0414                     l2282:
  2198                           
  2199                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 264:             dryrunerror = 1;
  2200     0414  3001               	movlw	1
  2201     0415  00BC               	movwf	_dryrunerror
  2202     0416  2C26               	goto	l223
  2203     0417                     l2284:
  2204                           
  2205                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 267:           lastdryruncheck = 0;
  2206     0417  3000               	movlw	0
  2207     0418  1683               	bsf	3,5	;RP0=1, select bank1
  2208     0419  1303               	bcf	3,6	;RP1=0, select bank1
  2209     041A  00AF               	movwf	(_lastdryruncheck+3)^(0+128)
  2210     041B  3000               	movlw	0
  2211     041C  00AE               	movwf	(_lastdryruncheck+2)^(0+128)
  2212     041D  3000               	movlw	0
  2213     041E  00AD               	movwf	(_lastdryruncheck+1)^(0+128)
  2214     041F  3000               	movlw	0
  2215     0420  00AC               	movwf	_lastdryruncheck^(0+128)
  2216     0421                     l2286:
  2217                           
  2218                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 268:           waterreached = 1;
  2219     0421  3001               	movlw	1
  2220     0422  1283               	bcf	3,5	;RP0=0, select bank0
  2221     0423  1303               	bcf	3,6	;RP1=0, select bank0
  2222     0424  00B8               	movwf	_waterreached
  2223     0425                     l2288:
  2224                           
  2225                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 269:           PORTAbits.RA2 = 0;
  2226     0425  1105               	bcf	5,2	;volatile
  2227     0426                     l223:	
  2228                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 270:         }
  2229                           
  2230                           
  2231                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 272:         if (voltage > maximumrinning
      +                          voltage || voltage < minimumrunningvoltage) {
  2232     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2233     0427  0843               	movf	_voltage,w
  2234     0428  00DD               	movwf	??_main
  2235     0429  01DE               	clrf	??_main+1
  2236     042A  085E               	movf	??_main+1,w
  2237     042B  0266               	subwf	_maximumrinningvoltage+1,w
  2238     042C  1D03               	skipz
  2239     042D  2C30               	goto	u3065
  2240     042E  085D               	movf	??_main,w
  2241     042F  0265               	subwf	_maximumrinningvoltage,w
  2242     0430                     u3065:
  2243     0430  1C03               	skipc
  2244     0431  2C33               	goto	u3061
  2245     0432  2C34               	goto	u3060
  2246     0433                     u3061:
  2247     0433  2C3F               	goto	l226
  2248     0434                     u3060:
  2249     0434                     l2290:
  2250     0434  0843               	movf	_voltage,w
  2251     0435  00DD               	movwf	??_main
  2252     0436  0868               	movf	_minimumrunningvoltage+1,w
  2253     0437  1D03               	skipz
  2254     0438  2C3B               	goto	u3075
  2255     0439  0867               	movf	_minimumrunningvoltage,w
  2256     043A  025D               	subwf	??_main,w
  2257     043B                     u3075:
  2258     043B  1803               	skipnc
  2259     043C  2C3E               	goto	u3071
  2260     043D  2C3F               	goto	u3070
  2261     043E                     u3071:
  2262     043E  2C4A               	goto	l2298
  2263     043F                     u3070:
  2264     043F                     l226:
  2265                           
  2266                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 273:           voltageerror = 1;
  2267     043F  3001               	movlw	1
  2268     0440  00BD               	movwf	_voltageerror
  2269     0441  2C4A               	goto	l2298
  2270     0442                     l2292:
  2271                           
  2272                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 279:       if (motorrunning) {
  2273     0442  083A               	movf	_motorrunning,w
  2274     0443  1903               	btfsc	3,2
  2275     0444  2C46               	goto	u3081
  2276     0445  2C47               	goto	u3080
  2277     0446                     u3081:
  2278     0446  2C4A               	goto	l2298
  2279     0447                     u3080:
  2280     0447                     l2294:
  2281                           
  2282                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 280:         motorrunning = 0;
  2283     0447  01BA               	clrf	_motorrunning
  2284                           
  2285                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 281:         mannualon = 0;
  2286     0448  01BE               	clrf	_mannualon
  2287     0449                     l2296:
  2288                           
  2289                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 282:         PORTCbits.RC3 = 0;
  2290     0449  1187               	bcf	7,3	;volatile
  2291     044A                     l2298:
  2292                           
  2293                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 285:     if (timeouterror) {
  2294     044A  083B               	movf	_timeouterror,w
  2295     044B  1903               	btfsc	3,2
  2296     044C  2C4E               	goto	u3091
  2297     044D  2C4F               	goto	u3090
  2298     044E                     u3091:
  2299     044E  2C50               	goto	l2302
  2300     044F                     u3090:
  2301     044F                     l2300:
  2302                           
  2303                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 286:       motorrunning = 0;
  2304     044F  01BA               	clrf	_motorrunning
  2305     0450                     l2302:
  2306                           
  2307                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 288:     if (dryrunerror) {
  2308     0450  083C               	movf	_dryrunerror,w
  2309     0451  1903               	btfsc	3,2
  2310     0452  2C54               	goto	u3101
  2311     0453  2C55               	goto	u3100
  2312     0454                     u3101:
  2313     0454  2C56               	goto	l2306
  2314     0455                     u3100:
  2315     0455                     l2304:
  2316                           
  2317                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 289:       motorrunning = 0;
  2318     0455  01BA               	clrf	_motorrunning
  2319     0456                     l2306:
  2320                           
  2321                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 291:     if (voltageerror) {
  2322     0456  083D               	movf	_voltageerror,w
  2323     0457  1903               	btfsc	3,2
  2324     0458  2C5A               	goto	u3111
  2325     0459  2C5B               	goto	u3110
  2326     045A                     u3111:
  2327     045A  2CD1               	goto	l2320
  2328     045B                     u3110:
  2329     045B                     l2308:
  2330                           
  2331                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 292:       if (lastvoltageerror == 0) {
  2332     045B  1683               	bsf	3,5	;RP0=1, select bank1
  2333     045C  1303               	bcf	3,6	;RP1=0, select bank1
  2334     045D  0827               	movf	(_lastvoltageerror+3)^(0+128),w
  2335     045E  0426               	iorwf	(_lastvoltageerror+2)^(0+128),w
  2336     045F  0425               	iorwf	(_lastvoltageerror+1)^(0+128),w
  2337     0460  0424               	iorwf	_lastvoltageerror^(0+128),w
  2338     0461  1D03               	skipz
  2339     0462  2C64               	goto	u3121
  2340     0463  2C65               	goto	u3120
  2341     0464                     u3121:
  2342     0464  2C7E               	goto	l2312
  2343     0465                     u3120:
  2344     0465                     l2310:
  2345                           
  2346                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 293:         lastvoltageerror = seconds_c
      +                          ounter;
  2347     0465  1283               	bcf	3,5	;RP0=0, select bank0
  2348     0466  1303               	bcf	3,6	;RP1=0, select bank0
  2349     0467  0827               	movf	_seconds_counter+3,w	;volatile
  2350     0468  1683               	bsf	3,5	;RP0=1, select bank1
  2351     0469  1303               	bcf	3,6	;RP1=0, select bank1
  2352     046A  00A7               	movwf	(_lastvoltageerror+3)^(0+128)
  2353     046B  1283               	bcf	3,5	;RP0=0, select bank0
  2354     046C  1303               	bcf	3,6	;RP1=0, select bank0
  2355     046D  0826               	movf	_seconds_counter+2,w	;volatile
  2356     046E  1683               	bsf	3,5	;RP0=1, select bank1
  2357     046F  1303               	bcf	3,6	;RP1=0, select bank1
  2358     0470  00A6               	movwf	(_lastvoltageerror+2)^(0+128)
  2359     0471  1283               	bcf	3,5	;RP0=0, select bank0
  2360     0472  1303               	bcf	3,6	;RP1=0, select bank0
  2361     0473  0825               	movf	_seconds_counter+1,w	;volatile
  2362     0474  1683               	bsf	3,5	;RP0=1, select bank1
  2363     0475  1303               	bcf	3,6	;RP1=0, select bank1
  2364     0476  00A5               	movwf	(_lastvoltageerror+1)^(0+128)
  2365     0477  1283               	bcf	3,5	;RP0=0, select bank0
  2366     0478  1303               	bcf	3,6	;RP1=0, select bank0
  2367     0479  0824               	movf	_seconds_counter,w	;volatile
  2368     047A  1683               	bsf	3,5	;RP0=1, select bank1
  2369     047B  1303               	bcf	3,6	;RP1=0, select bank1
  2370     047C  00A4               	movwf	_lastvoltageerror^(0+128)
  2371                           
  2372                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 294:       } else if (seconds_counter - l
      +                          astvoltageerror >= maxvoltageerrortime) {
  2373     047D  2CCE               	goto	l2318
  2374     047E                     l2312:
  2375     047E  1283               	bcf	3,5	;RP0=0, select bank0
  2376     047F  1303               	bcf	3,6	;RP1=0, select bank0
  2377     0480  0824               	movf	_seconds_counter,w	;volatile
  2378     0481  00DD               	movwf	??_main
  2379     0482  0825               	movf	_seconds_counter+1,w	;volatile
  2380     0483  00DE               	movwf	??_main+1
  2381     0484  0826               	movf	_seconds_counter+2,w	;volatile
  2382     0485  00DF               	movwf	??_main+2
  2383     0486  0827               	movf	_seconds_counter+3,w	;volatile
  2384     0487  00E0               	movwf	??_main+3
  2385     0488  1683               	bsf	3,5	;RP0=1, select bank1
  2386     0489  1303               	bcf	3,6	;RP1=0, select bank1
  2387     048A  0824               	movf	_lastvoltageerror^(0+128),w
  2388     048B  1283               	bcf	3,5	;RP0=0, select bank0
  2389     048C  1303               	bcf	3,6	;RP1=0, select bank0
  2390     048D  02DD               	subwf	??_main,f
  2391     048E  1683               	bsf	3,5	;RP0=1, select bank1
  2392     048F  1303               	bcf	3,6	;RP1=0, select bank1
  2393     0490  0825               	movf	(_lastvoltageerror+1)^(0+128),w
  2394     0491  1C03               	skipc
  2395     0492  0F25               	incfsz	(_lastvoltageerror+1)^(0+128),w
  2396     0493  2C95               	goto	u3131
  2397     0494  2C98               	goto	u3132
  2398     0495                     u3131:
  2399     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2400     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2401     0497  02DE               	subwf	??_main+1,f
  2402     0498                     u3132:
  2403     0498  1683               	bsf	3,5	;RP0=1, select bank1
  2404     0499  1303               	bcf	3,6	;RP1=0, select bank1
  2405     049A  0826               	movf	(_lastvoltageerror+2)^(0+128),w
  2406     049B  1C03               	skipc
  2407     049C  0F26               	incfsz	(_lastvoltageerror+2)^(0+128),w
  2408     049D  2C9F               	goto	u3133
  2409     049E  2CA2               	goto	u3134
  2410     049F                     u3133:
  2411     049F  1283               	bcf	3,5	;RP0=0, select bank0
  2412     04A0  1303               	bcf	3,6	;RP1=0, select bank0
  2413     04A1  02DF               	subwf	??_main+2,f
  2414     04A2                     u3134:
  2415     04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2416     04A3  1303               	bcf	3,6	;RP1=0, select bank1
  2417     04A4  0827               	movf	(_lastvoltageerror+3)^(0+128),w
  2418     04A5  1C03               	skipc
  2419     04A6  0F27               	incfsz	(_lastvoltageerror+3)^(0+128),w
  2420     04A7  2CA9               	goto	u3135
  2421     04A8  2CAC               	goto	u3136
  2422     04A9                     u3135:
  2423     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  2424     04AA  1303               	bcf	3,6	;RP1=0, select bank0
  2425     04AB  02E0               	subwf	??_main+3,f
  2426     04AC                     u3136:
  2427     04AC  1683               	bsf	3,5	;RP0=1, select bank1
  2428     04AD  1303               	bcf	3,6	;RP1=0, select bank1
  2429     04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2430     04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2431     04B0  0860               	movf	??_main+3,w
  2432     04B1  1D03               	btfss	3,2
  2433     04B2  2CC1               	goto	u3140
  2434     04B3  085F               	movf	??_main+2,w
  2435     04B4  1D03               	btfss	3,2
  2436     04B5  2CC1               	goto	u3140
  2437     04B6  085E               	movf	??_main+1,w
  2438     04B7  1D03               	btfss	3,2
  2439     04B8  2CC1               	goto	u3140
  2440     04B9  300A               	movlw	10
  2441     04BA  025D               	subwf	??_main,w
  2442     04BB  1D03               	skipz
  2443     04BC  2CBD               	goto	u3143
  2444     04BD                     u3143:
  2445     04BD  1C03               	btfss	3,0
  2446     04BE  2CC0               	goto	u3141
  2447     04BF  2CC1               	goto	u3140
  2448     04C0                     u3141:
  2449     04C0  2CCE               	goto	l2318
  2450     04C1                     u3140:
  2451     04C1                     l2314:
  2452                           
  2453                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 295:         voltageerror = 0;
  2454     04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2455     04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2456     04C3  01BD               	clrf	_voltageerror
  2457     04C4                     l2316:
  2458                           
  2459                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 296:         lastvoltageerror = 0;
  2460     04C4  3000               	movlw	0
  2461     04C5  1683               	bsf	3,5	;RP0=1, select bank1
  2462     04C6  1303               	bcf	3,6	;RP1=0, select bank1
  2463     04C7  00A7               	movwf	(_lastvoltageerror+3)^(0+128)
  2464     04C8  3000               	movlw	0
  2465     04C9  00A6               	movwf	(_lastvoltageerror+2)^(0+128)
  2466     04CA  3000               	movlw	0
  2467     04CB  00A5               	movwf	(_lastvoltageerror+1)^(0+128)
  2468     04CC  3000               	movlw	0
  2469     04CD  00A4               	movwf	_lastvoltageerror^(0+128)
  2470     04CE                     l2318:
  2471                           
  2472                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 299:       motorrunning = 0;
  2473     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2474     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2475     04D0  01BA               	clrf	_motorrunning
  2476     04D1                     l2320:
  2477                           
  2478                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 301:     if (!motorrunning) {
  2479     04D1  083A               	movf	_motorrunning,w
  2480     04D2  1D03               	btfss	3,2
  2481     04D3  2CD5               	goto	u3151
  2482     04D4  2CD6               	goto	u3150
  2483     04D5                     u3151:
  2484     04D5  2CD9               	goto	l235
  2485     04D6                     u3150:
  2486     04D6                     l2322:
  2487                           
  2488                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 302:       PORTCbits.RC3 = 0;
  2489     04D6  1187               	bcf	7,3	;volatile
  2490                           
  2491                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 303:       PORTAbits.RA1 = 0;
  2492     04D7  1085               	bcf	5,1	;volatile
  2493                           
  2494                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 304:     } else {
  2495     04D8  293A               	goto	l189
  2496     04D9                     l235:
  2497                           
  2498                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 305:       PORTAbits.RA1 = 1;
  2499     04D9  1485               	bsf	5,1	;volatile
  2500                           
  2501                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 306:       PORTCbits.RC3 = 1;
  2502     04DA  1587               	bsf	7,3	;volatile
  2503     04DB                     l2324:
  2504                           
  2505                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 307:       if (seconds_counter % 30 == 0)
      +                           {
  2506     04DB  3000               	movlw	0
  2507     04DC  00F5               	movwf	___llmod@divisor+3
  2508     04DD  3000               	movlw	0
  2509     04DE  00F4               	movwf	___llmod@divisor+2
  2510     04DF  3000               	movlw	0
  2511     04E0  00F3               	movwf	___llmod@divisor+1
  2512     04E1  301E               	movlw	30
  2513     04E2  00F2               	movwf	___llmod@divisor
  2514     04E3  0827               	movf	_seconds_counter+3,w	;volatile
  2515     04E4  00F9               	movwf	___llmod@dividend+3
  2516     04E5  0826               	movf	_seconds_counter+2,w	;volatile
  2517     04E6  00F8               	movwf	___llmod@dividend+2
  2518     04E7  0825               	movf	_seconds_counter+1,w	;volatile
  2519     04E8  00F7               	movwf	___llmod@dividend+1
  2520     04E9  0824               	movf	_seconds_counter,w	;volatile
  2521     04EA  00F6               	movwf	___llmod@dividend
  2522     04EB  118A  25D2  118A   	fcall	___llmod
  2523     04EE  0875               	movf	?___llmod+3,w
  2524     04EF  0474               	iorwf	?___llmod+2,w
  2525     04F0  0473               	iorwf	?___llmod+1,w
  2526     04F1  0472               	iorwf	?___llmod,w
  2527     04F2  1D03               	skipz
  2528     04F3  2CF5               	goto	u3161
  2529     04F4  2CF6               	goto	u3160
  2530     04F5                     u3161:
  2531     04F5  293A               	goto	l189
  2532     04F6                     u3160:
  2533     04F6                     l2326:
  2534                           
  2535                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 308:         trigger_buzzer(1);
  2536     04F6  3001               	movlw	1
  2537     04F7  00F2               	movwf	trigger_buzzer@duration_seconds
  2538     04F8  3000               	movlw	0
  2539     04F9  00F3               	movwf	trigger_buzzer@duration_seconds+1
  2540     04FA  158A  27D9  118A   	fcall	_trigger_buzzer
  2541     04FD  293A               	goto	l189
  2542     04FE  118A  280B         	ljmp	start
  2543     0500                     __end_of_main:
  2544                           
  2545                           	psect	text1
  2546     0FD9                     __ptext1:	
  2547 ;; *************** function _trigger_buzzer *****************
  2548 ;; Defined at:
  2549 ;;		line 506 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  duration_sec    2    2[COMMON] unsigned int 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2563 ;;      Params:         2       0       0       0
  2564 ;;      Locals:         0       0       0       0
  2565 ;;      Temps:          0       0       0       0
  2566 ;;      Totals:         2       0       0       0
  2567 ;;Total ram usage:        2 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577     0FD9                     _trigger_buzzer:	
  2578                           ;psect for function _trigger_buzzer
  2579                           
  2580     0FD9                     l2036:	
  2581                           ;incstack = 0
  2582                           ; Regs used in _trigger_buzzer: [wreg+status,2+status,0]
  2583                           
  2584                           
  2585                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 507:   if (!buzzer_active) {
  2586     0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  2587     0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  2588     0FDB  0834               	movf	_buzzer_active,w
  2589     0FDC  1D03               	btfss	3,2
  2590     0FDD  2FDF               	goto	u2401
  2591     0FDE  2FE0               	goto	u2400
  2592     0FDF                     u2401:
  2593     0FDF  2FFF               	goto	l309
  2594     0FE0                     u2400:
  2595     0FE0                     l2038:
  2596                           
  2597                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 508:     PORTCbits.RC4 = 1;
  2598     0FE0  1607               	bsf	7,4	;volatile
  2599     0FE1                     l2040:
  2600                           
  2601                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 509:     buzzer_start_time = seconds_coun
      +                          ter;
  2602     0FE1  0827               	movf	_seconds_counter+3,w	;volatile
  2603     0FE2  1683               	bsf	3,5	;RP0=1, select bank1
  2604     0FE3  1303               	bcf	3,6	;RP1=0, select bank1
  2605     0FE4  00A3               	movwf	(_buzzer_start_time+3)^(0+128)
  2606     0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  2607     0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  2608     0FE7  0826               	movf	_seconds_counter+2,w	;volatile
  2609     0FE8  1683               	bsf	3,5	;RP0=1, select bank1
  2610     0FE9  1303               	bcf	3,6	;RP1=0, select bank1
  2611     0FEA  00A2               	movwf	(_buzzer_start_time+2)^(0+128)
  2612     0FEB  1283               	bcf	3,5	;RP0=0, select bank0
  2613     0FEC  1303               	bcf	3,6	;RP1=0, select bank0
  2614     0FED  0825               	movf	_seconds_counter+1,w	;volatile
  2615     0FEE  1683               	bsf	3,5	;RP0=1, select bank1
  2616     0FEF  1303               	bcf	3,6	;RP1=0, select bank1
  2617     0FF0  00A1               	movwf	(_buzzer_start_time+1)^(0+128)
  2618     0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  2619     0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  2620     0FF3  0824               	movf	_seconds_counter,w	;volatile
  2621     0FF4  1683               	bsf	3,5	;RP0=1, select bank1
  2622     0FF5  1303               	bcf	3,6	;RP1=0, select bank1
  2623     0FF6  00A0               	movwf	_buzzer_start_time^(0+128)
  2624                           
  2625                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 510:     buzzer_duration = duration_secon
      +                          ds;
  2626     0FF7  0873               	movf	trigger_buzzer@duration_seconds+1,w
  2627     0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  2628     0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  2629     0FFA  00A9               	movwf	_buzzer_duration+1
  2630     0FFB  0872               	movf	trigger_buzzer@duration_seconds,w
  2631     0FFC  00A8               	movwf	_buzzer_duration
  2632     0FFD                     l2042:
  2633                           
  2634                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 511:     buzzer_active = 1;
  2635     0FFD  3001               	movlw	1
  2636     0FFE  00B4               	movwf	_buzzer_active
  2637     0FFF                     l309:
  2638     0FFF  0008               	return
  2639     1000                     __end_of_trigger_buzzer:
  2640                           
  2641                           	psect	text2
  2642     0F56                     __ptext2:	
  2643 ;; *************** function _startSensorReading *****************
  2644 ;; Defined at:
  2645 ;;		line 360 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2659 ;;      Params:         0       0       0       0
  2660 ;;      Locals:         0       0       0       0
  2661 ;;      Temps:          0       0       0       0
  2662 ;;      Totals:         0       0       0       0
  2663 ;;Total ram usage:        0 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 1
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673     0F56                     _startSensorReading:	
  2674                           ;psect for function _startSensorReading
  2675                           
  2676     0F56                     l2016:	
  2677                           ;incstack = 0
  2678                           ; Regs used in _startSensorReading: [wreg+status,2+status,0]
  2679                           
  2680                           
  2681                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 361:   if (!sensors_reading_in_progress) 
      +                          {
  2682     0F56  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0F57  1303               	bcf	3,6	;RP1=0, select bank0
  2684     0F58  083F               	movf	_sensors_reading_in_progress,w	;volatile
  2685     0F59  1D03               	btfss	3,2
  2686     0F5A  2F5C               	goto	u2321
  2687     0F5B  2F5D               	goto	u2320
  2688     0F5C                     u2321:
  2689     0F5C  2F64               	goto	l256
  2690     0F5D                     u2320:
  2691     0F5D                     l2018:
  2692                           
  2693                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 362:     reading_count = 0;
  2694     0F5D  01FB               	clrf	_reading_count	;volatile
  2695                           
  2696                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 363:     low_sensor_high_count = 0;
  2697     0F5E  01FA               	clrf	_low_sensor_high_count	;volatile
  2698                           
  2699                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 364:     high_sensor_high_count = 0;
  2700     0F5F  01C2               	clrf	_high_sensor_high_count	;volatile
  2701                           
  2702                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 365:     flow_sensor_high_count = 0;
  2703     0F60  01C1               	clrf	_flow_sensor_high_count	;volatile
  2704                           
  2705                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 366:     sensors_reading_complete = 0;
  2706     0F61  01C0               	clrf	_sensors_reading_complete	;volatile
  2707     0F62                     l2020:
  2708                           
  2709                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 367:     sensors_reading_in_progress = 1;
  2710     0F62  3001               	movlw	1
  2711     0F63  00BF               	movwf	_sensors_reading_in_progress	;volatile
  2712     0F64                     l256:
  2713     0F64  0008               	return
  2714     0F65                     __end_of_startSensorReading:
  2715                           
  2716                           	psect	text3
  2717     0F2B                     __ptext3:	
  2718 ;; *************** function _setupTimer0 *****************
  2719 ;; Defined at:
  2720 ;;		line 346 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2734 ;;      Params:         0       0       0       0
  2735 ;;      Locals:         0       0       0       0
  2736 ;;      Temps:          0       0       0       0
  2737 ;;      Totals:         0       0       0       0
  2738 ;;Total ram usage:        0 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 1
  2741 ;; This function calls:
  2742 ;;		Nothing
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748     0F2B                     _setupTimer0:	
  2749                           ;psect for function _setupTimer0
  2750                           
  2751     0F2B                     l2008:	
  2752                           ;incstack = 0
  2753                           ; Regs used in _setupTimer0: [wreg+status,2+status,0]
  2754                           
  2755                           
  2756                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 347:   OPTION_REGbits.T0CS = 0;
  2757     0F2B  1683               	bsf	3,5	;RP0=1, select bank1
  2758     0F2C  1303               	bcf	3,6	;RP1=0, select bank1
  2759     0F2D  1281               	bcf	1,5	;volatile
  2760                           
  2761                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 348:   OPTION_REGbits.PSA = 0;
  2762     0F2E  1181               	bcf	1,3	;volatile
  2763     0F2F                     l2010:
  2764                           
  2765                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 349:   OPTION_REGbits.PS = 0b010;
  2766     0F2F  0801               	movf	1,w	;volatile
  2767     0F30  39F8               	andlw	-8
  2768     0F31  3802               	iorlw	2
  2769     0F32  0081               	movwf	1	;volatile
  2770     0F33                     l2012:
  2771                           
  2772                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 356:   TMR0 = 6;
  2773     0F33  3006               	movlw	6
  2774     0F34  1283               	bcf	3,5	;RP0=0, select bank0
  2775     0F35  1303               	bcf	3,6	;RP1=0, select bank0
  2776     0F36  0081               	movwf	1	;volatile
  2777     0F37                     l2014:
  2778                           
  2779                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 357:   INTCONbits.TMR0IE = 1;
  2780     0F37  168B               	bsf	11,5	;volatile
  2781     0F38                     l252:
  2782     0F38  0008               	return
  2783     0F39                     __end_of_setupTimer0:
  2784                           
  2785                           	psect	text4
  2786     0754                     __ptext4:	
  2787 ;; *************** function _saveSettings *****************
  2788 ;; Defined at:
  2789 ;;		line 494 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  value8bit       1    wreg     unsigned char 
  2792 ;;  value16bit1     2    0[BANK0 ] unsigned int 
  2793 ;;  value16bit2     2    2[BANK0 ] unsigned int 
  2794 ;;  value16bit3     2    4[BANK0 ] unsigned int 
  2795 ;;  value16bit4     2    6[BANK0 ] unsigned int 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  value8bit       1    7[COMMON] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, pclath, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2807 ;;      Params:         0       8       0       0
  2808 ;;      Locals:         1       0       0       0
  2809 ;;      Temps:          0       0       0       0
  2810 ;;      Totals:         1       8       0       0
  2811 ;;Total ram usage:        9 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; Hardware stack levels required when called: 3
  2814 ;; This function calls:
  2815 ;;		_EEPROM_Write
  2816 ;;		_EEPROM_Write16
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822     0754                     _saveSettings:	
  2823                           ;psect for function _saveSettings
  2824                           
  2825                           
  2826                           ;incstack = 0
  2827                           ; Regs used in _saveSettings: [wreg+status,2+status,0+pclath+cstack]
  2828                           ;saveSettings@value8bit stored from wreg
  2829     0754  00F7               	movwf	saveSettings@value8bit
  2830     0755                     l1950:
  2831                           
  2832                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 494: void saveSettings(unsigned char valu
      +                          e8bit, unsigned int value16bit1,;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 495:     
      +                                        unsigned int value16bit2, unsigned int value16bit3,;/home/afnan/MPLABXProj
      +                          ects/PIC_Test.X/main.c: 496:                   unsigned int value16bit4) {;/home/afnan/M
      +                          PLABXProjects/PIC_Test.X/main.c: 498:   EEPROM_Write(0x01, value8bit);
  2833     0755  0877               	movf	saveSettings@value8bit,w
  2834     0756  00F2               	movwf	EEPROM_Write@data
  2835     0757  3001               	movlw	1
  2836     0758  118A  27E2  118A   	fcall	_EEPROM_Write
  2837                           
  2838                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 499:   EEPROM_Write16(0x02, value16bit1);
  2839     075B  1283               	bcf	3,5	;RP0=0, select bank0
  2840     075C  1303               	bcf	3,6	;RP1=0, select bank0
  2841     075D  084B               	movf	saveSettings@value16bit1+1,w
  2842     075E  00F5               	movwf	EEPROM_Write16@data+1
  2843     075F  084A               	movf	saveSettings@value16bit1,w
  2844     0760  00F4               	movwf	EEPROM_Write16@data
  2845     0761  3002               	movlw	2
  2846     0762  158A  2747  118A   	fcall	_EEPROM_Write16
  2847                           
  2848                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 500:   EEPROM_Write16(0x04, value16bit2);
  2849     0765  1283               	bcf	3,5	;RP0=0, select bank0
  2850     0766  1303               	bcf	3,6	;RP1=0, select bank0
  2851     0767  084D               	movf	saveSettings@value16bit2+1,w
  2852     0768  00F5               	movwf	EEPROM_Write16@data+1
  2853     0769  084C               	movf	saveSettings@value16bit2,w
  2854     076A  00F4               	movwf	EEPROM_Write16@data
  2855     076B  3004               	movlw	4
  2856     076C  158A  2747  118A   	fcall	_EEPROM_Write16
  2857                           
  2858                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 501:   EEPROM_Write16(0x06, value16bit3);
  2859     076F  1283               	bcf	3,5	;RP0=0, select bank0
  2860     0770  1303               	bcf	3,6	;RP1=0, select bank0
  2861     0771  084F               	movf	saveSettings@value16bit3+1,w
  2862     0772  00F5               	movwf	EEPROM_Write16@data+1
  2863     0773  084E               	movf	saveSettings@value16bit3,w
  2864     0774  00F4               	movwf	EEPROM_Write16@data
  2865     0775  3006               	movlw	6
  2866     0776  158A  2747  118A   	fcall	_EEPROM_Write16
  2867                           
  2868                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 502:   EEPROM_Write16(0x08, value16bit4);
  2869     0779  1283               	bcf	3,5	;RP0=0, select bank0
  2870     077A  1303               	bcf	3,6	;RP1=0, select bank0
  2871     077B  0851               	movf	saveSettings@value16bit4+1,w
  2872     077C  00F5               	movwf	EEPROM_Write16@data+1
  2873     077D  0850               	movf	saveSettings@value16bit4,w
  2874     077E  00F4               	movwf	EEPROM_Write16@data
  2875     077F  3008               	movlw	8
  2876     0780  158A  2747  118A   	fcall	_EEPROM_Write16
  2877                           
  2878                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 503:   EEPROM_Write(0x00, 0xAA);
  2879     0783  30AA               	movlw	170
  2880     0784  00F2               	movwf	EEPROM_Write@data
  2881     0785  3000               	movlw	0
  2882     0786  118A  27E2  118A   	fcall	_EEPROM_Write
  2883     0789                     l305:
  2884     0789  0008               	return
  2885     078A                     __end_of_saveSettings:
  2886                           
  2887                           	psect	text5
  2888     0F47                     __ptext5:	
  2889 ;; *************** function _EEPROM_Write16 *****************
  2890 ;; Defined at:
  2891 ;;		line 468 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  address         1    wreg     unsigned char 
  2894 ;;  data            2    4[COMMON] unsigned int 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  address         1    6[COMMON] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2906 ;;      Params:         2       0       0       0
  2907 ;;      Locals:         1       0       0       0
  2908 ;;      Temps:          0       0       0       0
  2909 ;;      Totals:         3       0       0       0
  2910 ;;Total ram usage:        3 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 2
  2913 ;; This function calls:
  2914 ;;		_EEPROM_Write
  2915 ;; This function is called by:
  2916 ;;		_saveSettings
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920     0F47                     _EEPROM_Write16:	
  2921                           ;psect for function _EEPROM_Write16
  2922                           
  2923                           
  2924                           ;incstack = 0
  2925                           ; Regs used in _EEPROM_Write16: [wreg+status,2+status,0+pclath+cstack]
  2926                           ;EEPROM_Write16@address stored from wreg
  2927     0F47  00F6               	movwf	EEPROM_Write16@address
  2928     0F48                     l1896:
  2929                           
  2930                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 469:   EEPROM_Write(address, data & 0xFF)
      +                          ;
  2931     0F48  0874               	movf	EEPROM_Write16@data,w
  2932     0F49  00F2               	movwf	EEPROM_Write@data
  2933     0F4A  0876               	movf	EEPROM_Write16@address,w
  2934     0F4B  118A  27E2  158A   	fcall	_EEPROM_Write
  2935                           
  2936                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 470:   EEPROM_Write(address + 1, data >> 
      +                          8);
  2937     0F4E  0875               	movf	EEPROM_Write16@data+1,w
  2938     0F4F  00F2               	movwf	EEPROM_Write@data
  2939     0F50  0876               	movf	EEPROM_Write16@address,w
  2940     0F51  3E01               	addlw	1
  2941     0F52  118A  27E2  158A   	fcall	_EEPROM_Write
  2942     0F55                     l295:
  2943     0F55  0008               	return
  2944     0F56                     __end_of_EEPROM_Write16:
  2945                           
  2946                           	psect	text6
  2947     07E2                     __ptext6:	
  2948 ;; *************** function _EEPROM_Write *****************
  2949 ;; Defined at:
  2950 ;;		line 437 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  address         1    wreg     unsigned char 
  2953 ;;  data            1    2[COMMON] unsigned char 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  address         1    3[COMMON] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2965 ;;      Params:         1       0       0       0
  2966 ;;      Locals:         1       0       0       0
  2967 ;;      Temps:          0       0       0       0
  2968 ;;      Totals:         2       0       0       0
  2969 ;;Total ram usage:        2 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 1
  2972 ;; This function calls:
  2973 ;;		Nothing
  2974 ;; This function is called by:
  2975 ;;		_EEPROM_Write16
  2976 ;;		_saveSettings
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980     07E2                     _EEPROM_Write:	
  2981                           ;psect for function _EEPROM_Write
  2982                           
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in _EEPROM_Write: [wreg]
  2986                           ;EEPROM_Write@address stored from wreg
  2987     07E2  00F3               	movwf	EEPROM_Write@address
  2988     07E3                     l1870:
  2989     07E3                     l280:	
  2990                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 439:     ;
  2991                           
  2992                           
  2993                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 438:   while (EECON1bits.WR)
  2994     07E3  1683               	bsf	3,5	;RP0=1, select bank3
  2995     07E4  1703               	bsf	3,6	;RP1=1, select bank3
  2996     07E5  188C               	btfsc	12,1	;volsfr
  2997     07E6  2FE8               	goto	u2171
  2998     07E7  2FE9               	goto	u2170
  2999     07E8                     u2171:
  3000     07E8  2FE3               	goto	l280
  3001     07E9                     u2170:
  3002     07E9                     l1872:
  3003                           
  3004                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 441:   EEADR = address;
  3005     07E9  0873               	movf	EEPROM_Write@address,w
  3006     07EA  1283               	bcf	3,5	;RP0=0, select bank2
  3007     07EB  1703               	bsf	3,6	;RP1=1, select bank2
  3008     07EC  008D               	movwf	13	;volatile
  3009                           
  3010                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 442:   EEDATA = data;
  3011     07ED  0872               	movf	EEPROM_Write@data,w
  3012     07EE  008C               	movwf	12	;volatile
  3013     07EF                     l1874:
  3014                           
  3015                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 444:   EECON1bits.EEPGD = 0;
  3016     07EF  1683               	bsf	3,5	;RP0=1, select bank3
  3017     07F0  1703               	bsf	3,6	;RP1=1, select bank3
  3018     07F1  138C               	bcf	12,7	;volsfr
  3019     07F2                     l1876:
  3020                           
  3021                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 445:   EECON1bits.WREN = 1;
  3022     07F2  150C               	bsf	12,2	;volsfr
  3023     07F3                     l1878:
  3024                           
  3025                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 447:   INTCONbits.GIE = 0;
  3026     07F3  138B               	bcf	11,7	;volatile
  3027     07F4                     l1880:
  3028                           
  3029                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 448:   EECON2 = 0x55;
  3030     07F4  3055               	movlw	85
  3031     07F5  008D               	movwf	13	;volsfr
  3032     07F6                     l1882:
  3033                           
  3034                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 449:   EECON2 = 0xAA;
  3035     07F6  30AA               	movlw	170
  3036     07F7  008D               	movwf	13	;volsfr
  3037     07F8                     l1884:
  3038                           
  3039                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 450:   EECON1bits.WR = 1;
  3040     07F8  148C               	bsf	12,1	;volsfr
  3041     07F9                     l283:	
  3042                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 453:     ;
  3043                           
  3044                           
  3045                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 452:   while (EECON1bits.WR)
  3046     07F9  188C               	btfsc	12,1	;volsfr
  3047     07FA  2FFC               	goto	u2181
  3048     07FB  2FFD               	goto	u2180
  3049     07FC                     u2181:
  3050     07FC  2FF9               	goto	l283
  3051     07FD                     u2180:
  3052     07FD                     l285:
  3053                           
  3054                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 455:   EECON1bits.WREN = 0;
  3055     07FD  110C               	bcf	12,2	;volsfr
  3056                           
  3057                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 456:   INTCONbits.GIE = 1;
  3058     07FE  178B               	bsf	11,7	;volatile
  3059     07FF                     l286:
  3060     07FF  0008               	return
  3061     0800                     __end_of_EEPROM_Write:
  3062                           
  3063                           	psect	text7
  3064     0FB8                     __ptext7:	
  3065 ;; *************** function _readADC *****************
  3066 ;; Defined at:
  3067 ;;		line 332 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  channel         1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  channel         1    5[COMMON] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  2    2[COMMON] unsigned int 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3081 ;;      Params:         2       0       0       0
  3082 ;;      Locals:         1       0       0       0
  3083 ;;      Temps:          1       0       0       0
  3084 ;;      Totals:         4       0       0       0
  3085 ;;Total ram usage:        4 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; Hardware stack levels required when called: 1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095     0FB8                     _readADC:	
  3096                           ;psect for function _readADC
  3097                           
  3098                           
  3099                           ;incstack = 0
  3100                           ; Regs used in _readADC: [wreg+status,2+status,0]
  3101                           ;readADC@channel stored from wreg
  3102     0FB8  00F5               	movwf	readADC@channel
  3103     0FB9                     l1952:
  3104                           
  3105                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 334:   ADCON0 = (ADCON0 & 0b11000011) | (
      +                          (uint8_t)(channel << 2));
  3106     0FB9  0875               	movf	readADC@channel,w
  3107     0FBA  00F4               	movwf	??_readADC
  3108     0FBB  3002               	movlw	2
  3109     0FBC                     u2215:
  3110     0FBC  1003               	clrc
  3111     0FBD  0DF4               	rlf	??_readADC,f
  3112     0FBE  3EFF               	addlw	-1
  3113     0FBF  1D03               	skipz
  3114     0FC0  2FBC               	goto	u2215
  3115     0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  3116     0FC2  1303               	bcf	3,6	;RP1=0, select bank0
  3117     0FC3  081F               	movf	31,w	;volatile
  3118     0FC4  39C3               	andlw	195
  3119     0FC5  0474               	iorwf	??_readADC,w
  3120     0FC6  009F               	movwf	31	;volatile
  3121     0FC7                     l1954:
  3122                           
  3123                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 335:   _delay((unsigned long)((10)*(40000
      +                          00/4000000.0)));
  3124     0FC7  3003               	movlw	3
  3125     0FC8  00F4               	movwf	??_readADC
  3126     0FC9                     u3217:
  3127     0FC9  0BF4               	decfsz	??_readADC,f
  3128     0FCA  2FC9               	goto	u3217
  3129     0FCB                     l1956:
  3130                           
  3131                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 336:   ADCON0bits.GO = 1;
  3132     0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  3133     0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  3134     0FCD  149F               	bsf	31,1	;volatile
  3135     0FCE                     l246:	
  3136                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 340:     ;
  3137                           
  3138                           
  3139                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 339:   while (ADCON0bits.GO)
  3140     0FCE  189F               	btfsc	31,1	;volatile
  3141     0FCF  2FD1               	goto	u2221
  3142     0FD0  2FD2               	goto	u2220
  3143     0FD1                     u2221:
  3144     0FD1  2FCE               	goto	l246
  3145     0FD2                     u2220:
  3146     0FD2                     l1958:
  3147                           
  3148                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 343:   return ((unsigned int)ADRESH << 8)
      +                           | ADRESL;
  3149     0FD2  081E               	movf	30,w	;volatile
  3150     0FD3  00F3               	movwf	?_readADC+1
  3151     0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  3152     0FD5  1303               	bcf	3,6	;RP1=0, select bank1
  3153     0FD6  081E               	movf	30,w	;volatile
  3154     0FD7  00F2               	movwf	?_readADC
  3155     0FD8                     l249:
  3156     0FD8  0008               	return
  3157     0FD9                     __end_of_readADC:
  3158                           
  3159                           	psect	text8
  3160     0679                     __ptext8:	
  3161 ;; *************** function _loadSettings *****************
  3162 ;; Defined at:
  3163 ;;		line 480 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  value8bit       1    0[BANK0 ] PTR unsigned char 
  3166 ;;		 -> maxruntimeindex(1), 
  3167 ;;  value16bit1     1    1[BANK0 ] PTR unsigned int 
  3168 ;;		 -> minvoltagelimit(2), 
  3169 ;;  value16bit2     1    2[BANK0 ] PTR unsigned int 
  3170 ;;		 -> maxvoltagelimit(2), 
  3171 ;;  value16bit3     1    3[BANK0 ] PTR unsigned int 
  3172 ;;		 -> minimumrunningvoltage(2), 
  3173 ;;  value16bit4     1    4[BANK0 ] PTR unsigned int 
  3174 ;;		 -> maximumrinningvoltage(2), 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      _Bool 
  3179 ;; Registers used:
  3180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3186 ;;      Params:         0       5       0       0
  3187 ;;      Locals:         0       0       0       0
  3188 ;;      Temps:          0       0       0       0
  3189 ;;      Totals:         0       5       0       0
  3190 ;;Total ram usage:        5 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 3
  3193 ;; This function calls:
  3194 ;;		_EEPROM_Read
  3195 ;;		_EEPROM_Read16
  3196 ;; This function is called by:
  3197 ;;		_main
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201     0679                     _loadSettings:	
  3202                           ;psect for function _loadSettings
  3203                           
  3204     0679                     l1930:	
  3205                           ;incstack = 0
  3206                           ; Regs used in _loadSettings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3207                           
  3208                           
  3209                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 480: _Bool loadSettings(unsigned char *va
      +                          lue8bit, unsigned int *value16bit1,;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 481:  
      +                                           unsigned int *value16bit2, unsigned int *value16bit3,;/home/afnan/MPLAB
      +                          XProjects/PIC_Test.X/main.c: 482:                   unsigned int *value16bit4) {;/home/a
      +                          fnan/MPLABXProjects/PIC_Test.X/main.c: 483:   if (EEPROM_Read(0x00) != 0xAA) {
  3210     0679  3000               	movlw	0
  3211     067A  158A  2787  118A   	fcall	_EEPROM_Read
  3212     067D  3AAA               	xorlw	170
  3213     067E  1903               	skipnz
  3214     067F  2E81               	goto	u2201
  3215     0680  2E82               	goto	u2200
  3216     0681                     u2201:
  3217     0681  2E84               	goto	l1936
  3218     0682                     u2200:
  3219     0682                     l1932:
  3220                           
  3221                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 484:     return 0;
  3222     0682  3000               	movlw	0
  3223     0683  2EC7               	goto	l302
  3224     0684                     l1936:
  3225                           
  3226                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 486:   *value8bit = EEPROM_Read(0x01);
  3227     0684  1283               	bcf	3,5	;RP0=0, select bank0
  3228     0685  1303               	bcf	3,6	;RP1=0, select bank0
  3229     0686  084A               	movf	loadSettings@value8bit,w
  3230     0687  0084               	movwf	4
  3231     0688  3001               	movlw	1
  3232     0689  158A  2787  118A   	fcall	_EEPROM_Read
  3233     068C  1383               	bcf	3,7	;select IRP bank0
  3234     068D  0080               	movwf	0
  3235     068E                     l1938:
  3236                           
  3237                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 487:   *value16bit1 = EEPROM_Read16(0x02)
      +                          ;
  3238     068E  3002               	movlw	2
  3239     068F  158A  279A  118A   	fcall	_EEPROM_Read16
  3240     0692  1283               	bcf	3,5	;RP0=0, select bank0
  3241     0693  1303               	bcf	3,6	;RP1=0, select bank0
  3242     0694  084B               	movf	loadSettings@value16bit1,w
  3243     0695  0084               	movwf	4
  3244     0696  0873               	movf	?_EEPROM_Read16,w
  3245     0697  1383               	bcf	3,7	;select IRP bank0
  3246     0698  0080               	movwf	0
  3247     0699  0A84               	incf	4,f
  3248     069A  0874               	movf	?_EEPROM_Read16+1,w
  3249     069B  0080               	movwf	0
  3250     069C                     l1940:
  3251                           
  3252                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 488:   *value16bit2 = EEPROM_Read16(0x04)
      +                          ;
  3253     069C  3004               	movlw	4
  3254     069D  158A  279A  118A   	fcall	_EEPROM_Read16
  3255     06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3256     06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3257     06A2  084C               	movf	loadSettings@value16bit2,w
  3258     06A3  0084               	movwf	4
  3259     06A4  0873               	movf	?_EEPROM_Read16,w
  3260     06A5  1383               	bcf	3,7	;select IRP bank0
  3261     06A6  0080               	movwf	0
  3262     06A7  0A84               	incf	4,f
  3263     06A8  0874               	movf	?_EEPROM_Read16+1,w
  3264     06A9  0080               	movwf	0
  3265     06AA                     l1942:
  3266                           
  3267                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 489:   *value16bit3 = EEPROM_Read16(0x06)
      +                          ;
  3268     06AA  3006               	movlw	6
  3269     06AB  158A  279A  118A   	fcall	_EEPROM_Read16
  3270     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  3271     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  3272     06B0  084D               	movf	loadSettings@value16bit3,w
  3273     06B1  0084               	movwf	4
  3274     06B2  0873               	movf	?_EEPROM_Read16,w
  3275     06B3  1383               	bcf	3,7	;select IRP bank0
  3276     06B4  0080               	movwf	0
  3277     06B5  0A84               	incf	4,f
  3278     06B6  0874               	movf	?_EEPROM_Read16+1,w
  3279     06B7  0080               	movwf	0
  3280     06B8                     l1944:
  3281                           
  3282                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 490:   *value16bit4 = EEPROM_Read16(0x08)
      +                          ;
  3283     06B8  3008               	movlw	8
  3284     06B9  158A  279A  118A   	fcall	_EEPROM_Read16
  3285     06BC  1283               	bcf	3,5	;RP0=0, select bank0
  3286     06BD  1303               	bcf	3,6	;RP1=0, select bank0
  3287     06BE  084E               	movf	loadSettings@value16bit4,w
  3288     06BF  0084               	movwf	4
  3289     06C0  0873               	movf	?_EEPROM_Read16,w
  3290     06C1  1383               	bcf	3,7	;select IRP bank0
  3291     06C2  0080               	movwf	0
  3292     06C3  0A84               	incf	4,f
  3293     06C4  0874               	movf	?_EEPROM_Read16+1,w
  3294     06C5  0080               	movwf	0
  3295     06C6                     l1946:
  3296                           
  3297                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 491:   return 1;
  3298     06C6  3001               	movlw	1
  3299     06C7                     l302:
  3300     06C7  0008               	return
  3301     06C8                     __end_of_loadSettings:
  3302                           
  3303                           	psect	text9
  3304     0F9A                     __ptext9:	
  3305 ;; *************** function _EEPROM_Read16 *****************
  3306 ;; Defined at:
  3307 ;;		line 473 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  address         1    wreg     unsigned char 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  address         1    9[COMMON] unsigned char 
  3312 ;;  result          2    7[COMMON] unsigned int 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  2    3[COMMON] unsigned int 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3322 ;;      Params:         2       0       0       0
  3323 ;;      Locals:         3       0       0       0
  3324 ;;      Temps:          2       0       0       0
  3325 ;;      Totals:         7       0       0       0
  3326 ;;Total ram usage:        7 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 2
  3329 ;; This function calls:
  3330 ;;		_EEPROM_Read
  3331 ;; This function is called by:
  3332 ;;		_loadSettings
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336     0F9A                     _EEPROM_Read16:	
  3337                           ;psect for function _EEPROM_Read16
  3338                           
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _EEPROM_Read16: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3342                           ;EEPROM_Read16@address stored from wreg
  3343     0F9A  00F9               	movwf	EEPROM_Read16@address
  3344     0F9B                     l1898:
  3345                           
  3346                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 474:   unsigned int result;;/home/afnan/M
      +                          PLABXProjects/PIC_Test.X/main.c: 475:   result = EEPROM_Read(address);
  3347     0F9B  0879               	movf	EEPROM_Read16@address,w
  3348     0F9C  158A  2787  158A   	fcall	_EEPROM_Read
  3349     0F9F  00F5               	movwf	??_EEPROM_Read16
  3350     0FA0  01F6               	clrf	??_EEPROM_Read16+1
  3351     0FA1  0875               	movf	??_EEPROM_Read16,w
  3352     0FA2  00F7               	movwf	EEPROM_Read16@result
  3353     0FA3  0876               	movf	??_EEPROM_Read16+1,w
  3354     0FA4  00F8               	movwf	EEPROM_Read16@result+1
  3355     0FA5                     l1900:
  3356                           
  3357                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 476:   result |= ((unsigned int)EEPROM_Re
      +                          ad(address + 1)) << 8;
  3358     0FA5  0879               	movf	EEPROM_Read16@address,w
  3359     0FA6  3E01               	addlw	1
  3360     0FA7  158A  2787  158A   	fcall	_EEPROM_Read
  3361     0FAA  00F5               	movwf	??_EEPROM_Read16
  3362     0FAB  01F6               	clrf	??_EEPROM_Read16+1
  3363     0FAC  0875               	movf	??_EEPROM_Read16,w
  3364     0FAD  00F6               	movwf	??_EEPROM_Read16+1
  3365     0FAE  01F5               	clrf	??_EEPROM_Read16
  3366     0FAF  0875               	movf	??_EEPROM_Read16,w
  3367     0FB0  04F7               	iorwf	EEPROM_Read16@result,f
  3368     0FB1  0876               	movf	??_EEPROM_Read16+1,w
  3369     0FB2  04F8               	iorwf	EEPROM_Read16@result+1,f
  3370     0FB3                     l1902:
  3371                           
  3372                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 477:   return result;
  3373     0FB3  0878               	movf	EEPROM_Read16@result+1,w
  3374     0FB4  00F4               	movwf	?_EEPROM_Read16+1
  3375     0FB5  0877               	movf	EEPROM_Read16@result,w
  3376     0FB6  00F3               	movwf	?_EEPROM_Read16
  3377     0FB7                     l298:
  3378     0FB7  0008               	return
  3379     0FB8                     __end_of_EEPROM_Read16:
  3380                           
  3381                           	psect	text10
  3382     0F87                     __ptext10:	
  3383 ;; *************** function _EEPROM_Read *****************
  3384 ;; Defined at:
  3385 ;;		line 459 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  address         1    wreg     unsigned char 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  address         1    2[COMMON] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  1    wreg      unsigned char 
  3392 ;; Registers used:
  3393 ;;		wreg
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3399 ;;      Params:         0       0       0       0
  3400 ;;      Locals:         1       0       0       0
  3401 ;;      Temps:          0       0       0       0
  3402 ;;      Totals:         1       0       0       0
  3403 ;;Total ram usage:        1 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_EEPROM_Read16
  3410 ;;		_loadSettings
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414     0F87                     _EEPROM_Read:	
  3415                           ;psect for function _EEPROM_Read
  3416                           
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _EEPROM_Read: [wreg]
  3420                           ;EEPROM_Read@address stored from wreg
  3421     0F87  00F2               	movwf	EEPROM_Read@address
  3422     0F88                     l1886:
  3423     0F88                     l289:	
  3424                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 461:     ;
  3425                           
  3426                           
  3427                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 460:   while (EECON1bits.WR)
  3428     0F88  1683               	bsf	3,5	;RP0=1, select bank3
  3429     0F89  1703               	bsf	3,6	;RP1=1, select bank3
  3430     0F8A  188C               	btfsc	12,1	;volsfr
  3431     0F8B  2F8D               	goto	u2191
  3432     0F8C  2F8E               	goto	u2190
  3433     0F8D                     u2191:
  3434     0F8D  2F88               	goto	l289
  3435     0F8E                     u2190:
  3436     0F8E                     l1888:
  3437                           
  3438                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 462:   EEADR = address;
  3439     0F8E  0872               	movf	EEPROM_Read@address,w
  3440     0F8F  1283               	bcf	3,5	;RP0=0, select bank2
  3441     0F90  1703               	bsf	3,6	;RP1=1, select bank2
  3442     0F91  008D               	movwf	13	;volatile
  3443     0F92                     l1890:
  3444                           
  3445                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 463:   EECON1bits.EEPGD = 0;
  3446     0F92  1683               	bsf	3,5	;RP0=1, select bank3
  3447     0F93  1703               	bsf	3,6	;RP1=1, select bank3
  3448     0F94  138C               	bcf	12,7	;volsfr
  3449     0F95                     l1892:
  3450                           
  3451                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 464:   EECON1bits.RD = 1;
  3452     0F95  140C               	bsf	12,0	;volsfr
  3453                           
  3454                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 465:   return EEDATA;
  3455     0F96  1283               	bcf	3,5	;RP0=0, select bank2
  3456     0F97  1703               	bsf	3,6	;RP1=1, select bank2
  3457     0F98  080C               	movf	12,w	;volatile
  3458     0F99                     l292:
  3459     0F99  0008               	return
  3460     0F9A                     __end_of_EEPROM_Read:
  3461                           
  3462                           	psect	text11
  3463     0F65                     __ptext11:	
  3464 ;; *************** function _init_timer *****************
  3465 ;; Defined at:
  3466 ;;		line 424 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      void 
  3473 ;; Registers used:
  3474 ;;		None
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3480 ;;      Params:         0       0       0       0
  3481 ;;      Locals:         0       0       0       0
  3482 ;;      Temps:          0       0       0       0
  3483 ;;      Totals:         0       0       0       0
  3484 ;;Total ram usage:        0 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 1
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_main
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494     0F65                     _init_timer:	
  3495                           ;psect for function _init_timer
  3496                           
  3497     0F65                     l1962:	
  3498                           ;incstack = 0
  3499                           ; Regs used in _init_timer: []
  3500                           
  3501                           
  3502                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 425:   T1CON = 0b00110000;
  3503     0F65  3030               	movlw	48
  3504     0F66  1283               	bcf	3,5	;RP0=0, select bank0
  3505     0F67  1303               	bcf	3,6	;RP1=0, select bank0
  3506     0F68  0090               	movwf	16	;volatile
  3507                           
  3508                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 427:   TMR1H = 0x12;
  3509     0F69  3012               	movlw	18
  3510     0F6A  008F               	movwf	15	;volatile
  3511                           
  3512                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 428:   TMR1L = 0x38;
  3513     0F6B  3038               	movlw	56
  3514     0F6C  008E               	movwf	14	;volatile
  3515                           
  3516                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 430:   PIE1bits.TMR1IE = 1;
  3517     0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  3518     0F6E  1303               	bcf	3,6	;RP1=0, select bank1
  3519     0F6F  140C               	bsf	12,0	;volatile
  3520                           
  3521                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 431:   INTCONbits.PEIE = 1;
  3522     0F70  170B               	bsf	11,6	;volatile
  3523                           
  3524                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 432:   INTCONbits.GIE = 1;
  3525     0F71  178B               	bsf	11,7	;volatile
  3526                           
  3527                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 434:   T1CONbits.TMR1ON = 1;
  3528     0F72  1283               	bcf	3,5	;RP0=0, select bank0
  3529     0F73  1303               	bcf	3,6	;RP1=0, select bank0
  3530     0F74  1410               	bsf	16,0	;volatile
  3531     0F75                     l277:
  3532     0F75  0008               	return
  3533     0F76                     __end_of_init_timer:
  3534                           
  3535                           	psect	text12
  3536     07B8                     __ptext12:	
  3537 ;; *************** function _initSystem *****************
  3538 ;; Defined at:
  3539 ;;		line 314 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3553 ;;      Params:         0       0       0       0
  3554 ;;      Locals:         0       0       0       0
  3555 ;;      Temps:          2       0       0       0
  3556 ;;      Totals:         2       0       0       0
  3557 ;;Total ram usage:        2 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; Hardware stack levels required when called: 1
  3560 ;; This function calls:
  3561 ;;		Nothing
  3562 ;; This function is called by:
  3563 ;;		_main
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567     07B8                     _initSystem:	
  3568                           ;psect for function _initSystem
  3569                           
  3570     07B8                     l1906:	
  3571                           ;incstack = 0
  3572                           ; Regs used in _initSystem: [wreg+status,2+status,0]
  3573                           
  3574                           
  3575                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 316:   OSCCONbits.IRCF = 0b110;
  3576     07B8  1683               	bsf	3,5	;RP0=1, select bank1
  3577     07B9  1303               	bcf	3,6	;RP1=0, select bank1
  3578     07BA  080F               	movf	15,w	;volatile
  3579     07BB  398F               	andlw	-113
  3580     07BC  3860               	iorlw	96
  3581     07BD  008F               	movwf	15	;volatile
  3582     07BE                     l1908:
  3583                           
  3584                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 317:   ANSEL = 0b00011000;
  3585     07BE  3018               	movlw	24
  3586     07BF  1683               	bsf	3,5	;RP0=1, select bank3
  3587     07C0  1703               	bsf	3,6	;RP1=1, select bank3
  3588     07C1  0088               	movwf	8	;volatile
  3589     07C2                     l1910:
  3590                           
  3591                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 318:   ANSELH = 0x00;
  3592     07C2  0189               	clrf	9	;volatile
  3593     07C3                     l1912:
  3594                           
  3595                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 319:   TRISA = 0b11101000;
  3596     07C3  30E8               	movlw	232
  3597     07C4  1683               	bsf	3,5	;RP0=1, select bank1
  3598     07C5  1303               	bcf	3,6	;RP1=0, select bank1
  3599     07C6  0085               	movwf	5	;volatile
  3600     07C7                     l1914:
  3601                           
  3602                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 320:   TRISB = 0b00111000;
  3603     07C7  3038               	movlw	56
  3604     07C8  0086               	movwf	6	;volatile
  3605     07C9                     l1916:
  3606                           
  3607                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 321:   TRISC = 0b00000011;
  3608     07C9  3003               	movlw	3
  3609     07CA  0087               	movwf	7	;volatile
  3610     07CB                     l1918:
  3611                           
  3612                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 323:   ADCON0 = 0b00001101;
  3613     07CB  300D               	movlw	13
  3614     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3615     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  3616     07CE  009F               	movwf	31	;volatile
  3617     07CF                     l1920:
  3618                           
  3619                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 324:   ADCON1 = 0b10000000;
  3620     07CF  3080               	movlw	128
  3621     07D0  1683               	bsf	3,5	;RP0=1, select bank1
  3622     07D1  1303               	bcf	3,6	;RP1=0, select bank1
  3623     07D2  009F               	movwf	31	;volatile
  3624     07D3                     l1922:
  3625                           
  3626                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 326:   _delay((unsigned long)((10)*(40000
      +                          00/4000.0)));
  3627     07D3  300D               	movlw	13
  3628     07D4  00F3               	movwf	??_initSystem+1
  3629     07D5  30FB               	movlw	251
  3630     07D6  00F2               	movwf	??_initSystem
  3631     07D7                     u3227:
  3632     07D7  0BF2               	decfsz	??_initSystem,f
  3633     07D8  2FD7               	goto	u3227
  3634     07D9  0BF3               	decfsz	??_initSystem+1,f
  3635     07DA  2FD7               	goto	u3227
  3636     07DB  2FDC               	nop2
  3637     07DC                     l1924:
  3638                           
  3639                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 327:   PORTA = 0x00;
  3640     07DC  1283               	bcf	3,5	;RP0=0, select bank0
  3641     07DD  1303               	bcf	3,6	;RP1=0, select bank0
  3642     07DE  0185               	clrf	5	;volatile
  3643     07DF                     l1926:
  3644                           
  3645                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 328:   PORTB = 0x00;
  3646     07DF  0186               	clrf	6	;volatile
  3647     07E0                     l1928:
  3648                           
  3649                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 329:   PORTC = 0x00;
  3650     07E0  0187               	clrf	7	;volatile
  3651     07E1                     l243:
  3652     07E1  0008               	return
  3653     07E2                     __end_of_initSystem:
  3654                           
  3655                           	psect	text13
  3656     078A                     __ptext13:	
  3657 ;; *************** function _getSensorResults *****************
  3658 ;; Defined at:
  3659 ;;		line 371 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  low_active      1    2[COMMON] PTR _Bool 
  3662 ;;		 -> low_sensor_active(1), 
  3663 ;;  high_active     1    3[COMMON] PTR _Bool 
  3664 ;;		 -> high_sensor_active(1), 
  3665 ;;  flow_active     1    4[COMMON] PTR _Bool 
  3666 ;;		 -> flow_sensor_active(1), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      _Bool 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3678 ;;      Params:         3       0       0       0
  3679 ;;      Locals:         0       0       0       0
  3680 ;;      Temps:          0       0       0       0
  3681 ;;      Totals:         3       0       0       0
  3682 ;;Total ram usage:        3 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; Hardware stack levels required when called: 1
  3685 ;; This function calls:
  3686 ;;		Nothing
  3687 ;; This function is called by:
  3688 ;;		_main
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692     078A                     _getSensorResults:	
  3693                           ;psect for function _getSensorResults
  3694                           
  3695     078A                     l2022:	
  3696                           ;incstack = 0
  3697                           ; Regs used in _getSensorResults: [wreg-fsr0h+status,2+status,0]
  3698                           
  3699                           
  3700                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 372:   if (sensors_reading_complete) {
  3701     078A  1283               	bcf	3,5	;RP0=0, select bank0
  3702     078B  1303               	bcf	3,6	;RP1=0, select bank0
  3703     078C  0840               	movf	_sensors_reading_complete,w	;volatile
  3704     078D  1903               	btfsc	3,2
  3705     078E  2F90               	goto	u2331
  3706     078F  2F91               	goto	u2330
  3707     0790                     u2331:
  3708     0790  2FB6               	goto	l2032
  3709     0791                     u2330:
  3710     0791                     l2024:
  3711                           
  3712                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 373:     *low_active = (low_sensor_high_c
      +                          ount < 45);
  3713     0791  0872               	movf	getSensorResults@low_active,w
  3714     0792  0084               	movwf	4
  3715     0793  302D               	movlw	45
  3716     0794  027A               	subwf	_low_sensor_high_count,w	;volatile
  3717     0795  1C03               	skipc
  3718     0796  2F98               	goto	u2341
  3719     0797  2F9A               	goto	u2340
  3720     0798                     u2341:
  3721     0798  3001               	movlw	1
  3722     0799  2F9B               	goto	u2350
  3723     079A                     u2340:
  3724     079A  3000               	movlw	0
  3725     079B                     u2350:
  3726     079B  1383               	bcf	3,7	;select IRP bank0
  3727     079C  0080               	movwf	0
  3728                           
  3729                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 374:     *high_active = (high_sensor_high
      +                          _count < 45);
  3730     079D  0873               	movf	getSensorResults@high_active,w
  3731     079E  0084               	movwf	4
  3732     079F  302D               	movlw	45
  3733     07A0  0242               	subwf	_high_sensor_high_count,w	;volatile
  3734     07A1  1C03               	skipc
  3735     07A2  2FA4               	goto	u2361
  3736     07A3  2FA6               	goto	u2360
  3737     07A4                     u2361:
  3738     07A4  3001               	movlw	1
  3739     07A5  2FA7               	goto	u2370
  3740     07A6                     u2360:
  3741     07A6  3000               	movlw	0
  3742     07A7                     u2370:
  3743     07A7  0080               	movwf	0
  3744                           
  3745                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 375:     *flow_active = (flow_sensor_high
      +                          _count < 45);
  3746     07A8  0874               	movf	getSensorResults@flow_active,w
  3747     07A9  0084               	movwf	4
  3748     07AA  302D               	movlw	45
  3749     07AB  0241               	subwf	_flow_sensor_high_count,w	;volatile
  3750     07AC  1C03               	skipc
  3751     07AD  2FAF               	goto	u2381
  3752     07AE  2FB1               	goto	u2380
  3753     07AF                     u2381:
  3754     07AF  3001               	movlw	1
  3755     07B0  2FB2               	goto	u2390
  3756     07B1                     u2380:
  3757     07B1  3000               	movlw	0
  3758     07B2                     u2390:
  3759     07B2  0080               	movwf	0
  3760     07B3                     l2026:
  3761                           
  3762                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 376:     sensors_reading_complete = 0;
  3763     07B3  01C0               	clrf	_sensors_reading_complete	;volatile
  3764     07B4                     l2028:
  3765                           
  3766                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 377:     return 1;
  3767     07B4  3001               	movlw	1
  3768     07B5  2FB7               	goto	l260
  3769     07B6                     l2032:
  3770                           
  3771                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 379:   return 0;
  3772     07B6  3000               	movlw	0
  3773     07B7                     l260:
  3774     07B7  0008               	return
  3775     07B8                     __end_of_getSensorResults:
  3776                           
  3777                           	psect	text14
  3778     0500                     __ptext14:	
  3779 ;; *************** function _check_button_press *****************
  3780 ;; Defined at:
  3781 ;;		line 524 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;		None
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  hold_count      2    6[COMMON] unsigned int 
  3786 ;;  long_press_t    2    4[COMMON] unsigned int 
  3787 ;;  long_press      1    8[COMMON] _Bool 
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      _Bool 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3797 ;;      Params:         0       0       0       0
  3798 ;;      Locals:         5       0       0       0
  3799 ;;      Temps:          2       0       0       0
  3800 ;;      Totals:         7       0       0       0
  3801 ;;Total ram usage:        7 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811     0500                     _check_button_press:	
  3812                           ;psect for function _check_button_press
  3813                           
  3814     0500                     l1964:	
  3815                           ;incstack = 0
  3816                           ; Regs used in _check_button_press: [wreg+status,2+status,0]
  3817                           
  3818                           
  3819                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 525:   _Bool long_press = 0;
  3820     0500  01F8               	clrf	check_button_press@long_press
  3821     0501                     l1966:
  3822                           
  3823                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 528:   if (PORTCbits.RC1 == 0) {
  3824     0501  1283               	bcf	3,5	;RP0=0, select bank0
  3825     0502  1303               	bcf	3,6	;RP1=0, select bank0
  3826     0503  1887               	btfsc	7,1	;volatile
  3827     0504  2D06               	goto	u2231
  3828     0505  2D07               	goto	u2230
  3829     0506                     u2231:
  3830     0506  2D6A               	goto	l1996
  3831     0507                     u2230:
  3832     0507                     l1968:
  3833                           
  3834                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 530:     _delay((unsigned long)((50)*(400
      +                          0000/4000.0)));
  3835     0507  3041               	movlw	65
  3836     0508  00F3               	movwf	??_check_button_press+1
  3837     0509  30EE               	movlw	238
  3838     050A  00F2               	movwf	??_check_button_press
  3839     050B                     u3237:
  3840     050B  0BF2               	decfsz	??_check_button_press,f
  3841     050C  2D0B               	goto	u3237
  3842     050D  0BF3               	decfsz	??_check_button_press+1,f
  3843     050E  2D0B               	goto	u3237
  3844     050F  0000               	nop
  3845     0510                     l1970:
  3846                           
  3847                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 533:     if (PORTCbits.RC1 == 0) {
  3848     0510  1283               	bcf	3,5	;RP0=0, select bank0
  3849     0511  1303               	bcf	3,6	;RP1=0, select bank0
  3850     0512  1887               	btfsc	7,1	;volatile
  3851     0513  2D15               	goto	u2241
  3852     0514  2D16               	goto	u2240
  3853     0515                     u2241:
  3854     0515  2D6A               	goto	l1996
  3855     0516                     u2240:
  3856     0516                     l1972:
  3857                           
  3858                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 535:       unsigned int hold_count = 0;
  3859     0516  01F6               	clrf	check_button_press@hold_count
  3860     0517  01F7               	clrf	check_button_press@hold_count+1
  3861     0518                     l1974:
  3862                           
  3863                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 536:       unsigned int long_press_thresh
      +                          old = 20;
  3864     0518  3014               	movlw	20
  3865     0519  00F4               	movwf	check_button_press@long_press_threshold
  3866     051A  3000               	movlw	0
  3867     051B  00F5               	movwf	check_button_press@long_press_threshold+1
  3868                           
  3869                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 539:       while (PORTCbits.RC1 == 0) {
  3870     051C  2D52               	goto	l318
  3871     051D                     l1976:
  3872                           
  3873                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 540:         _delay((unsigned long)((10)*
      +                          (4000000/4000.0)));
  3874     051D  300D               	movlw	13
  3875     051E  00F3               	movwf	??_check_button_press+1
  3876     051F  30FB               	movlw	251
  3877     0520  00F2               	movwf	??_check_button_press
  3878     0521                     u3247:
  3879     0521  0BF2               	decfsz	??_check_button_press,f
  3880     0522  2D21               	goto	u3247
  3881     0523  0BF3               	decfsz	??_check_button_press+1,f
  3882     0524  2D21               	goto	u3247
  3883     0525  2D26               	nop2
  3884                           
  3885                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 541:         hold_count++;
  3886     0526  3001               	movlw	1
  3887     0527  07F6               	addwf	check_button_press@hold_count,f
  3888     0528  1803               	skipnc
  3889     0529  0AF7               	incf	check_button_press@hold_count+1,f
  3890     052A  3000               	movlw	0
  3891     052B  07F7               	addwf	check_button_press@hold_count+1,f
  3892                           
  3893                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 544:         if (hold_count >= long_press
      +                          _threshold) {
  3894     052C  0875               	movf	check_button_press@long_press_threshold+1,w
  3895     052D  0277               	subwf	check_button_press@hold_count+1,w
  3896     052E  1D03               	skipz
  3897     052F  2D32               	goto	u2255
  3898     0530  0874               	movf	check_button_press@long_press_threshold,w
  3899     0531  0276               	subwf	check_button_press@hold_count,w
  3900     0532                     u2255:
  3901     0532  1C03               	skipc
  3902     0533  2D35               	goto	u2251
  3903     0534  2D36               	goto	u2250
  3904     0535                     u2251:
  3905     0535  2D52               	goto	l318
  3906     0536                     u2250:
  3907     0536                     l1978:
  3908                           
  3909                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 545:           long_press = 1;
  3910     0536  3001               	movlw	1
  3911     0537  00F8               	movwf	check_button_press@long_press
  3912                           
  3913                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 550:           while (PORTCbits.RC1 == 0)
      +                           {
  3914     0538  2D42               	goto	l1982
  3915     0539                     l1980:
  3916                           
  3917                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 551:             _delay((unsigned long)((
      +                          10)*(4000000/4000.0)));
  3918     0539  300D               	movlw	13
  3919     053A  00F3               	movwf	??_check_button_press+1
  3920     053B  30FB               	movlw	251
  3921     053C  00F2               	movwf	??_check_button_press
  3922     053D                     u3257:
  3923     053D  0BF2               	decfsz	??_check_button_press,f
  3924     053E  2D3D               	goto	u3257
  3925     053F  0BF3               	decfsz	??_check_button_press+1,f
  3926     0540  2D3D               	goto	u3257
  3927     0541  2D42               	nop2
  3928     0542                     l1982:
  3929                           
  3930                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 550:           while (PORTCbits.RC1 == 0)
      +                           {
  3931     0542  1283               	bcf	3,5	;RP0=0, select bank0
  3932     0543  1303               	bcf	3,6	;RP1=0, select bank0
  3933     0544  1C87               	btfss	7,1	;volatile
  3934     0545  2D47               	goto	u2261
  3935     0546  2D48               	goto	u2260
  3936     0547                     u2261:
  3937     0547  2D39               	goto	l1980
  3938     0548                     u2260:
  3939     0548                     l1984:
  3940                           
  3941                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 555:           _delay((unsigned long)((50
      +                          )*(4000000/4000.0)));
  3942     0548  3041               	movlw	65
  3943     0549  00F3               	movwf	??_check_button_press+1
  3944     054A  30EE               	movlw	238
  3945     054B  00F2               	movwf	??_check_button_press
  3946     054C                     u3267:
  3947     054C  0BF2               	decfsz	??_check_button_press,f
  3948     054D  2D4C               	goto	u3267
  3949     054E  0BF3               	decfsz	??_check_button_press+1,f
  3950     054F  2D4C               	goto	u3267
  3951     0550  0000               	nop
  3952                           
  3953                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 556:           break;
  3954     0551  2D58               	goto	l1986
  3955     0552                     l318:	
  3956                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 558:       }
  3957                           
  3958                           
  3959                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 539:       while (PORTCbits.RC1 == 0) {
  3960     0552  1283               	bcf	3,5	;RP0=0, select bank0
  3961     0553  1303               	bcf	3,6	;RP1=0, select bank0
  3962     0554  1C87               	btfss	7,1	;volatile
  3963     0555  2D57               	goto	u2271
  3964     0556  2D58               	goto	u2270
  3965     0557                     u2271:
  3966     0557  2D1D               	goto	l1976
  3967     0558                     u2270:
  3968     0558                     l1986:
  3969                           
  3970                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 561:       if (!long_press) {
  3971     0558  0878               	movf	check_button_press@long_press,w
  3972     0559  1D03               	btfss	3,2
  3973     055A  2D5C               	goto	u2281
  3974     055B  2D5D               	goto	u2280
  3975     055C                     u2281:
  3976     055C  2D68               	goto	l1992
  3977     055D                     u2280:
  3978     055D                     l1988:
  3979                           
  3980                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 563:         _delay((unsigned long)((50)*
      +                          (4000000/4000.0)));
  3981     055D  3041               	movlw	65
  3982     055E  00F3               	movwf	??_check_button_press+1
  3983     055F  30EE               	movlw	238
  3984     0560  00F2               	movwf	??_check_button_press
  3985     0561                     u3277:
  3986     0561  0BF2               	decfsz	??_check_button_press,f
  3987     0562  2D61               	goto	u3277
  3988     0563  0BF3               	decfsz	??_check_button_press+1,f
  3989     0564  2D61               	goto	u3277
  3990     0565  0000               	nop
  3991                           
  3992                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 564:         return 0;
  3993     0566  3000               	movlw	0
  3994     0567  2D6B               	goto	l326
  3995     0568                     l1992:
  3996                           
  3997                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 567:       return 1;
  3998     0568  3001               	movlw	1
  3999     0569  2D6B               	goto	l326
  4000     056A                     l1996:
  4001                           
  4002                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 571:   return 0;
  4003     056A  3000               	movlw	0
  4004     056B                     l326:
  4005     056B  0008               	return
  4006     056C                     __end_of_check_button_press:
  4007                           
  4008                           	psect	text15
  4009     0710                     __ptext15:	
  4010 ;; *************** function _buzzer_update *****************
  4011 ;; Defined at:
  4012 ;;		line 515 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;		None
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;		None
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4026 ;;      Params:         0       0       0       0
  4027 ;;      Locals:         0       0       0       0
  4028 ;;      Temps:          8       0       0       0
  4029 ;;      Totals:         8       0       0       0
  4030 ;;Total ram usage:        8 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 1
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_main
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040     0710                     _buzzer_update:	
  4041                           ;psect for function _buzzer_update
  4042                           
  4043     0710                     l2000:	
  4044                           ;incstack = 0
  4045                           ; Regs used in _buzzer_update: [wreg+status,2+status,0]
  4046                           
  4047                           
  4048                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 516:   if (buzzer_active &&
  4049     0710  1283               	bcf	3,5	;RP0=0, select bank0
  4050     0711  1303               	bcf	3,6	;RP1=0, select bank0
  4051     0712  0834               	movf	_buzzer_active,w
  4052     0713  1903               	btfsc	3,2
  4053     0714  2F16               	goto	u2291
  4054     0715  2F17               	goto	u2290
  4055     0716                     u2291:
  4056     0716  2F53               	goto	l313
  4057     0717                     u2290:
  4058     0717                     l2002:
  4059     0717  0828               	movf	_buzzer_duration,w
  4060     0718  00F2               	movwf	??_buzzer_update
  4061     0719  0829               	movf	_buzzer_duration+1,w
  4062     071A  00F3               	movwf	??_buzzer_update+1
  4063     071B  01F4               	clrf	??_buzzer_update+2
  4064     071C  01F5               	clrf	??_buzzer_update+3
  4065     071D  0824               	movf	_seconds_counter,w	;volatile
  4066     071E  00F6               	movwf	??_buzzer_update+4
  4067     071F  0825               	movf	_seconds_counter+1,w	;volatile
  4068     0720  00F7               	movwf	??_buzzer_update+5
  4069     0721  0826               	movf	_seconds_counter+2,w	;volatile
  4070     0722  00F8               	movwf	??_buzzer_update+6
  4071     0723  0827               	movf	_seconds_counter+3,w	;volatile
  4072     0724  00F9               	movwf	??_buzzer_update+7
  4073     0725  1683               	bsf	3,5	;RP0=1, select bank1
  4074     0726  1303               	bcf	3,6	;RP1=0, select bank1
  4075     0727  0820               	movf	_buzzer_start_time^(0+128),w
  4076     0728  02F6               	subwf	??_buzzer_update+4,f
  4077     0729  0821               	movf	(_buzzer_start_time+1)^(0+128),w
  4078     072A  1C03               	skipc
  4079     072B  0F21               	incfsz	(_buzzer_start_time+1)^(0+128),w
  4080     072C  2F2E               	goto	u2301
  4081     072D  2F2F               	goto	u2302
  4082     072E                     u2301:
  4083     072E  02F7               	subwf	??_buzzer_update+5,f
  4084     072F                     u2302:
  4085     072F  0822               	movf	(_buzzer_start_time+2)^(0+128),w
  4086     0730  1C03               	skipc
  4087     0731  0F22               	incfsz	(_buzzer_start_time+2)^(0+128),w
  4088     0732  2F34               	goto	u2303
  4089     0733  2F35               	goto	u2304
  4090     0734                     u2303:
  4091     0734  02F8               	subwf	??_buzzer_update+6,f
  4092     0735                     u2304:
  4093     0735  0823               	movf	(_buzzer_start_time+3)^(0+128),w
  4094     0736  1C03               	skipc
  4095     0737  0F23               	incfsz	(_buzzer_start_time+3)^(0+128),w
  4096     0738  2F3A               	goto	u2305
  4097     0739  2F3B               	goto	u2306
  4098     073A                     u2305:
  4099     073A  02F9               	subwf	??_buzzer_update+7,f
  4100     073B                     u2306:
  4101     073B  0875               	movf	??_buzzer_update+3,w
  4102     073C  0279               	subwf	??_buzzer_update+7,w
  4103     073D  1D03               	skipz
  4104     073E  2F49               	goto	u2315
  4105     073F  0874               	movf	??_buzzer_update+2,w
  4106     0740  0278               	subwf	??_buzzer_update+6,w
  4107     0741  1D03               	skipz
  4108     0742  2F49               	goto	u2315
  4109     0743  0873               	movf	??_buzzer_update+1,w
  4110     0744  0277               	subwf	??_buzzer_update+5,w
  4111     0745  1D03               	skipz
  4112     0746  2F49               	goto	u2315
  4113     0747  0872               	movf	??_buzzer_update,w
  4114     0748  0276               	subwf	??_buzzer_update+4,w
  4115     0749                     u2315:
  4116     0749  1C03               	skipc
  4117     074A  2F4C               	goto	u2311
  4118     074B  2F4D               	goto	u2310
  4119     074C                     u2311:
  4120     074C  2F53               	goto	l313
  4121     074D                     u2310:
  4122     074D                     l2004:
  4123                           
  4124                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 517:       (seconds_counter - buzzer_star
      +                          t_time >= buzzer_duration)) {;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 518:     POR
      +                          TCbits.RC4 = 0;
  4125     074D  1283               	bcf	3,5	;RP0=0, select bank0
  4126     074E  1303               	bcf	3,6	;RP1=0, select bank0
  4127     074F  1207               	bcf	7,4	;volatile
  4128     0750                     l2006:
  4129                           
  4130                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 519:     buzzer_active = 0;
  4131     0750  01B4               	clrf	_buzzer_active
  4132                           
  4133                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 520:     buzzer_duration = 0;
  4134     0751  01A8               	clrf	_buzzer_duration
  4135     0752  01A9               	clrf	_buzzer_duration+1
  4136     0753                     l313:
  4137     0753  0008               	return
  4138     0754                     __end_of_buzzer_update:
  4139                           
  4140                           	psect	text16
  4141     06C8                     __ptext16:	
  4142 ;; *************** function ___lmul *****************
  4143 ;; Defined at:
  4144 ;;		line 15 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/Umul32.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  multiplier      4    2[COMMON] unsigned long 
  4147 ;;  multiplicand    4    6[COMMON] unsigned long 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  product         4    1[BANK0 ] unsigned long 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  4    2[COMMON] unsigned long 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4159 ;;      Params:         8       0       0       0
  4160 ;;      Locals:         0       4       0       0
  4161 ;;      Temps:          0       1       0       0
  4162 ;;      Totals:         8       5       0       0
  4163 ;;Total ram usage:       13 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 1
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_main
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173     06C8                     ___lmul:	
  4174                           ;psect for function ___lmul
  4175                           
  4176     06C8                     l2044:	
  4177                           ;incstack = 0
  4178                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4179                           
  4180     06C8  3000               	movlw	0
  4181     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  4182     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  4183     06CB  00CE               	movwf	___lmul@product+3
  4184     06CC  3000               	movlw	0
  4185     06CD  00CD               	movwf	___lmul@product+2
  4186     06CE  3000               	movlw	0
  4187     06CF  00CC               	movwf	___lmul@product+1
  4188     06D0  3000               	movlw	0
  4189     06D1  00CB               	movwf	___lmul@product
  4190     06D2                     l2046:
  4191     06D2  1C72               	btfss	___lmul@multiplier,0
  4192     06D3  2ED5               	goto	u2411
  4193     06D4  2ED6               	goto	u2410
  4194     06D5                     u2411:
  4195     06D5  2EED               	goto	l2050
  4196     06D6                     u2410:
  4197     06D6                     l2048:
  4198     06D6  0876               	movf	___lmul@multiplicand,w
  4199     06D7  07CB               	addwf	___lmul@product,f
  4200     06D8  0877               	movf	___lmul@multiplicand+1,w
  4201     06D9  1103               	clrz
  4202     06DA  1803               	skipnc
  4203     06DB  3E01               	addlw	1
  4204     06DC  1903               	skipnz
  4205     06DD  2EDF               	goto	u2421
  4206     06DE  07CC               	addwf	___lmul@product+1,f
  4207     06DF                     u2421:
  4208     06DF  0878               	movf	___lmul@multiplicand+2,w
  4209     06E0  1103               	clrz
  4210     06E1  1803               	skipnc
  4211     06E2  3E01               	addlw	1
  4212     06E3  1903               	skipnz
  4213     06E4  2EE6               	goto	u2422
  4214     06E5  07CD               	addwf	___lmul@product+2,f
  4215     06E6                     u2422:
  4216     06E6  0879               	movf	___lmul@multiplicand+3,w
  4217     06E7  1103               	clrz
  4218     06E8  1803               	skipnc
  4219     06E9  3E01               	addlw	1
  4220     06EA  1903               	skipnz
  4221     06EB  2EED               	goto	u2423
  4222     06EC  07CE               	addwf	___lmul@product+3,f
  4223     06ED                     u2423:
  4224     06ED                     l2050:
  4225     06ED  3001               	movlw	1
  4226     06EE  00CA               	movwf	??___lmul
  4227     06EF                     u2435:
  4228     06EF  1003               	clrc
  4229     06F0  0DF6               	rlf	___lmul@multiplicand,f
  4230     06F1  0DF7               	rlf	___lmul@multiplicand+1,f
  4231     06F2  0DF8               	rlf	___lmul@multiplicand+2,f
  4232     06F3  0DF9               	rlf	___lmul@multiplicand+3,f
  4233     06F4  0BCA               	decfsz	??___lmul,f
  4234     06F5  2EEF               	goto	u2435
  4235     06F6                     l2052:
  4236     06F6  3001               	movlw	1
  4237     06F7                     u2445:
  4238     06F7  1003               	clrc
  4239     06F8  0CF5               	rrf	___lmul@multiplier+3,f
  4240     06F9  0CF4               	rrf	___lmul@multiplier+2,f
  4241     06FA  0CF3               	rrf	___lmul@multiplier+1,f
  4242     06FB  0CF2               	rrf	___lmul@multiplier,f
  4243     06FC  3EFF               	addlw	-1
  4244     06FD  1D03               	skipz
  4245     06FE  2EF7               	goto	u2445
  4246     06FF  0875               	movf	___lmul@multiplier+3,w
  4247     0700  0474               	iorwf	___lmul@multiplier+2,w
  4248     0701  0473               	iorwf	___lmul@multiplier+1,w
  4249     0702  0472               	iorwf	___lmul@multiplier,w
  4250     0703  1D03               	skipz
  4251     0704  2F06               	goto	u2451
  4252     0705  2F07               	goto	u2450
  4253     0706                     u2451:
  4254     0706  2ED2               	goto	l2046
  4255     0707                     u2450:
  4256     0707                     l2054:
  4257     0707  084E               	movf	___lmul@product+3,w
  4258     0708  00F5               	movwf	?___lmul+3
  4259     0709  084D               	movf	___lmul@product+2,w
  4260     070A  00F4               	movwf	?___lmul+2
  4261     070B  084C               	movf	___lmul@product+1,w
  4262     070C  00F3               	movwf	?___lmul+1
  4263     070D  084B               	movf	___lmul@product,w
  4264     070E  00F2               	movwf	?___lmul
  4265     070F                     l426:
  4266     070F  0008               	return
  4267     0710                     __end_of___lmul:
  4268                           
  4269                           	psect	text17
  4270     05D2                     __ptext17:	
  4271 ;; *************** function ___llmod *****************
  4272 ;; Defined at:
  4273 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/llmod.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  divisor         4    2[COMMON] unsigned long 
  4276 ;;  dividend        4    6[COMMON] unsigned long 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  counter         1    1[BANK0 ] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  4    2[COMMON] unsigned long 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4288 ;;      Params:         8       0       0       0
  4289 ;;      Locals:         0       1       0       0
  4290 ;;      Temps:          0       1       0       0
  4291 ;;      Totals:         8       2       0       0
  4292 ;;Total ram usage:       10 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; Hardware stack levels required when called: 1
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_main
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302     05D2                     ___llmod:	
  4303                           ;psect for function ___llmod
  4304                           
  4305     05D2                     l2082:	
  4306                           ;incstack = 0
  4307                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  4308                           
  4309     05D2  0875               	movf	___llmod@divisor+3,w
  4310     05D3  0474               	iorwf	___llmod@divisor+2,w
  4311     05D4  0473               	iorwf	___llmod@divisor+1,w
  4312     05D5  0472               	iorwf	___llmod@divisor,w
  4313     05D6  1903               	skipnz
  4314     05D7  2DD9               	goto	u2531
  4315     05D8  2DDA               	goto	u2530
  4316     05D9                     u2531:
  4317     05D9  2E1D               	goto	l2098
  4318     05DA                     u2530:
  4319     05DA                     l2084:
  4320     05DA  3001               	movlw	1
  4321     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  4322     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  4323     05DD  00CB               	movwf	___llmod@counter
  4324     05DE  2DEA               	goto	l2088
  4325     05DF                     l2086:
  4326     05DF  3001               	movlw	1
  4327     05E0  00CA               	movwf	??___llmod
  4328     05E1                     u2545:
  4329     05E1  1003               	clrc
  4330     05E2  0DF2               	rlf	___llmod@divisor,f
  4331     05E3  0DF3               	rlf	___llmod@divisor+1,f
  4332     05E4  0DF4               	rlf	___llmod@divisor+2,f
  4333     05E5  0DF5               	rlf	___llmod@divisor+3,f
  4334     05E6  0BCA               	decfsz	??___llmod,f
  4335     05E7  2DE1               	goto	u2545
  4336     05E8  3001               	movlw	1
  4337     05E9  07CB               	addwf	___llmod@counter,f
  4338     05EA                     l2088:
  4339     05EA  1FF5               	btfss	___llmod@divisor+3,7
  4340     05EB  2DED               	goto	u2551
  4341     05EC  2DEE               	goto	u2550
  4342     05ED                     u2551:
  4343     05ED  2DDF               	goto	l2086
  4344     05EE                     u2550:
  4345     05EE                     l2090:
  4346     05EE  0875               	movf	___llmod@divisor+3,w
  4347     05EF  0279               	subwf	___llmod@dividend+3,w
  4348     05F0  1D03               	skipz
  4349     05F1  2DFC               	goto	u2565
  4350     05F2  0874               	movf	___llmod@divisor+2,w
  4351     05F3  0278               	subwf	___llmod@dividend+2,w
  4352     05F4  1D03               	skipz
  4353     05F5  2DFC               	goto	u2565
  4354     05F6  0873               	movf	___llmod@divisor+1,w
  4355     05F7  0277               	subwf	___llmod@dividend+1,w
  4356     05F8  1D03               	skipz
  4357     05F9  2DFC               	goto	u2565
  4358     05FA  0872               	movf	___llmod@divisor,w
  4359     05FB  0276               	subwf	___llmod@dividend,w
  4360     05FC                     u2565:
  4361     05FC  1C03               	skipc
  4362     05FD  2DFF               	goto	u2561
  4363     05FE  2E00               	goto	u2560
  4364     05FF                     u2561:
  4365     05FF  2E0E               	goto	l2094
  4366     0600                     u2560:
  4367     0600                     l2092:
  4368     0600  0872               	movf	___llmod@divisor,w
  4369     0601  02F6               	subwf	___llmod@dividend,f
  4370     0602  0873               	movf	___llmod@divisor+1,w
  4371     0603  1C03               	skipc
  4372     0604  0F73               	incfsz	___llmod@divisor+1,w
  4373     0605  02F7               	subwf	___llmod@dividend+1,f
  4374     0606  0874               	movf	___llmod@divisor+2,w
  4375     0607  1C03               	skipc
  4376     0608  0F74               	incfsz	___llmod@divisor+2,w
  4377     0609  02F8               	subwf	___llmod@dividend+2,f
  4378     060A  0875               	movf	___llmod@divisor+3,w
  4379     060B  1C03               	skipc
  4380     060C  0F75               	incfsz	___llmod@divisor+3,w
  4381     060D  02F9               	subwf	___llmod@dividend+3,f
  4382     060E                     l2094:
  4383     060E  3001               	movlw	1
  4384     060F                     u2575:
  4385     060F  1003               	clrc
  4386     0610  0CF5               	rrf	___llmod@divisor+3,f
  4387     0611  0CF4               	rrf	___llmod@divisor+2,f
  4388     0612  0CF3               	rrf	___llmod@divisor+1,f
  4389     0613  0CF2               	rrf	___llmod@divisor,f
  4390     0614  3EFF               	addlw	-1
  4391     0615  1D03               	skipz
  4392     0616  2E0F               	goto	u2575
  4393     0617                     l2096:
  4394     0617  3001               	movlw	1
  4395     0618  02CB               	subwf	___llmod@counter,f
  4396     0619  1D03               	btfss	3,2
  4397     061A  2E1C               	goto	u2581
  4398     061B  2E1D               	goto	u2580
  4399     061C                     u2581:
  4400     061C  2DEE               	goto	l2090
  4401     061D                     u2580:
  4402     061D                     l2098:
  4403     061D  0879               	movf	___llmod@dividend+3,w
  4404     061E  00F5               	movwf	?___llmod+3
  4405     061F  0878               	movf	___llmod@dividend+2,w
  4406     0620  00F4               	movwf	?___llmod+2
  4407     0621  0877               	movf	___llmod@dividend+1,w
  4408     0622  00F3               	movwf	?___llmod+1
  4409     0623  0876               	movf	___llmod@dividend,w
  4410     0624  00F2               	movwf	?___llmod
  4411     0625                     l642:
  4412     0625  0008               	return
  4413     0626                     __end_of___llmod:
  4414                           
  4415                           	psect	text18
  4416     056C                     __ptext18:	
  4417 ;; *************** function ___lldiv *****************
  4418 ;; Defined at:
  4419 ;;		line 5 in file "/opt/microchip/xc8/v3.00/pic/sources/c99/common/__lldiv.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  divisor         4    5[BANK0 ] unsigned long 
  4422 ;;  dividend        4    9[BANK0 ] unsigned long 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  quotient        4   14[BANK0 ] unsigned long 
  4425 ;;  counter         1   18[BANK0 ] unsigned char 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  4    5[BANK0 ] unsigned long 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4435 ;;      Params:         0       8       0       0
  4436 ;;      Locals:         0       5       0       0
  4437 ;;      Temps:          0       1       0       0
  4438 ;;      Totals:         0      14       0       0
  4439 ;;Total ram usage:       14 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 1
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_main
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449     056C                     ___lldiv:	
  4450                           ;psect for function ___lldiv
  4451                           
  4452     056C                     l2058:	
  4453                           ;incstack = 0
  4454                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4455                           
  4456     056C  3000               	movlw	0
  4457     056D  1283               	bcf	3,5	;RP0=0, select bank0
  4458     056E  1303               	bcf	3,6	;RP1=0, select bank0
  4459     056F  00DB               	movwf	___lldiv@quotient+3
  4460     0570  3000               	movlw	0
  4461     0571  00DA               	movwf	___lldiv@quotient+2
  4462     0572  3000               	movlw	0
  4463     0573  00D9               	movwf	___lldiv@quotient+1
  4464     0574  3000               	movlw	0
  4465     0575  00D8               	movwf	___lldiv@quotient
  4466     0576  0852               	movf	___lldiv@divisor+3,w
  4467     0577  0451               	iorwf	___lldiv@divisor+2,w
  4468     0578  0450               	iorwf	___lldiv@divisor+1,w
  4469     0579  044F               	iorwf	___lldiv@divisor,w
  4470     057A  1903               	skipnz
  4471     057B  2D7D               	goto	u2461
  4472     057C  2D7E               	goto	u2460
  4473     057D                     u2461:
  4474     057D  2DC9               	goto	l2078
  4475     057E                     u2460:
  4476     057E                     l2060:
  4477     057E  3001               	movlw	1
  4478     057F  00DC               	movwf	___lldiv@counter
  4479     0580  2D8C               	goto	l2064
  4480     0581                     l2062:
  4481     0581  3001               	movlw	1
  4482     0582  00D7               	movwf	??___lldiv
  4483     0583                     u2475:
  4484     0583  1003               	clrc
  4485     0584  0DCF               	rlf	___lldiv@divisor,f
  4486     0585  0DD0               	rlf	___lldiv@divisor+1,f
  4487     0586  0DD1               	rlf	___lldiv@divisor+2,f
  4488     0587  0DD2               	rlf	___lldiv@divisor+3,f
  4489     0588  0BD7               	decfsz	??___lldiv,f
  4490     0589  2D83               	goto	u2475
  4491     058A  3001               	movlw	1
  4492     058B  07DC               	addwf	___lldiv@counter,f
  4493     058C                     l2064:
  4494     058C  1FD2               	btfss	___lldiv@divisor+3,7
  4495     058D  2D8F               	goto	u2481
  4496     058E  2D90               	goto	u2480
  4497     058F                     u2481:
  4498     058F  2D81               	goto	l2062
  4499     0590                     u2480:
  4500     0590                     l2066:
  4501     0590  3001               	movlw	1
  4502     0591  00D7               	movwf	??___lldiv
  4503     0592                     u2495:
  4504     0592  1003               	clrc
  4505     0593  0DD8               	rlf	___lldiv@quotient,f
  4506     0594  0DD9               	rlf	___lldiv@quotient+1,f
  4507     0595  0DDA               	rlf	___lldiv@quotient+2,f
  4508     0596  0DDB               	rlf	___lldiv@quotient+3,f
  4509     0597  0BD7               	decfsz	??___lldiv,f
  4510     0598  2D92               	goto	u2495
  4511     0599                     l2068:
  4512     0599  0852               	movf	___lldiv@divisor+3,w
  4513     059A  0256               	subwf	___lldiv@dividend+3,w
  4514     059B  1D03               	skipz
  4515     059C  2DA7               	goto	u2505
  4516     059D  0851               	movf	___lldiv@divisor+2,w
  4517     059E  0255               	subwf	___lldiv@dividend+2,w
  4518     059F  1D03               	skipz
  4519     05A0  2DA7               	goto	u2505
  4520     05A1  0850               	movf	___lldiv@divisor+1,w
  4521     05A2  0254               	subwf	___lldiv@dividend+1,w
  4522     05A3  1D03               	skipz
  4523     05A4  2DA7               	goto	u2505
  4524     05A5  084F               	movf	___lldiv@divisor,w
  4525     05A6  0253               	subwf	___lldiv@dividend,w
  4526     05A7                     u2505:
  4527     05A7  1C03               	skipc
  4528     05A8  2DAA               	goto	u2501
  4529     05A9  2DAB               	goto	u2500
  4530     05AA                     u2501:
  4531     05AA  2DBA               	goto	l2074
  4532     05AB                     u2500:
  4533     05AB                     l2070:
  4534     05AB  084F               	movf	___lldiv@divisor,w
  4535     05AC  02D3               	subwf	___lldiv@dividend,f
  4536     05AD  0850               	movf	___lldiv@divisor+1,w
  4537     05AE  1C03               	skipc
  4538     05AF  0F50               	incfsz	___lldiv@divisor+1,w
  4539     05B0  02D4               	subwf	___lldiv@dividend+1,f
  4540     05B1  0851               	movf	___lldiv@divisor+2,w
  4541     05B2  1C03               	skipc
  4542     05B3  0F51               	incfsz	___lldiv@divisor+2,w
  4543     05B4  02D5               	subwf	___lldiv@dividend+2,f
  4544     05B5  0852               	movf	___lldiv@divisor+3,w
  4545     05B6  1C03               	skipc
  4546     05B7  0F52               	incfsz	___lldiv@divisor+3,w
  4547     05B8  02D6               	subwf	___lldiv@dividend+3,f
  4548     05B9                     l2072:
  4549     05B9  1458               	bsf	___lldiv@quotient,0
  4550     05BA                     l2074:
  4551     05BA  3001               	movlw	1
  4552     05BB                     u2515:
  4553     05BB  1003               	clrc
  4554     05BC  0CD2               	rrf	___lldiv@divisor+3,f
  4555     05BD  0CD1               	rrf	___lldiv@divisor+2,f
  4556     05BE  0CD0               	rrf	___lldiv@divisor+1,f
  4557     05BF  0CCF               	rrf	___lldiv@divisor,f
  4558     05C0  3EFF               	addlw	-1
  4559     05C1  1D03               	skipz
  4560     05C2  2DBB               	goto	u2515
  4561     05C3                     l2076:
  4562     05C3  3001               	movlw	1
  4563     05C4  02DC               	subwf	___lldiv@counter,f
  4564     05C5  1D03               	btfss	3,2
  4565     05C6  2DC8               	goto	u2521
  4566     05C7  2DC9               	goto	u2520
  4567     05C8                     u2521:
  4568     05C8  2D90               	goto	l2066
  4569     05C9                     u2520:
  4570     05C9                     l2078:
  4571     05C9  085B               	movf	___lldiv@quotient+3,w
  4572     05CA  00D2               	movwf	?___lldiv+3
  4573     05CB  085A               	movf	___lldiv@quotient+2,w
  4574     05CC  00D1               	movwf	?___lldiv+2
  4575     05CD  0859               	movf	___lldiv@quotient+1,w
  4576     05CE  00D0               	movwf	?___lldiv+1
  4577     05CF  0858               	movf	___lldiv@quotient,w
  4578     05D0  00CF               	movwf	?___lldiv
  4579     05D1                     l448:
  4580     05D1  0008               	return
  4581     05D2                     __end_of___lldiv:
  4582                           
  4583                           	psect	text19
  4584     0626                     __ptext19:	
  4585 ;; *************** function _isr *****************
  4586 ;; Defined at:
  4587 ;;		line 382 in file "/home/afnan/MPLABXProjects/PIC_Test.X/main.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4601 ;;      Params:         0       0       0       0
  4602 ;;      Locals:         0       0       0       0
  4603 ;;      Temps:          2       0       0       0
  4604 ;;      Totals:         2       0       0       0
  4605 ;;Total ram usage:        2 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		Interrupt level 1
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614     0626                     _isr:	
  4615                           ;psect for function _isr
  4616                           
  4617     0626                     i1l1828:
  4618                           
  4619                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 384:   if (PIR1bits.TMR1IF) {
  4620     0626  1283               	bcf	3,5	;RP0=0, select bank0
  4621     0627  1303               	bcf	3,6	;RP1=0, select bank0
  4622     0628  1C0C               	btfss	12,0	;volatile
  4623     0629  2E2B               	goto	u209_21
  4624     062A  2E2C               	goto	u209_20
  4625     062B                     u209_21:
  4626     062B  2E48               	goto	i1l1844
  4627     062C                     u209_20:
  4628     062C                     i1l1830:
  4629                           
  4630                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 385:     if (to == 0) {
  4631     062C  0846               	movf	_to,w
  4632     062D  1D03               	btfss	3,2
  4633     062E  2E30               	goto	u210_21
  4634     062F  2E31               	goto	u210_20
  4635     0630                     u210_21:
  4636     0630  2E42               	goto	i1l1836
  4637     0631                     u210_20:
  4638     0631                     i1l1832:
  4639                           
  4640                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 386:       seconds_counter++;
  4641     0631  3001               	movlw	1
  4642     0632  07A4               	addwf	_seconds_counter,f	;volatile
  4643     0633  3000               	movlw	0
  4644     0634  1803               	skipnc
  4645     0635  3001               	movlw	1
  4646     0636  07A5               	addwf	_seconds_counter+1,f	;volatile
  4647     0637  3000               	movlw	0
  4648     0638  1803               	skipnc
  4649     0639  3001               	movlw	1
  4650     063A  07A6               	addwf	_seconds_counter+2,f	;volatile
  4651     063B  3000               	movlw	0
  4652     063C  1803               	skipnc
  4653     063D  3001               	movlw	1
  4654     063E  07A7               	addwf	_seconds_counter+3,f	;volatile
  4655     063F                     i1l1834:
  4656                           
  4657                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 387:       to = 1;
  4658     063F  3001               	movlw	1
  4659     0640  00C6               	movwf	_to
  4660                           
  4661                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 388:     } else {
  4662     0641  2E43               	goto	i1l1838
  4663     0642                     i1l1836:
  4664                           
  4665                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 389:       to = 0;
  4666     0642  01C6               	clrf	_to
  4667     0643                     i1l1838:
  4668                           
  4669                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 391:     PIR1bits.TMR1IF = 0;
  4670     0643  100C               	bcf	12,0	;volatile
  4671     0644                     i1l1840:
  4672                           
  4673                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 392:     TMR1H = 0x12;
  4674     0644  3012               	movlw	18
  4675     0645  008F               	movwf	15	;volatile
  4676     0646                     i1l1842:
  4677                           
  4678                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 393:     TMR1L = 0x38;
  4679     0646  3038               	movlw	56
  4680     0647  008E               	movwf	14	;volatile
  4681     0648                     i1l1844:
  4682                           
  4683                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 396:   if (INTCONbits.TMR0IF) {
  4684     0648  1D0B               	btfss	11,2	;volatile
  4685     0649  2E4B               	goto	u211_21
  4686     064A  2E4C               	goto	u211_20
  4687     064B                     u211_21:
  4688     064B  2E72               	goto	i1l274
  4689     064C                     u211_20:
  4690     064C                     i1l1846:
  4691                           
  4692                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 398:     TMR0 = 6;
  4693     064C  3006               	movlw	6
  4694     064D  0081               	movwf	1	;volatile
  4695                           
  4696                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 399:     INTCONbits.TMR0IF = 0;
  4697     064E  110B               	bcf	11,2	;volatile
  4698     064F                     i1l1848:
  4699                           
  4700                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 402:     if (sensors_reading_in_progress)
      +                           {
  4701     064F  083F               	movf	_sensors_reading_in_progress,w	;volatile
  4702     0650  1903               	btfsc	3,2
  4703     0651  2E53               	goto	u212_21
  4704     0652  2E54               	goto	u212_20
  4705     0653                     u212_21:
  4706     0653  2E72               	goto	i1l274
  4707     0654                     u212_20:
  4708     0654                     i1l1850:
  4709                           
  4710                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 404:       if (PORTBbits.RB5)
  4711     0654  1E86               	btfss	6,5	;volatile
  4712     0655  2E57               	goto	u213_21
  4713     0656  2E58               	goto	u213_20
  4714     0657                     u213_21:
  4715     0657  2E5A               	goto	i1l1854
  4716     0658                     u213_20:
  4717     0658                     i1l1852:
  4718                           
  4719                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 405:         low_sensor_high_count++;
  4720     0658  3001               	movlw	1
  4721     0659  07FA               	addwf	_low_sensor_high_count,f	;volatile
  4722     065A                     i1l1854:
  4723                           
  4724                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 406:       if (PORTBbits.RB4)
  4725     065A  1E06               	btfss	6,4	;volatile
  4726     065B  2E5D               	goto	u214_21
  4727     065C  2E5E               	goto	u214_20
  4728     065D                     u214_21:
  4729     065D  2E60               	goto	i1l1858
  4730     065E                     u214_20:
  4731     065E                     i1l1856:
  4732                           
  4733                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 407:         high_sensor_high_count++;
  4734     065E  3001               	movlw	1
  4735     065F  07C2               	addwf	_high_sensor_high_count,f	;volatile
  4736     0660                     i1l1858:
  4737                           
  4738                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 408:       if (PORTBbits.RB3)
  4739     0660  1D86               	btfss	6,3	;volatile
  4740     0661  2E63               	goto	u215_21
  4741     0662  2E64               	goto	u215_20
  4742     0663                     u215_21:
  4743     0663  2E66               	goto	i1l272
  4744     0664                     u215_20:
  4745     0664                     i1l1860:
  4746                           
  4747                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 409:         flow_sensor_high_count++;
  4748     0664  3001               	movlw	1
  4749     0665  07C1               	addwf	_flow_sensor_high_count,f	;volatile
  4750     0666                     i1l272:
  4751                           
  4752                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 411:       reading_count++;
  4753     0666  3001               	movlw	1
  4754     0667  07FB               	addwf	_reading_count,f	;volatile
  4755     0668                     i1l1862:
  4756                           
  4757                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 414:       if (reading_count >= 50) {
  4758     0668  3032               	movlw	50
  4759     0669  027B               	subwf	_reading_count,w	;volatile
  4760     066A  1C03               	skipc
  4761     066B  2E6D               	goto	u216_21
  4762     066C  2E6E               	goto	u216_20
  4763     066D                     u216_21:
  4764     066D  2E72               	goto	i1l274
  4765     066E                     u216_20:
  4766     066E                     i1l1864:
  4767                           
  4768                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 415:         sensors_reading_in_progress 
      +                          = 0;
  4769     066E  01BF               	clrf	_sensors_reading_in_progress	;volatile
  4770     066F                     i1l1866:
  4771                           
  4772                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 416:         sensors_reading_complete = 1
      +                          ;
  4773     066F  3001               	movlw	1
  4774     0670  00C0               	movwf	_sensors_reading_complete	;volatile
  4775     0671                     i1l1868:
  4776                           
  4777                           ;/home/afnan/MPLABXProjects/PIC_Test.X/main.c: 417:         INTCONbits.TMR0IE =
  4778     0671  128B               	bcf	11,5	;volatile
  4779     0672                     i1l274:
  4780     0672  0871               	movf	??_isr+1,w
  4781     0673  008A               	movwf	10
  4782     0674  0E70               	swapf	??_isr,w
  4783     0675  0083               	movwf	3
  4784     0676  0EFE               	swapf	btemp,f
  4785     0677  0E7E               	swapf	btemp,w
  4786     0678  0009               	retfie
  4787     0679                     __end_of_isr:
  4788     0001                     ___latbits      equ	1
  4789     007E                     btemp           set	126	;btemp
  4790     007E                     wtemp0          set	126
  4791                           
  4792                           	psect	intentry
  4793     0004                     __pintentry:	
  4794                           ;incstack = 0
  4795                           ; Regs used in _isr: [wreg+status,2+status,0]
  4796                           
  4797     0004                     interrupt_function:
  4798     007E                     saved_w         set	btemp
  4799     0004  00FE               	movwf	btemp
  4800     0005  0E03               	swapf	3,w
  4801     0006  00F0               	movwf	??_isr
  4802     0007  080A               	movf	10,w
  4803     0008  00F1               	movwf	??_isr+1
  4804     0009  118A  2E26         	ljmp	_isr
  4805                           
  4806                           	psect	config
  4807                           
  4808                           ;Config register CONFIG1 @ 0x2007
  4809                           ;	Oscillator Selection bits
  4810                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4811                           ;	Watchdog Timer Enable bit
  4812                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4813                           ;	Power-up Timer Enable bit
  4814                           ;	PWRTE = ON, PWRT enabled
  4815                           ;	RE3/MCLR pin function select bit
  4816                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4817                           ;	Code Protection bit
  4818                           ;	CP = OFF, Program memory code protection is disabled
  4819                           ;	Data Code Protection bit
  4820                           ;	CPD = OFF, Data memory code protection is disabled
  4821                           ;	Brown Out Reset Selection bits
  4822                           ;	BOREN = ON, BOR enabled
  4823                           ;	Internal External Switchover bit
  4824                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4825                           ;	Fail-Safe Clock Monitor Enabled bit
  4826                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4827                           ;	Low Voltage Programming Enable bit
  4828                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4829                           ;	In-Circuit Debugger Mode bit
  4830                           ;	DEBUG = 0x1, unprogrammed default
  4831     2007                     	org	8199
  4832     2007  23E4               	dw	9188

Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     27      78
    BANK1            80      3      33
    BANK2            80      0       0

Pointer List with Targets:

    getSensorResults@flow_active	PTR _Bool  size(1) Largest target is 1
		 -> flow_sensor_active(BANK0[1]), 

    getSensorResults@high_active	PTR _Bool  size(1) Largest target is 1
		 -> high_sensor_active(BANK0[1]), 

    getSensorResults@low_active	PTR _Bool  size(1) Largest target is 1
		 -> low_sensor_active(BANK0[1]), 

    loadSettings@value16bit1	PTR unsigned int  size(1) Largest target is 2
		 -> minvoltagelimit(BANK0[2]), 

    loadSettings@value16bit2	PTR unsigned int  size(1) Largest target is 2
		 -> maxvoltagelimit(BANK0[2]), 

    loadSettings@value16bit3	PTR unsigned int  size(1) Largest target is 2
		 -> minimumrunningvoltage(BANK0[2]), 

    loadSettings@value16bit4	PTR unsigned int  size(1) Largest target is 2
		 -> maximumrinningvoltage(BANK0[2]), 

    loadSettings@value8bit	PTR unsigned char  size(1) Largest target is 1
		 -> maxruntimeindex(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->___llmod
    _main->___lmul
    _main->_buzzer_update
    _saveSettings->_EEPROM_Write16
    _EEPROM_Write16->_EEPROM_Write
    _loadSettings->_EEPROM_Read16
    _EEPROM_Read16->_EEPROM_Read
    ___lldiv->___lmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lldiv
    ___lldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    2091
                                             19 BANK0      8     8      0
                                              0 BANK1      3     3      0
                            ___lldiv
                            ___llmod
                             ___lmul
                      _buzzer_update
                 _check_button_press
                   _getSensorResults
                         _initSystem
                         _init_timer
                       _loadSettings
                            _readADC
                       _saveSettings
                        _setupTimer0
                 _startSensorReading
                     _trigger_buzzer
 ---------------------------------------------------------------------------------
 (1) _trigger_buzzer                                       2     0      2      34
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _startSensorReading                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _saveSettings                                         9     1      8     531
                                              7 COMMON     1     1      0
                                              0 BANK0      8     0      8
                       _EEPROM_Write
                     _EEPROM_Write16
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write16                                       3     1      2     258
                                              4 COMMON     3     1      2
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         2     1      1      90
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      47
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _loadSettings                                         5     0      5     395
                                              0 BANK0      5     0      5
                        _EEPROM_Read
                      _EEPROM_Read16
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read16                                        7     5      2     178
                                              3 COMMON     7     5      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          1     1      0      47
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _getSensorResults                                     3     0      3     102
                                              2 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (1) _check_button_press                                   7     7      0     108
                                              2 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _buzzer_update                                        8     8      0       0
                                              2 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     148
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     238
                                              2 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     253
                                              5 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___llmod
   ___lmul
   _buzzer_update
   _check_button_press
   _getSensorResults
   _initSystem
   _init_timer
   _loadSettings
     _EEPROM_Read
     _EEPROM_Read16
       _EEPROM_Read
   _readADC
   _saveSettings
     _EEPROM_Write
     _EEPROM_Write16
       _EEPROM_Write
   _setupTimer0
   _startSensorReading
   _trigger_buzzer

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BANK2               80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BANK1               80      3      33     41.2%
BITBANK1            80      0       0      0.0%
BANK0               80     27      78     97.5%
BITBANK0            80      0       0      0.0%
COMMON              14     10      12     85.7%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     123      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Apr 18 19:36:51 2025

                                     pc 0002                                      _to 0046  
                                    fsr 0004                                     l205 0284  
                                   l302 06C7                                     l223 0426  
                                   l313 0753                                     l305 0789  
                                   l226 043F                                     l218 03A6  
                                   l243 07E1                                     l235 04D9  
                                   l260 07B7                                     l252 0F38  
                                   l309 0FFF                                     l326 056B  
                                   l318 0552                                     l246 0FCE  
                                   l280 07E3                                     l256 0F64  
                                   l249 0FD8                                     l426 070F  
                                   l178 00B7                                     l283 07F9  
                                   l195 01BD                                     l187 0111  
                                   l292 0F99                                     l277 0F75  
                                   l285 07FD                                     l189 013A  
                                   l286 07FF                                     l295 0F55  
                                   l448 05D1                                     l289 0F88  
                                   l642 0625                                     l298 0FB7  
                     _low_sensor_active 0049                                     _isr 0626  
                                   _smc 0045                                     fsr0 0004  
                                   indf 0000                       main@is_long_press 00BE  
                                  l2000 0710                                    l2002 0717  
                                  l2010 0F2F                                    l2004 074D  
                                  l2012 0F33                                    l2020 0F62  
                                  l2006 0750                                    l2022 078A  
                                  l2014 0F37                                    l2110 0053  
                                  l2102 0035                                    l2024 0791  
                                  l2032 07B6                                    l2008 0F2B  
                                  l2016 0F56                                    l2040 0FE1  
                                  l2200 01C8                                    l2120 007D  
                                  l2112 0057                                    l2104 0038  
                                  l2050 06ED                                    l2026 07B3  
                                  l2018 0F5D                                    l2042 0FFD  
                                  l2210 01E5                                    l2202 01CE  
                                  l2130 00C4                                    l2122 00AD  
                                  l2114 005B                                    l2106 004C  
                                  l2060 057E                                    l2052 06F6  
                                  l2044 06C8                                    l2028 07B4  
                                  l2036 0FD9                                    l2300 044F  
                                  l2220 0202                                    l2212 01EA  
                                  l2204 01DC                                    l2140 00DE  
                                  l2132 00CA                                    l2124 00B0  
                                  l2116 005F                                    l2108 004F  
                                  l2070 05AB                                    l2062 0581  
                                  l2054 0707                                    l2046 06D2  
                                  l2038 0FE0                                    l2310 0465  
                                  l2302 0450                                    l2230 027A  
                                  l2222 020B                                    l2214 01EF  
                                  l2206 01E3                                    l2150 00F8  
                                  l2142 00E4                                    l2134 00CD  
                                  l2118 0073                                    l2072 05B9  
                                  l2064 058C                                    l2048 06D6  
                                  l2312 047E                                    l2320 04D1  
                                  l2304 0455                                    l2240 02CE  
                                  l2232 028C                                    l2224 0238  
                                  l2208 01E4                                    l2216 01F2  
                                  l2160 0121                                    l2152 0108  
                                  l2144 00F3                                    l2136 00D3  
                                  l2128 00BD                                    l2074 05BA  
                                  l2066 0590                                    l2058 056C  
                                  l2090 05EE                                    l2082 05D2  
                                  l2322 04D6                                    l2314 04C1  
                                  l2306 0456                                    l2250 0315  
                                  l2234 0292                                    l2242 02D1  
                                  l2218 01FA                                    l2226 0245  
                                  l2170 0152                                    l2162 0133  
                                  l2146 00F6                                    l2138 00DA  
                                  l2076 05C3                                    l2068 0599  
                                  l2092 0600                                    l2084 05DA  
                                  l2324 04DB                                    l2316 04C4  
                                  l2308 045B                                    l2260 032A  
                                  l2252 031A                                    l2244 02D7  
                                  l2236 0297                                    l2228 024D  
                                  l2180 016E                                    l2164 0140  
                                  l2172 0161                                    l2148 00F7  
                                  l2156 010D                                    l2078 05C9  
                                  l2094 060E                                    l2086 05DF  
                                  l2326 04F6                                    l2318 04CE  
                                  l2270 039B                                    l2262 0340  
                                  l2254 031F                                    l2246 030A  
                                  l2238 02CA                                    l2190 018C  
                                  l2182 017A                                    l2174 0164  
                                  l2166 0146                                    l2158 0112  
                                  l2096 0617                                    l2088 05EA  
                                  l2280 03CA                                    l2272 03A0  
                                  l2256 0324                                    l2264 0344  
                                  l2248 030E                                    l2192 01B7  
                                  l2176 0167                                    l2168 014B  
                                  l2098 061D                                    l2290 0434  
                                  l2282 0414                                    l2274 03A4  
                                  l2266 0349                                    l2258 0329  
                                  l2194 01BB                                    l2186 017F  
                                  l1900 0FA5                                    l2276 03A7  
                                  l2284 0417                                    l2268 0399  
                                  l2292 0442                                    l2196 01BE  
                                  l2188 018A                                    l1910 07C2  
                                  l1902 0FB3                                    l2294 0447  
                                  l2286 0421                                    l2278 03B1  
                                  l2198 01C3                                    l1920 07CF  
                                  l1912 07C3                                    l2296 0449  
                                  l2288 0425                                    l1922 07D3  
                                  l1914 07C7                                    l1906 07B8  
                                  l1930 0679                                    l2298 044A  
                                  l1924 07DC                                    l1916 07C9  
                                  l1908 07BE                                    l1940 069C  
                                  l1932 0682                                    l1926 07DF  
                                  l1918 07CB                                    l1942 06AA  
                                  l1870 07E3                                    l1950 0755  
                                  l1928 07E0                                    l1944 06B8  
                                  l1936 0684                                    l1952 0FB9  
                                  l1880 07F4                                    l1872 07E9  
                                  l1970 0510                                    l1962 0F65  
                                  l1890 0F92                                    l1946 06C6  
                                  l1938 068E                                    l1954 0FC7  
                                  l1882 07F6                                    l1874 07EF  
                                  l1980 0539                                    l1972 0516  
                                  l1964 0500                                    l1892 0F95  
                                  l1956 0FCB                                    l1884 07F8  
                                  l1876 07F2                                    l1982 0542  
                                  l1974 0518                                    l1966 0501  
                                  l1886 0F88                                    l1958 0FD2  
                                  l1878 07F3                                    l1992 0568  
                                  l1984 0548                                    l1976 051D  
                                  l1968 0507                                    l1888 0F8E  
                                  l1896 0F48                                    l1986 0558  
                                  l1978 0536                                    l1898 0F9B  
                                  l1988 055D                                    l1996 056A  
                                  ?_isr 0070                                    u2200 0682  
                                  u3000 0399                                    u2201 0681  
                                  u3001 0398                                    u3010 03A0  
                                  u3011 039F                                    u2220 0FD2  
                                  u3100 0455                                    u3020 03A4  
                                  u2301 072E                                    u2221 0FD1  
                                  u3101 0454                                    u3021 03A3  
                                  u3005 0395                                    u2310 074D  
                                  u2302 072F                                    u2230 0507  
                                  u3110 045B                                    u3030 03B1  
                                  u2311 074C                                    u2303 0734  
                                  u2231 0506                                    u2215 0FBC  
                                  u3111 045A                                    u3031 03B0  
                                  u2304 0735                                    u2240 0516  
                                  u2320 0F5D                                    u2400 0FE0  
                                  u3120 0465                                    u2305 073A  
                                  u2241 0515                                    u2321 0F5C  
                                  u2401 0FDF                                    u3121 0464  
                                  u3041 03E7                                    u2410 06D6  
                                  u2306 073B                                    u2250 0536  
                                  u2330 0791                                    u2170 07E9  
                                  u3050 0414                                    u3042 03EA  
                                  u2411 06D5                                    u2315 0749  
                                  u2251 0535                                    u2331 0790  
                                  u2171 07E8                                    u3131 0495  
                                  u3051 0413                                    u3043 03F1  
                                  u2500 05AB                                    u2260 0548  
                                  u2340 079A                                    u2180 07FD  
                                  u3140 04C1                                    u3132 0498  
                                  u3060 0434                                    u3044 03F4  
                                  u2501 05AA                                    u2421 06DF  
                                  u2261 0547                                    u2341 0798  
                                  u2181 07FC                                    u3141 04C0  
                                  u3133 049F                                    u3061 0433  
                                  u3045 03FB                                    u2422 06E6  
                                  u2270 0558                                    u2350 079B  
                                  u2190 0F8E                                    u3150 04D6  
                                  u3134 04A2                                    u3070 043F  
                                  u3046 03FE                                    u2423 06ED  
                                  u2271 0557                                    u2255 0532  
                                  u2191 0F8D                                    u3151 04D5  
                                  u3143 04BD                                    u3135 04A9  
                                  u3071 043E                                    u3055 0410  
                                  u3207 012C                                    u2520 05C9  
                                  u2280 055D                                    u2360 07A6  
                                  u3160 04F6                                    u3136 04AC  
                                  u3080 0447                                    u2600 00B6  
                                  u2521 05C8                                    u2505 05A7  
                                  u2281 055C                                    u2361 07A4  
                                  u3217 0FC9                                    u3161 04F5  
                                  u3081 0446                                    u3065 0430  
                                  u2601 00B5                                    u2530 05DA  
                                  u2450 0707                                    u2290 0717  
                                  u2370 07A7                                    u3090 044F  
                                  u2610 00C4                                    u2515 05BB  
                                  u2531 05D9                                    u2451 0706  
                                  u2435 06EF                                    u2291 0716  
                                  u3227 07D7                                    u3091 044E  
                                  u3075 043B                                    u2611 00C3  
                                  u2460 057E                                    u2380 07B1  
                                  u2620 00CA                                    u2461 057D  
                                  u2445 06F7                                    u3237 050B  
                                  u2381 07AF                                    u2621 00C9  
                                  u2550 05EE                                    u2390 07B2  
                                  u2710 016D                                    u2630 00D3  
                                  u2551 05ED                                    u3247 0521  
                                  u2711 016C                                    u2631 00D2  
                                  u2480 0590                                    u2560 0600  
                                  u2800 0202                                    u2720 01BB  
                                  u2704 0161                                    u2640 00DA  
                                  u2481 058F                                    u2561 05FF  
                                  u2545 05E1                                    u3257 053D  
                                  u2801 0201                                    u2721 01BA  
                                  u3177 00EC                                    u2641 00D9  
                                  u2730 01C3                                    u2650 00DE  
                                  u2475 0583                                    u3267 054C  
                                  u2811 021A                                    u2731 01C2  
                                  u3187 0101                                    u2651 00DD  
                                  u2580 061D                                    u2900 02D7  
                                  u2820 0238                                    u2812 021B  
                                  u2740 01C8                                    u2660 013A  
                                  u2581 061C                                    u2565 05FC  
                                  u3277 0561                                    u2901 02D6  
                                  u2821 0237                                    u2813 0220  
                                  u2741 01C7                                    u2661 0139  
                                  u3197 011A                                    u2830 024D  
                                  u2814 0221                                    u2750 01DC  
                                  u2670 0140                                    u2590 004C  
                                  u2495 0592                                    u2575 060F  
                                  u2911 02EC                                    u2831 024C  
                                  u2823 0234                                    u2815 0226  
                                  u2751 01DB                                    u2671 013F  
                                  u2591 004B                                    u2920 030A  
                                  u2912 02ED                                    u2816 0227  
                                  u2760 01E3                                    u2680 014B  
                                  u2921 0309                                    u2913 02F2  
                                  u2841 025C                                    u2761 01E2  
                                  u2681 014A                                    u2930 0315  
                                  u2914 02F3                                    u2850 027A  
                                  u2842 025D                                    u2770 01EA  
                                  u2690 015E                                    u2931 0314  
                                  u2923 0306                                    u2915 02F8  
                                  u2851 0279                                    u2843 0262  
                                  u2771 01E9                                    u2691 015A  
                                  u2940 031A                                    u2916 02F9  
                                  u2860 028C                                    u2844 0263  
                                  u2780 01EF                                    u2941 0319  
                                  u2861 028B                                    u2853 0276  
                                  u2845 0268                                    u2781 01EE  
                                  u2950 031F                                    u2870 0292  
                                  u2846 0269                                    u2790 01FA  
                                  u2951 031E                                    u2871 0291  
                                  u2791 01F9                                    u2960 0324  
                                  u2961 0323                                    u2881 02AC  
                                  u2970 0329                                    u2890 02CA  
                                  u2882 02AD                                    u2971 0328  
                                  u2891 02C9                                    u2883 02B2  
                                  u2980 0349                                    u2884 02B3  
                                  u2981 0348                                    u2893 02C6  
                                  u2885 02B8                                    u2886 02B9  
                                  u2991 036C                                    u2992 036F  
                                  u2993 0376                                    u2994 0379  
                                  u2995 0380                                    u2996 0383  
                                  _TMR0 0001                                    _main 0035  
                                  btemp 007E                                    start 000B  
                     ?_getSensorResults 0072             _sensors_reading_in_progress 003F  
                    ??_getSensorResults 0075                    __end_of_EEPROM_Write 0800  
                                 ??_isr 0070                                   ?_main 0070  
                                 _EEADR 010D                                   _ANSEL 0188  
                       __end_of___lldiv 05D2                                   _T1CON 0010  
                       __end_of___llmod 0626                                   i1l272 0666  
                                 i1l274 0672                                   _TMR1H 000F  
                                 _TMR1L 000E                                   _PORTA 0005  
                                 _PORTB 0006                                   _PORTC 0007  
                                 _TRISA 0085                                   _TRISB 0086  
                                 _TRISC 0087                     ___lmul@multiplicand 0076  
                       __end_of_readADC 0FD9                                   main@i 00C0  
                                 pclath 000A                                   status 0003  
                                 wtemp0 007E                 loadSettings@value16bit1 004B  
               loadSettings@value16bit2 004C                 loadSettings@value16bit3 004D  
               loadSettings@value16bit4 004E                        EEPROM_Write@data 0072  
                   _maxvoltageerrortime 00BC                         __initialization 000D  
                          _voltageerror 003D              __end_of_startSensorReading 0F65  
                          __end_of_main 0500                   __end_of_EEPROM_Read16 0FB8  
                         ?_loadSettings 004A                                  ??_main 005D  
                     _buzzer_start_time 00A0                                  _ADCON0 001F  
                                _ADCON1 009F                        ___llmod@dividend 0076  
                                _ADRESH 001E                                  _ADRESL 009E  
                                _EEDATA 010C                                  _EECON2 018D  
                                _ANSELH 0189                                  i1l1830 062C  
                                i1l1840 0644                                  i1l1832 0631  
                                u210_20 0631                                  u210_21 0630  
                                i1l1850 0654                                  i1l1842 0646  
                                i1l1834 063F                                  i1l1860 0664  
                                i1l1852 0658                                  i1l1836 0642  
                                i1l1844 0648                                  i1l1828 0626  
                                i1l1862 0668                                  i1l1854 065A  
                                i1l1846 064C                                  i1l1838 0643  
                                i1l1864 066E                                  i1l1856 065E  
                                i1l1848 064F                                  u211_20 064C  
                                u211_21 064B                                  i1l1866 066F  
                                i1l1858 0660                                  i1l1868 0671  
                                u212_20 0654                                  u212_21 0653  
                                u213_20 0658                                  u213_21 0657  
                                u214_20 065E                                  u214_21 065D  
                                u215_20 0664                                  u215_21 0663  
                                u216_20 066E                                  u216_21 066D  
                                u209_20 062C                                  u209_21 062B  
                                ___lmul 06C8                         _lastdryruncheck 00AC  
                             ??___lldiv 0057                               ??___llmod 004A  
                        ??_loadSettings 007A                          _trigger_buzzer 0FD9  
                                _potraw 0032                               ??_readADC 0074  
                                saved_w 007E              __end_of_check_button_press 056C  
                          ?_setupTimer0 0070                          _EEPROM_Write16 0F47  
               __end_of__initialization 0032                          __pcstackCOMMON 0070  
                __end_of_trigger_buzzer 1000                            __pidataBANK0 0F22  
                          __pidataBANK1 0F39                           _lastflowcheck 002A  
                 loadSettings@value8bit 004A                          _OPTION_REGbits 0081  
        trigger_buzzer@duration_seconds 0072                         _lastsensorcheck 0020  
                __end_of_EEPROM_Write16 0F56                            _EEPROM_Write 07E2  
                            __pbssBANK0 0020                              __pbssBANK1 00A0  
                         ?_saveSettings 004A                              __pmaintext 0035  
                  EEPROM_Read16@address 0079                         ?_trigger_buzzer 0072  
                               ?___lmul 0072                              __pintentry 0004  
                        ___lmul@product 004B                         _minvoltagelimit 006B  
                       _seconds_counter 0024                         ?_EEPROM_Write16 0074  
                  __end_of_loadSettings 06C8                           _reading_count 007B  
                        ??_saveSettings 0077                              _flowactive 0036  
                               ___lldiv 056C                                 ___llmod 05D2  
                            _initSystem 07B8                              _init_timer 0F65  
                               __ptext1 0FD9                                 __ptext2 0F56  
                               __ptext3 0F2B                                 __ptext4 0754  
                               __ptext5 0F47                                 __ptext6 07E2  
                               __ptext7 0FB8                                 __ptext8 0679  
                               __ptext9 0F9A                                 _readADC 0FB8  
                             _T1CONbits 0010                      _startSensorReading 0F56  
                            _dryruntime 002E                           _buzzer_active 0034  
                            _maxruntime 00B0                   _low_sensor_high_count 007A  
                               clrloop0 0F1B                                 _voltage 0043  
                  end_of_initialization 0032                     ?_startSensorReading 0070  
                         _buzzer_update 0710                      EEPROM_Write16@data 0074  
                         ??_EEPROM_Read 0072                         ___lldiv@divisor 004F  
                       ___lldiv@counter 005C             getSensorResults@high_active 0073  
                  ??_startSensorReading 0072                 saveSettings@value16bit1 004A  
               saveSettings@value16bit2 004C                 saveSettings@value16bit3 004E  
               saveSettings@value16bit4 0050                               _PORTAbits 0005  
                             _PORTBbits 0006                               _PORTCbits 0007  
                        ?_buzzer_update 0070             getSensorResults@flow_active 0074  
                    _check_button_press 0500                              _voltageraw 0030  
                            _voltagesum 002C                     __end_of_EEPROM_Read 0F9A  
                        __end_of___lmul 0710                             ?_initSystem 0070  
                   ?_check_button_press 0070                             ?_init_timer 0070  
                    _high_sensor_active 0048                _sensors_reading_complete 0040  
                  __end_of_saveSettings 078A                     start_initialization 000D  
                      _getSensorResults 078A                             __end_of_isr 0679  
                  ??_check_button_press 0072                         ___llmod@divisor 0072  
                      ??_trigger_buzzer 0074                   EEPROM_Write16@address 0076  
                       ___llmod@counter 004B                                ??___lmul 004A  
                            init_fetch0 0F76                             __pdataBANK0 0065  
                           __pdataBANK1 00B0                           _EEPROM_Read16 0F9A  
                          _loadSettings 0679                        ??_EEPROM_Write16 0076  
                 saveSettings@value8bit 0077                             __pbssCOMMON 007A  
                             ___latbits 0001                           __pcstackBANK0 004A  
                         __pcstackBANK1 00BE                         ??_buzzer_update 0072  
                           _EEPROM_Read 0F87                                ?___lldiv 004F  
                              ?___llmod 0072                          ?_EEPROM_Read16 0073  
                   EEPROM_Read16@result 0077                                ?_readADC 0072  
                             _mannualon 003E                       interrupt_function 0004  
                             clear_ram0 0F1A                                _PIE1bits 008C  
                             _tankempty 0039                                _PIR1bits 000C  
                        _motorstarttime 00A8                              _ADCON0bits 001F  
                             main@i_464 00BF                         _buzzer_duration 0028  
                         ??_setupTimer0 0072                       ___lmul@multiplier 0072  
                 _minimumrunningvoltage 0067                              _EECON1bits 018C  
check_button_press@long_press_threshold 0074                            _saveSettings 0754  
              __end_of_getSensorResults 07B8                         ??_EEPROM_Read16 0075  
                         _preflowactive 0035                            ??_initSystem 0072  
                          ??_init_timer 0072                          readADC@channel 0075  
            getSensorResults@low_active 0072                        _lastvoltageerror 00A4  
                              __ptext10 0F87                                __ptext11 0F65  
                              __ptext12 07B8                                __ptext13 078A  
                              __ptext14 0500                                __ptext15 0710  
                              __ptext16 06C8                                __ptext17 05D2  
                              __ptext18 056C                                __ptext19 0626  
                         ?_EEPROM_Write 0072                      __end_of_initSystem 07E2  
                   __end_of_setupTimer0 0F39                      __end_of_init_timer 0F76  
                           _dryrunerror 003C                      _flow_sensor_active 0047  
                            _INTCONbits 000B                                init_ram0 0F7A  
                        ??_EEPROM_Write 0073                                intlevel1 0000  
                          _sensorbuffer 00BA                            ?_EEPROM_Read 0070  
                      ___lldiv@dividend 0053                              _OSCCONbits 008F  
                    EEPROM_Read@address 0072                            _pretankempty 0037  
                          _motorrunning 003A            check_button_press@hold_count 0076  
                       _maxvoltagelimit 0069                         _maxruntimeindex 006D  
                          _settingsmode 0044                        ___lldiv@quotient 0058  
                 _maximumrinningvoltage 0065                            _timeouterror 003B  
                _high_sensor_high_count 0042                  _flow_sensor_high_count 0041  
                           _setupTimer0 0F2B                   __end_of_buzzer_update 0754  
                          _waterreached 0038            check_button_press@long_press 0078  
                   EEPROM_Write@address 0073  
